//../gamemodes/larp.pwn TM
/*
 *
 *          -- Los Angeles Roleplay (Godfather edition) --
 *
 *
 *
 *                Los Angeles Roleplay by Ellis & Hoodstar.
 *         based on the original Godfather script by FeaR
 *  This is the fixable version of Los Angeles RolePlay by Brian_Furious aka Anthony_Prince
 *
 */
//======================= Credits: =============================================
// FeaR for original GF
// Ellis & Hoodstar for LA-RP since 1.0 version
// Brian_Furious for LA-RP modified and fixed the 3.0 Version
//======================= Extra Credits: =======================================
// Incognito for Streamer
// Virtual1ty for solve Max 12 Chars Name

#define SCRIPT_VERSION "LA-RP 3.0 Fixable"

//INCLUDE
#include <a_samp>
#include <crashdetect>
#include <YSI\y_timers>
#include <YSI\y_iterate>
#include <YSI\y_ini>
#include <a_mysql>
#include <core>
#include <float>
#include <time>
#include <file>
#include <utils>
#include <morphinc>
#include <streamer>
#include <zcmd>
#include <sscanf2>
#include <zones>
#include <paynspray>
//MYSQLDEFINE
new MySQL:conn;

#if defined MAX_PLAYERS 
#undef MAX_PLAYERS 
#endif 

#if defined MAX_VEHICLES 
#undef MAX_VEHICLES 
#endif 

#define MAX_VEHICLES 1000
#define MAX_PLAYERS 500

//DEFINE
#include <ProjectInc\declare>
#include <ProjectInc\prize>

#define DIALOG_REG 1
#define DIALOG_LOGIN 2
#define DIALOG_FINDTRUCK 3
#define DIALOG_SELECTTRUCK 4
#define DIALOG_DRIVERLICENSE_RULE 5
#define DIALOG_FAMILYSAFE 6
#define DIALOG_PWEAPONSAFE 7
#define DIALOG_TWEAPONSAFE 8
#define DIALOG_LISTSAFE 9
#define DIALOG_AMOUNTSAFE 10


#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
//#if defined STREAMER_OBJECT_SD 
//#undef STREAMER_OBJECT_SD 
//#endif 
//
//#if defined STREAMER_OBJECT_DD 
//#undef STREAMER_OBJECT_DD 
//#endif 

//STREAMER RANGE
//#define STREAMER_OBJECT_SD 1200
//#define STREAMER_OBJECT_DD 1400

#define SCRIPT_OWNCARS 500 //
#define SCRIPT_MAXPLAYERS 50 //
#define MAX_HOUSES 50 //
#define MAX_BIZ 50 //
#define MAX_SBIZ 50 //
//==============================
//#define strcpy(%1,%2,%3) strmid(%1,%2,0,%3,strlen(%2)+1)
#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
#define MAX_TRUNK_SLOTS		(5) // Is actually 4.
#define MAX_VEHICLE_MODELS	(70)
#define MAX_PLYVEH_RATIO	(20) // per player.
#define MAX_VEHICLE_PLATE	(7)
#define MAX_GATES 100
//==============================
#undef MAX_PLAYERS
#define MAX_PLAYERS SCRIPT_MAXPLAYERS
//==============================

#define MAX_STRING 255
#define CHECKPOINT_NONE 0
#define COLOR_ASKQ 0xFF0000FF
#define CHECKPOINT_HOME 12

// DMV Defines
#define DrivingTestCash 5000 // Edit this if needed. 5000 = the cash that you'll pay to take the driving test
#define TooSlow 120 // 120 = if the time is 110 or more, you are driving too slow. You may edit this if needed.
#define TooFast 105 // 105 = if the time is less than 105, you are driving too fast. You may edit this if needed.
#define MINVEHHP 900 // 900 = the minimum vehicle health the vehicle can have to pass the test. You may edit this if needed.

#define GasMax 100
#define RunOutTime 25000
#define RefuelWait 5000
#define CAR_AMOUNT 700 //Change to Your Vehicle Amount

#define GREEN 0x21DD00FF
#define RED 0xE60000FF
#define YELLOW 0xFFFF00FF
#define ORANGE 0xF97804FF
#define GRAY 0xCECECEFF
#define LIGHTBLUE 0x00C2ECFF 
#define cop_color 0xC2A2DAFF
#define COLOR_BLACK 0x000000FF
#define COLOR_NICERED 0xFF0000FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x9EC73DAA
#define COLOR_GROVE 0x00FF00FF
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_CYAN 0x00FFFFFF
#define COLOR_YELLOW 0xDABB3EAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0x458E1DAA
//#define COLOR_OOC 0xE0FFFFAA
#define COLOR_OOC 0xB1C8FBAA
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_RADIO_COLOR 0xF2D068FF
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
#define TEAM_ORANGE_COLOR 0xFF830000
#define TEAM_COR_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#pragma tabsize 0
#define COLOR_BLUE 0x2641FEAA
#define COLOR_DARKNICERED 0x9D000096
#define COLOR_LIGHT_BLUE 0x9FB1EEAA
#define COLOR_NEWBIE 0x7DAEFFFF
//FORWARD
forward RefreshMenuHeader(playerid,Menu:menu,text[]);
new Menu:burgermenu, Menu:chickenmenu, Menu:pizzamenu, Menu:donutshop;
new Menu:Guide, Menu:JobLocations, Menu:JobLocations2, Menu:Place;

forward CheckForWalkingTeleport(playerid);
forward ResetRoadblockTimer();
forward RemoveRoadblock(playerid);
forward BackupClear(playerid, calledbytimer);
/*forward IsAGangCar(carid);
forward IsAGangCar2(carid);
forward IsAGangCar3(carid);
forward IsAGangCar4(carid);
forward IsAGangCar5(carid);*/
forward IsABike(carid);
forward IsAOBike(carid);
forward IsATank(carid);
forward GateClose(playerid);
forward GateClose2();
forward GateClose3();
forward GateClose4();
forward GateClose5();
forward GateClose6();
//forward GateClose7();
forward elevator1(playerid);
forward elevator2(playerid);
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadCK();
forward SaveCK();
forward LoadFamilies();
forward SaveFamilies();
forward LoadTurfs();
forward SaveTurfs();
forward LoadIRC();
forward SaveIRC();
forward LoadPapers();
forward SavePapers();
forward DeleteDealership(id);
forward UpdateDealership();
//forward AddCar(model, Float:x, Float:y, Float:z, Float:a, color1, color2, respawntime, owner[], owned, price);
forward AddDealership(model, Float:x, Float:y, Float:z, Float:a, color1, color2, respawntime, price, amount);
forward LoadCar();
//forward SaveCarCoords();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward JoinChannel(playerid, number, line[]);
forward JoinChannelNr(playerid, number);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward CBroadCast(color, const string[], level);
forward DateProp(playerid);
//forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward LoadMission(playerid,name[]);
forward SaveMission(playerid,name[]);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward BanLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward CKLog(string[]);
forward IsATruck(carid);
forward IsAPizzabike(carid);
forward IsABus(carid);
forward IsATowcar(carid);
forward IsAnAmbulance(carid);
forward IsACopCar(carid);
forward IsAnFbiCar(carid);
forward IsNgCar(carid);
forward IsAGovernmentCar(carid);
forward IsAHspdCar(carid);
forward IsAnOwnableCar(vehicleid);
forward IsAtCarrental(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsAHarvest(carid);
forward IsADrugHarvest(carid);
forward IsASmuggleCar(carid);
forward IsASweeper(carid);
forward IsACop(playerid);
forward IsAPDMember(playerid);
forward IsAMember(playerid);
forward IsAnInstructor(playerid);
//forward Spectator();
forward ConvertTicks(ticks);
forward Encrypt(string[]);
forward KartingEnded();
forward StartKarting();
forward PrepareKarting();
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
//forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerCriminalEx(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid);
forward SavePlayer(playerid);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendIRCMessage(channel, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
//forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearCK(ck);
forward ClearFamily(family);
forward ClearMarriage(playerid);
forward ClearPaper(paper);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward InitLockDoors(playerid);
forward CheckGas();
forward Fillup();
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward Production();
forward Checkprop();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward HouseLevel(playerid);
forward CHouseLevel(houseid);
forward CustomPickups();
forward IdleKick();
forward SetCamBack(playerid);
forward FixHour(hour);
forward AddsOn();
forward IsPlayerInAreaRange(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward AdvertiseToPlayersAtBusStop(Float:stopX, Float:stopY, Float:stopZ, eastorwest);
forward SendBusRoute(playerid, eastorwest);
forward IsInBusrouteZone(playerid);
forward BusrouteEnd(playerid, vehicleid);
forward CreateFoodMenus();
forward OnPlayerEnterFood(playerid, foodid);
forward OnPlayerExitFood(playerid);
forward ClearChatbox(playerid, lines);
forward CreateGuideMenus();
forward Startup(playerid, vehicleid);
forward engine2(playerid);
forward busroutestoptimer(playerid);
//forward CheckCarHealth();
forward StartingTheVehicle(playerid);
forward FarmerExit(playerid);
forward DrugFarmerExit(playerid);
forward LoadDrugSystem();
forward SaveDrugSystem();
forward LoadMatsSystem();
forward SaveMatsSystem();
forward LoadingDrugsForSmugglers(playerid);
forward SmugglerExit(playerid);
//forward SafeGivePlayerMoney(plyid, amounttogive);
forward SafeResetPlayerMoney(plyid);
forward SafeResetPlayerWeapons(plyid);
forward UpdateWeaponSlots(plyid);
//forward GlobalHackCheck();
forward BanAdd(bantype, sqlplayerid, ip[], hackamount);
//forward UnsetFirstSpawn(playerid);
forward LoadHQLocks();
forward SaveHQLocks();
forward ClearKnock(playerid);
forward DrugEffectGone(playerid);
forward UsingDrugsUnset(playerid);
//forward UpdatePlayerPosition(playerid);
forward CrashPlayer(playerid);
forward UnsetAfterTutorial(playerid);
forward AfterSpray1(playerid);
forward AfterSpray2(playerid);
forward AfterSpray3(playerid);
forward AfterSpray4(playerid);
forward UnsetCrash(playerid);
forward backtoclothes(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward SaveTrunk();
forward LoadTrunk();
forward UpdateBurgerPositions();
forward ShowMenuBurger(i);
forward UpdateChickenPositions();
forward ShowMenuChicken(i);
forward CanDriveThruAgain(playerid);
forward Float:GetDistance(playerid, Float:x, Float:y);
forward TraceLastCall();
forward ReportReset(playerid);
forward ReduceTimer(playerid);

//NEW
new gTeam[MAX_PLAYERS];
//------------------------------------------------------------------------------------------------------
//new CarAutolock[999];
//new cartrack[256];
//new street_zone;
new GangCar[MAX_PLAYERS];
new togtactical[MAX_PLAYERS];
new togauthorizetactical;
//new surenos;
//new black_yakuza;
//new nortenos;
//new jefferson_saints;
new pdgate1;
new pdgate2;
new pdgate3;
new tugate;
new lspddoor1;
new lspddoor2;
new armygate1;
new armygate2;
new fbigate;
new hspdgate;
new lucianogate;
//new iorgate;
/*new license_pu;
new license_pu2;
new license_pu3;
new license_pu4;
new license_pu5;*/
new Security = 0;
//new gPlayerUsingLoopingAnim[MAX_PLAYERS];
//new Text:txtAnimHelper;
//new CreatedCars[100];
//new CreatedCar = 0;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new StartingPaintballRound = 0;
new AnnouncedPaintballRound = 0;
new PaintballPlayers = 0;
new PaintballRound = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new StartingKartRound = 0;
new EndingKartRound = 0;
new AnnouncedKartRound = 0;
new KartingPlayers = 0;
new KartingRound = 0;
new FirstKartWinner = 999;
new SecondKartWinner = 999;
new ThirdKartWinner = 999;
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitidz = 999;
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new ScriptMoney[MAX_PLAYERS];
new ScriptWeapons[MAX_PLAYERS][13];
//new ScriptMoneyUpdated[MAX_PLAYERS];
//new ScriptWeaponsUpdated[MAX_PLAYERS];
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new OnCK[MAX_PLAYERS];
new GettingCK[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PlayerKarting[MAX_PLAYERS];
new PlayerInKart[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new PlayerOnMission[MAX_PLAYERS];
new MissionCheckpoint[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
//new ConsumingMoney[MAX_PLAYERS];
new BringingPaper[MAX_PLAYERS]; //Paper Boys must pick up a Paper first, then use /deliver
new GotPaper[MAX_PLAYERS]; //The player has a paper so he can use /read
new WritingPaper[MAX_PLAYERS]; //Used for onplayertext so he can type in lines
new WritingPaperNumber[MAX_PLAYERS]; //To which Paper in PaperInfo will it be written
new WritingLine[MAX_PLAYERS]; //Used for onplayertext to see which line he's at
new FishCount[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingJob[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new WantLawyer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new togswat[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
//new Specing[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gGas[MAX_PLAYERS];
new gSpeedo[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new BusrouteEast[MAX_PLAYERS][2];
new BusrouteWest[MAX_PLAYERS][2];
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new gLastDriver[MAX_VEHICLES];
new gCarLock[MAX_VEHICLES];
new MissionPlayable = 0;
new togOOC = 0;
new adds = 1;
new addtimer = 60000;
new Float:rx, Float:ry, Float:rz;
//new carselect[15];
new objstore[128];
new cbjstore[128];
new motd[256];
//new RStart;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 0; // Amount player recieves on spawn.
new realtime = 1;
new wtime = 16;
//new levelcost = 5000;
new deathcost = 100;
new callcost = 2; //20 seconds
new realchat = 1;
new timeshift = -1;
new shifthour;
new othtimer;
//new hackchecktimer;
new synctimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new spectatetimer;
new idletimer;
new productiontimer;
new SetWorld;
new accountstimer;
new checkgastimer;
new stoppedvehtimer;
//new checkcarhealthtimer;
//new updateplayerpos;
new cartimer;
new intrate = 1;
new levelexp = 4;
new idletime = 600000; //10 mins
//new suecost = 100;
new cchargetime = 60;
new txtcost = 1;
new pickups;
new togauthorizeswat;
new PizzaBoys = 0;
new PizzaCall = 999;
new PizzaCallTime[MAX_PLAYERS];
new bPizza[MAX_PLAYERS];
new sPizza[MAX_PLAYERS];
new CIV[] = {7,19,20,23,73,101,122};
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new SELLCAR1[] = { 250, 263, 274, 301, 309, 342, 368, 389, 402, 433, 502 };
new SELLCAR2[] = { 504, 509, 525, 531, 538, 544, 548, 555, 568, 577, 580 };
new SELLCAR3[] = { 586, 591, 594, 599, 603, 609, 611, 619, 623, 631, 633 };
new SELLCAR4[] = { 642, 648, 653, 661, 668, 672, 674, 687, 693, 698, 703 };
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:PlayerPos[MAX_PLAYERS][6];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new roadblocktimer = 0;

new engineOn[MAX_VEHICLES];
new hoodOn[MAX_VEHICLES];
new trunkOn[MAX_VEHICLES];
new lightOn[MAX_VEHICLES];

new vehicleEntered[MAX_PLAYERS][MAX_VEHICLES];
new gEngine[MAX_PLAYERS];
new FarmerVar[MAX_PLAYERS];
new FarmerPickup[MAX_PLAYERS][2];
new DrugFarmerVar[MAX_PLAYERS];
new DrugFarmerPickup[MAX_PLAYERS][2];
new JustStarted[MAX_PLAYERS];
new SmugglerWork[MAX_PLAYERS];
new SmuggledDrugs[MAX_PLAYERS];
new PayDaySecure[MAX_PLAYERS];
new JustDied[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new UnidentifedCall[MAX_PLAYERS];
new LicenseOffer[MAX_PLAYERS];
new LicensePrice[MAX_PLAYERS];
new LicenseType[MAX_PLAYERS];
new DefaultWeather = 10;
new UsingDrugs[MAX_PLAYERS];
new AfterTutorial[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new BlindFold[MAX_PLAYERS];
new PlayerIsSweeping[MAX_PLAYERS];
// Trunk system
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
// ------------
new VehicleWindows[MAX_VEHICLES] = 0;
new AdminDuty[MAX_PLAYERS];
new CADuty[MAX_PLAYERS];
new BurgerPickUp[9];
new ChickenPickUp[9];
new Menu:BurgerShot;
new Menu:CluckinBell;
new IsMenuShowed[MAX_PLAYERS] = 0;
new burgertimer;
new	chickentimer;
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new tracetimer;
new JustReported[MAX_PLAYERS];
new PlayerNeedsHelp[MAX_PLAYERS];
new AdminSpec[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new UsingSmokeAnim[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new CreatingGun[MAX_PLAYERS];
new CreatingGunAmmo[MAX_PLAYERS];
new CreatingGunPrice[MAX_PLAYERS];
new IsPuttingMaterials[MAX_PLAYERS];
new IsTakingGun[MAX_PLAYERS];
//============================
new Text3D:HouseLabel[MAX_PLAYERS];
new Text3D:BizzLabel[MAX_PLAYERS];
new Text3D:SBizzLabel[MAX_PLAYERS];
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];
new SpeedMode = 1;
new UpdateSeconds = 1;

new Music[MAX_PLAYERS];
/*new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};*/

new Float:BurgerDriveIn[6][3] = {
	{ 801.5522, -1628.91, 13.3828 },
	{ 1209.958, -896.7405, 42.9259 },
	{ -2341.86, 1021.184, 50.6953 },
	{ 2485.291, 2022.611, 10.8203 },
	{ 1859.496, 2084.797, 10.8203 },
	{ -2349.49, -152.182, 35.3203 }
};

new Float:ChickenDriveIn[3][3] = {
	{ 2409.651, -1488.65, 23.8281 },
	{ 2377.733, -1909.27, 13.3828 },
	{ 2375.014, 2021.186, 10.8203 }
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
	{ "Jacket" },
	{ "Amberjack" },
	{ "Grouper" },
	{ "Red Snapper" },
	{ "Pants" },
	{ "Trout" },
	{ "Blue Marlin" },
	{ "Can" },
	{ "Mackeral" },
	{ "Sea Bass" },
	{ "Shoes" },
	{ "Pike" },
	{ "Sail Fish" },
	{ "Garbage" },
	{ "Tuna" },
	{ "Eel" },
	{ "Dolphin" },
	{ "Shark" },
	{ "Turtle" },
	{ "Catfish" },
	{ "Money Bag" },
	{ "Swordfish" }
};

new Float:PaintballSpawns[7][3] = {
	{ -394.8027, 2232.2317, 42.4297 },
	{ -430.8412, 2240.5371, 42.9834 },
	{ -369.2361, 2248.3127, 42.4844 },
	{ -350.8910, 2218.0215, 42.4912 },
	{ -384.0544, 2206.2908, 42.4235 },
	{ -395.7100, 2214.9480, 42.4297 },
	{ -445.3718, 2222.5481, 42.4297 }
};

//new Float:gInviteSpawns[10][4] = {
//	{ -1976.5912, 166.1818, 36.9623, 272.6393 },
//	{ -1975.8610, 162.1945, 36.9623, 272.0126 },
//	{ -1975.7461, 157.5404, 36.9623, 276.1093 },
//	{ -1975.2136, 151.4920, 36.9623, 268.2993 },
//	{ -1974.9963, 145.3430, 36.9623, 269.2628 },
//	{ -1975.5842, 140.8170, 36.9623, 269.8895 },
//	{ -1975.7874, 134.0368, 36.9623, 271.7696 },
//	{ -1975.1681, 129.0926, 36.9623, 270.8531 },
//	{ -1975.9069, 121.4700, 36.9623, 270.5631 },
//	{ -1975.3311, 112.7078, 36.9623, 267.7665 }
//};

new Float:gMedicSpawns[3][3] = {
	{ 348.9868, 165.0690, 1014.6947 },
	{ 348.8042, 162.5563, 1014.6947 },
	{ 348.8767, 159.9840, 1014.6947 }
};

new Float:gCopPlayerSpawns[2][3] = {
	{ 216.9725, 79.1339, 1005.0391 },
	{ 219.8852, 75.5487, 1005.0391 }
	//{614.8,-608.2,17.2},
	//{611.5,-607.8,17.2}
};

new Float:gMedPlayerSpawns[2][3] = {
	{ 1178.1, -1321.0, 14.1 },
	{ 1177.7, -1325.0, 14.0 }
};

new Float:gSweeperPoints[16][3] = {
	{ 2003.3517, -1730.5336, 13.1080 },
	{ 2243.8682, -1895.1603, 13.1057 },
	{ 2872.5264, -1507.8936, 10.5887 },
	{ 2733.4851, -1079.1128, 69.0215 },
	{ 2491.6882, -1096.9484, 48.1798 },
	{ 1973.2815, -1173.0474, 25.6866 },
	{ 1441.3285, -1038.8422, 23.4461 },
	{ 1041.5815, -776.1030, 104.3925 },
	{ 958.6799, -1034.2134, 29.8119 },
	{ 995.9623, -1351.8215, 13.0737 },
	{ 793.3896, -1583.4993, 13.1155 },
	{ 368.1902, -1977.2362, 7.3970 },
	{ 834.1572, -1794.8837, 13.5680 },
	{ 1243.4885, -1853.9174, 13.1080 },
	{ 1527.9438, -1663.3240, 13.1080 },
	{ 2083.6062, -1843.3563, 13.1080 }
};
//new RandCars[20][1] = {
//	{ 496 }, { 542 }, { 507 }, { 585 },
//	{ 466 }, { 492 }, { 579 }, { 559 },
//	{ 400 }, { 551 }, { 516 }, { 475 },
//	{ 561 }, { 550 }, { 566 }, { 558 },
//	{ 562 }, { 562 }, { 603 }, { 560 }
//};
//
//
//new RandLCars[1][1] = {
//	{ 431 }// coach
//};


new GunPrice[30][1] = {
	{ 500 }, //parachute
	{ 400 }, //golfclub
	{ 300 }, //nightstick
	{ 200 }, //knife
	{ 700 }, //baseballbat
	{ 300 }, //shovel
	{ 100 }, //poolcue
	{ 400 }, //purpledildo
	{ 780 }, //whitedildo
	{ 560 }, //longwhitedildo
	{ 530 }, //whitedildo2
	{ 200 }, //flowers
	{ 600 }, //cane
	{ 500 }, //sdpistol
	{ 1000 }, //colt45
	{ 3000 }, //deagle
	{ 2000 }, //Tec9
	{ 3000 }, //uzi
	{ 2500 }, //mp5
	{ 3000 }, //shotgun
	{ 6000 }, //spas12
	{ 4000 }, //sawnoff
	{ 5000 }, //ak47
	{ 5000 }, //m4
	{ 1000 }, //rifle
	{ 25 }, //pistolammo
	{ 40 }, //shotgunammo
	{ 25 }, //smgammo
	{ 40 }, //assaultammo
	{ 50 } //rifle
};

//new JoinPed[69][1] = {
//	{ 280 },//POLICE_FORCE
//	{ 281 },
//	{ 282 },
//	{ 283 },
//	{ 284 },
//	{ 285 },
//	{ 288 },
//	{ 71 },
//	{ 166 },
//	{ 295 },
//	{ 148 },
//	{ 286 },//FBI/ATF
//	{ 164 },
//	{ 163 },
//	{ 287 },//NATIONAL_GUARD
//	{ 285 },
//	{ 70 },//FIRE/AMBULANCE
//	{ 274 },
//	{ 275 },
//	{ 276 },
//	{ 277 },
//	{ 278 },
//	{ 279 },
//	{ 292 },//SURENOS
//	{ 114 },
//	{ 115 },
//	{ 175 },
//	{ 174 },
//	{ 116 },
//	{ 173 },
//	{ 176 },
//	{ 124 },//LUCIANO
//	{ 125 },
//	{ 126 },
//	{ 111 },
//	{ 123 },
//	{ 186 },
//	{ 228 },
//	{ 249 },//HITMANS
//	{ 68 },
//	{ 72 },
//	{ 121 },
//	{ 295 },
//	{ 148 },//NEWS_REPORTERS
//	{ 188 },
//	{ 187 },
//	{ 255 },//TAXI_CAB_COMPANY
//	{ 253 },
//	{ 153 },//DRIVING/FLYING_SCHOOL
//	{ 156 },//DRIVING/FLYING_SCHOOL
//	{ 206 },//DRIVING/FLYING_SCHOOL
//	{ 221 },//DRIVING/FLYING_SCHOOL
//	{ 19 },//nortenos
//	{ 22 },
//	{ 22 },
//	{ 144 },
//	{ 170 },
//	{ 180 },
//	{ 270 },//18TH_STREET_FAMYLY
//	{ 271 },
//	{ 269 },
//	{ 105 },
//	{ 106 },
//	{ 107 },
//	{ 66 },//Institute of Race
//	{ 67 },
//	{ 180 },
//	{ 297 },
//	{ 188 }
//};

new CivMalePeds[52][1] = {
	// Male civilians down here (by Ellis)
	{ 2 },
	{ 47 },
	{ 48 },
	{ 50 },
	{ 58 },
	{ 60 },
	{ 68 },
	{ 72 },
	{ 73 },
	{ 80 },
	{ 81 },
	{ 82 },
	{ 83 },
	{ 95 },
	{ 100 },
	{ 101 },
	{ 102 },
	{ 103 },
	{ 104 },
	{ 108 },
	{ 109 },
	{ 110 },
	{ 121 },
	{ 122 },
	{ 123 },
	{ 135 },
	{ 142 },
	{ 143 },
	{ 144 },
	{ 146 },
	{ 153 },
	{ 154 },
	{ 155 },
	{ 156 },
	{ 158 },
	{ 159 },
	{ 160 },
	{ 161 },
	{ 170 },
	{ 179 },
	{ 180 },
	{ 189 },
	{ 202 },
	{ 203 },
	{ 204 },
	{ 258 },
	{ 259 },
	{ 260 },
	{ 293 },
	{ 295 },
	{ 296 },
	{ 297 }
};

new CivFemalePeds[33][1] = {
	// Female civilians down here (by Ellis)
	{ 55 },
	{ 56 },
	{ 63 },
	{ 69 },
	{ 76 },
	{ 85 },
	{ 91 },
	{ 93 },
	{ 131 },
	{ 141 },
	{ 148 },
	{ 150 },
	{ 151 },
	{ 152 },
	{ 157 },
	{ 169 },
	{ 172 },
	{ 190 },
	{ 192 },
	{ 193 },
	{ 194 },
	{ 195 },
	{ 198 },
	{ 201 },
	{ 214 },
	{ 216 },
	{ 219 },
	{ 225 },
	{ 233 },
	{ 237 },
	{ 251 },
	{ 263 },
	{ 298 }
};

//new Peds[200][1] = {
//	{ 7 },
//	/*{288},//TEAM_ADMIN
//	{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},*/
//	{ 247 },//CIVILIANS DOWN HERE
//	{ 248 }, { 100 }, { 256 }, { 263 }, { 262 }, { 261 }, { 260 }, { 259 }, { 258 }, { 257 }, { 256 }, { 255 },
//	{ 253 }, { 252 }, { 251 }, { 246 }, { 245 }, { 244 }, { 243 }, { 242 }, { 241 }, { 239 },
//	{ 238 }, { 237 }, { 236 }, { 235 }, { 234 }, { 233 }, { 232 }, { 231 }, { 230 }, { 229 },
//	{ 226 }, { 225 }, { 224 }, { 223 }, { 222 }, { 221 }, { 220 }, { 219 }, { 218 },
//	{ 217 }, { 216 }, { 215 }, { 214 }, { 213 }, { 212 }, { 211 }, { 210 }, { 209 },
//	{ 207 }, { 206 }, { 205 }, { 204 }, { 203 }, { 202 }, { 201 }, { 200 }, { 199 }, { 198 }, { 197 }, { 196 },
//	{ 195 }, { 194 }, { 193 }, { 192 }, { 191 }, { 190 }, { 189 }, { 185 }, { 184 }, { 183 },
//	{ 182 }, { 181 }, { 180 }, { 179 }, { 178 }, { 176 }, { 172 }, { 170 }, { 168 }, { 167 }, { 162 },
//	{ 161 }, { 160 }, { 159 }, { 158 }, { 157 }, { 156 }, { 155 }, { 154 }, { 153 }, { 152 }, { 151 },
//	{ 146 }, { 145 }, { 144 }, { 143 }, { 142 }, { 141 }, { 140 }, { 139 }, { 138 }, { 137 }, { 136 }, { 135 },
//	{ 134 }, { 133 }, { 132 }, { 131 }, { 130 }, { 129 }, { 128 }, { 254 }, { 99 }, { 97 }, { 96 }, { 95 }, { 94 },
//	{ 92 }, { 90 }, { 89 }, { 88 }, { 87 }, { 85 }, { 84 }, { 83 }, { 82 }, { 81 }, { 80 }, { 79 }, { 78 }, { 77 }, { 76 },
//	{ 75 }, { 73 }, { 72 }, { 69 }, { 68 }, { 67 }, { 66 }, { 64 }, { 63 }, { 62 }, { 58 }, { 57 }, { 56 }, { 55 },
//	{ 54 }, { 53 }, { 52 }, { 51 }, { 50 }, { 49 }, { 45 }, { 44 }, { 43 }, { 41 }, { 39 }, { 38 }, { 37 }, { 36 }, { 35 },
//	{ 34 }, { 33 }, { 32 }, { 31 }, { 30 }, { 29 }, { 28 }, { 27 }, { 26 }, { 25 }, { 24 }, { 23 }, { 22 }, { 21 }, { 20 },
//	{ 19 }, { 18 }, { 17 }, { 16 }, { 15 }, { 14 }, { 13 }, { 12 }, { 11 }, { 10 }, { 1 }, { 2 },
//	{ 290 },//ROSE
//	{ 291 },//PAUL
//	{ 293 },//OGLOC
//	{ 187 },
//	{ 296 },//JIZZY
//	{ 297 },//MADDOGG
//	{ 298 },//CAT
//	{ 299 }//ZERO
//};

/*new Float:HouseCarSpawns[34][4] = {
{-2637.2544,165.0454,4.2919,179.9976},//House 2
{2064.4,-1694.4,13.1,271.1561},//House 1
{-2712.7625,870.3005,70.5348,89.1608},//House 2
{1109.8,-968.0,42.7,0.0},//house 3
{2497.6274,-2025.6306,13.2521,355.4281}, // House 4
{2645.0,-1990.8,13.1,180.0},//House - 5
{-2724.8965,914.8384,67.4253,110.1072},//house 6
{1910.5149,-1120.5304,25.4493,177.8350},//house 7
{828.8,-887.0,68.5,230.7095},//House 8
{2149.6,-1610.9,14.0,90.7904},//House 9
{760.1,-1687.8,4.3,180.6},//House 10
{645.5,-1616.1,14.9,0.0},//House 11
{-2635.2371,931.1931,71.5643,215.3709},//House 12
{-2665.9224,989.9724,64.6955,1.7814},//House 13
{959.5864,-901.0845,45.8584,177.3087},//House 14
{2445.8,-1326.8,23.6,18.4},//House 15
{2845.9,-1286.8,18.9,90.0},//house 16
{2159.8,-1803.9,13.3,271.4}, //House 17
{-2693.7847,132.3186,4.1676,89.5330},//House 18
{-2723.0105,977.7357,54.2926,359.9068},//House 19
{1514.0,-694.6,94.5,90.0},//House 20
{1246.7,-1107.6,25.5,266.4},//House 21
{831.7,-857.5,69.9,180.0},//House 22
{1007.9,-659.4,121.1,130.6194},//House 23
{1110.0,-726.4,100.1,90.0},//House 24
{259.7,-1221.0,74.7,202.0011},//House 25
{1463.7,-901.7,55.8,359.0},//house 26
{1440.1,-890.6,51.2,0.0},//house 27
{-2528.8298,2250.2998,4.8112,334.9590},//house 28
{-2554.7874,2270.5356,4.9064,333.9774}, //House 29
{-2371.1323,2438.4104,9.0698,159.2582},//House 30
{-2237.9492,893.7390,66.4872,89.7571},//House 31
{-2529.4817,-142.6608,19.7107,4.2929}, //House 32
{-2616.1897,-108.4479,4.1693,269.8246}//House 33
};*/

/*new CarSpawns[186][eCars] = {
{405,2205.2,-1177.0,25.7,270.8},//carid 90
{554,2205.1,-1169.1,25.7,270.8},
{426,1544.6674,16.3512,24.2420,277.0196},
{445,1287.3030,331.6524,19.5783,61.2593},
{492,2229.2,-1170.2,25.7,86.9},
{507,2228.9,-1162.7,25.7,87.8},
{545,2217.0,-1157.2,25.7,269.8},
{540,169.1929,-1342.3611,69.7396,180.4404},
{482,422.8060,-1263.5979,51.6681,21.4204},
{547,405.9748,-1264.3921,50.1237,24.2110},
{550,2242.3, -1235.4, 24.3,359.7513},
{551,749.8617,-549.1844,17.1578,2.3866},
{560,2106.4695,-1248.7920,24.0461,0.1524},
{566,2196.2891,-1277.7905,24.2147,180.4522},
{402,198.6057,-1437.2435,13.1844,318.3837},
{405,216.5521,-1431.4004,13.0853,132.5749},
{554,334.2231,-1343.7405,14.3828,209.9581},
{426,481.0428,-1320.8564,15.4095,35.6808},
{507,697.4343,-1230.9486,16.5063,298.7916},
{545,723.9850,-1121.5535,18.1450,333.9010},
{540,912.2176,-996.2035,38.1402,7.5764},
{482,982.1829,-921.8636,41.8776,262.3163},
{547,981.8715,-917.3546,41.5443,88.0589},
{550,1188.4082,-925.1859,42.8590,277.5563},
{474,1307.5226,-914.4717,39.0082,269.3765},
{405,1450.2,-937.1,36.2,269.6909}, //116
{492,2148.3257,-1175.2518,24.1959,269.6909},
{507,2161.4871,-1163.1450,23.6760,269.1628},
{545,2216.8965,-1165.9469,25.4697,89.8643},
{540,2348.2910,-1167.9983,27.3637,323.1586},
{482,2502.0388,-1134.9507,39.1953,150.9506},
{547,2909.4895,-1180.3746,11.0176,222.1346},
{550,2853.1858,-1326.8011,11.1511,278.9301},
{551,2797.2690,-1549.3374,10.4935,93.0282},
{533,2796.9031,-1567.2024,10.6386,272.4041},
{482,2813.2175,-1673.0276,9.6638,2.3369},
{547,2827.6736,-1703.9755,9.7308,77.2896},
{550,2809.3872,-1837.2391,9.7398,268.9880},
{551,2870.8789,-1943.2599,11.4834,359.2344},
{566,2411.5386,-2134.7576,13.9352,0.7795},
{554,1389.7467,-2695.9370,13.4164,121.1818},
{405,783.1359,-1601.8208,13.2577,270.9069},
{554,782.7205,-1619.3584,13.2653,93.0550},
{426,923.0841,-1361.7990,13.0324,181.1371},
{445,911.7986,-1352.7415,13.1543,359.3287},
{492,1174.6599,-922.1939,43.1189,276.8927},
{507,1363.0210,-1288.3124,13.2839,180.1453},
{545,1363.2723,-1260.8229,13.0954,179.5841},
{540,2383.5627,-1927.9207,13.2436,359.6281},
{482,2377.0374,-1927.8434,13.1071,0.7843},
{547,2391.7234,-1978.0658,13.1963,90.1736},
{550,2396.6899,-1966.8123,13.2793,271.6838},
{551,2391.1135,-1500.6554,23.6355,269.7709},
{560,2390.7446,-1490.9093,23.5335,271.1926},
{405,321.2212,-1809.3561,4.2627,179.7758},
{554,2358.0640,-59.2127,27.1269,182.6377},
{426,1354.6172,241.7501,19.2247,334.5147},
{445,499.4850,-1764.0182,5.3367,89.7930},
{492,646.4998,-1771.6411,13.2905,348.7706},
{507,740.4332,-1797.7659,13.9196,349.9927},//150
{545,652.4496,-1656.7273,14.4585,91.3294},
{540,546.0256,-1622.4747,16.4585,180.7857},
{482,438.9431,-1625.4088,25.7951,0.1850},
{547,453.3896,-1494.3240,30.7917,7.7513},
{550,487.6469,-1516.2312,20.0235,185.5384},
{551,300.5775,-1490.8882,24.3748,235.1359},
{560,297.9918,-1535.9011,24.3758,231.2773},
{566,524.0590,-1375.0093,15.8231,193.3626},
{405,598.9131,-1519.1414,14.8214,180.4083},
{554,593.2022,-1519.3578,14.9461,181.5466},
{426,733.5679,-1438.4880,13.3203,266.7551},
{445,770.4971,-1431.1127,13.3247,0.7436},
{492,735.9440,-1346.2430,13.3003,88.3069},
{507,736.8572,-1337.1550,13.3140,271.3832},
{545,856.7003,-1363.1852,13.4093,179.8542},//165
{482,888.1506,-1659.2727,13.3296,1.2414},
{547,879.1024,-1669.2560,13.3305,180.5853},
{550,888.0242,-1678.5981,13.3294,358.4990},
{551,920.4441,-1823.0966,12.3452,84.1821},
{560,986.5818,-1761.2992,13.4014,181.9385},
{566,1062.6744,-1757.9412,13.1956,89.0572},
{405,1084.3831,-1763.8369,13.1501,269.0443},
{554,1081.8948,-1629.9564,13.4064,90.0880},
{426,981.7941,-1523.5115,13.3379,267.2751},
{445,1014.7464,-1434.4586,13.3292,266.3129},
{492,2684.6,-1990.2,13.3,180.0931},
{507,2684.6,-2019.0,13.3 ,0.8777},
{545,1096.1,-1379.9,13.3,270.1909},//178
{540,1151.6812,-1203.2323,20.2889,273.5155},//179
{482,1182.2568,-1219.2407,18.4163,0.5578},
{547,1260.9978,-1187.1921,23.3559,183.3606},
{550,1331.9304,-1081.3899,24.9941,90.4092},
{551,1284.8755,-1525.5013,13.3451,269.4388},
{560,1279.1887,-1539.2032,13.3201,94.8070},
{566,1275.9120,-1646.7448,13.3273,267.2669},
{405,1318.2792,-1785.7821,13.2429,182.4215},
{554,1253.9153,-1833.3832,13.1734,175.3692},
{426,1279.2875,-1814.4156,13.1657,93.6385},
{445,1198.5004,-1835.2216,13.1820,93.6780},
{492,1462.7026,-1737.7279,13.2662,270.2439},
{507,1508.1047,-1737.7089,13.2418,270.0250},
{545,1618.0411,-1891.1044,13.3278,0.3364},
{540,1623.7291,-1892.7234,13.3307,180.0126},
{482,2189.4170,-2252.4854,13.2933,317.2735},
{547,371.4392,-2041.8478,7.3034,359.5139},
{550,1838.1904,-1871.3842,13.1703,358.5452},
{551,1841.4791,-1871.6549,13.1687,179.3825},
{560,1646.6588,-1695.6704,20.0420,88.7770},
{566,1671.7789,-1718.8323,20.0718,358.2389},
{566,1981.0780,-1986.3513,13.3275,2.1479},
{405,1987.6057,-1994.9520,13.3296,359.9128},
{554,1978.0371,-2066.7500,13.1640,358.2871},
{426,1984.7471,-2066.7776,13.1625,359.7226},
{445,1938.0565,-2086.8459,13.3429,268.3414},
{589,1947.1119,-2136.3887,13.3286,90.9804},
{507,1932.1523,-2141.5220,13.3429,1.8383},
{545,1793.9172,-2148.5300,13.3781,359.7861},
{540,1748.0751,-2084.2090,13.3324,0.4337},
{482,1560.5026,-2260.5457,13.3258,268.7398},
{547,1461.6943,-1505.1688,13.2541,356.9007},
{550,1426.4930,-1402.3170,13.1800,181.0290},
{551,1435.0645,-1325.6835,13.2580,270.9400},
{560,1513.9486,-1272.5691,14.2685,181.0697},
{566,1583.7561,-1338.7435,16.1896,359.8619},
{405,1573.8772,-1209.9202,17.1378,92.7502},
{554,1476.2012,-1120.3083,23.5660,359.9746},
{426,1430.2316,-1054.8555,22.8693,359.3625},
{445,1574.1168,-1036.7643,23.6151,145.6786},
{492,1617.6676,-1009.8663,23.6052,356.8697},
{507,1645.3188,-1036.5238,23.6027,0.7258},
{545,1735.2826,-1010.5402,23.6588,346.3133},
{540,1770.4874,-1060.9886,23.6658,179.2750},
{482,1739.9854,-1084.5490,23.6660,176.8026},
{547,1653.1766,-1134.8994,23.6110,178.6835},
{550,1617.3746,-1132.8293,23.6117,91.7300},
{551,1790.0190,-1292.9065,13.2653,267.2964},
{560,1754.3009,-1476.8170,13.2402,269.6320},
{554,2003.3417,-1121.4993,26.3879,357.4926},
{426,2084.2334,-1170.0986,24.2042,91.8975},
{445,2229.1128,-1357.8774,23.6930,268.2194},
{492,2229.2278,-1345.4033,23.6892,93.3009},
{507,2332.5684,-1362.4845,23.7297,358.1198},
{545,2384.1567,-1275.6326,23.9198,101.6528},
{540,2432.3149,-1226.0785,24.9941,17.9805},
{482,2426.9612,-1224.4158,25.0000,202.7159},
{547,2438.4309,-1321.6925,24.1225,269.7535},
{551,2612.9702,-1262.6970,48.2461,269.4752},
{560,2659.4529,-1428.4343,30.1790,266.5051},
{566,2659.7053,-1422.6743,30.1714,89.8159},
{405,2485.5313,-1556.1823,23.7478,178.8338},
{554,2478.7664,-1555.7006,23.7226,183.6043},
{426,2605.3967,-1365.8829,34.6461,359.9891},
{445,2754.7136,-1373.0253,40.1154,91.4169},
{492,2717.3662,-1468.0308,30.0894,1.0298},
{507,2816.7195,-1449.4285,15.9549,268.9106},
{545,2816.9937,-1441.5880,15.9544,90.7779},
{540,2681.9016,-1673.3879,9.1290,0.5605},
{482,2442.5845,-1642.7507,13.1644,180.3454},
{547,2361.3120,-1674.6146,13.2505,357.4959},
{550,2298.3535,-1633.7542,14.3849,80.8107},
{551,2297.9077,-1639.9464,14.4352,94.4292},
{560,2255.4045,-1664.5736,15.1304,74.6898},
{566,2234.1057,-1726.9386,13.1665,271.7536},
{405,2319.3833,-1716.6823,13.2518,359.8540},
{554,2474.5105,-1755.9194,13.2522,270.5967},
{426,2501.8213,-1754.2794,13.1208,176.4916}, //= 255
{445,2489.1560,-1952.6886,13.1366,178.1629},
{492,2495.4326,-1953.2922,13.1299,356.5514},
{507,2306.7168,-1989.6796,13.2639,184.8385},
{482,2056.1807,-1904.7751,13.2502,2.2910},
{550,2064.9871,-1919.1674,13.2504,180.8575},
{551,1886.4812,-2022.9338,13.0964,179.4265},
{560,1824.8976,-2019.8374,13.0875,272.5273},
{566,1942.1669,-1862.6425,13.2679,264.5590},
{405,1923.9409,-1795.5616,13.0877,90.0886},
{554,1807.0905,-1571.7120,13.1659,125.1048},
{426,1809.9016,-1676.0603,13.2422,180.7589},
{445,1809.6266,-1653.3402,13.2365,180.6530},
{492,1809.7056,-1660.3019,13.2380,180.6262},
{589,1978.4003,-1675.0157,15.6741,269.7336},
{545,1974.8230,-1693.5488,15.6741,92.1162},
{540,1929.2253,-1584.6954,13.2700,185.5542},
{482,1731.9725,-1590.8959,13.1630,77.7249},
{547,1721.5776,-1589.2834,13.1526,80.9057},
{550,1695.1428,-1519.2667,13.1671,0.7121},
{551,1694.7080,-1501.7454,13.1675,357.8150}
};
*/

//ENUM
enum gInfo
{
	gObject,
	gModel,
	gMoved,	
	Float:StartX,
	Float:StartY,
	Float:StartZ,
	Float:EndX,
	Float:EndY,
	Float:EndZ,
	Float:SRotateX,
	Float:SRotateY,
	Float:SRotateZ,
	Float:ERotateX,
	Float:ERotateY,
	Float:ERotateZ,
	Float:gHealth,
	Float:gMaxHealth,
	gType,
	gFactionID,
	gFactionType,
	Float:gRange,
	Float:gTime,
	gAutoTime,
};
new GateInfo[MAX_GATES][gInfo];
new GateWaitTime[MAX_GATES];
new LastHitGate[MAX_PLAYERS];

enum SavePlayerPosEnum
{
	Float:LastX,
	Float:LastY,
	Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];

enum pBoxingStats
{
	TitelName[128],
	TitelWins,
	TitelLoses,
};
new Titel[pBoxingStats];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];

enum pPaperInfo
{
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving,
};
new PaperInfo[10][pPaperInfo];

enum pPaper
{
	pMaker[20],
	pTitle[64],
	pLine1[128],
	pLine2[128],
	pLine3[128],
	pLine4[128],
	pLine5[128],
	pLine6[128],
	pLine7[128],
};
new Paper[MAX_PLAYERS][pPaper];

enum fInfo
{
	fID,
	fTaken,
	fName[128],
	fMOTD[128],
	fColor[20],
	fLeader[MAX_PLAYER_NAME],
	fMembers,
	fHouseHQ,
	fWeapons[128],
	fLevel,
	fMoney,
	fMats,
	fDrugs
};
new FamilyInfo[10][fInfo];
new FamilyTitle[10][7][25];

enum zInfo
{
	zOwner[64],
	zColor[20],
	Float:zMinX,
	Float:zMinY,
	Float:zMaxX,
	Float:zMaxY,
};
new TurfInfo[6][zInfo];
new Turfs[6];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum eCars
{
	model_id,
Float:pos_x,
	Float:pos_y,
		  Float:pos_z,
				 Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

enum pInfo
{
	pKey[128],
	pLevel,
	pAdmin,
	pHelper,
	pDonateRank,
	gPupgrade,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pCK,
	pMuted,
	pExp,
	pCash,
	pAccount,
	pCrimes,
	pKills,
	pDeaths,
	pArrested,
	pWantedDeaths,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pJob,
	pPayCheck,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pLeader,
	pMember,
	pFMember,
	pRank,
	pChar,
	//pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pJackSkill,
	pCarSkill,
	pNewsSkill,
	pDrugsSkill,
	pCookSkill,
	pFishSkill,
	pPlantSkill,
	pTruckSkill,
	Float:pHealth,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pModel,
	pPnumber,
	pPhousekey,
	pPcarkey[3],
	pGangKey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pGun[4],
	pAmmo[4],
	pCarTime,
	pPayDay,
	pPayDayHad,
	pWatch,
	pCrashed,
	pHospital,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pMissionNr,
	pWarns,
	pVirWorld,
	pFuel,
	pMarried,
	pMarriedTo[128],
	pFishTool,
	pNotes[5],
	pInvWeapon,
	pInvAmmo,
	pLighter,
	pCigarettes,
	pRequestingBackup,
	pRoadblock,
	pMask,
	pMaskuse,
	pHideNumber,
	pSpeaker,
	pLocked,
	pBleeding,
	pJailRoom,
	pLastConnectedTime[50],
	//pSQLID,
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new PlayerNote[MAX_PLAYERS][5][128];

enum p2Info
{
	HouseEntered,
	CallCost,
};
new PlayerInfo2[p2Info][MAX_PLAYERS];

enum hInfo
{
	hID,
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
	hWorld
};
new HouseInfo[MAX_HOUSES][hInfo];

enum cInfo
{
	cID,
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cDescription[MAX_PLAYER_NAME],
	cValue,
	cLicense,
	cRegistration,
	cOwned,
	cLock,
	cType
};
new CarInfo[MAX_VEHICLES][cInfo];

enum bInfo
{
	bID,
	bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	bType
};
new BizzInfo[MAX_BIZ][bInfo];

enum sbInfo
{
	sbID,
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
	sbType
};
new SBizzInfo[MAX_SBIZ][sbInfo];

//enum pHaul
//{
//	pCapasity,
//	pLoad,
//};
//
//new PlayerHaul[113][pHaul];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

enum mInfo
{
	mTitle[128],
	mText1[128],
	mText2[128],
	mText3[128],
	mText4[128],
	mText5[128],
	mText6[128],
	mText7[128],
	mText8[128],
	mText9[128],
	mText10[128],
	mText11[128],
	mText12[128],
	mText13[128],
	mText14[128],
	mText15[128],
	mText16[128],
	mText17[128],
	mText18[128],
	mGText1[128],
	mGText2[128],
	mGText3[128],
	mGText4[128],
	mGText5[128],
	mGText6[128],
Float:mCP1[3],
	Float:mCP2[3],
		  Float:mCP3[3],
				 Float:mCP4[3],
						Float:mCP5[3],
							  Float:mCP6[3],
										 mReward,
										 mToggle,
};
new MissionInfo[mInfo];

enum kInfo
{
	kTitle[128],
	kMaker[MAX_PLAYER_NAME],
	kText1[128],
	kText2[128],
	kText3[128],
	kText4[128],
	kText5[128],
	kText6[128],
	kText7[128],
	kText8[128],
	kText9[128],
	kText10[128],
	kText11[128],
	kText12[128],
	kText13[128],
	kText14[128],
	kText15[128],
	kText16[128],
	kText17[128],
	kText18[128],
	kGText1[128],
	kGText2[128],
	kGText3[128],
	kGText4[128],
	kGText5[128],
	kGText6[128],
Float:kCP1[3],
	Float:kCP2[3],
		  Float:kCP3[3],
				 Float:kCP4[3],
						Float:kCP5[3],
							  Float:kCP6[3],
										 kNumber,
										 kReward,
										 kToggle,
};
new PlayMission[kInfo];

enum iInfo
{
	iAdmin[128],
	iMOTD[128],
	iPassword[128],
	iNeedPass,
	iLock,
	iPlayers,
};
new IRCInfo[10][iInfo];

enum dDrug
{
	DrugAmmount,
};
new drugsys[dDrug];

enum dMats
{
	MatsAmmount,
};
new matssys[dMats];

enum hqLocks
{
	surlock,
	luclock,
	stlock,
	iolock,
};
new hqlock[hqLocks];

main()
{
	print("\n");
	print("\tLos Angeles Roleplay ");
	print("----------------------------------------");
	print("\tBy: Team Grand");
	print("\tAuthor: Ellis & Hoodstar");
	print("\n");
}

#include <ProjectInc\onevent>

//CONNECTMYSQL
forward ConnectMySQL();
public ConnectMySQL()
{
	conn = mysql_connect_file();
	mysql_log(ERROR);
	if (mysql_errno(conn) == 0)
		print("[MySQL] Connection successful!\n");
	else
		print("[MySQL] Connection failed!\n");
}

//SAVE+LOAD
public SaveAccounts()
{
	UpdateDealership();
	SaveFamilies();
	CreateDailyNails();
	foreach(new i: Player)
	{
		if (IsLogOn(i))
		{
			SavePlayer(i);
			/*if (PlayerInfo[i][pJob] > 0)
			{
				if (PlayerInfo[i][pContractTime] < 25)
				{
					PlayerInfo[i][pContractTime] ++;
				}
			}*/
		}
	}
}
public SavePlayer(playerid)
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid])
		{
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));

			//Save Befor Update
			PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
			GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
			if ((PlayerInfo[playerid][pPos_x] == 0.0 && PlayerInfo[playerid][pPos_y] == 0.0 && PlayerInfo[playerid][pPos_z] == 0.0))
			{
				PlayerInfo[playerid][pPos_x] = 1684.9;
				PlayerInfo[playerid][pPos_y] = -2244.5;
				PlayerInfo[playerid][pPos_z] = 13.5;
			}
			if (Spectate[playerid] != 255)
			{
				PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
				PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
				PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
				PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
				PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			PlayerInfo[playerid][pPos_x] = x;
			PlayerInfo[playerid][pPos_y] = y;
			PlayerInfo[playerid][pPos_z] = z;
			if (PlayerInfo[playerid][pDonateRank] < 1) { PlayerInfo[playerid][pFuel] = 0; }

			//Query
			new sql[3000];
			format(sql, sizeof(sql), "UPDATE user SET \
				Level=%d,\
				AdminLevel=%d,\
				HelperLevel=%d,\
				DonateRank=%d,\
				UpgradePoints=%d,\
				ConnectedTime=%d,\
				Registered=%d,\
				LastConnectedTime=NOW(),\
				Sex=%d,\
				Age=%d,\
				Origin=%d,\
				CK=%d,\
				Muted=%d,\
				Respect=%d,\
				`Money`=%d,\
				Bank=%d,\
				Crimes=%d,\
				Kills=%d,\
				Deaths=%d,\
				Arrested=%d,", 
				PlayerInfo[playerid][pLevel],
				PlayerInfo[playerid][pAdmin],
				PlayerInfo[playerid][pHelper],
				PlayerInfo[playerid][pDonateRank],
				PlayerInfo[playerid][gPupgrade],
				PlayerInfo[playerid][pConnectTime],
				PlayerInfo[playerid][pReg],
				PlayerInfo[playerid][pSex],
				PlayerInfo[playerid][pAge],
				PlayerInfo[playerid][pOrigin],
				PlayerInfo[playerid][pCK],
				PlayerInfo[playerid][pMuted],
				PlayerInfo[playerid][pExp],
				PlayerInfo[playerid][pCash],
				PlayerInfo[playerid][pAccount],
				PlayerInfo[playerid][pCrimes],
				PlayerInfo[playerid][pKills],
				PlayerInfo[playerid][pDeaths],
				PlayerInfo[playerid][pArrested]);

			format(sql, sizeof(sql), "%s \
				WantedDeaths=%d,\
				WantedPoints=%d,\
				Phonebook=%d,\
				LottoNr=%d,\
				Fishes=%d,\
				BiggestFish=%d,\
				Job=%d,\
				Paycheck=%d,\
				HeadValue=%d,\
				Jailed=%d,\
				JailRoom=%d,\
				JailTime=%d,\
				Materials=%d,\
				Drugs=%d,\
				Leader=%d,\
				Member=%d,\
				FMember=%d,\
				Rank=%d,\
				`Char`=%d,",
				sql,
				PlayerInfo[playerid][pWantedDeaths],
				WantedPoints[playerid],
				PlayerInfo[playerid][pPhoneBook],
				PlayerInfo[playerid][pLottoNr],
				PlayerInfo[playerid][pFishes],
				PlayerInfo[playerid][pBiggestFish],
				PlayerInfo[playerid][pJob],
				PlayerInfo[playerid][pPayCheck],
				PlayerInfo[playerid][pHeadValue],
				PlayerInfo[playerid][pJailed],
				PlayerInfo[playerid][pJailRoom],
				PlayerInfo[playerid][pJailTime],
				PlayerInfo[playerid][pMats],
				PlayerInfo[playerid][pDrugs],
				PlayerInfo[playerid][pLeader], 
				PlayerInfo[playerid][pMember],
				PlayerInfo[playerid][pFMember],
				PlayerInfo[playerid][pRank],
				PlayerInfo[playerid][pChar]);
				/*PlayerInfo[playerid][pContractTime]*/

			format(sql, sizeof(sql), "%s \
				DetSkill=%d,\
				SexSkill=%d,\
				BoxSkill=%d,\
				LawSkill=%d,\
				MechSkill=%d,\
				JackSkill=%d,\
				CarSkill=%d,\
				NewsSkill=%d,\
				DrugsSkill=%d,\
				CookSkill=%d,\
				FishSkill=%d,\
				PlantSkill=%d,\
				TruckSkill=%d,\
				SHealth=%f,\
				Health=%f,\
				`Int`=%d,\
				Local=%d,\
				`Team`=%d,\
				Model=%d,\
				PhoneNr=%d,",
				sql,
				PlayerInfo[playerid][pDetSkill],
				PlayerInfo[playerid][pSexSkill],
				PlayerInfo[playerid][pBoxSkill],
				PlayerInfo[playerid][pLawSkill],
				PlayerInfo[playerid][pMechSkill],
				PlayerInfo[playerid][pJackSkill],
				PlayerInfo[playerid][pCarSkill],
				PlayerInfo[playerid][pNewsSkill],
				PlayerInfo[playerid][pDrugsSkill],
				PlayerInfo[playerid][pCookSkill],
				PlayerInfo[playerid][pFishSkill],
				PlayerInfo[playerid][pPlantSkill],
				PlayerInfo[playerid][pTruckSkill],
				PlayerInfo[playerid][pSHealth],
				PlayerInfo[playerid][pHealth],
				PlayerInfo[playerid][pInt],
				PlayerInfo[playerid][pLocal],
				PlayerInfo[playerid][pTeam],
				PlayerInfo[playerid][pModel],
				PlayerInfo[playerid][pPnumber]);

			format(sql, sizeof(sql), "%s \
				Car=%d,\
				Car2=%d,\
				Car3=%d,\
				House=%d,\
				Biz=%d,\
				Pos_x=%f,\
				Pos_y=%f,\
				Pos_z=%f,\
				CarLic=%d,\
				FlyLic=%d,\
				BoatLic=%d,\
				FishLic=%d,\
				GunLic=%d,\
				CarTime=%d,\
				PayDay=%d,\
				PayDayHad=%d,\
				Watch=%d,\
				Crashed=%d,\
				Hospital=%d,",
				sql,
				PlayerInfo[playerid][pPcarkey][0],
				PlayerInfo[playerid][pPcarkey][1],
				PlayerInfo[playerid][pPcarkey][2],
				PlayerInfo[playerid][pPhousekey],
				PlayerInfo[playerid][pPbiskey],
				PlayerInfo[playerid][pPos_x],
				PlayerInfo[playerid][pPos_y],
				PlayerInfo[playerid][pPos_z],
				PlayerInfo[playerid][pCarLic],
				PlayerInfo[playerid][pFlyLic],
				PlayerInfo[playerid][pBoatLic],
				PlayerInfo[playerid][pFishLic],
				PlayerInfo[playerid][pGunLic],
				PlayerInfo[playerid][pCarTime],
				PlayerInfo[playerid][pPayDay],
				PlayerInfo[playerid][pPayDayHad],
				PlayerInfo[playerid][pWatch],
				PlayerInfo[playerid][pCrashed],
				PlayerInfo[playerid][pHospital]);

			for (new i = 1; i < 6; i++)
			{
				if (i < 5)
				{
					format(sql, sizeof(sql), "%s Gun%d=%d,", sql, i, PlayerInfo[playerid][pGun][i - 1]);
					format(sql, sizeof(sql), "%s Ammo%d=%d,", sql, i, PlayerInfo[playerid][pAmmo][i - 1]);
				}
				format(sql, sizeof(sql), "%s Note%d='%s',", sql, i, PlayerNote[playerid][i - 1]);
				format(sql, sizeof(sql), "%s Note%ds=%d,", sql, i, PlayerInfo[playerid][pNotes][i - 1]);
			}
		
			format(sql, sizeof(sql), "%s \
				Wins=%d,\
				Loses=%d,\
				AlcoholPerk=%d,\
				DrugPerk=%d,\
				MiserPerk=%d,\
				PainPerk=%d,\
				TraderPerk=%d,\
				Tutorial=%d,\
				Mission=%d,\
				Warnings=%d,\
				VirWorld=%d,\
				Fuel=%d,\
				Married=%d,\
				MarriedTo='%s',\
				FishTool=%d,\
				InvWeapon=%d,\
				InvAmmo=%d,\
				Lighter=%d,\
				Cigarettes=%d,\
				Locked=%d,\
				Bleeding=%d,\
				HouseEntered=%d WHERE `Name` = '%s'",
				sql,
				PlayerInfo[playerid][pWins],
				PlayerInfo[playerid][pLoses],
				PlayerInfo[playerid][pAlcoholPerk],
				PlayerInfo[playerid][pDrugPerk],
				PlayerInfo[playerid][pMiserPerk],
				PlayerInfo[playerid][pPainPerk],
				PlayerInfo[playerid][pTraderPerk],
				PlayerInfo[playerid][pTut],
				PlayerInfo[playerid][pMissionNr],
				PlayerInfo[playerid][pWarns],
				PlayerInfo[playerid][pVirWorld],
				PlayerInfo[playerid][pFuel],
				PlayerInfo[playerid][pMarried],
				PlayerInfo[playerid][pMarriedTo],
				PlayerInfo[playerid][pFishTool],
				PlayerInfo[playerid][pInvWeapon],
				PlayerInfo[playerid][pInvAmmo],
				PlayerInfo[playerid][pLighter],
				PlayerInfo[playerid][pCigarettes],
				PlayerInfo[playerid][pLocked],
				PlayerInfo[playerid][pBleeding],
				PlayerInfo2[HouseEntered][playerid],
				playername3);

			mysql_query(conn, sql);
		}
	}
	return 1;
}
public SaveMission(playerid, name[])
{
	if (IsLogOn(playerid))
	{
		new coordsstring[256];
		new missionname[64];
		new var[128];
		new makername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, makername, sizeof(makername));
		new rand = random(999);
		if (rand == 0) { rand = 1; }
		new number = rand;
		if (MissionInfo[mToggle] == 0 || MissionInfo[mToggle] == 1) {}
		else { MissionInfo[mToggle] = 1; }
		format(missionname, sizeof(missionname), "%s.mis", name);
		new File: hFile = fopen(missionname, io_write);
		format(var, 128, "Title=%s\n", MissionInfo[mTitle]); fwrite(hFile, var);
		format(var, 128, "Maker=%s\n", makername); fwrite(hFile, var);
		format(var, 128, "Text1=%s\n", MissionInfo[mText1]); fwrite(hFile, var);
		format(var, 128, "Text2=%s\n", MissionInfo[mText2]); fwrite(hFile, var);
		format(var, 128, "Text3=%s\n", MissionInfo[mText3]); fwrite(hFile, var);
		format(var, 128, "Text4=%s\n", MissionInfo[mText4]); fwrite(hFile, var);
		format(var, 128, "Text5=%s\n", MissionInfo[mText5]); fwrite(hFile, var);
		format(var, 128, "Text6=%s\n", MissionInfo[mText6]); fwrite(hFile, var);
		format(var, 128, "Text7=%s\n", MissionInfo[mText7]); fwrite(hFile, var);
		format(var, 128, "Text8=%s\n", MissionInfo[mText8]); fwrite(hFile, var);
		format(var, 128, "Text9=%s\n", MissionInfo[mText9]); fwrite(hFile, var);
		format(var, 128, "Text10=%s\n", MissionInfo[mText10]); fwrite(hFile, var);
		format(var, 128, "Text11=%s\n", MissionInfo[mText11]); fwrite(hFile, var);
		format(var, 128, "Text12=%s\n", MissionInfo[mText12]); fwrite(hFile, var);
		format(var, 128, "Text13=%s\n", MissionInfo[mText13]); fwrite(hFile, var);
		format(var, 128, "Text14=%s\n", MissionInfo[mText14]); fwrite(hFile, var);
		format(var, 128, "Text15=%s\n", MissionInfo[mText15]); fwrite(hFile, var);
		format(var, 128, "Text16=%s\n", MissionInfo[mText16]); fwrite(hFile, var);
		format(var, 128, "Text17=%s\n", MissionInfo[mText17]); fwrite(hFile, var);
		format(var, 128, "Text18=%s\n", MissionInfo[mText18]); fwrite(hFile, var);
		format(var, 128, "GText1=%s\n", MissionInfo[mGText1]); fwrite(hFile, var);
		format(var, 128, "GText2=%s\n", MissionInfo[mGText2]); fwrite(hFile, var);
		format(var, 128, "GText3=%s\n", MissionInfo[mGText3]); fwrite(hFile, var);
		format(var, 128, "GText4=%s\n", MissionInfo[mGText4]); fwrite(hFile, var);
		format(var, 128, "GText5=%s\n", MissionInfo[mGText5]); fwrite(hFile, var);
		format(var, 128, "GText6=%s\n", MissionInfo[mGText6]); fwrite(hFile, var);
		format(var, 128, "CP1X=%f\n", MissionInfo[mCP1][0]); fwrite(hFile, var);
		format(var, 128, "CP1Y=%f\n", MissionInfo[mCP1][1]); fwrite(hFile, var);
		format(var, 128, "CP1Z=%f\n", MissionInfo[mCP1][2]); fwrite(hFile, var);
		format(var, 128, "CP2X=%f\n", MissionInfo[mCP2][0]); fwrite(hFile, var);
		format(var, 128, "CP2Y=%f\n", MissionInfo[mCP2][1]); fwrite(hFile, var);
		format(var, 128, "CP2Z=%f\n", MissionInfo[mCP2][2]); fwrite(hFile, var);
		format(var, 128, "CP3X=%f\n", MissionInfo[mCP3][0]); fwrite(hFile, var);
		format(var, 128, "CP3Y=%f\n", MissionInfo[mCP3][1]); fwrite(hFile, var);
		format(var, 128, "CP3Z=%f\n", MissionInfo[mCP3][2]); fwrite(hFile, var);
		format(var, 128, "CP4X=%f\n", MissionInfo[mCP4][0]); fwrite(hFile, var);
		format(var, 128, "CP4Y=%f\n", MissionInfo[mCP4][1]); fwrite(hFile, var);
		format(var, 128, "CP4Z=%f\n", MissionInfo[mCP4][2]); fwrite(hFile, var);
		format(var, 128, "CP5X=%f\n", MissionInfo[mCP5][0]); fwrite(hFile, var);
		format(var, 128, "CP5Y=%f\n", MissionInfo[mCP5][1]); fwrite(hFile, var);
		format(var, 128, "CP5Z=%f\n", MissionInfo[mCP5][2]); fwrite(hFile, var);
		format(var, 128, "CP6X=%f\n", MissionInfo[mCP6][0]); fwrite(hFile, var);
		format(var, 128, "CP6Y=%f\n", MissionInfo[mCP6][1]); fwrite(hFile, var);
		format(var, 128, "CP6Z=%f\n", MissionInfo[mCP6][2]); fwrite(hFile, var);
		format(var, 128, "Number=%d\n", number); fwrite(hFile, var);
		format(var, 128, "Reward=%d\n", MissionInfo[mReward]); fwrite(hFile, var);
		format(var, 128, "Toggle=%d\n", MissionInfo[mToggle]); fwrite(hFile, var);
		fclose(hFile);
		format(coordsstring, sizeof(coordsstring), "%s Mission Saved.", name);
		SendClientMessage(playerid, COLOR_GREEN, coordsstring);
	}
	return 1;
}
public SaveBoxer()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins], Titel[TitelName], Titel[TitelLoses]);
	new File: file2 = fopen("boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public SaveStuff()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", Jackpot, Tax, TaxValue, Security);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public SaveTurfs()
{
	new idx;
	new File: file2;
	while (idx < sizeof(TurfInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%f|%f|%f|%f|%f|%f\n",
			TurfInfo[idx][zOwner],
			TurfInfo[idx][zColor],
			TurfInfo[idx][zMinX],
			TurfInfo[idx][zMinY],
			TurfInfo[idx][zMaxX],
			TurfInfo[idx][zMaxY]);
		if (idx == 0)
		{
			file2 = fopen("turfs.cfg", io_write);
		}
		else
		{
			file2 = fopen("turfs.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public SaveCK()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CKInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
			CKInfo[idx][cSendername],
			CKInfo[idx][cGiveplayer],
			CKInfo[idx][cUsed]);
		if (idx == 0)
		{
			file2 = fopen("ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public SaveIRC()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%d|%d\n",
			IRCInfo[idx][iAdmin],
			IRCInfo[idx][iMOTD],
			IRCInfo[idx][iPassword],
			IRCInfo[idx][iNeedPass],
			IRCInfo[idx][iLock]);
		if (idx == 0)
		{
			file2 = fopen("channels.cfg", io_write);
		}
		else
		{
			file2 = fopen("channels.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public SaveFamilies()
{
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		new sql[300];
		format(sql, sizeof(sql), "UPDATE family SET \
				Taken=%d,\
				Name='%s',\
				MOTD='%s',\
				Color='%s',\
				Leader='%s',\
				Members=%d,\
				HouseHQ=%d,\
				Weapons='%s',\
				Money=%d,\
				Mats=%d,\
				Drugs=%d,\
				Title1='%s',\
				Title2='%s',\
				Title3='%s',\
				Title4='%s',\
				Title5='%s',\
				Title6='%s' \
				WHERE ID = %d",
				FamilyInfo[i][fTaken],
				FamilyInfo[i][fName],
				FamilyInfo[i][fMOTD],
				FamilyInfo[i][fColor],
				FamilyInfo[i][fLeader],
				FamilyInfo[i][fMembers],
				FamilyInfo[i][fHouseHQ],
				FamilyInfo[i][fWeapons],
				FamilyInfo[i][fMoney],
				FamilyInfo[i][fMats],
				FamilyInfo[i][fDrugs],
				FamilyTitle[i][1],
				FamilyTitle[i][2],
				FamilyTitle[i][3],
				FamilyTitle[i][4],
				FamilyTitle[i][5],
				FamilyTitle[i][6],
				FamilyInfo[i][fID]);
		mysql_query(conn, sql);
	}
	return 1;
}
public SavePapers()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%d\n",
			PaperInfo[idx][PaperUsed],
			PaperInfo[idx][PaperMaker],
			PaperInfo[idx][PaperTitle],
			PaperInfo[idx][PaperText1],
			PaperInfo[idx][PaperText2],
			PaperInfo[idx][PaperText3],
			PaperInfo[idx][PaperText4],
			PaperInfo[idx][PaperText5],
			PaperInfo[idx][PaperText6],
			PaperInfo[idx][PaperText7],
			PaperInfo[idx][SafeSaving]);
		if (idx == 0)
		{
			file2 = fopen("papers.cfg", io_write);
		}
		else
		{
			file2 = fopen("papers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

//public SaveCarCoords(vehicleid)
//{
//	new idx;
//	new File: file2;
//	while (idx < sizeof(CarInfo))
//	{
//		new coordsstring[256];
//		format(coordsstring, sizeof(coordsstring), "%d|%f|%f|%f|%f|%d|%d\n",
//			CarInfo[idx][cModel],
//			CarInfo[idx][cLocationx],
//			CarInfo[idx][cLocationy],
//			CarInfo[idx][cLocationz],
//			CarInfo[idx][cAngle],
//			CarInfo[idx][cColorOne],
//			CarInfo[idx][cColorTwo]);
//		if (idx == 0)
//		{
//			file2 = fopen("cars.cfg", io_write);
//		}
//		else
//		{
//			file2 = fopen("cars.cfg", io_append);
//		}
//		fwrite(file2, coordsstring);
//		idx++;
//		fclose(file2);
//	}
//	return 1;
//}

public SaveDrugSystem()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d", drugsys[DrugAmmount]);
	new File: file2 = fopen("drugs_system.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public SaveMatsSystem()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d", matssys[MatsAmmount]);
	new File: file2 = fopen("mats_system.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public SaveHQLocks()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", hqlock[surlock], hqlock[luclock], hqlock[stlock], hqlock[iolock]);
	new File: file2 = fopen("hq_locks.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public SaveTrunk()
{
	new sql[500];
	foreach(new idx : Vehicle)
	{
		format(sql, sizeof(sql), "UPDATE cartrunk SET \
					Trunk1 = %d,\
					TrunkAmmo1 = %d,\
					Trunk2 = %d,\
					TrunkAmmo2 = %d,\
					Trunk3 = %d,\
					TrunkAmmo3 = %d,\
					Trunk4 = %d,\
					TrunkAmmo4 = %d,\
					TrunkCounter = %d,\
					TrunkArmour = %f \
					WHERE VehID = %d",
					vehTrunk[idx][1],
					vehTrunkAmmo[idx][1],
					vehTrunk[idx][2],
					vehTrunkAmmo[idx][2],
					vehTrunk[idx][3],
					vehTrunkAmmo[idx][3],
					vehTrunk[idx][4],
					vehTrunkAmmo[idx][4],
					vehTrunkCounter[idx],
					vehTrunkArmour[idx],
					CarInfo[idx][cID]);
		mysql_query(conn, sql);
	}

	/*new idx;
	new File: file2;
	while (idx < sizeof(CarInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
			vehTrunk[idx][1],
			vehTrunkAmmo[idx][1],
			vehTrunk[idx][2],
			vehTrunkAmmo[idx][2],
			vehTrunk[idx][3],
			vehTrunkAmmo[idx][3],
			vehTrunk[idx][4],
			vehTrunkAmmo[idx][4],
			vehTrunkCounter[idx],
			vehTrunkArmour[idx]);
		if (idx == 1)
		{
			file2 = fopen("trunk.cfg", io_write);
		}
		else
		{
			file2 = fopen("trunk.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}*/
	return 1;
}

public LoadMission(playerid, name[])
{
	if (IsLogOn(playerid))
	{
		new strFromFile2[128];
		new missionname[64];
		format(missionname, sizeof(missionname), "%s.mis", name);
		new File: file = fopen(missionname, io_read);
		if (file)
		{
			new key[256], val[256];
			new Data[256];
			while (fread(file, Data, sizeof(Data)))
			{
				key = ini_GetKey(Data);
				if (strcmp(key, "Title", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kTitle], val, 0, strlen(val), 255); }
				if (strcmp(key, "Maker", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kMaker], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text1", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText1], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text2", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText2], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text3", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText3], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text4", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText4], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text5", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText5], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text6", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText6], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text7", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText7], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text8", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText8], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text9", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText9], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text10", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText10], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text11", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText11], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text12", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText12], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text13", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText13], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text14", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText14], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text15", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText15], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text16", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText16], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text17", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText17], val, 0, strlen(val), 255); }
				if (strcmp(key, "Text18", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kText18], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText1", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText1], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText2", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText2], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText3", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText3], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText4", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText4], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText5", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText5], val, 0, strlen(val), 255); }
				if (strcmp(key, "GText6", true) == 0) { val = ini_GetValue(Data); strmid(PlayMission[kGText6], val, 0, strlen(val), 255); }
				if (strcmp(key, "CP1X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP1][0] = floatstr(val); }
				if (strcmp(key, "CP1Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP1][1] = floatstr(val); }
				if (strcmp(key, "CP1Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP1][2] = floatstr(val); }
				if (strcmp(key, "CP2X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP2][0] = floatstr(val); }
				if (strcmp(key, "CP2Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP2][1] = floatstr(val); }
				if (strcmp(key, "CP2Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP2][2] = floatstr(val); }
				if (strcmp(key, "CP3X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP3][0] = floatstr(val); }
				if (strcmp(key, "CP3Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP3][1] = floatstr(val); }
				if (strcmp(key, "CP3Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP3][2] = floatstr(val); }
				if (strcmp(key, "CP4X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP4][0] = floatstr(val); }
				if (strcmp(key, "CP4Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP4][1] = floatstr(val); }
				if (strcmp(key, "CP4Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP4][2] = floatstr(val); }
				if (strcmp(key, "CP5X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP5][0] = floatstr(val); }
				if (strcmp(key, "CP5Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP5][1] = floatstr(val); }
				if (strcmp(key, "CP5Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP5][2] = floatstr(val); }
				if (strcmp(key, "CP6X", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP6][0] = floatstr(val); }
				if (strcmp(key, "CP6Y", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP6][1] = floatstr(val); }
				if (strcmp(key, "CP6Z", true) == 0) { val = ini_GetValue(Data); PlayMission[kCP6][2] = floatstr(val); }
				if (strcmp(key, "Number", true) == 0) { val = ini_GetValue(Data); PlayMission[kNumber] = strval(val); }
				if (strcmp(key, "Reward", true) == 0) { val = ini_GetValue(Data); PlayMission[kReward] = strval(val); }
				if (strcmp(key, "Toggle", true) == 0) { val = ini_GetValue(Data); PlayMission[kToggle] = strval(val); }
			}
			fclose(file);
			format(strFromFile2, sizeof(strFromFile2), "%s Mission Loaded.", name);
			SendClientMessage(playerid, COLOR_GREEN, strFromFile2);
			format(strFromFile2, sizeof(strFromFile2), "Mission Available: %s, By : %s | Reward: $%d", PlayMission[kTitle], PlayMission[kMaker], PlayMission[kReward]);
			BroadCast(COLOR_GREEN, strFromFile2);
			MissionPlayable = PlayMission[kNumber];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, "Mission File not found.");
		}
	}
	return 1;
}
public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}
public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[256];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		fclose(file);
		if (Security == 0 || Security == 1)
		{
		}
		else
		{
			GameModeExit();
		}
	}
	else
	{
		GameModeExit();
	}
	return 1;
}
public LoadTurfs()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("turfs.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(TurfInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(TurfInfo[idx][zOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(TurfInfo[idx][zColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			TurfInfo[idx][zMinX] = floatstr(arrCoords[2]);
			TurfInfo[idx][zMinY] = floatstr(arrCoords[3]);
			TurfInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			TurfInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			//printf("Turf:%d Name: %s Owner:%s MinX:%f MinY:%f MinZ:%f MaxX:%f MaxY:%f MaxZ:%f\n",
			//idx,TurfInfo[idx][zName],TurfInfo[idx][zOwner],TurfInfo[idx][zMinX],TurfInfo[idx][zMinY],TurfInfo[idx][zMinZ],TurfInfo[idx][zMaxX],TurfInfo[idx][zMaxY],TurfInfo[idx][zMaxZ]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
				idx, CKInfo[idx][cUsed], CKInfo[idx][cSendername], CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public LoadIRC()
{
	new arrCoords[5][64];
	new strFromFile2[256];
	new File: file = fopen("channels.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(IRCInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(IRCInfo[idx][iAdmin], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(IRCInfo[idx][iMOTD], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(IRCInfo[idx][iPassword], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			IRCInfo[idx][iNeedPass] = strval(arrCoords[3]);
			IRCInfo[idx][iLock] = strval(arrCoords[4]);
			printf("IRC:%d Admin:%s MOTD: %s Password: %s NeedPass: %d Lock: %d", idx, IRCInfo[idx][iAdmin], IRCInfo[idx][iMOTD], IRCInfo[idx][iPassword], IRCInfo[idx][iNeedPass], IRCInfo[idx][iLock]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public LoadFamilies()
{
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM family");
	mysql_query(conn, sql);
	new row, tmpstr[128], tmp;
	cache_get_row_count(row);
	for (new idx = 0; idx < row; idx++)
	{
		cache_get_value_name_int(idx, "ID", tmp); FamilyInfo[idx][fID] = tmp;
		cache_get_value_name_int(idx, "Taken", tmp); FamilyInfo[idx][fTaken] = tmp;
		cache_get_value_name(idx, "Name", tmpstr); format(FamilyInfo[idx][fName], 50, tmpstr);
		cache_get_value_name(idx, "MOTD", tmpstr); format(FamilyInfo[idx][fMOTD], 128, tmpstr);
		cache_get_value_name(idx, "Color", tmpstr); format(FamilyInfo[idx][fColor], 20, tmpstr);
		cache_get_value_name(idx, "Leader", tmpstr); format(FamilyInfo[idx][fLeader], MAX_PLAYER_NAME, tmpstr);
		cache_get_value_name_int(idx, "Members", tmp); FamilyInfo[idx][fMembers] = tmp;
		cache_get_value_name_int(idx, "HouseHQ", tmp); FamilyInfo[idx][fHouseHQ] = tmp;
		cache_get_value_name(idx, "Weapons", tmpstr);  format(FamilyInfo[idx][fWeapons], 128, tmpstr);
		cache_get_value_name_int(idx, "Money", tmp); FamilyInfo[idx][fMoney] = tmp;
		cache_get_value_name_int(idx, "Mats", tmp); FamilyInfo[idx][fMats] = tmp;
		cache_get_value_name_int(idx, "Drugs", tmp); FamilyInfo[idx][fDrugs] = tmp;
		for (new i = 1; i < 7; i++)
		{
			new str[20];
			format(str, sizeof(str), "Title%d", i);
			cache_get_value_name(idx, str, tmpstr); format(FamilyTitle[idx][i], 25, tmpstr);
		}
		printf("Family:%d Taken: %d Name:%s MOTD:%s Leader:%s Members:%d HouseHQ:%d",
			idx, FamilyInfo[idx][fTaken], FamilyInfo[idx][fName], FamilyInfo[idx][fMOTD], FamilyInfo[idx][fLeader], FamilyInfo[idx][fMembers], FamilyInfo[idx][fHouseHQ]);
	}
	return 1;
}
public LoadPapers()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("papers.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(PaperInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			PaperInfo[idx][PaperUsed] = strval(arrCoords[0]);
			strmid(PaperInfo[idx][PaperMaker], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(PaperInfo[idx][PaperTitle], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(PaperInfo[idx][PaperText1], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(PaperInfo[idx][PaperText2], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(PaperInfo[idx][PaperText3], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(PaperInfo[idx][PaperText4], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(PaperInfo[idx][PaperText5], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(PaperInfo[idx][PaperText6], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			strmid(PaperInfo[idx][PaperText7], arrCoords[9], 0, strlen(arrCoords[9]), 255);
			PaperInfo[idx][SafeSaving] = strval(arrCoords[10]);
			printf("Paper:%d Used: %d Maker:%s Title: %s Text1: %s Text2: %s Text3: %s Text4: %s Text5: %s Text6: %s Text7: %s",
				idx, PaperInfo[idx][PaperUsed], PaperInfo[idx][PaperMaker], PaperInfo[idx][PaperTitle], PaperInfo[idx][PaperText1], PaperInfo[idx][PaperText2], PaperInfo[idx][PaperText3], PaperInfo[idx][PaperText4], PaperInfo[idx][PaperText5], PaperInfo[idx][PaperText6], PaperInfo[idx][PaperText7]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public AddDealership(model, Float:x, Float:y, Float:z, Float:a, color1, color2, respawntime, price, amount)
{
	new sql[500];
	new vid = AddCar(model, x, y, z, a, color1, color2, 60000, "Dealership", 0, price);
	format(sql, sizeof(sql), "INSERT INTO dealership (`Model`, PosX, PosY,\
									 									PosZ, PosAngle, Color1, Color2, `Price`, SellVehID, Amount) \
																		VALUES (%d, %f, %f, %f, %f, %d, %d, %d, %d, %d)",
																		model, x, y, z, a, color1, color2, price, CarInfo[vid][cID], amount);
	mysql_query(conn, sql);
	UpdateDealership();
}
public UpdateDealership()
{
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM dealership");
	mysql_query(conn, sql);
	new row;
	cache_get_row_count(row);
	for (new i = 0; i < row; i++)
	{
		new amount;
		cache_get_value_name_int(i, "Amount", amount);
		if (amount == 0)
		{
			DeleteDealership(i+1);
			continue;
		}

		new vehid;
		cache_get_value_name_int(0, "SellVehID", vehid);

		new vid = GetVehicleByCarID(vehid);
		if (vid == -1 || (CarInfo[vid][cOwned] == 1 && vid != -1) || vehid == -1)
		{
			new model, Float:pos[4], color[2], price;
			cache_get_value_name_int(i, "Model", model);
			cache_get_value_name_float(i, "PosX", pos[0]);
			cache_get_value_name_float(i, "PosY", pos[1]);
			cache_get_value_name_float(i, "PosZ", pos[2]);
			cache_get_value_name_float(i, "PosAngle", pos[3]);
			cache_get_value_name_int(i, "Color1", color[0]);
			cache_get_value_name_int(i, "Color2", color[1]);
			cache_get_value_name_int(i, "Price", price);
			
			new newvid = AddCar(model, pos[0], pos[1], pos[2], pos[3], color[0], color[1], 60000, "Dealership", 0, price);

			format(sql, sizeof(sql), "UPDATE dealership SET SellVehID = %d, `Amount` = %d WHERE ID = %d", CarInfo[newvid][cID], amount-1, i+1);
			mysql_query(conn, sql);

			printf("Update Dealership - Vehicle Model: %d | ID: %d | Amount: %d", model, newvid, amount - 1);
		}
	}
}
public DeleteDealership(id)
{
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM dealership WHERE ID = %d", id);
	mysql_query(conn, sql);
	new row;
	cache_get_row_count(row);
	if (row != 0)
	{
		new vehid;
		cache_get_value_name_int(0, "SellVehID", vehid);
		if (vehid != 0)
		{
			new vid = GetVehicleByCarID(vehid);
			if (vid != -1)
				DestroyCar(vid);
		}
	}
	format(sql, sizeof(sql), "DELETE FROM dealership WHERE ID = %d", id);
	mysql_query(conn, sql);
	return 1;
}
stock AddCar(model, Float:x, Float:y, Float:z, Float:a, color1, color2, respawntime, owner[], owned, price, type = 0)
{
	new sql[500];
	format(sql, sizeof(sql), "INSERT INTO car (Owner, Owned, `Model`, Locationx, Locationy,\
															 Locationz, Angle, ColorOne, ColorTwo, `Value`, `Type`) \
									 					VALUES ('%s', %d, %d, %f, %f, %f, %f, %d, %d, %d, %d)",
														owner, owned, model, x,y,z,a,color1,color2,price, type);
	mysql_query(conn, sql);
	new newId = cache_insert_id();

	new vid = CreateVehicle2(model, x, y, z, a, color1, color2, respawntime);
	format(CarInfo[vid][cOwner], 999, owner);
	CarInfo[vid][cOwned] = 0;
	CarInfo[vid][cModel] = model;
	CarInfo[vid][cLocationx] = x;
	CarInfo[vid][cLocationy] = y;
	CarInfo[vid][cLocationz] = z;
	CarInfo[vid][cAngle] = a;
	CarInfo[vid][cColorOne] = color1;
	CarInfo[vid][cColorTwo] = color2;
	CarInfo[vid][cValue] = price;
	CarInfo[vid][cLock] = 0;
	CarInfo[vid][cType] = type;
	CarInfo[vid][cID] = newId;

	//if (CarInfo[vid][cType] > 0)
	//	CarInfo[vid][cID] = -1;
	//else CarInfo[vid][cID] = newId;

	/*if (CarInfo[vid][cType] > 0)
	{

	}*/
	format(sql, sizeof(sql), "INSERT INTO cartrunk (VehID) VALUES (%d)", newId);
	mysql_query(conn, sql);
	vehTrunk[vid][1] = 0;
	vehTrunkAmmo[vid][1] = 0;
	vehTrunk[vid][2] = 0;
	vehTrunkAmmo[vid][2] = 0;
	vehTrunk[vid][3] = 0;
	vehTrunkAmmo[vid][3] = 0;
	vehTrunk[vid][4] = 0;
	vehTrunkAmmo[vid][4] = 0;
	vehTrunkCounter[vid] = 0;
	vehTrunkArmour[vid] = 0;

	return vid;
}
public LoadCar()
{
	new tmpstr[128];
	new tmp;
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM car");
	mysql_query(conn, sql);
	new row;
	cache_get_row_count(row);
	for (new idx = 0; idx < row; idx++)
	{
		new model, Float:pos[4], color[2];
		cache_get_value_name_int(idx, "Model", model);
		cache_get_value_name_int(idx, "ColorOne", color[0]);
		cache_get_value_name_int(idx, "ColorTwo", color[1]);
		cache_get_value_name_float(idx, "Locationx", pos[0]);
		cache_get_value_name_float(idx, "Locationy", pos[1]);
		cache_get_value_name_float(idx, "Locationz", pos[2]);
		cache_get_value_name_float(idx, "Angle", pos[3]);
		new vid = CreateVehicle2(model, pos[0], pos[1], pos[2], pos[3], color[0], color[1], 60000);

		CarInfo[vid][cModel] = model;
		CarInfo[vid][cLocationx] = pos[0];
		CarInfo[vid][cLocationy] = pos[1];
		CarInfo[vid][cLocationz] = pos[2];
		CarInfo[vid][cAngle] = pos[3];
		CarInfo[vid][cColorOne] = color[0];
		CarInfo[vid][cColorTwo] = color[1];

		cache_get_value_name_int(idx, "Owned", tmp); CarInfo[vid][cOwned] = tmp;
		cache_get_value_name(idx, "Owner", tmpstr); format(CarInfo[vid][cOwner], 128, tmpstr);
		cache_get_value_name(idx, "Description", tmpstr); format(CarInfo[vid][cDescription], 128, tmpstr);
		cache_get_value_name_int(idx, "ID", tmp); CarInfo[vid][cID] = tmp;
		cache_get_value_name_int(idx, "Value", tmp); CarInfo[vid][cValue] = tmp;
		cache_get_value_name_int(idx, "License", tmp); CarInfo[vid][cLicense] = tmp;
		cache_get_value_name_int(idx, "Lock", tmp); CarInfo[vid][cLock] = tmp;
		cache_get_value_name_int(idx, "Type", tmp); CarInfo[vid][cType] = tmp;

		/*if (CarInfo[vid][cType] > 0)
			CarInfo[vid][cID] = -1;*/
		
		printf("CarInfo: %d Owner:%s LicensePlate %s", vid, CarInfo[vid][cOwner], CarInfo[vid][cLicense]);
	}

	/*new arrCoords[13][64];
	new strFromFile2[256];
	new File: file = fopen("cars.cfg", io_read);
	if (file)
	{
		new idx = 184;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cDescription], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] = strval(arrCoords[9]);
			CarInfo[idx][cLicense] = strval(arrCoords[10]);
			CarInfo[idx][cOwned] = strval(arrCoords[11]);
			CarInfo[idx][cLock] = strval(arrCoords[12]);
			printf("CarInfo: %d Owner:%s LicensePlate %s", idx, CarInfo[idx][cOwner], CarInfo[idx][cLicense]);
			idx++;
		}
	}*/
	return 1;
}
/*
stock InsertVeh()
{
	new type = 0;
	for (new carid = 0; carid < 184; carid++)
	{
		if (IsAHarvest(carid))
			type = HARVESTVEH;

		if (IsADrugHarvest(carid))
			type = DHARVESTVEH;

		if (IsASmuggleCar(carid))
			type = SMUGGLEVEH;

		if (IsASweeper(carid))
			type = SWEEPERVEH;

		if (IsACopCar(carid))
			type = COPVEH;

		if (IsAnFbiCar(carid))
			type = FBIVEH;

		if (IsNgCar(carid))
			type = NGVEH;

		if (IsAGovernmentCar(carid))
			type = GORVEH;

		if (IsAHspdCar(carid))
			type = HSPDVEH;

		if (IsAnAmbulance(carid))
			type = AMBUVEH;

		if (IsATruck(carid))
			type = TRUCKVEH;

		if (IsAPizzabike(carid))
			type = PIZZAVEH;

		if (IsABus(carid))
			type = BUSVEH;

		if (IsATowcar(carid))
			type = TOWVEH;

		if (type == 0) continue;

		if (CarInfo[carid][cOwned] == 1) continue;

		format(CarInfo[carid][cOwner], 128, "The State");
		if (CarInfo[carid][cModel] == 0)
			CarInfo[carid][cModel] = GetVehicleModel(carid);

		GetVehiclePos(carid, CarInfo[carid][cLocationx], CarInfo[carid][cLocationy], CarInfo[carid][cLocationz]);
		GetVehicleZAngle(carid, CarInfo[carid][cAngle]);

		new sql[500];
		format(sql, sizeof(sql), "INSERT INTO car (Owner, Owned, `Model`, Locationx, Locationy, \
															Locationz, `Angle`, ColorOne, ColorTwo, \
															Description, `Value`, License, `Lock`, Type) \
												VALUES ('%s', %d, %d, %f, %f, %f, %f, %d, %d, '%s', %d, %d, %d, %d)",
												CarInfo[carid][cOwner], CarInfo[carid][cOwned],
												CarInfo[carid][cModel], CarInfo[carid][cLocationx],
												CarInfo[carid][cLocationy], CarInfo[carid][cLocationz],
												CarInfo[carid][cAngle], CarInfo[carid][cColorOne],
												CarInfo[carid][cColorTwo], CarInfo[carid][cDescription],
												CarInfo[carid][cValue], CarInfo[carid][cLicense], CarInfo[carid][cLock], type);
		mysql_query(conn, sql);
		printf("Insert");
	}
}
*/
public LoadProperty()
{
	new sql[200];
	new tmp;
	new Float:tmpf;
	new tmpstr[128];

	for (new i = 0; i < MAX_HOUSES; i++)
	{
		format(sql, sizeof(sql), "SELECT * FROM house WHERE ID = %d", i+1);
		mysql_query(conn, sql);

		new rc;
		cache_get_row_count(rc);
		if (rc == 0) continue;

		new idx;
		cache_get_value_name_int(0, "ID", idx);
		idx -= 1;
		HouseInfo[idx][hID] = idx+1;
		cache_get_value_name_float(0, "Entrancex", tmpf); HouseInfo[idx][hEntrancex] = tmpf;
		cache_get_value_name_float(0, "Entrancey", tmpf); HouseInfo[idx][hEntrancey] = tmpf;
		cache_get_value_name_float(0, "Entrancez", tmpf); HouseInfo[idx][hEntrancez] = tmpf;
		cache_get_value_name_float(0, "Exitx", tmpf); HouseInfo[idx][hExitx] = tmpf;
		cache_get_value_name_float(0, "Exity", tmpf); HouseInfo[idx][hExity] = tmpf;
		cache_get_value_name_float(0, "Exitz", tmpf); HouseInfo[idx][hExitz] = tmpf;
		cache_get_value_name(0, "Owner", tmpstr); format(HouseInfo[idx][hOwner], 128, tmpstr);
		cache_get_value_name(0, "Discription", tmpstr); format(HouseInfo[idx][hDiscription], 128, tmpstr);
		cache_get_value_name_int(0, "Value", tmp); HouseInfo[idx][hValue] = tmp;
		cache_get_value_name_int(0, "Hel", tmp); HouseInfo[idx][hHel] = tmp;
		cache_get_value_name_int(0, "Arm", tmp); HouseInfo[idx][hArm] = tmp;
		cache_get_value_name_int(0, "Int", tmp); HouseInfo[idx][hInt] = tmp;
		cache_get_value_name_int(0, "Lock", tmp); HouseInfo[idx][hLock] = tmp;
		cache_get_value_name_int(0, "Owned", tmp); HouseInfo[idx][hOwned] = tmp;
		cache_get_value_name_int(0, "Rooms", tmp); HouseInfo[idx][hRooms] = tmp;
		cache_get_value_name_int(0, "Rent", tmp); HouseInfo[idx][hRent] = tmp;
		cache_get_value_name_int(0, "Rentabil", tmp); HouseInfo[idx][hRentabil] = tmp;
		cache_get_value_name_int(0, "Takings", tmp); HouseInfo[idx][hTakings] = tmp;
		cache_get_value_name_int(0, "Vec", tmp); HouseInfo[idx][hVec] = tmp;
		if (HouseInfo[idx][hVec] == 457) HouseInfo[idx][hVec] = 411;
		cache_get_value_name_int(0, "Vcol1", tmp); HouseInfo[idx][hVcol1] = tmp;
		cache_get_value_name_int(0, "Vcol2", tmp); HouseInfo[idx][hVcol2] = tmp;
		cache_get_value_name_int(0, "Date", tmp); HouseInfo[idx][hDate] = tmp;
		cache_get_value_name_int(0, "Level", tmp); HouseInfo[idx][hLevel] = tmp;
		cache_get_value_name_int(0, "World", tmp); HouseInfo[idx][hWorld] = tmp;
		printf("HouseInfo:%d Owner:%s hTakings:%d hVec:%d hInt:%d hVWorld:%d", HouseInfo[idx][hID], HouseInfo[idx][hOwner], HouseInfo[idx][hTakings], HouseInfo[idx][hVec], HouseInfo[idx][hInt], HouseInfo[idx][hWorld]);
	}
	
	/*new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmourx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmoury] = strval(arrCoords[10]);
			HouseInfo[idx][hArmourz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
			if (HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hWorld] = strval(arrCoords[29]);

			printf("HouseInfo:%d Owner:%s hTakings %d hVec %d", idx, HouseInfo[idx][hOwner], HouseInfo[idx][hTakings], HouseInfo[idx][hVec]);
			//idx++;

			new sql[2000];
			format(sql, sizeof(sql), "INSERT INTO house \
				(Entrancex, Entrancey, Entrancez, Exitx, Exity, Exitz, Owner, \
				Discription, Value, Hel, Arm, `Int`, `Lock`, Owned, Rooms, `Rent`, \
				Rentabil, Takings, `Vec`, Vcol1, Vcol2, Date, Level, World) \
				VALUES (%f, %f, %f, %f, %f, %f, '%s', '%s', %d, %d, \
				%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d)",
				HouseInfo[idx][hEntrancex],
				HouseInfo[idx][hEntrancey],
				HouseInfo[idx][hEntrancez],
				HouseInfo[idx][hExitx],
				HouseInfo[idx][hExity],
				HouseInfo[idx][hExitz],
				HouseInfo[idx][hOwner],
				HouseInfo[idx][hDiscription],
				HouseInfo[idx][hValue],
				HouseInfo[idx][hHel],
				HouseInfo[idx][hArm],
				HouseInfo[idx][hInt],
				HouseInfo[idx][hLock],
				HouseInfo[idx][hOwned],
				HouseInfo[idx][hRooms],
				HouseInfo[idx][hRent],
				HouseInfo[idx][hRentabil],
				HouseInfo[idx][hTakings],
				HouseInfo[idx][hVec],
				HouseInfo[idx][hVcol1],
				HouseInfo[idx][hVcol2],
				HouseInfo[idx][hDate],
				HouseInfo[idx][hLevel],
				HouseInfo[idx][hWorld]);
			mysql_query(conn, sql);
			idx++;
		}
		fclose(file);
	}*/
	return 1;
}
public LoadBizz()
{
	new sql[3000];
	new tmp;
	new Float:tmpf;
	new tmpstr[128];

	for (new i = 0; i < MAX_BIZ; i++)
	{
		format(sql, sizeof(sql), "SELECT * FROM biz WHERE ID = %d", i+1);
		mysql_query(conn, sql);

		new rc;
		cache_get_row_count(rc);
		if (rc == 0)
			continue;

		new idx;
		cache_get_value_name_int(0, "ID", idx); 
		idx -= 1;
		BizzInfo[idx][bID] = idx+1;
		cache_get_value_name_int(0, "Owned", tmp); BizzInfo[idx][bOwned] = tmp;
		cache_get_value_name(0, "Owner", tmpstr); format(BizzInfo[idx][bOwner], 128, tmpstr);
		cache_get_value_name(0, "Message", tmpstr); format(BizzInfo[idx][bMessage], 128, tmpstr);
		cache_get_value_name(0, "Extortion", tmpstr); format(BizzInfo[idx][bExtortion], 128, tmpstr);
		cache_get_value_name_float(0, "EntranceX", tmpf); BizzInfo[idx][bEntranceX] = tmpf;
		cache_get_value_name_float(0, "EntranceY", tmpf); BizzInfo[idx][bEntranceY] = tmpf;
		cache_get_value_name_float(0, "EntranceZ", tmpf); BizzInfo[idx][bEntranceZ] = tmpf;
		cache_get_value_name_float(0, "ExitX", tmpf); BizzInfo[idx][bExitX] = tmpf;
		cache_get_value_name_float(0, "ExitY", tmpf); BizzInfo[idx][bExitY] = tmpf;
		cache_get_value_name_float(0, "ExitZ", tmpf); BizzInfo[idx][bExitZ] = tmpf;
		cache_get_value_name_int(0, "LevelNeeded", tmp); BizzInfo[idx][bLevelNeeded] = tmp;
		cache_get_value_name_int(0, "BuyPrice", tmp); BizzInfo[idx][bBuyPrice] = tmp;
		cache_get_value_name_int(0, "EntranceCost", tmp); BizzInfo[idx][bEntranceCost] = tmp;
		cache_get_value_name_int(0, "Till", tmp); BizzInfo[idx][bTill] = tmp;
		cache_get_value_name_int(0, "Locked", tmp); BizzInfo[idx][bLocked] = tmp;
		cache_get_value_name_int(0, "Interior", tmp); BizzInfo[idx][bInterior] = tmp;
		cache_get_value_name_int(0, "Products", tmp); BizzInfo[idx][bProducts] = tmp;
		cache_get_value_name_int(0, "MaxProducts", tmp); BizzInfo[idx][bMaxProducts] = tmp;
		cache_get_value_name_int(0, "PriceProd", tmp); BizzInfo[idx][bPriceProd] = tmp;
		cache_get_value_name_int(0, "Type", tmp); BizzInfo[idx][bType] = tmp;
		printf("BizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			BizzInfo[idx][bID],
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bMessage],
			BizzInfo[idx][bEntranceCost],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bProducts],
			BizzInfo[idx][bMaxProducts],
			BizzInfo[idx][bInterior]);
	}

	/*new arrCoords[19][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			BizzInfo[idx][bProducts] = strval(arrCoords[16]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[17]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[18]);
			printf("BizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
				idx,
				BizzInfo[idx][bOwner],
				BizzInfo[idx][bMessage],
				BizzInfo[idx][bEntranceCost],
				BizzInfo[idx][bTill],
				BizzInfo[idx][bProducts],
				BizzInfo[idx][bMaxProducts],
				BizzInfo[idx][bInterior]);
			idx++;
		}
		fclose(file);
	}*/
	return 1;
}
public LoadSBizz()
{
	new sql[3000];
	new tmp;
	new Float:tmpf;
	new tmpstr[128];

	for (new i = 0; i < MAX_SBIZ; i++)
	{
		format(sql, sizeof(sql), "SELECT * FROM sbiz WHERE ID = %d", i+1);
		mysql_query(conn, sql);

		new rc;
		cache_get_row_count(rc);
		if (rc == 0)
			continue;

		new idx;
		cache_get_value_name_int(0, "ID", idx);
		idx -= 1;
		SBizzInfo[idx][sbID] = idx + 1;
		cache_get_value_name_int(0, "Owned", tmp); SBizzInfo[idx][sbOwned] = tmp;
		cache_get_value_name(0, "Owner", tmpstr); format(SBizzInfo[idx][sbOwner], 128, tmpstr);
		cache_get_value_name(0, "Message", tmpstr); format(SBizzInfo[idx][sbMessage], 128, tmpstr);
		cache_get_value_name(0, "Extortion", tmpstr); format(SBizzInfo[idx][sbExtortion], 128, tmpstr);
		cache_get_value_name_float(0, "EntranceX", tmpf); SBizzInfo[idx][sbEntranceX] = tmpf;
		cache_get_value_name_float(0, "EntranceY", tmpf); SBizzInfo[idx][sbEntranceY] = tmpf;
		cache_get_value_name_float(0, "EntranceZ", tmpf); SBizzInfo[idx][sbEntranceZ] = tmpf;
		cache_get_value_name_int(0, "LevelNeeded", tmp); SBizzInfo[idx][sbLevelNeeded] = tmp;
		cache_get_value_name_int(0, "BuyPrice", tmp); SBizzInfo[idx][sbBuyPrice] = tmp;
		cache_get_value_name_int(0, "EntranceCost", tmp); SBizzInfo[idx][sbEntranceCost] = tmp;
		cache_get_value_name_int(0, "Till", tmp); SBizzInfo[idx][sbTill] = tmp;
		cache_get_value_name_int(0, "Locked", tmp); SBizzInfo[idx][sbLocked] = tmp;
		cache_get_value_name_int(0, "Interior", tmp); SBizzInfo[idx][sbInterior] = tmp;
		cache_get_value_name_int(0, "Products", tmp); SBizzInfo[idx][sbProducts] = tmp;
		cache_get_value_name_int(0, "MaxProducts", tmp); SBizzInfo[idx][sbMaxProducts] = tmp;
		cache_get_value_name_int(0, "PriceProd", tmp); SBizzInfo[idx][sbPriceProd] = tmp;
		cache_get_value_name_int(0, "Type", tmp); SBizzInfo[idx][sbType] = tmp;
		printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			SBizzInfo[idx][sbID],
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbInterior]);
	}

	/*new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[12]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[14]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[15]);
			printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
				idx,
				SBizzInfo[idx][sbOwner],
				SBizzInfo[idx][sbMessage],
				SBizzInfo[idx][sbEntranceCost],
				SBizzInfo[idx][sbTill],
				SBizzInfo[idx][sbProducts],
				SBizzInfo[idx][sbMaxProducts],
				SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}*/
	return 1;
}
public LoadDrugSystem()
{
	new arrCoords[1][64];
	new strFromFile2[256];
	new File: file = fopen("drugs_system.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		drugsys[DrugAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}
public LoadMatsSystem()
{
	new arrCoords[1][64];
	new strFromFile2[256];
	new File: file = fopen("mats_system.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		matssys[MatsAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}
public LoadHQLocks()
{
	new arrCoords[4][64];
	new strFromFile2[256];
	new File: file = fopen("hq_locks.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		hqlock[surlock] = strval(arrCoords[0]);
		hqlock[luclock] = strval(arrCoords[1]);
		hqlock[stlock] = strval(arrCoords[2]);
		hqlock[iolock] = strval(arrCoords[3]);
		fclose(file);
	}
	return 1;
}
stock GetVehicleIDFromSQLID(sqlid)
{
	foreach(new i : Vehicle)
	{
		if (CarInfo[i][cID] == sqlid)
			return i;
	}
	return -1;
}
public LoadTrunk()
{
	new tmp, Float:tmpf, sql[500];
	format(sql, sizeof(sql), "SELECT * FROM cartrunk");
	mysql_query(conn, sql);
	new row;
	cache_get_row_count(row);
	for (new idx = 0; idx < row; idx++)
	{
		new vsqlid;
		cache_get_value_name_int(idx, "VehID", vsqlid);
		new vid = GetVehicleIDFromSQLID(vsqlid);
		if (vid != -1)
		{
			cache_get_value_name_int(idx, "Trunk1", tmp); vehTrunk[vid][1] = tmp;
			cache_get_value_name_int(idx, "TrunkAmmo1", tmp); vehTrunkAmmo[vid][1] = tmp;
			cache_get_value_name_int(idx, "Trunk2", tmp); vehTrunk[vid][2] = tmp;
			cache_get_value_name_int(idx, "TrunkAmmo2", tmp); vehTrunkAmmo[vid][2] = tmp;
			cache_get_value_name_int(idx, "Trunk3", tmp); vehTrunk[vid][3] = tmp;
			cache_get_value_name_int(idx, "TrunkAmmo3", tmp); vehTrunkAmmo[vid][3] = tmp;
			cache_get_value_name_int(idx, "Trunk4", tmp); vehTrunk[vid][4] = tmp;
			cache_get_value_name_int(idx, "TrunkAmmo4", tmp); vehTrunkAmmo[vid][4] = tmp;
			cache_get_value_name_int(idx, "TrunkCounter", tmp); vehTrunkCounter[vid] = tmp;
			cache_get_value_name_float(idx, "TrunkArmour", tmpf); vehTrunkArmour[vid] = tmpf;
		}
	}

	/*new arrCoords[13][64];
	new strFromFile2[256];
	new File: file = fopen("trunk.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			vehTrunk[idx][1] = strval(arrCoords[0]);
			vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
			vehTrunk[idx][2] = strval(arrCoords[2]);
			vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
			vehTrunk[idx][3] = strval(arrCoords[4]);
			vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
			vehTrunk[idx][4] = strval(arrCoords[6]);
			vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
			vehTrunkCounter[idx] = strval(arrCoords[8]);
			vehTrunkArmour[idx] = floatstr(arrCoords[9]);
			idx++;
		}
	}*/
	return 1;
}

//FUNCTION+STOCK
//public Float:GetDistanceBetweenPlayers(p1, p2)
//{
//	new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2;
//	if (!IsLogOn(p1) || !IsLogOn(p2))
//	{
//		return -1.00;
//	}
//	GetPlayerPos(p1, x1, y1, z1);
//	GetPlayerPos(p2, x2, y2, z2);
//	return floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) + floatpower(floatabs(floatsub(y2, y1)), 2) + floatpower(floatabs(floatsub(z2, z1)), 2));
//}

public SearchingHit(playerid)
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
			    {
			        GetPlayerName(i, giveplayer, sizeof(giveplayer));
			        searchhit = 1;
			        hitfound = 1;
			        hitidz = i;
			        for(new k=0; k<MAX_PLAYERS; k++)
					{
						if(IsLogOn(k))
						{
				        	if(PlayerInfo[k][pMember] == 8 || PlayerInfo[k][pLeader] == 8)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|__________________ Hitman Agency News __________________|");
				                SendClientMessage(k, COLOR_DBLUE, "*** Incoming Message: A Hit has become available. ***");
				                format(string, sizeof(string), "Person: %s   ID: %d   Value: $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_DBLUE, string);
								SendClientMessage(k, COLOR_YELLOW, "Use Givehit hitmanid, to assign the Contract to one of the Hitmans.");
								SendClientMessage(k, COLOR_WHITE, "|________________________________________________________|");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "   Khong co hop dong nao !");
	}
	return 0;
}

public ExtortionBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(BizzInfo[bizid][bExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(SBizzInfo[bizid][sbExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SendClientMessage(i, COLOR_YELLOW, "Tran dau se bat dau sau 20 giay nua.");
	        }
		}
	}
 	SetTimer("Tran dau bat dau", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRound = 1;
	StartingPaintballRound = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SafeResetPlayerWeapons(i);
	            SafeGivePlayerWeapon(i, 29, 999);
	            TogglePlayerControllable(i, 1);
	            SendClientMessage(i, COLOR_YELLOW, "Tran dau se ket thuc sau 4 phut nua.");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("Ket thuc tran dau", 240000, 0);
	return 1;
}

public PaintballEnded()
{
	new string[256];
	new name[MAX_PLAYER_NAME];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsLogOn(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                format(string,sizeof(string), "** %s won the Paintball Match with %d kills **",name,PaintballWinnerKills);
	                SendClientMessage(i, COLOR_WHITE, string);
	            }
	            SafeResetPlayerWeapons(i);
	            PlayerPaintballing[i] = 0;
	            SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnouncedPaintballRound = 0;
    PaintballRound = 0;
	return 1;
}

public PrepareKarting()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 9;
				SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
				SendClientMessage(i, COLOR_YELLOW, "Kart Race se bat dau trong 20s, Hay di den vach xuat phat.");
	        }
		}
	}
	SetTimer("Bat dau", 20000, 0);
	return 1;
}

public StartKarting()
{
	KartingRound = 1;
	StartingKartRound = 0;
	EndingKartRound = 0;
	FirstKartWinner = 999;
	SecondKartWinner = 999;
	ThirdKartWinner = 999;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 10;
	            SendClientMessage(i, COLOR_YELLOW, "Start, go go go !");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	            SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
	        }
	    }
	}
	SetTimer("Cuoc dua ket thuc", 240000, 0);
	return 1;
}

public KartingEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 0;
	            DisableCheckpoint(i);
	        }
		}
	}
	AnnouncedKartRound = 0;
    KartingRound = 0;
	return 1;
}

public DollahScoreUpdate()
{
	new LevScore;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}

//LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
//{
//    gPlayerUsingLoopingAnim[playerid] = 1;
//    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
//    TextDrawShowForPlayer(playerid,txtAnimHelper);
//}

public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
	  {
		  string[x] += (3^x) * (x % 15);
		  if(string[x] > (0xff))
		  {
			  string[x] -= 256;
		  }
	  }
	return 1;
}

//stock right(source[], len)
//{
//	new retval[MAX_STRING], srclen;
//	srclen = strlen(source);
//	strmid(retval, source, srclen - len, srclen, MAX_STRING);
//	return retval;
//}

stock sscanf(string[], format[], {Float,_}:...)
{
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs();
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if (ch >= '0' && ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return 1;
					}
				}
				while ((ch = string[stringPos]) && ch != ' ');
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					ch,
					num = 0;
				while ((ch = string[stringPos++]))
				{
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						case ' ':
						{
							break;
						}
						default:
						{
							return 1;
						}
					}
				}
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{
				new tmp[25];
				strmid(tmp, string, stringPos, stringPos+sizeof(tmp)-2);
				setarg(paramPos, 0, _:floatstr(tmp));
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != ' ')
					{
						setarg(paramPos, i++, ch);
					}
					if (!i) return 1;
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != ' ')
		{
			stringPos++;
		}
		while (string[stringPos] == ' ')
		{
			stringPos++;
		}
		paramPos++;
	}
	while (format[formatPos] == 'z') formatPos++;
	return format[formatPos];
}

//public Spectator()
//{
//	new string[256];
//	for(new i = 0; i < MAX_PLAYERS; i++)
//	{
//		if(IsLogOn(i))
//		{
//		    if(KickPlayer[i]==1) { KickEx(i); }
//			else if(KickPlayer[i]==2) { Ban(i); }
//			//if(GetPlayerPing(i) >= 500 && PlayerInfo[i][pAdmin] < 1) { KickEx(i); }
//			if(Spectate[i] < 253 && Spectate[i] != 255)
//			{
//				SetPlayerColor(i,COLOR_SPEC);
//				TogglePlayerControllable(i, 0);
//				new targetid = Spectate[i];
//				if(IsLogOn(targetid))
//				{
//				    TogglePlayerSpectating(i, 1);
//				    if(PlayerInfo[i][pAdmin] >= 1)
//				    {
//				        new Float:health;
//					    new name[MAX_PLAYER_NAME];
//					    GetPlayerName(targetid, name, sizeof(name));
//					    GetPlayerHealth(targetid, health);
//					    format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~health:%.1f",name,targetid,health);
//					    GameTextForPlayer(i, string, 2500, 3);
//				    }
//				    if(IsPlayerInAnyVehicle(targetid))
//					{
//					    new carid = GetPlayerVehicleID(targetid);
//					    PlayerSpectateVehicle(i, carid);
//					}
//					else
//					{
//					    PlayerSpectatePlayer(i, targetid);
//					}
//					if(GetPlayerInterior(targetid) == 0)
//					{
//						SetPlayerInterior(i,0);
//					}
//					else if(GetPlayerInterior(targetid) > 0)
//					{
//						SetPlayerInterior(i,GetPlayerInterior(targetid));
//					}
//				}//Targetid connected
//			}
//			if(Spectate[i] == 253)
//			{
//				TogglePlayerControllable(i, 1);
//				TogglePlayerSpectating(i, 0);
//				SetPlayerInterior(i,Unspec[i][sPint]);
//				PlayerInfo[i][pInt] = Unspec[i][sPint];
//				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
//				Unspec[i][sLocal] = 255;
//				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
//				gTeam[i] = PlayerInfo[i][pTeam];
//				SetPlayerToTeamColor(i);
//				PlayerInfo[i][pHospital] = 0;
//				if(PlayerInfo[i][pDonateRank] > 0)
//		        {
//		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
//						SpawnPlayer(i);
//						SetCameraBehindPlayer(i);
//		        }
//		        else
//		        {
//					SpawnPlayer(i);
//					}
//				Spectate[i] = 255;
//			}
//			if(Spectate[i] == 254)
//			{
//				TogglePlayerControllable(i, 1);
//				SetPlayerInterior(i,Unspec[i][sPint]);
//				PlayerInfo[i][pInt] = Unspec[i][sPint];
//				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
//				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
//				Spectate[i] = 255;
//			}
//			if(Spectate[i] == 256)
//			{
//				SetPlayerToTeamColor(i);
//				Spectate[i] = 255;
//			}
//			if(Spectate[i] == 257)
//			{
//				Spectate[i] = 254;
//			}
//		}
//	}
//}

public IsAnInstructor(playerid)
{
	if(IsLogOn(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==11)
		{
		    return 1;
		}
		if(leader==11)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAMember(playerid)
{
	if(IsLogOn(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==5 || member==6 || member==8 || member==14 || member==15 || member==16)
		{
		    return 1;
		}
		if(leader==5 || leader==6 || leader==8 || leader==14 || leader==15 || leader==16)
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsLogOn(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3 || member==17)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3 || leader==17)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAPDMember(playerid)
{
	if(IsLogOn(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1)
		{
		    return 1;
		}
		else if(leader==1)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAnOwnableCar(vehicleid)
{
	//if(vehicleid >= 184 && vehicleid <= 268) { return 1; }
	if (CarInfo[vehicleid][cType] == 0)
		return 1;
	return 0;
}

stock IsAtDealership(playerid)
{
	if(PlayerToPoint(25.0,playerid,2128.0864,-1135.3912,25.5855) || PlayerToPoint(50,playerid,537.3366,-1293.2140,17.2422) || PlayerToPoint(35,playerid,2521.5544,-1524.4504,23.8365) || PlayerToPoint(50,playerid,2155.0146,-1177.3333,23.8211) || PlayerToPoint(50,playerid,299.1723,-1518.6627,24.6007))
		return 1;

	return 0;
}
public IsAtCarrental(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,1696.5543,-1053.4685,23.9063))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsLogOn(playerid))
	{
        if(PlayerToPoint(25.0,playerid,20.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsLogOn(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015))
		{//Dillimore
		    return 1;
		}
	}
	return 0;
}

public IsAtFishPlace(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
		{//Burgershot
		    return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}

public IsAtBar(playerid)
{
    if(IsLogOn(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
		{//In grove street bar (with girlfriend), and in Havanna
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{//PIG Pen
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,-791.016,512.249,1336.41) || PlayerToPoint(10.0,playerid,-799.122,520.988,1336.41))
		{//Nortenos House
		    return 1;
		}
	}
	return 0;
}

//public IsABoat(carid)
//{
//	if (carid == 10 || carid == 11)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAHarvest(carid)
//{
//	if (carid == 155 || carid == 156 || carid == 157 || carid == 158)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsADrugHarvest(carid)
//{
//	if (carid == 159 || carid == 160 || carid == 161 || carid == 162)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsASmuggleCar(carid)
//{
//	if (carid == 163 || carid == 164 || carid == 165)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsASweeper(carid)
//{
//	if ((carid >= 169) && (carid <= 171))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAPlane(carid)
//{
//	if (carid == 38 || carid == 55 || carid == 73 || carid == 167 || carid == 168)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsACopCar(carid)
//{
//	if ((carid >= 16) && (carid <= 38))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAnFbiCar(carid)
//{
//	if ((carid >= 39) && (carid <= 43))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsNgCar(carid)
//{
//	if ((carid >= 1) && (carid <= 11))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAGovernmentCar(carid)
//{
//	if ((carid >= 12) && (carid <= 15) || carid == 168)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAHspdCar(carid)
//{
//	if ((carid >= 44) && (carid <= 51))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsATank(carid)
//{
//	if (carid == 5)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAnAmbulance(carid)
//{
//	if ((carid >= 52) && (carid <= 55))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsATruck(carid)
//{
//	if (carid >= 108 && carid <= 111)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAPizzabike(carid)
//{
//	if (carid >= 102 && carid <= 107)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsABus(carid)
//{
//	if (carid == 59 || carid == 60)
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsATowcar(carid)
//{
//	if (carid >= 74 && carid <= 77)
//	{
//		return 1;
//	}
//	return 0;
//}
//
///*public IsAGangCar(carid)
//{
//if(carid >= 160 && carid <= 163)
//{
//return 1;
//}
//return 0;
//}
//
//public IsAGangCar2(carid)
//{
//if(carid >= 164 && carid <= 167)
//{
//return 1;
//}
//return 0;
//}
//
//public IsAGangCar3(carid)
//{
//if(carid >= 189 && carid <= 191)
//{
//return 1;
//}
//return 0;
//}
//
//public IsAGangCar4(carid)
//{
//if(carid >= 155 && carid <= 159)
//{
//return 1;
//}
//return 0;
//}
//
//public IsAGangCar5(carid)
//{
//if(carid >= 168 && carid <= 171)
//{
//return 1;
//}
//return 0;
//}*/
//
//public IsABike(carid)
//{
//	if ((carid >= 102 && carid <= 107) || (carid >= 112 && carid <= 130) || (carid >= 262 && carid <= 267))
//	{
//		return 1;
//	}
//	return 0;
//}
//
//public IsAOBike(carid)
//{
//	if ((carid >= 237 && carid <= 267))
//	{
//		return 1;
//	}
//	return 0;
//}

public IsABoat(carid)
{
	new model = GetVehicleModel(carid);
	if (model == 472 || model == 473 || model == 493 || model == 595 || model == 484 || model == 430 || model == 453 || model == 452 || model == 446 || model == 454)
		return 1;
	return 0;
}

public IsAHarvest(carid)
{
	if (CarInfo[carid][cType] == HARVESTVEH)
	{
		return 1;
	}
	return 0;
}

public IsADrugHarvest(carid)
{
	if (CarInfo[carid][cType] == DHARVESTVEH)
	{
		return 1;
	}
	return 0;
}

public IsASmuggleCar(carid)
{
	if (CarInfo[carid][cType] == SMUGGLEVEH)
	{
		return 1;
	}
	return 0;
}

public IsASweeper(carid)
{
	if (CarInfo[carid][cType] == SWEEPERVEH)
	{
	    return 1;
	}
	return 0;
}

public IsAPlane(carid)
{
	if (GetVehicleModel(carid) == 592 || GetVehicleModel(carid) == 577 || GetVehicleModel(carid) == 511 || GetVehicleModel(carid) == 512 || GetVehicleModel(carid) == 593 || GetVehicleModel(carid) == 520 || GetVehicleModel(carid) == 553 || GetVehicleModel(carid) == 476 || GetVehicleModel(carid) == 519 || GetVehicleModel(carid) == 460 || GetVehicleModel(carid) == 513)
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)
{
	if (CarInfo[carid][cType] == COPVEH)
	{
		return 1;
	}
	return 0;
}
forward IsADoCCar(carid);
public IsADoCCar(carid)
{
	if (CarInfo[carid][cType] == DOCVEH)
	{
		return 1;
	}
	return 0;
}
public IsAnFbiCar(carid)
{
	if (CarInfo[carid][cType] == FBIVEH)
	{
	    return 1;
	}
	return 0;
}

public IsNgCar(carid)
{
	if (CarInfo[carid][cType] == NGVEH)
	{
	    return 1;
	}
	return 0;
}

public IsAGovernmentCar(carid)
{
	if (CarInfo[carid][cType] == GORVEH)
	{
		return 1;
	}
	return 0;
}

public IsAHspdCar(carid)
{
	if (CarInfo[carid][cType] == HSPDVEH)
	{
	    return 1;
	}
	return 0;
}

public IsATank(carid)
{
	if (GetVehicleModel(carid) == 432)
		return 1;

	return 0;
}

public IsAnAmbulance(carid)
{
	if (CarInfo[carid][cType] == AMBUVEH)
	{
		return 1;
	}
	return 0;
}

public IsATruck(carid)
{
	if (CarInfo[carid][cType] == TRUCKVEH)
	{
		return 1;
	}
	return 0;
}

public IsAPizzabike(carid)
{
	if (CarInfo[carid][cType] == PIZZAVEH)
	{
		return 1;
	}
	return 0;
}

public IsABus(carid)
{
	if (CarInfo[carid][cType] == BUSVEH)
	{
		return 1;
	}
	return 0;
}

public IsATowcar(carid)
{
	if (CarInfo[carid][cType] == TOWVEH)
	{
		return 1;
	}
	return 0;
}
forward IsANewsCar(carid);
public IsANewsCar(carid)
{
	if (CarInfo[carid][cType] == NEWSVEH)
		return 1;
	return 0;
}
forward IsATaxiCar(carid);
public IsATaxiCar(carid)
{
	if (CarInfo[carid][cType] == TAXIVEH)
		return 1;
	return 0;
}
forward IsAHitmanCar(carid);
public IsAHitmanCar(carid)
{
	if (CarInfo[carid][cType] == HITMANVEH)
		return 1;
	return 0;
}
forward IsARentCar(carid);
public IsARentCar(carid)
{
	if (CarInfo[carid][cType] == RENTVEH)
		return 1;
	return 0;
}
forward IsAKartCar(carid);
public IsAKartCar(carid)
{
	if (CarInfo[carid][cType] == KARTVEH)
		return 1;
	return 0;
}
forward IsASchoolCar(carid);
public IsASchoolCar(carid)
{
	if (CarInfo[carid][cType] == SCHOOLVEH)
		return 1;
	return 0;
}
/*public IsAGangCar(carid)
{
if(carid >= 160 && carid <= 163)
	{
		return 1;
	}
	return 0;
}

public IsAGangCar2(carid)
{
if(carid >= 164 && carid <= 167)
	{
		return 1;
	}
	return 0;
}

public IsAGangCar3(carid)
{
if(carid >= 189 && carid <= 191)
	{
		return 1;
	}
	return 0;
}

public IsAGangCar4(carid)
{
if(carid >= 155 && carid <= 159)
	{
		return 1;
	}
	return 0;
}

public IsAGangCar5(carid)
{
if(carid >= 168 && carid <= 171)
	{
		return 1;
	}
	return 0;
}*/

public IsABike(carid)
{
	new vmd = GetVehicleModel(carid);
	if (vmd == 448 || vmd == 461 || vmd == 462 || vmd == 463 || vmd == 468
		|| vmd == 471 || vmd == 481 || vmd == 509 || vmd == 510 || vmd == 521
		|| vmd == 522 || vmd == 523 || vmd == 581 || vmd == 586)
		return 1;
	return 0;
}

stock IsABicycle(vid)
{
	new model = GetVehicleModel(vid);
	switch (model)
	{
	case 481: return 1;
	case 509: return 1;
	case 510: return 1;
	default: return 0;
	}
	return 0;
}
//public IsAOBike(carid)
//{
//if((carid >= 237 && carid <= 267))
//	{
//		return 1;
//	}
//	return 0;
//}

public JoinChannel(playerid, number, line[])
{
    if(IsLogOn(playerid))
	{
	    if(strcmp(IRCInfo[number][iPassword],line, true ) == 0 )
		{
	        JoinChannelNr(playerid, number);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "   Sai mat khau!");
	    }
	}
	return 1;
}

public JoinChannelNr(playerid, number)
{
	if(IsLogOn(playerid))
	{
	    new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayersChannel[playerid] < 999)
	    {
			format(string, sizeof(string), "* %s Da roi khoi Channel.", sendername);
			SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	    }
		new channel; channel = number; channel += 1;
	    PlayersChannel[playerid] = number;
	    IRCInfo[PlayersChannel[playerid]][iPlayers] += 1;
    	new wstring[128];
		format(string, sizeof(string), "%s", sendername);
		strmid(wstring, string, 0, strlen(string), 255);
		if(strcmp(IRCInfo[number][iAdmin],wstring, true ) == 0 )
		{
		    format(string, sizeof(string), "* Ban da tham gia Channel IRC %d voi tu cach Admin.", channel);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
		    format(string, sizeof(string), "* Ban da tham gia Channel IRC %d, Admin: %s.", channel, IRCInfo[number][iAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		format(string, sizeof(string), "MOTD: %s.", IRCInfo[number][iMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "* %s da tham gia Channel.", sendername);
		SendIRCMessage(number, COLOR_GREEN, string);
	}
	return 1;
}
stock ClearPlayer(playerid)
{
	CADuty[playerid] = 0;

	SetPVarInt(playerid, "FInviteOffer", -1);

	LastHitGate[playerid] = -1;

	TimeNails[playerid] = -1;
	SearchNails[playerid] = 0;

	DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
	DriverLicenseTime[playerid] = 0.0;

	CarCheatAttemping[playerid] = 0;

	DOCDelay[playerid] = 0;
	DOCCheck[playerid] = 0;

	LastEntrance[playerid][0] = 0;
	LastEntrance[playerid][1] = 0;
	LastEntrance[playerid][2] = 0;

	Tazered[playerid] = 0;
	Tazering[playerid] = 0;
	WearTazer[playerid] = 0;

	PFind[playerid] = -1;

	TruckPos[playerid][0] = 0;
	TruckPos[playerid][1] = 0;
	TruckPos[playerid][2] = 0;

	TruckTime[playerid] = 0;

	SpecPlayer[playerid] = -1;
	Spectating[playerid] = 0;
	Spectated[playerid] = 0;

	CallMedic[playerid] = 0;
	MedicCaller[playerid] = -1;
	Dying[playerid] = 0;
	SetPVarInt(playerid, "CantUseAnim", 0);
	DyingTimeOut[playerid] = 0;
	MedicPos[playerid][0] = 0;
	MedicPos[playerid][1] = 0;
	MedicPos[playerid][2] = 0;

	DDTime[playerid] = 0;
	DrugDealing[playerid] = 0;
	DrugDealer[playerid] = 0;
	CarDD[playerid] = -1;
	OldDD[playerid] = -1;
	ChangeDD[playerid] = 0;
	CoopDD[playerid] = -1;

	HitTimes[playerid] = 0;

	Escorted[playerid] = 0;
	EscortedPlayer[playerid] = -1;
	Escorting[playerid] = 0;

	SetPVarInt(playerid, "OfferBy", -1);
	SetPVarInt(playerid, "OfferG", 0);
	SetPVarInt(playerid, "OfferA", 0);
	SetPVarInt(playerid, "OfferM", 0);
	SetPVarInt(playerid, "OfferP", 0);
	SetPVarInt(playerid, "OfferType", 0);

	SelectChar[playerid] = 0; HidePM[playerid] = 0; PhoneOnline[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
	ApprovedLawyer[playerid] = 0; CallLawyer[playerid] = 0; WantLawyer[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; SpawnChange[playerid] = 1;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0; Rope[playerid] = 0;
	STDPlayer[playerid] = 0; SexOffer[playerid] = 999; SexPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999; TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0;
	RegistrationStep[playerid] = 0;
	OnCK[playerid] = 999; GettingCK[playerid] = 999;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; PlayerInfo[playerid][pHospital] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; WantedLevel[playerid] = 0; togtactical[playerid] = 0; togswat[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; SchoolSpawn[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; JobDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCount[playerid] = 0;
	WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999; WritingLine[playerid] = 0; BringingPaper[playerid] = 0; GotPaper[playerid] = 0;
	PaperOffer[playerid] = 999; /*ConsumingMoney[playerid] = 0;*/
	ScriptMoney[playerid] = 0; //ScriptMoneyUpdated[playerid] = 0;
	for (new c = 0; c<13; c++) ScriptWeapons[playerid][c] = 0;
	//ScriptWeaponsUpdated[playerid] = 0;
	gLastCar[playerid] = 0; FirstSpawn[playerid] = 1;
	gOoc[playerid] = 0; gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gSpeedo[playerid] = 0; gGas[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerAccount[playerid] = 0;
	gPlayerSpawned[playerid] = 0; PlayerKarting[playerid] = 0; PlayerInKart[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0; TutTime[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = dollah; NoFuel[playerid] = 0;
	HireCar[playerid] = 299; GangCar[playerid] = 512; PlayersChannel[playerid] = 999;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0; PlayerOnMission[playerid] = 0; MissionCheckpoint[playerid] = 0;
	WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	SafeGivePlayerMoney(playerid, PlayerInfo[playerid][pCash]); togtactical[playerid] = 0; togswat[playerid] = 0; togauthorizeswat = 0; togauthorizetactical = 0;
	PizzaCallTime[playerid] = 0; bPizza[playerid] = 0; sPizza[playerid] = 0; gEngine[playerid] = 0; FarmerVar[playerid] = 0; FarmerPickup[playerid][0] = 0; SmugglerWork[playerid] = 0; SmuggledDrugs[playerid] = 0; JustDied[playerid] = 0; KnockedDown[playerid] = 0; UnidentifedCall[playerid] = 0;
	LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; UsingDrugs[playerid] = 0; AfterTutorial[playerid] = 0;
	OwnableCarOffer[playerid] = 999; OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0; BlindFold[playerid] = 0; PlayerIsSweeping[playerid] = 0; AdminDuty[playerid] = 0; JustReported[playerid] = 0; PlayerNeedsHelp[playerid] = 0; AdminSpec[playerid] = 0; IsSmoking[playerid] = 0; UsingSmokeAnim[playerid] = 0; ReduceTime[playerid] = 0;
	CreatingGun[playerid] = 0; CreatingGunAmmo[playerid] = 0; CreatingGunPrice[playerid] = 0; IsPuttingMaterials[playerid] = 0; IsTakingGun[playerid] = 0;
	InAFoodPlace[playerid] = 0;
	PlayerInfo2[HouseEntered][playerid] = 255;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pFMember] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	//PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pJackSkill] = 0;
	PlayerInfo[playerid][pCarSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pPlantSkill] = 0;
	PlayerInfo[playerid][pTruckSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pHealth] = 50.0;
	PlayerInfo[playerid][pPos_x] = 1612.3240;
	PlayerInfo[playerid][pPos_y] = -2330.1670;
	PlayerInfo[playerid][pPos_z] = 13.5469;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = TEAMCIVILLAIN;
	PlayerInfo[playerid][pModel] = 7;
	new randphone = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPcarkey][0] = -1;
	PlayerInfo[playerid][pPcarkey][1] = -1;
	PlayerInfo[playerid][pPcarkey][2] = -1;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pGangKey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGun][0] = 0;
	PlayerInfo[playerid][pGun][1] = 0;
	PlayerInfo[playerid][pGun][2] = 0;
	PlayerInfo[playerid][pGun][3] = 0;
	PlayerInfo[playerid][pAmmo][0] = 0;
	PlayerInfo[playerid][pAmmo][1] = 0;
	PlayerInfo[playerid][pAmmo][2] = 0;
	PlayerInfo[playerid][pAmmo][3] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pWatch] = 0;
	PlayerInfo[playerid][pCrashed] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pMissionNr] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pVirWorld] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pRoadblock] = 0;
	PlayerInfo[playerid][pFishTool] = 0;
	for (new i = 0; i < 5; i++)
	{
		strmid(PlayerNote[playerid][i], "None", 0, strlen("None"), 255);
		PlayerInfo[playerid][pNotes][i] = 0;
	}
	PlayerInfo[playerid][pInvWeapon] = 0;
	PlayerInfo[playerid][pInvAmmo] = 0;
	PlayerInfo[playerid][pLighter] = 0;
	PlayerInfo[playerid][pCigarettes] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pHideNumber] = 0;
	PlayerInfo[playerid][pSpeaker] = 0;
	PlayerInfo[playerid][pLocked] = 0;
	//PlayerInfo[playerid][pSQLID] = 0;
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	PlayerInfo2[HouseEntered][playerid] = 255;
	foreach(new h : Vehicle)
	{
		SetVehicleParamsForPlayer(h, playerid, 0, CarInfo[h][cLock]);
	}
	return 1;
}
public ClearCK(ck)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "No-one");
	strmid(CKInfo[ck][cSendername], string, 0, strlen(string), 255);
	strmid(CKInfo[ck][cGiveplayer], string, 0, strlen(string), 255);
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}

public ClearMarriage(playerid)
{
	if(IsLogOn(playerid))
	{
	    new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}

public ClearPaper(paper)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], string, 0, strlen(string), 255);
	SavePapers();
	return 1;
}

public ClearFamily(family)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
	        if(PlayerInfo[i][pFMember] == family)
	        {
	            SendClientMessage(i, COLOR_WHITE, "* Family ban dang tham gia da bi xoa boi Leader, ban bi da bi kick ra khoi Family");
	            PlayerInfo[i][pFMember] = 255;
	        }
	    }
	}
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	FamilyInfo[family][fTaken] = 0;
	strmid(FamilyInfo[family][fName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][fMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][fLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "0xFF000069");
	strmid(FamilyInfo[family][fColor], string, 0, strlen(string), 255);
	FamilyInfo[family][fMembers] = 0;
	FamilyInfo[family][fHouseHQ] = 0;
	for (new i = 0; i < 6; i++)
	{
		format(FamilyTitle[family][i], 25, "No Title");
	}
	SaveFamilies();
	return 1;
}

public ClearCrime(playerid)
{
	if(IsLogOn(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsLogOn(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsLogOn(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsLogOn(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsLogOn(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsLogOn(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsLogOn(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[256];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "XSKT: Con so may man ngay hom nay la: %d.", number);
    OOCOff(COLOR_WHITE, string);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "XSKT: %s da trung giai doc dac co gia tri len toi $%d.", winner, Jackpot);
					OOCOff(COLOR_DBLUE, string);
					format(string, sizeof(string), "* Ban da trung giai doc dac co gia tri $%d.", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, string);
					//ConsumingMoney[i] = 1;
					SafeGivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_WHITE, "* Ban da khong trung thuong lan nay, chuc may man lan sau.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "XSKT: Giai thuong bat dau lai tu $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "XSKT: Giai thuong duoc nang len thanh $%d.", Jackpot);
		OOCOff(COLOR_DBLUE, string);
	}
	return 1;
}

public GateClose(playerid)
{
      MoveObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
      PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
      return 1;
}

public GateClose2()
{
      MoveObject(armygate1,2720.3772, -2409.7523, 12.6, 2.5);
      MoveObject(armygate2,2720.3772, -2508.3069, 12.6, 2.5);
      return 1;
}

public GateClose3()
{
      MoveObject(fbigate, 1534.9020,-1451.5979,14.4882, 1.5);
      return 1;
}

public GateClose4()
{
      MoveObject(hspdgate, 1643.3379,-1714.9338,15.3067, 1.5);
      return 1;
}

public GateClose5()
{
      DestroyObject( pdgate3 );
      pdgate2 = CreateObject(968,1544.700317,-1630.735717,13.096980,-1.000000,-91.000000,269.972869);
      return 1;
}

public GateClose6()
{
      MoveObject(lucianogate, 1246.0033,-767.3727,91.1473, 1.5);
	  return 1;
}

//public GateClose7()
/*public GateClose7()
{
      MoveObject(iorgate, 2796.1454,-1600.2020,10.1297, 1.5);
	  return 1;
}*/

public elevator1(playerid)
{
      SetPlayerPos(playerid,1174.9591,-1374.8761,23.9736);
      return 1;
}

public elevator2(playerid)
{
      SetPlayerPos(playerid,1174.9100,-1361.7330,13.9876);
	  return 1;
}
forward ClearFirstSpawn(playerid);
public ClearFirstSpawn(playerid)
{
	SetPVarInt(playerid, "SpecialCase", 0);
	return 1;
}
public SetPlayerSpawn(playerid)
{
	TextDrawHideForPlayer(playerid, TDLoading);
	TextDrawShowForPlayer(playerid, TDPBank[playerid]);
	TogglePlayerSpawn(playerid, false, 5);
	UpdateWantedLevel(playerid);
	SetPlayerWantedLevel(playerid, WantedLevel[playerid]);
	SetPVarInt(playerid, "SpecialCase", 1);
	SetTimerEx("ClearFirstSpawn", 2000, 0, "i", playerid);

	new rand;
	new house = PlayerInfo[playerid][pPhousekey];
	if (PlayerInfo[playerid][pChar] > 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	if (Spectating[playerid] == 1)
	{
		SetPlayerPos(playerid, SpecPos[playerid][0], SpecPos[playerid][1], SpecPos[playerid][2]);
		SetPlayerInterior(playerid, SpecInt[playerid]);
		SetVirtualWorld(playerid, SpecVWorld[playerid]);
		if (Spectated[SpecPlayer[playerid]] > 0) Spectated[SpecPlayer[playerid]]--;
		SpecPlayer[playerid] = -1;
		Spectating[playerid] = 0;
		return 1;
	}
	else if (Dying[playerid] == 1)
	{
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
		GameTextForPlayer(playerid, "~r~Bi thuong~n~~w~Go /dichvu capcuu de goi Cuu Thuong den", 5000, 3);
		SetPlayerPos(playerid, GetPVarFloat(playerid, "DeathX"), GetPVarFloat(playerid, "DeathY"), GetPVarFloat(playerid, "DeathZ"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "DeathAngle"));
		SetVirtualWorld(playerid, GetPVarInt(playerid, "DeathVW"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "DeathInt"));
		return 1;
	}
	else if(PlayerInfo[playerid][pTut] == 0)
	{
		gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
		SetPlayerInterior(playerid, 3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerPos(playerid, 330.6825,163.6688,1014.1875);
		SetPlayerFacingAngle(playerid, 280);
		TogglePlayerControllable(playerid, 0);
		RegistrationStep[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, "Chao mung ban den voi may chu Los Angeles Roleplay. Truoc tien ban can tra loi mot vai cau hoi");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Cau hoi dau tien: Ban la 'Nam' hay 'Nu'? (Go cau tra loi).");
		return 1;
	}
	else if(PlayerPaintballing[playerid] != 0)
	{
		SafeResetPlayerWeapons(playerid);
      SafeGivePlayerWeapon(playerid, 29, 999);
		rand = random(sizeof(PaintballSpawns));
		SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
		return 1;
	}
	else if(PlayerInfo[playerid][pJailed] == 1)
	{
		//SetPlayerSkin(playerid, 50);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPos(playerid,264.6288,77.5742,1001.0391+1);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Chua hoan thanh an phat, tro ve nha tu.");
		return 1;
	}
	else if(PlayerInfo[playerid][pJailed] == 2)
	{
		SetPlayerSkin(playerid, 50);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
		SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
		return 1;
	}
	else if (PlayerInfo[playerid][pJailed] == 3)
	{
		SetPlayerSkin(playerid, 50);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		new docroom = PlayerInfo[playerid][pJailRoom];
		SetPlayerPos(playerid, DocArrestIn[docroom][0], DocArrestIn[docroom][1], DocArrestIn[docroom][2]+1.0);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Chua hoan thanh an phat, tro ve nha tu.");
		return 1;
	}
	else if (PlayerInfo[playerid][pHospital] == 1 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0)
	{
		if(FirstSpawn[playerid] == 0)
		{
			DyingTimeOut[playerid] = 0;
			Dying[playerid] = 0;
			SetPVarInt(playerid, "CantUseAnim", 0);
			PlayerInfo[playerid][pDeaths] += 1;
			SetPlayerHealth(playerid, 25.0);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			rand = random(sizeof(gMedicSpawns));
			SetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Bay gio ban can nghi ngoi...", 30000, 3);
			JustDied[playerid] = 1;
			MedicTime[playerid] = 1;
			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);

			if (PlayerInfo[playerid][pDonateRank] > 0) NeedMedicTime[playerid] = 30;
			else NeedMedicTime[playerid] = 40;

			PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
			return 1;
		   /*new string[256];
		   new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
			SafeGivePlayerMoney(playerid, -cut);
			format(string, sizeof(string), "DOC: Your Medical Bill comes to $%d, Have a nice day.", cut);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
			MedicBill[playerid] = 0;
			MedicTime[playerid] = 0;
			NeedMedicTime[playerid] = 0;*/
		}
	}
	else if(JustDied[playerid] == 1)
	{
		if(GetPlayerVirtualWorld(playerid) != 0 || PlayerInfo[playerid][pVirWorld] != 0)
		{
		   SetVirtualWorld(playerid, 0);
		   PlayerInfo[playerid][pVirWorld] = 0;
		}
		SetPlayerPos(playerid, 1182.5638,-1323.5256,13.5790);
		SetPlayerFacingAngle(playerid, 270.0);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		return 1;
	}
	//printf("Crash: %d Tut: %d pTut: %d Regis %d AT %d FirstSpawn %d", PlayerInfo[playerid][pCrashed], TutTime[playerid], PlayerInfo[playerid][pTut], RegistrationStep[playerid], AfterTutorial[playerid], FirstSpawn[playerid]);
	else if(PlayerInfo[playerid][pCrashed] == 1)
	{
		if(TutTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && RegistrationStep[playerid] == 0 && AfterTutorial[playerid] == 0 && FirstSpawn[playerid] == 0)
		{
			SetPlayerToTeamColor(playerid);
		   SetVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
		   SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
		   SetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
		   SendClientMessage(playerid, COLOR_WHITE, "Bi crashed, tro lai vi tri cu.");
		   GameTextForPlayer(playerid, "~p~Crashed~n~~w~tro lai vi tri cu", 5000, 1);
			PlayerInfo[playerid][pCrashed] = 0;
			return 1;
		}
	}
	else if(house != 255 && GetPVarInt(playerid, "LoginBack") == 0)
	{
		if(SpawnChange[playerid]) //If 1, then you get to your house, else spawn somewhere else
		{
			//SetPlayerInterior(playerid,HouseInfo[house][hInt]);
			//SetVirtualWorld(playerid,HouseInfo[house][hWorld]);
			//SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity], HouseInfo[house][hExitz]);
			//PlayerInfo[playerid][pLocal] = house;
			//PlayerInfo2[HouseEntered][playerid] = house;
			//PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez]); // Warp the player
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
	}
	else if ((PlayerInfo[playerid][pLeader] == 7) && GetPVarInt(playerid, "LoginBack") == 0)//Mayor spawn
	{
		SetPlayerToTeamColor(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid, 356.2998,151.9914,1025.7891);
		PlayerInfo[playerid][pInt] = 3;
		PlayerInfo[playerid][pLocal] = 241;
		return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) && GetPVarInt(playerid, "LoginBack") == 0)//Police Force spawn
	{
		SetPlayerToTeamColor(playerid);
		SetPlayerInterior(playerid,6);
		rand = random(sizeof(gCopPlayerSpawns));
		SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
		SetPlayerFacingAngle(playerid, 270.0);
		PlayerInfo[playerid][pInt] = 6;
		return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) && GetPVarInt(playerid, "LoginBack") == 0)//FBI spawn
	{
		SetPlayerToTeamColor(playerid);
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid, 299.7097,183.1322,1007.1719);
		SetPlayerFacingAngle(playerid, 90);
		PlayerInfo[playerid][pInt] = 3;
		return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) && GetPVarInt(playerid, "LoginBack") == 0)//National Guard spawn
	{
		SetPlayerToTeamColor(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2731.5229,-2451.3643,17.5937);
		PlayerInfo[playerid][pInt] = 0;
		return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) && GetPVarInt(playerid, "LoginBack") == 0)//Fire/Ambulance spawn
	{
		SetPlayerToTeamColor(playerid);
		SetPlayerPos(playerid, 1180.2388,-1331.6196,1006.4028);
		SetPlayerInterior(playerid,6);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 6;
		return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) && GetPVarInt(playerid, "LoginBack") == 0) //Hitman spawn
	{
	   SetPlayerToTeamColor(playerid);
		SetPlayerPos(playerid, 1102.7017,-299.0774,73.9922);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	   return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) && GetPVarInt(playerid, "LoginBack") == 0) //News spawn
	{
	   SetPlayerToTeamColor(playerid);
	   SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid, 355.7899,204.0173,1008.3828);
		PlayerInfo[playerid][pInt] = 3;
		SafeGivePlayerWeapon(playerid, 43, 20);
	   return 1;
	}
	else if ((PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) && GetPVarInt(playerid, "LoginBack") == 0) //Taxi Cab Company spawn
	{
	   SetPlayerToTeamColor(playerid);
		SetPlayerPos(playerid, 1754.99,-1894.19,13.55);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	   return 1;
	}
	else if (gTeam[playerid] == TEAMGOV && GetPVarInt(playerid, "LoginBack") == 0)
	{
		SetPlayerToTeamColor(playerid);
		rand = random(sizeof(gMedPlayerSpawns));
		SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
		SetPlayerFacingAngle(playerid, 270.0);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		return 1;
	}
	else if (PlayerInfo[playerid][pFMember] != 255 && GetPVarInt(playerid, "LoginBack") == 0)
	{
		new family = PlayerInfo[playerid][pFMember];
		new fhouseid = FamilyInfo[family][fHouseHQ];
		if (fhouseid != -1)
		{
			SetPlayerPos(playerid, HouseInfo[fhouseid][hEntrancex], HouseInfo[fhouseid][hEntrancey], HouseInfo[fhouseid][hEntrancez]); // Warp the player
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
	}
	else if (GetPVarInt(playerid, "FirstSpawn") == 1)
	{
		SetPlayerPos(playerid, 1612.3240, -2330.1670, 13.5469);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerFacingAngle(playerid, 0);
	}
	else
	{
		if (GetPVarInt(playerid, "LoginBack") == 1)
		{
			GameTextForPlayer(playerid, "~b~Relog", 8000, 1);
			SetPVarInt(playerid, "LoginBack", 0);
		}
		SetVirtualWorld(playerid, PlayerInfo[playerid][pVirWorld]);
		SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
		SetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
		SetPlayerFacingAngle(playerid, 0);
	}
	return 1;
}

public CKLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PayLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public KickLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public BanLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public RefreshMenuHeader(playerid,Menu:menu,text[])
{
	SetMenuColumnHeader(menu,0,text);
	ShowMenuForPlayer(menu,playerid);
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(gTeam[i] == TEAMGOV)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //bullit
		}
		case 70:
		{
			return 130000; //infurnus
		}
		case 71:
		{
			return 100000; //turismo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()
{
	new string[256];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsLogOn(j))
	    {
	        /*SetVehicleParamsForPlayer(99, j, 0, 0);
	        SetVehicleParamsForPlayer(100, j, 0, 0);
	        SetVehicleParamsForPlayer(101, j, 0, 0);
	        SetVehicleParamsForPlayer(102, j, 0, 0);
	        SetVehicleParamsForPlayer(103, j, 0, 0);
	        SetVehicleParamsForPlayer(104, j, 0, 0);
	        SetVehicleParamsForPlayer(105, j, 0, 0);
	        SetVehicleParamsForPlayer(106, j, 0, 0);
	        SetVehicleParamsForPlayer(107, j, 0, 0);
	        SetVehicleParamsForPlayer(108, j, 0, 0);
	        SetVehicleParamsForPlayer(109, j, 0, 0);*/
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(STDPlayer[j]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_WHITE, "* Mat 4 mau do STD .");
			}
			else if(STDPlayer[j]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_WHITE, "* Mat 8 mau do STD.");
			}
			else if(STDPlayer[j]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 20.0);
			    SendClientMessage(j, COLOR_WHITE, "* Mat 12 mau do STD.");
			}

			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(string, sizeof(string), "You are in debt, you have till next Time Check to get: $%d or you go to jail.", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	foreach(new c : Vehicle)
	{
		foreach(new i : Player)
		{
			if(IsLogOn(i))
			{
				if (PlayerInfo[i][pJob] == 5)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
		if (gLastDriver[c] == 301)
		{
//			CarRespawn(c);
		}
		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//foundowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

//public CarTow(carid)
/*public CarTow(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	return 1;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn2(carid);
	gLastDriver[carid] = 299;
	return 1;
}*/

public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}

public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(!IsAPlane(carid))
			{
				SetVehicleParamsForPlayer(carid,i,0,0);
			}
		}
	}
}

public InitLockDoors(playerid)
{
	foreach(new i : Vehicle)
	{
		if (gCarLock[i] == 1)
		{
			SetVehicleParamsForPlayer(i, playerid, 0, 1);
		}
	}
	return 1;
}

public SetupPlayerForClassSelection(playerid)
{
	/*switch (gTeam[playerid])
	{
		case TEAM_BLUE:
		{
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,323.4,305.6,999.1);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,323.4-1.5-1.0,305.6,999.1+0.7);
			SetPlayerCameraLookAt(playerid,323.4-1.0,305.6,999.1+0.7);

		}
		case TEAM_ADMIN:
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,-2654.4,1424.2,912.4);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,-2654.4-1.5,1424.2,912.4+0.7);
			SetPlayerCameraLookAt(playerid,-2654.4,1424.2,912.4+0.7);
		}
		default:
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,361.8270,174.0347,1008.3893);
			SetPlayerFacingAngle(playerid,90);
		    SetPlayerCameraPos(playerid, 361.7270,169.0347,1008.3893);
		    SetPlayerCameraLookAt(playerid,361.8270,174.0347,1008.3893);
		}
	}*/
}

public SetPlayerTeamFromClass(playerid,classid)
{
 	/*if (classid >= 1 && classid <= 14)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}*/
}

public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsLogOn(playerid))
	{
	   PlayerInfo[playerid][pCrimes] += 1;
	   new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsLogOn(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "You've commited a crime: %s. Reporter: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_DARKNICERED, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if (WantedLevel[playerid] >= 1) { if (gTeam[playerid] == TEAMCIVILLAIN) { gTeam[playerid] = TEAMVILLAIN; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "Muc Do Truy Na: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsLogOn(i))
					{
					    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
					    {
							format(cbjstore, sizeof(turnmes), "HQ: All Units APB: Reporter: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "HQ: Crime: %s, Suspect: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
						}
					}
				}
			}
		}
	}//not connected
}

public SetPlayerCriminalEx(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsLogOn(playerid))
	{
	   PlayerInfo[playerid][pCrimes] += 1;
	   new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsLogOn(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "You've commited a crime: %s. Reporter: %s.",reason,turner);
		//SendClientMessage(playerid, COLOR_DARKNICERED, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == TEAMCIVILLAIN) { gTeam[playerid] = TEAMVILLAIN; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "Muc Do Truy Na: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsLogOn(i))
					{
					    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
					    {
							format(cbjstore, sizeof(turnmes), "HQ: All Units APB: Reporter: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "HQ: Crime: %s, Suspect: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
						}
					}
				}
			}
		}
	}//not connected
}

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsLogOn(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsLogOn(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "SMS: %s, Because you %s, you are no longer a Criminal, Sender: MOLE (555)",turned,reason);
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsLogOn(i))
			{
			    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
			    {
					format(crbjstore, sizeof(crbjstore), "HQ: Tat ca don vi - Dong chi %s da hoan thanh nhiem vu",turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "HQ: Doi tuong %s da duoc xu ly, toi danh: %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}

//public GlobalHackCheck()
//{
//	/*
//	 *               DUCK anticheat v1.0
//	 *              by Luk0r & Alex_Raven
//	 *
//	 *  This function is called every second the check each
//	 *  player's money/weapons to ensure they're not hacking
//	 *
//	 */
//	
//}

public OtherTimer()
{
    new Float:maxspeed = 175.0;
    new plname[MAX_PLAYER_NAME];
	new string[256];
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsLogOn(i))
	    {
			 if (GetPlayerState(i) == PLAYER_STATE_ONFOOT) CheckForWalkingTeleport(i); // IF THE PLAYER IS IN A TELEPORT ZONE, TELEPORT THEM
	        new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					SendClientMessage(i, COLOR_WHITE, "Meo: Bay gio ban co the dang nhap bang cach /login <password>");
				}
			}
		    if(GetPlayerState(i) == 2)
		    {
				GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if(TelePos[i][5] > 550.0)
				{
					TelePos[i][0] = 0.0;
					TelePos[i][1] = 0.0;
				}
				if(TelePos[i][0] != 0.0)
				{
					new Float:xdist = TelePos[i][3]-TelePos[i][0];
					new Float:ydist = TelePos[i][4]-TelePos[i][1];
					new Float:sqxdist = xdist*xdist;
					new Float:sqydist = ydist*ydist;
					new Float:distance = (sqxdist+sqydist)/31;
					if ((BusrouteEast[i][0] == 0 && BusrouteWest[i][0] == 0))
					{
						if(gSpeedo[i] == 2)
						{
							if(distance <10)
							{
								format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :   ~w~%.0f",distance);
							}
							if(distance > 10 && distance < 100)
							{
								format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :  ~w~%.0f",distance);
							}
							if(distance > 100)
							{
								format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f",distance);
							}
							GameTextForPlayer(i, string, 2000, 5);
						}
						if(distance > maxspeed && PlayerInfo[i][pAdmin] < 1)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if(!IsAPlane(tmpcar))
							{
								GetPlayerName(i, plname, sizeof(plname));
								format(string, 256, "AdmWarning: [%d]%s %.0f mph",i,plname,distance);
								ABroadCast(COLOR_YELLOW,string,1);
							}
						}
					}
				}
				if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
				{
					TelePos[i][0] = TelePos[i][3];
					TelePos[i][1] = TelePos[i][4];
				}
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new house = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						/*if(house > 10000)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && house == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && house == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && house == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
								}
								else
								{
									SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetPlayerMoney(i) - oldcash;
								printf("Total %d = GetPlayerMoney(playerid) %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
								new name[MAX_PLAYER_NAME];
								GetPlayerName(i, name, sizeof(name));
								format(string,128,"<< %s has left the homemodshop with $%d >>",name,Total);
								PayLog(string);
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}*/
						if(house == 242)
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,-2518.5967,-623.2701,132.7679);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						/*if(house >= 99 && house != 10000)
						{
							SetPlayerPos(i, BizzInfo[house-99][bEntranceX], BizzInfo[house-99][bEntranceY],BizzInfo[house-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}*/
						else if(house < 99 && house != 10000)
						{
							SetPlayerPos(i, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						//PlayerInfo2[CallCost][i] = CallCost[i]+callcost;
						PlayerInfo2[CallCost][i] = callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsLogOn(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* Dien thoai cua %s dang rung.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && PlayerInfo2[CallCost][i] > 0)
			{
				format(string, sizeof(string), "~w~Cuoc goi ton~n~~r~$%d",PlayerInfo2[CallCost][i]);
				//SafeGivePlayerMoney(i, -= PlayerInfo2[CallCost][i];);
				CellTime[i] -= PlayerInfo2[CallCost][i];
				SBizzInfo[2][sbTill] += PlayerInfo2[CallCost][i];
				ExtortionSBiz(2, PlayerInfo2[CallCost][i]);
				GameTextForPlayer(i, string, 5000, 1);
				PlayerInfo2[CallCost][i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsLogOn(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, string, 15000, 6);
			}
			if (BusrouteEast[i][0] != 0 || BusrouteWest[i][0] != 0)
			{
				if (!IsPlayerInAnyVehicle(i) || !IsABus(GetPlayerVehicleID(i)))
				if (vehicleid != 0)
				{
					if (!IsABus(vehicleid))
					{
						if (BusrouteEast[i][0] != 0) BusrouteEnd(i, BusrouteEast[i][1]);
						else if (BusrouteWest[i][0] != 0) BusrouteEnd(i, BusrouteWest[i][1]);
					}
				}
				else
				{
					if (BusrouteEast[i][0] != 0) BusrouteEnd(i, BusrouteEast[i][1]);
					else if (BusrouteWest[i][0] != 0) BusrouteEnd(i, BusrouteWest[i][1]);
				}
			}
			if (IsABus(vehicleid) && GetPlayerState(i) == 2 && PlayerInfo[i][pJob] != 14)
			{
				SetVehicleToRespawn2(vehicleid);
			}
		}
	}
	return 1;
}

public SetPlayerUnjail()
{
//	new plname[MAX_PLAYER_NAME];
	new string[256];
	if(PaintballPlayers >= 2 && PaintballRound != 1 && StartingPaintballRound != 1)
	{
		StartingPaintballRound = 1;
	   	SetTimer("PreparePaintball", 15000, 0);
	}
	if(KartingPlayers >= 2 && KartingRound != 1 && StartingKartRound != 1)
	{
	    StartingKartRound = 1;
	    SetTimer("PrepareKarting", 15000, 0);
	}
	if(KartingRound != 0 && KartingPlayers < 2)
	{
	    StartingKartRound = 0;
	    KartingRound = 0;
	    EndingKartRound = 1;
	}
	foreach(new i: Player)
	{
	    if(IsLogOn(i))
	    {
			new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 1; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 11; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantLawyer[i] == 0)
					PlayerInfo[i][pJailTime]--;

				if(PlayerInfo[i][pJailTime] <= 0 && WantLawyer[i] == 0)
				{
				   PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
						PlayerInfo[i][pInt] = 6;
						SetPlayerPos(i,246.8439,70.0776,1003.6406);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					   SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					   SetPlayerInterior(i, 0);
					   PlayerInfo[i][pInt] = 0;
					   SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					else if (PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						PlayerInfo[i][pInt] = 0;
						SetPlayerPos(i, 774.9041, -1335.3381, 13.5386);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Warden: Ban da duoc tra tu do.");
					SendClientMessage(i, COLOR_GRAD1,"Warden: Hay nghi den thoi gian trong tu moi khi lam viec pham phap.");
					format(string, sizeof(string), "~g~Freedom~n~~w~Hay co gang tro thanh mot cong dan tot");
					GameTextForPlayer(i, string, 5000, 1);
					if(gTeam[i] == TEAMVILLAIN) { gTeam[i] = TEAMCIVILLAIN; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			/*if(GetPlayerMoney(i) - CurrentMoney[i] >= 20000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetPlayerMoney(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        GetPlayerName(i, plname, sizeof(plname));
			        format(string, 256, "AdmWarning: [%d]%s just spawned above $20000 in one second (moneycheat), use /check on him.",i,plname);
					ABroadCast(COLOR_YELLOW,string,1);
					PayLog(string);
			        CurrentMoney[i] = GetPlayerMoney(i);
			        TogglePlayerControllable(i, 0);
	            	SendClientMessage(i, COLOR_YELLOW, "Frozen for money cheat detection.");
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetPlayerMoney(i);
		    }*/
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
				{
				    RemovePlayerFromVehicle(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			   if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1) { }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}//Done with car check
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
   			if(MedicTime[i] > 0)
			{
			    if(MedicTime[i] == 3)
			    {
			        SetPlayerInterior(i, 3);
			        PlayerInfo[i][pInt] = 3;
			        new Float:x, Float:y, Float:z;
			        GetPlayerPos(i, x, y, z);
			        SetPlayerCameraPos(i, x - 3, y, z);
			        SetPlayerCameraLookAt(i,x,y,z);
			    }
			    MedicTime[i] ++;
			    if(MedicTime[i] >= NeedMedicTime[i])
			    {
					new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
					//SafeGivePlayerMoney(i, -cut);
					format(string, sizeof(string), "Bac si: Hoa don dieu tri cua ban la $%d, Chuc mot ngay tot lanh.", cut);
					SendClientMessage(i, TEAM_CYAN_COLOR, string);
					TogglePlayerControllable(i, 1);
					PlayerInfo[i][pHospital] = 0;
			        MedicTime[i] = 0;
			        NeedMedicTime[i] = 0;
			        PlayerInfo[i][pDeaths] += 1;
			        PlayerFixRadio(i);
			        ClearAnimations(i);
			        SetPlayerSpawn(i);
					SetCameraBehindPlayer(i);
					SafeResetPlayerWeapons(i);
			    }
			}
			if(WantLawyer[i] >= 1)
			{
			    CallLawyer[i] = 111;
			    if(WantLawyer[i] == 1)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "Ban co muon Luat su khong? (Go yes hoac no)");
				}
				WantLawyer[i] ++;
				if(WantLawyer[i] == 8)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "Ban co muon Luat su khong? (Go yes hoac no)");
				}
	            if(WantLawyer[i] == 15)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "Ban co muon Luat su khong? (Go yes hoac no)");
				}
				if(WantLawyer[i] == 20)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "Ban khong the yeu cau Luat su nua, bat dau thoi gian o tu.");
				    WantLawyer[i] = 0;
				    CallLawyer[i] = 0;
				}
			}
			if(TutTime[i] >= 1)
			{
			    TutTime[i] += 1;
                if(TutTime[i] == 3)
			    {
			        ClearChatbox(i, 10);
			        SendClientMessage(i, COLOR_WHITE, "Vay ban la nguoi moi? Chung toi se chi cho ban mot vai noi va cho ban mot vai huong dan, goi y.");
			        SendClientMessage(i, COLOR_WHITE, "Neu ban khong biet cach choi Roleplay, vui long tim hieu them tai Forum.");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SetPlayerCameraPos(i, 2247.0215,-1655.0173,17.2856);
					SetPlayerCameraLookAt(i, 2244.6536,-1663.9304,15.4766);
					SetPlayerInterior(i, 0);
					SetVirtualWorld(i, 99);
					SetPlayerPos(i, 2256.3555,-1646.6377,15.4959);
			        SendClientMessage(i, COLOR_YELLOW, ":: CUA HANG QUAN AO ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Truoc het, ban can phai co quan ao. Ban co the mua quan ao tai cac cua hang quan ao.");
			        SendClientMessage(i, COLOR_YELLOW2, "Khi ban o trong cua hang quan ao, go /clothes va go ( next ) de tim kiem trang phuc ma ban thich.");
			    }
			    else if(TutTime[i] == 16)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerPos(i, 2089.6624,-1901.7891,13.5469);
			        SetPlayerCameraPos(i, 2070.8093,-1914.6747,18.5469);
					SetPlayerCameraLookAt(i, 2055.2405,-1906.4608,13.5469);
					SetPlayerInterior(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: TRUONG DAO TAO LAI XE ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban van chua co bang lai xe? That xau ho cho ban !");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban can phai vuot qua bai kiem tra lai xe de lay bang lai.");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban co the xem danh sach cac bang cap bang cach go /licensers.");
			    }
			    else if(TutTime[i] == 32)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerPos(i, 1514.3059,-1667.8116,14.0469);
			        SetPlayerCameraPos(i, 1535.9584,-1676.1428,18.3828);
					SetPlayerCameraLookAt(i, 1553.7861,-1676.4270,16.1953);
					SetPlayerInterior(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: SO CANH SAT LOS ANGELES ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "So cach sat Los Angeles va FBI luon o trong thanh pho de dam bao an toan cho ban.");
			        SendClientMessage(i, COLOR_YELLOW2, "Nhung nguoi pham toi se bi xu ly nhanh chong va manh tay neu can thiet.");
			        SendClientMessage(i, COLOR_YELLOW2, "De goi canh sat, goi vao duong day nong ( go /call 911 ).");
			    }
			    else if(TutTime[i] == 54)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerPos(i, 1221.7010,-1328.6449,13.4821);
			        SetPlayerCameraPos(i, 1204.3781,-1313.3323,16.3984);
					SetPlayerCameraLookAt(i, 1174.7167,-1323.4485,14.5938);
					SetPlayerInterior(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: BENH VIEN TRUNG UONG THANH PHO ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Cam thay khong khoe? Ban can den gap bac si cua Los Angeles.");
			        SendClientMessage(i, COLOR_YELLOW2, "De goi cho nhan vien y te, goi vao duong day nong ( go /call 911 ).");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban se duoc hoi sinh o day sau khi chet");
			    }
			    else if(TutTime[i] == 76)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerPos(i, 1786.1758,-1258.4976,13.6417);
			        SetPlayerCameraPos(i, 1779.4259,-1275.1025,15.6328);
					SetPlayerCameraLookAt(i, 1785.7263,-1296.0200,13.4213);
					SetPlayerInterior(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: ABC STUDIO ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Muon thong bao mot so tin tuc moi? Hay den gap phong vien cua ABC Studio va yeu cau ho lam viec do.");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban cung co the dang tai quang cao cua ban len cac to bao dia phuong.");
			    }
			    else if(TutTime[i] == 98)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerPos(i, 1475.7020,-1050.9489,23.8246);
			        SetPlayerCameraPos(i, 1458.3872,-1042.2423,24.8281);
					SetPlayerCameraLookAt(i, 1458.5930,-1019.9205,24.5264);
					SetPlayerInterior(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: NGAN HANG QUOC GIA ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban khong the giu het tien trong nguoi, ai do se co gang an cap no.");
			        SendClientMessage(i, COLOR_YELLOW2, "Ban co the go /deposit, hoac /withdraw tien cua ban tai ngan hang.");
			        SendClientMessage(i, COLOR_YELLOW2, "Tien tro cap cua ban ( Payday ) se duoc chuyen vao tai khoan ngan hang cua ban.");
			    }
			    else if(TutTime[i] == 110)
			    {
			        ClearChatbox(i, 10);
			        SetPlayerInterior(i, 3);
			        SetPlayerPos(i, 330.6825,163.6688,1014.1875);
			        SetCameraBehindPlayer(i);
			        SetVirtualWorld(i, 0);
			        SendClientMessage(i, COLOR_YELLOW, ":: KET THUC PHAN HUONG DAN ::");
			        SendClientMessage(i, COLOR_WHITE, " ");
			        SendClientMessage(i, COLOR_YELLOW2, "Con rat nhieu noi khac tai Los Angeles, nhung ban can phai tu minh kham pha.");
			        SendClientMessage(i, COLOR_YELLOW2, "Dung co quen luat Role-Play nhe, boi vi pham luat (NON-RP) co the bi canh cao va khoa tai khoan!");
			        SendClientMessage(i, COLOR_YELLOW2, "Loi chao than ai va quyet thang tu: Team admin Los Angeles Roleplay.");
			    }
			    else if(TutTime[i] == 119)
			    {
			        ClearChatbox(i, 10);
			        SendClientMessage(i, COLOR_YELLOW2, "Chao mung ban den voi Los Angeles.");
			        SendClientMessage(i, COLOR_GRAD1, "Meo: De goi taxi hoac bus go /call 444 hoac /call 222");
			        SendClientMessage(i, COLOR_GRAD1, "Meo: De thay doi trang phuc cua ban, ban phai den cua hang quan ao");
					SendClientMessage(i, COLOR_GRAD1, " ");
			        TutTime[i] = 0; PlayerInfo[i][pTut] = 1;
					gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0;
					TogglePlayerControllable(i, 1);
					PlayerInfo[i][pHospital] = 0;
					AfterTutorial[i] = 1;
					SetPVarInt(i, "FirstSpawn", 1);
					SetTimerEx("UnsetAfterTutorial", 2500, false, "i", i);
					//SetTimerEx("UnsetFirstSpawn", 5000, false, "i", i);
					SetPlayerSpawn(i);
			    }
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
               PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 0;
			    if(PlayerStoned[i] == 0)
			    {
			        PlayerStoned[i] = 2;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 0);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 0);
					}
			    }
			}
			if(PlayerInfo[i][pCarTime] > 0)
			{
			    if(PlayerInfo[i][pCarTime] <= 0)
			    {
			        PlayerInfo[i][pCarTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pCarTime] -= 1;
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Match Started", 5000, 1);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
			    else
				{
				    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsLogOn(Boxer1) && IsLogOn(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
					        	PlayerInfo[Boxer1][pInt] = 5; PlayerInfo[Boxer2][pInt] = 5;
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsLogOn(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pJob] == 12)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "Boxing News: %s da thang tran dau tranh dai vo dich hang nang voi %s. Tro thanh nha vo dich moi.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_WHITE, "*Ban co the tro thanh nha vo dich neu ban lam nghe boxing !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Boxing News: Tran dau boxing tranh dai vo dich %s da gianh chien thang truoc %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* Ban da thua tran dau voi %s.", winner);
								SendClientMessage(Boxer1, COLOR_WHITE, string);
								GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* Ban da thang tran dau voi %s.", loser);
								SendClientMessage(Boxer2, COLOR_WHITE, string);
								GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* Ban cam thay kiet suc sau tran dau, hay di an gi do.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "*Ban cam thay van khoe sau khi xong tran dau, hay nghi ngoi de tro lai.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* Ban cam thay kiet suc sau tran dau, hay di an gi do.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* Ban cam thay van khoe sau khi xong tran dau, hay nghi ngoi de tro lai.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Tran dau ket thuc", 5000, 1); GameTextForPlayer(Boxer2, "~g~Tran dau ket thuc", 5000, 1);
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsLogOn(Boxer1) && IsLogOn(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
					        	PlayerInfo[Boxer1][pInt] = 5; PlayerInfo[Boxer2][pInt] = 5;
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsLogOn(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pJob] == 12)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "Boxing News: %s Da thang tran dau tranh dai vo dich hang nang voi %s. Tro thanh nha vo dich moi.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_WHITE, "* Ban co the tro thanh nha vo dich neu ban lam nghe boxing !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Boxing News: Tran dau boxing tranh dai vo dich %s da gianh chien thang truoc %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* Ban da thua tran dau %s.", winner);
								SendClientMessage(Boxer2, COLOR_WHITE, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* Ban da thang tran dau %s.", loser);
								SendClientMessage(Boxer1, COLOR_WHITE, string);
								GameTextForPlayer(Boxer1, "~g~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "*  Ban cam thay kiet suc sau tran dau, hay di an gi do.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* Ban cam thay van khoe sau khi xong tran dau, hay nghi ngoi de tro lai.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "*  Ban cam thay kiet suc sau tran dau, hay di an gi do.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* Ban cam thay van khoe sau khi xong tran dau, hay nghi ngoi de tro lai.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Tran dau ket thuc", 5000, 1); GameTextForPlayer(Boxer2, "~g~Tran dau ket thuc", 5000, 1);
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RoundStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(StartingPaintballRound == 1 && AnnouncedPaintballRound == 0)
			{
			    AnnouncedPaintballRound = 1;
			    if(PlayerPaintballing[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Tran dau se duoc thong bao trong 15s nua (De co nhieu nguoi choi vao).");
			    }
			}
			if(StartingKartRound == 1 && AnnouncedKartRound == 0)
			{
			    AnnouncedKartRound = 1;
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Dua kart se duoc thong bao trong 15s nua (De nhan nhieu nguoi dua).");
			    }
			}
			if(EndingKartRound == 1)
			{
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        DisableCheckpoint(i);
			        CP[i] = 0;
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisableCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsLogOn(TaxiAccepted[i]))
				    {
				        new Float:x, Float:y, Float:z;
						GetPlayerPos(TaxiAccepted[i], x, y, z);
						SetPlayerCheckpoint(i, x, y, z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsLogOn(BusAccepted[i]))
				    {
				      new Float:x, Float:y, Float:z;
						GetPlayerPos(BusAccepted[i], x, y, z);
						SetPlayerCheckpoint(i, x, y, z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicCallTime[i] == 90) { MedicCallTime[i] = 0; DisableCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 90 - MedicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MedicCallTime[i] += 1;
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicCallTime[i] == 30) { MechanicCallTime[i] = 0; DisableCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(PizzaCallTime[i] > 0)
   			{
       			if(PizzaCallTime[i] == 90) { PizzaCallTime[i] = 0; DisableCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
       			else
    			{
        			format(string, sizeof(string), "%d", 90 - PizzaCallTime[i]);
     				GameTextForPlayer(i, string, 1500, 6);
     				PizzaCallTime[i] += 1;
    			}
   			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        GameTextForPlayer(i, "~r~Ban da hoan thanh nghia vu, bay gio ban duoc tu do", 2500, 3);
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(IsSmoking[i] > 0)
			{
			    if(IsSmoking[i] == 1)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
				    if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s hut het dieu xi ga.", sendername); }
					else { format(string, sizeof(string), "* %s hut het dieu xi ga.", sendername); }
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth;
				    GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
				    if(UsingSmokeAnim[i] == 1)
				    {
				        UsingSmokeAnim[i] = 0;
				        ClearAnimations(i);
				    }
			    }
			    if(IsSmoking[i] == 51)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
					else { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    if(IsSmoking[i] == 31)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
					else { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    if(IsSmoking[i] == 11)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
					else { format(string, sizeof(string), "* %s dang hut xi ga.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    IsSmoking[i] -= 1;
			}
			if(PlayerToPoint(20, i,2015.4500,1017.0900,996.8750))
			{//Four Dragons
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    PlayerInfo[i][pInt] = 0;
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,2233.9099,1710.7300,1011.2987))
			{//Caligula
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    PlayerInfo[i][pInt] = 0;
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7900,1619.5800,1090.4453))
			{//Caligula Roof 1
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    PlayerInfo[i][pInt] = 0;
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7800,1675.9301,1090.4453))
			{//Caligula Roof 2
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    PlayerInfo[i][pInt] = 0;
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,1133.0699,-9.5731,1000.6797))
			{//West Casino place
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    PlayerInfo[i][pInt] = 0;
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,292.0274,-36.0291,1001.5156))
			{//Ammunation 1
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
			    PlayerInfo[i][pInt] = 6;
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,308.2740,-141.2833,999.6016))
			{//Ammunation 2
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
			    PlayerInfo[i][pInt] = 6;
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,294.3212,-108.7869,1001.5156))
			{//Ammunation 3 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
			    PlayerInfo[i][pInt] = 6;
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,288.8592,-80.4535,1001.5156))
			{//Ammunation 4 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
			    PlayerInfo[i][pInt] = 6;
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,316.9583,-165.4707,999.6010))
			{//Ammunation 5 (Unprotected)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
			    PlayerInfo[i][pInt] = 6;
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
		}
	}
}

public CheckGas()
{
	new string[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsLogOn(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    if(Gas[vehicle] <= 10)
				    {
			   			PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
			   			if(gGas[i] == 0) {
			   				GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel is low",5000,3);
						}
				    }
		   		    if(gGas[i] == 1) {
		   		    if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABike(vehicle) || IsAHarvest(vehicle) || IsADrugHarvest(vehicle) || IsASweeper(vehicle))
		   		    {
		      			format(string, sizeof(string), "~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel:~w~ N/A");
					}
					else
					{
                        format(string, sizeof(string), "~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel:~w~ %d%",Gas[vehicle]);
					}
		      		GameTextForPlayer(i,string,20500,3); }
					if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABike(vehicle) || IsAHarvest(vehicle) || IsADrugHarvest(vehicle) || IsASweeper(vehicle) || engineOn[vehicle] == 0) { Gas[vehicle]++; }
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
		        	GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~No fuel in Vehicle",1500,3);
				}
			}
    	}
	}
	return 1;
}

public Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsLogOn(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[256];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
		    {
		        if(IsACopCar(VID) || IsAnFbiCar(VID) || IsAnAmbulance(VID) || IsNgCar(VID) || IsAGovernmentCar(VID) || IsAHspdCar(VID))
		        {
		            Gas[VID] += FillUp;
		            FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
		            format(string,sizeof(string),"* Vehicle filled up, for: $%d.",FillUp);
	    			SendClientMessage(i,COLOR_WHITE,string);
	    			GameTextForPlayer(i, "~w~Government has paid for a gas.", 5000, 1);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
					TogglePlayerControllable(i, 1);
		        }
		        else
		        {
					if(GetPlayerMoney(i) >= FillUp+4)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
				    	format(string,sizeof(string),"* Vehicle filled up, for: $%d.",FillUp);
				    	SendClientMessage(i,COLOR_WHITE,string);
						SafeGivePlayerMoney(i, - FillUp);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refueling[i] = 0;
						TogglePlayerControllable(i, 1);
					}
			   		else
			   		{
			   	    	format(string,sizeof(string),"* Not enough Money to refill, it costs $%d to fill your Vehicle.",FillUp);
				    	SendClientMessage(i,COLOR_WHITE,string);
				    	TogglePlayerControllable(i, 1);
			   		}
				}
		 	}
		}
	}
	return 1;
}

public StoppedVehicle()
{
	new Float:x,Float:y,Float:z;
	new Float:distance,value;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				new VID;
				VID = GetPlayerVehicleID(i);
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				value = floatround(distance * 3600);
				if(UpdateSeconds > 1)
				{
					value = floatround(value / UpdateSeconds);
				}
				if(SpeedMode)
				{
	            }
				if(value == 0)
				{
					Gas[VID]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsLogOn(playerid))
	{
	    SafeResetPlayerWeapons(playerid);
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
			if(gTeam[playerid] == TEAMGOV || IsACop(playerid))
			{
				SafeGivePlayerWeapon(playerid, 41, 500); //spray
				if(OnDuty[playerid] == 1 || PlayerInfo[playerid][pMember] == 2)//Cops & FBI/ATF
				{
				   SafeGivePlayerWeapon(playerid, 41, 500); //spray
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 3, 1);
					if(PlayerInfo[playerid][pChar] == 285)//SWAT
					{
					    SafeGivePlayerWeapon(playerid, 24);
					    SafeGivePlayerWeapon(playerid, 29);
						SafeGivePlayerWeapon(playerid, 31);
					}
					else if(PlayerInfo[playerid][pChar] == 287)//Army
					{
					    SafeGivePlayerWeapon(playerid, 24);
					    SafeGivePlayerWeapon(playerid, 29);
					    SafeGivePlayerWeapon(playerid, 31);
					}
				}
				if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard
				{
				    SafeGivePlayerWeapon(playerid, 24);
				    SafeGivePlayerWeapon(playerid, 31);
				    SafeGivePlayerWeapon(playerid, 29);
				}
			}
			if(PlayerInfo[playerid][pDonateRank] > 0)
			{
				if (PlayerInfo[playerid][pGun][0] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][0], PlayerInfo[playerid][pAmmo][0]);
					PlayerInfo[playerid][pGun][0] = 0; PlayerInfo[playerid][pAmmo][0] = 0;
				}
				if (PlayerInfo[playerid][pGun][1] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][1], PlayerInfo[playerid][pAmmo][1]);
					PlayerInfo[playerid][pGun][1] = 0; PlayerInfo[playerid][pAmmo][1] = 0;
				}
				if (PlayerInfo[playerid][pGun][2] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][2], PlayerInfo[playerid][pAmmo][2]);
					PlayerInfo[playerid][pGun][2] = 0; PlayerInfo[playerid][pAmmo][2] = 0;
				}
				if (PlayerInfo[playerid][pGun][3] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][3], PlayerInfo[playerid][pAmmo][3]);
					PlayerInfo[playerid][pGun][3] = 0; PlayerInfo[playerid][pAmmo][3] = 0;
				}
			}
			else
			{
			    if (PlayerInfo[playerid][pGun][0] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][0], PlayerInfo[playerid][pAmmo][0]);
					PlayerInfo[playerid][pGun][0] = 0; PlayerInfo[playerid][pAmmo][0] = 0;
				}
				if (PlayerInfo[playerid][pGun][1] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun][1], PlayerInfo[playerid][pAmmo][1]);
					PlayerInfo[playerid][pGun][1] = 0; PlayerInfo[playerid][pAmmo][1] = 0;
				}
			}
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsLogOn(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Locked: %d EntryFee: $%d Till: $%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Products: %d/%d Extortion By: %s", SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts],SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsLogOn(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Locked: %d EntryFee: $%d Till: $%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Products: %d/%d Extortion By: %s", BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts],BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsLogOn(playerid)&&IsLogOn(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Nam"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Nu"; }
  		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "Bac"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "Trung"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "Nam"; }
		new ttext[20];
		if (gTeam[targetid] == TEAMCIVILLAIN) { ttext = "Dan Thuong"; }
		else if (gTeam[targetid] == TEAMVILLAIN) { ttext = "Toi Pham"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "Canh Sat"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "Dac Vu"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "Quan Binh"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "Bac Si"; }
		//else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "Surenos"; }
		//else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "La Famiglia Sinatra"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "Chinh Tri Gia"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "Hitman"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "Phong Vien"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "Taxi"; }
		else if (PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "Nhan Vien Tu Giam"; }
		//else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "School Instructor"; }
		//else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "Yamaguchi"; }
		//else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "47th Street Saints"; }
		//else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "East Beach Bloods"; }
		new dtext[20];
		if(STDPlayer[targetid] == 1) { dtext = "Chlamydia"; }
		else if(STDPlayer[targetid] == 2) { dtext = "Gonorrhea"; }
		else if(STDPlayer[targetid] == 3) { dtext = "Syphilis"; }
		else { dtext = "None"; }
	    new ftext[128];
	    if(PlayerInfo[targetid][pMember] != 0)
			 format(ftext, sizeof(ftext), "%s", GetFactionName(PlayerInfo[targetid][pMember]));
		 else if (PlayerInfo[targetid][pLeader] != 0)
			 format(ftext, sizeof(ftext), "%s", GetFactionName(PlayerInfo[targetid][pLeader]));
		 else if(PlayerInfo[targetid][pFMember] < 255) { format(ftext, sizeof(ftext), "%s", FamilyInfo[PlayerInfo[targetid][pFMember]][fName]); }
		 else ftext = "None";
	    new rtext[64];
		 if (PlayerInfo[targetid][pFMember] < 255)
	    {
			new fid = PlayerInfo[targetid][pFMember];
			if (PlayerInfo[targetid][pRank] > 0)
				format(rtext, sizeof(rtext), "%s", FamilyTitle[fid][PlayerInfo[targetid][pRank]-1]);
			else { rtext = "Nguoi Ngoai"; }
		}
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Cadet"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Police Officer"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Corporal"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sergeant"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Lieutenant"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Captain"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Deputy Chief"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Chief"; }
			else { rtext = "Cadet"; }
		}
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Professional Staff"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Special Agent Trainee"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Special Agent"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Special Agent in Charge"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Assistant Director in Charge"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Intern"; }
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Private"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Sergeant"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Major"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Captain"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Lieutenant"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "General"; }
			else { rtext = "Private"; }
		}
		else if(PlayerInfo[targetid][pMember] == 7)//Mayor ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Mayor's driver"; }
		    else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Mayor's bodyguard"; }
		    else { rtext = "None"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Freelancer"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Marksman"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Special Agent"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Vice-Director"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Freelancer"; }
		}
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Intern Worker"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Journalist"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Head Journalist"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Company Secretary"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "ABC Manager"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Network Producer"; }
			else { rtext = "Intern Worker"; }
		}
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Taxi Rookie"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Cabbie"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Dispatcher"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Shift Supervisor"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Taxi Company Owner"; }
			else { rtext = "Trainee"; }
		}
		else if (PlayerInfo[targetid][pMember] ==  17 || PlayerInfo[targetid][pLeader] == 17)//PD Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Cadet"; }
			else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Police Officer"; }
			else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Corporal"; }
			else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Sergeant"; }
			else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Lieutenant"; }
			else if (PlayerInfo[targetid][pRank] == 6) { rtext = "Captain"; }
			else if (PlayerInfo[targetid][pRank] == 7) { rtext = "Deputy Chief"; }
			else if (PlayerInfo[targetid][pRank] == 8) { rtext = "Chief"; }
			else { rtext = "Cadet"; }
		}
		else rtext = "None";
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "Tham Tu"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "Luat Su"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "Mai Dam"; }
        //else if(PlayerInfo[targetid][pJob] == 4) { jtext = "Drugs Dealer"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Cuop Xe"; }
        else if(PlayerInfo[targetid][pJob] == 6) { jtext = "Phong Vien"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "Tho Sua Xe"; }
        else if(PlayerInfo[targetid][pJob] == 8) { jtext = "Ve Si"; }
        else if(PlayerInfo[targetid][pJob] == 9) { jtext = "Tho Vu Khi"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "Buon Xe"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "Vo Si"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "Lai Xe Buyt"; }
        else if(PlayerInfo[targetid][pJob] == 15) { jtext = "Giao Bao"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "Giao Hang"; }
        else if(PlayerInfo[targetid][pJob] == 17) { jtext = "Giao Pizza"; }
        else if(PlayerInfo[targetid][pJob] == 18) { jtext = "Nong Dan"; }
        else if(PlayerInfo[targetid][pJob] == 19) { jtext = "Trong Trot"; }
        //else if(PlayerInfo[targetid][pJob] == 20) { jtext = "Drugs Smuggler"; }
        //else if(PlayerInfo[targetid][pJob] == 21) { jtext = "Street sweeper"; }
        //else if(PlayerInfo[targetid][pJob] == 22) { jtext = "Materials smuggler"; }
        //else if(PlayerInfo[targetid][pJob] == 23) { jtext = "Gun maker"; }
        else { jtext = "None"; }
		new drank[20];
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "Bronze donater"; }
		else if(PlayerInfo[targetid][pDonateRank] >= 2) { drank = "Golden donater"; }
		else { drank = "None"; }
		/*new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);*/
		new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		//new lotto = PlayerInfo[targetid][pLottoNr];
		//new deaths = PlayerInfo[targetid][pDeaths];
		//new fishes = PlayerInfo[targetid][pFishes];
		new bigfish = PlayerInfo[targetid][pBiggestFish];
		//new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		//new warrests = PlayerInfo[targetid][pWantedDeaths];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		//new wanted = WantedLevel[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		//new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		//new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new housekey = PlayerInfo[targetid][pPhousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new carkey = GetVehicleIDFromKey(PlayerInfo[targetid][pPcarkey][0]);
		new carkey2 = GetVehicleIDFromKey(PlayerInfo[targetid][pPcarkey][1]);
		new carkey3 = GetVehicleIDFromKey(PlayerInfo[targetid][pPcarkey][2]);
		new intir = PlayerInfo[targetid][pInt];
		new virworld = PlayerInfo[targetid][pVirWorld];
		new local = PlayerInfo[targetid][pLocal];
		//new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"____________________| %s |____________________",name);
		SendClientMessage(playerid, COLOR_GREEN,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Level:[%d] Gioi tinh:[%s] Tuoi:[%d] Tien:[%s$] Tai khoan:[%s$] Ph:[%d] DonateRank:[%s]", level, atext, age, AddCommas(cash), AddCommas(account), pnumber, drank);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Gio choi:[%d] BiggestFish:[%d] Thoi gian tu:[%d] Nghe nghiep:[%s] Exp:[%d/%d]", ptime,bigfish,arrests,jtext,exp,expamount);
		SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Thuoc:[%d] Vat Lieu:[%d] Nhom:[%s] To chuc:[%s] Cap bac:[%s]",drugs,mats,ttext,ftext,rtext);
		SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		if (PlayerInfo[targetid][pPcarkey][0] != -1 && carkey != -1)
		{
		    format(coordsstring, sizeof(coordsstring), "1| Xe Model:[%s] Gia Tri:[%d] Mau 1:[%d] Mau 2:[%d] Khoa Xe:[%d]", CarInfo[carkey][cDescription], CarInfo[carkey][cValue], CarInfo[carkey][cColorOne], CarInfo[carkey][cColorTwo], CarInfo[carkey][cLock]);
		    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		}
		if (PlayerInfo[targetid][pPcarkey][1] != -1 && carkey2 != -1)
		{
		    format(coordsstring, sizeof(coordsstring), "2| Xe Model:[%s] Gia Tri:[%d] Mau 1:[%d] Mau 2:[%d] Khoa Xe:[%d]", CarInfo[carkey2][cDescription], CarInfo[carkey2][cValue], CarInfo[carkey2][cColorOne], CarInfo[carkey2][cColorTwo], CarInfo[carkey2][cLock]);
		    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		}
		if (PlayerInfo[targetid][pPcarkey][2] != -1 && carkey3 != -1)
		{
		    format(coordsstring, sizeof(coordsstring), "3| Xe Model:[%s] Gia Tri:[%d] Mau 1:[%d] Mau 2:[%d] Khoa Xe:[%d]", CarInfo[carkey3][cDescription], CarInfo[carkey3][cValue], CarInfo[carkey3][cColorOne], CarInfo[carkey3][cColorTwo], CarInfo[carkey3][cLock]);
		    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), "Nha [%d] Business [%d] Xe 1 [%d] Xe 2 [%d] Xe 3 [%d] Thue Xe [%d] Int:[%d] VirWorld:[%d] Local[%d]", housekey,bizkey,carkey,carkey2,carkey3,HireCar[targetid],intir,virworld,local);
			SendClientMessage(playerid, COLOR_GRAD6,coordsstring);
		}
		SendClientMessage(playerid, COLOR_GREEN,"___________________________________________________________");
	}
}

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
	    /* if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
        SetPlayerColor(playerid,COLOR_DBLUE);
        if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
        SetPlayerColor(playerid,COLOR_BLACK);
        if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 1)
        SetPlayerColor(playerid,cop_color);
        if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
        SetPlayerColor(playerid,COLOR_DARKNICERED);
        if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
        SetPlayerColor(playerid,COLOR_GROVE); */
		if (PlayerInfo[playerid][pFMember] != 255)
			SetPlayerColor(playerid, HexToInt(FamilyInfo[PlayerInfo[playerid][pFMember]][fColor]));
	}
}

// GameModeInitExitFunc()
/*public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Traveling...");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			DisableCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			SavePlayer(i);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}*/

public GameModeExitFunc()
{
	KillTimer(synctimer);
	//KillTimer(hackchecktimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(idletimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	//KillTimer(checkcarhealthtimer);
	KillTimer(burgertimer);
	KillTimer(chickentimer);
	KillTimer(tracetimer);
	//KillTimer(updateplayerpos);
	DestroyMenu(Guide);
	DestroyMenu(JobLocations);
	DestroyMenu(JobLocations2);
	GameModeExit();
}

public SyncUp()
{
	SyncTime();
	DollahScoreUpdate();
}

public SyncTime()
{
	//new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		/*format(string, sizeof(string), "SERVER: The time is now %d:00 hours",tmphour);
		BroadCast(COLOR_WHITE,string);*/
		ghour = tmphour;
		PayDay();
		RespawnGate();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}

public IsPlayerInTurf(playerid, turfid)
{
	if(IsLogOn(playerid))
	{
		if(turfid == -1)
		{
			return 0;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
		{
	 		return 1;
		}
	}
	return 0;
}

//public GetClosestPlayer(p1)
//{
//	new x,Float:dis,Float:dis2,player;
//	player = -1;
//	dis = 99999.99;
//	for (x=0;x<MAX_PLAYERS;x++)
//	{
//		if(IsLogOn(x))
//		{
//			if(x != p1)
//			{
//				dis2 = GetDistanceBetweenPlayers(x,p1);
//				if(dis2 < dis && dis2 != -1.00)
//				{
//					dis = dis2;
//					player = x;
//				}
//			}
//		}
//	}
//	return player;
//}

public Production()
{
	//new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1); }
		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		    /*for(new k = 0; k < MAX_PLAYERS; k++)
			{
				if(IsLogOn(k))
				{
				   if(gTeam[k] == TEAMGOV && CrimInRange(80.0, i,k))
				   {
					}
					else
					{
					    WantedPoints[i] -= 3;
					    if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
					    new points = WantedPoints[i];
					    new wlevel;
					    if(points > 0)
						{
						    new yesno;
							if(points == 3) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 4 && points <= 5) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 6 && points <= 7) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 8 && points <= 9) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 10 && points <= 11) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 12 && points <= 13) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 14) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), "Muc Do Truy Na: %d", wlevel);
								SendClientMessage(i, COLOR_YELLOW, string);
							}
						}
					}
				}*/
		}
	}
}

public DateProp(playerid)
{
	new curdate = getdate();
	for(new h = 0; h < MAX_HOUSES; h++)
	{
		if (strcmp(GLN(playerid), HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
		}
	}
	OnPropUpdate();
	return 1;
}

public Checkprop()
{
	new olddate;
	new string[256];
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 5)
			{
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 418;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
				format(string, sizeof(string), "REAL ESTATE: A House is available at a value of $%d",HouseInfo[h][hValue]);
				BroadCast(TEAM_BALLAS_COLOR, string);
				OnPropUpdate();
			}
		}
	}
	return 1;
}

public PayDay()
{
	new string[128];
	new account,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Ban da bi bo tu vi thieu no tien chinh phu.");
				    GameTextForPlayer(i, "~r~Bi Bat!", 2000, 1);
				    SetPlayerInterior(i, 6);
				    PlayerInfo[i][pInt] = 6;
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            SafeResetPlayerWeapons(i);
		            SafeResetPlayerMoney(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(string, sizeof(string), "Ban da bi bo tu %d giay.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				account = PlayerInfo[i][pAccount];
				new key = PlayerInfo[i][pPhousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoney(i))
					{
						PlayerInfo[i][pPhousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, "Ban da bi duoi khoi nha.");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
				if (key != 255 && strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = intrate+4; }
					else { tmpintrate = intrate+2; }//HouseInfo[key][hLevel]
				}
				else
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = 3; }
					else { tmpintrate = 1; }
				}
				if(PlayerInfo[i][pPayDay] >= 5)
				{
				    Tax += TaxValue;//Should work for every player online
				    PlayerInfo[i][pAccount] -= TaxValue;
					new checks = PlayerInfo[i][pPayCheck] / 5;
					if(PlayerInfo[i][pDonateRank] > 0)
					{
					    new bonus = PlayerInfo[i][pPayCheck] / 10;
					    checks += bonus;
					}
				    new ebill = (PlayerInfo[i][pAccount]/10000)*(PlayerInfo[i][pLevel]);
				    //ConsumingMoney[i] = 1;
				    //SafeGivePlayerMoney(i, checks);
				    account += checks;
				    if(PlayerInfo[i][pAccount] > 0)
				    {
				    	PlayerInfo[i][pAccount] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					PlayerPlayMusic(i);
					PlayerInfo[i][pAccount] = account+interest;
					SendClientMessage(i, COLOR_GREEN, "|___ BANK STATMENT ___|");
					format(string, sizeof(string), "  Paycheck: $%d   Thue: -$%d", checks, TaxValue);
					SendClientMessage(i, COLOR_WHITE, string);
					if(PlayerInfo[i][pPhousekey] != 255 || PlayerInfo[i][pPbiskey] != 255)
					{
					    format(string, sizeof(string), "  Tien Dien (Nha): -$%d", ebill);
						SendClientMessage(i, COLOR_GRAD1, string);
					}
					format(string, sizeof(string), "  So Du: $%d", account - checks);
					SendClientMessage(i, COLOR_WHITE, string);
					format(string, sizeof(string), "  Lai Suat: 0.%d%",tmpintrate);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  Lai: $%d", interest);
					SendClientMessage(i, COLOR_GRAD3, string);
					SendClientMessage(i, COLOR_GREEN, "|--------------------------------------|");
					format(string, sizeof(string), "  So Du Moi: $%d", PlayerInfo[i][pAccount]);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "  Thue Nha: -$%d", rent);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "~y~PayDay~n~~w~Toan bo khoang tien da duoc xu ly");
					GameTextForPlayer(i, string, 5000, 1);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pPayCheck] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					if(FarmerVar[i] == 0)
					{
						FarmerPickup[i][0] = 0;
					}
					if(DrugFarmerVar[i] == 0)
					{
						DrugFarmerPickup[i][0] = 0;
					}
					if(SmugglerWork[i] == 0)
					{
						PayDaySecure[i] = 0;
					}
					if(PlayerInfo[i][pDonateRank] > 0)
					{
					    PlayerInfo[i][pPayDayHad] += 1;
					    if(PlayerInfo[i][pPayDayHad] >= 5)
					    {
					        PlayerInfo[i][pExp]++;
					        PlayerInfo[i][pPayDayHad] = 0;
					    }
					}
				}
				else
				{
				    SendClientMessage(i, COLOR_WHITE, "*Ban khong choi du lau de nhan payday.");
				}
			}
		}
	}
	SaveAccounts();
	Checkprop();
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

public OnPropUpdate()
{
	//new File: file2;
	new sql[800];
	for (new i = 0; i < MAX_HOUSES; i++)
	{
		format(sql, sizeof(sql), "UPDATE house SET \
					Entrancex = %f, \
					Entrancey = %f, \
					Entrancez = %f, \
					Exitx = %f, \
					Exity = %f, \
					Exitz = %f, \
					Owner = '%s', \
					`Discription` = '%s', \
					Value = %d, \
					Hel = %d, \
					Arm = %d, \
					`Int` = %d, \
					`Lock` = %d, \
					Owned = %d, \
					Rooms = %d, \
					`Rent` = %d, \
					Rentabil = %d, \
					Takings = %d, \
					`Vec` = %d, \
					Vcol1 = %d, \
					Vcol2 = %d, \
					`Date` = %d, \
					Level = %d, \
					`World` = %d \
					WHERE ID = %d",
					HouseInfo[i][hEntrancex],
					HouseInfo[i][hEntrancey],
					HouseInfo[i][hEntrancez],
					HouseInfo[i][hExitx],
					HouseInfo[i][hExity],
					HouseInfo[i][hExitz],
					HouseInfo[i][hOwner],
					HouseInfo[i][hDiscription],
					HouseInfo[i][hValue],
					HouseInfo[i][hHel],
					HouseInfo[i][hArm],
					HouseInfo[i][hInt],
					HouseInfo[i][hLock],
					HouseInfo[i][hOwned],
					HouseInfo[i][hRooms],
					HouseInfo[i][hRent],
					HouseInfo[i][hRentabil],
					HouseInfo[i][hTakings],
					HouseInfo[i][hVec],
					HouseInfo[i][hVcol1],
					HouseInfo[i][hVcol2],
					HouseInfo[i][hDate],
					HouseInfo[i][hLevel],
					HouseInfo[i][hWorld],
					HouseInfo[i][hID]);
		mysql_query(conn, sql);
	}
	//printf("Save houses successfully.");
	
	//while (idx < sizeof(HouseInfo))
	//{
	//	new coordsstring[256];
	//	format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
	//	HouseInfo[idx][hEntrancex],
	//	HouseInfo[idx][hEntrancey],
	//	HouseInfo[idx][hEntrancez],
	//	HouseInfo[idx][hExitx],
	//	HouseInfo[idx][hExity],
	//	HouseInfo[idx][hExitz],
	//	HouseInfo[idx][hHealthx],
	//	HouseInfo[idx][hHealthy],
	//	HouseInfo[idx][hHealthz],
	//	HouseInfo[idx][hArmourx],
	//	HouseInfo[idx][hArmoury],
	//	HouseInfo[idx][hArmourz],
	//	HouseInfo[idx][hOwner],
	//	HouseInfo[idx][hDiscription],
	//	HouseInfo[idx][hValue],
	//	HouseInfo[idx][hHel],
	//	HouseInfo[idx][hArm],
	//	HouseInfo[idx][hInt],
	//	HouseInfo[idx][hLock],
	//	HouseInfo[idx][hOwned],
	//	HouseInfo[idx][hRooms],
	//	HouseInfo[idx][hRent],
	//	HouseInfo[idx][hRentabil],
	//	HouseInfo[idx][hTakings],
	//	HouseInfo[idx][hVec],
	//	HouseInfo[idx][hVcol1],
	//	HouseInfo[idx][hVcol2],
	//	HouseInfo[idx][hDate],
	//	HouseInfo[idx][hLevel],
	//	HouseInfo[idx][hWorld]);

	//	HouseInfo[idx][hWorld] = idx;
	//	if(idx == 0)
	//	{
	//		file2 = fopen("property.cfg", io_write);
	//	}
	//	else
	//	{
	//		file2 = fopen("property.cfg", io_append);
	//	}
	//	fwrite(file2, coordsstring);
	//	idx++;
	//	fclose(file2);
	//}

	for (new i = 0; i < MAX_BIZ; i++)
	{
		format(sql, sizeof(sql), "UPDATE biz SET \
				Owned = %d, \
				Owner = '%s', \
				Message = '%s', \
				Extortion = '%s', \
				EntranceX = %f, \
				EntranceY = %f, \
				EntranceZ = %f, \
				ExitX = %f, \
				ExitY = %f, \
				ExitZ = %f, \
				LevelNeeded = %d, \
				BuyPrice = %d, \
				EntranceCost = %d, \
				Till = %d, \
				Locked = %d, \
				Interior = %d, \
				Products = %d, \
				MaxProducts = %d, \
				PriceProd = %d, \
				Type = %d \
				WHERE ID = %d",
				BizzInfo[i][bOwned],
				BizzInfo[i][bOwner],
				BizzInfo[i][bMessage],
				BizzInfo[i][bExtortion],
				BizzInfo[i][bEntranceX],
				BizzInfo[i][bEntranceY],
				BizzInfo[i][bEntranceZ],
				BizzInfo[i][bExitX],
				BizzInfo[i][bExitY],
				BizzInfo[i][bExitZ],
				BizzInfo[i][bLevelNeeded],
				BizzInfo[i][bBuyPrice],
				BizzInfo[i][bEntranceCost],
				BizzInfo[i][bTill],
				BizzInfo[i][bLocked],
				BizzInfo[i][bInterior],
				BizzInfo[i][bProducts],
				BizzInfo[i][bMaxProducts],
				BizzInfo[i][bPriceProd],
				BizzInfo[i][bType],
				BizzInfo[i][bID]);
				mysql_query(conn, sql);
	}
	//printf("Save business successfully.");
	for (new i = 0; i < MAX_SBIZ; i++)
	{
		format(sql, sizeof(sql), "UPDATE sbiz SET \
				Owned = %d, \
				Owner = '%s', \
				Message = '%s', \
				Extortion = '%s', \
				EntranceX = %f, \
				EntranceY = %f, \
				EntranceZ = %f, \
				LevelNeeded = %d, \
				BuyPrice = %d, \
				EntranceCost = %d, \
				Till = %d, \
				Locked = %d, \
				Interior = %d, \
				Products = %d, \
				MaxProducts = %d, \
				PriceProd = %d, \
				Type = %d \
				WHERE ID = %d",
				SBizzInfo[i][sbOwned],
				SBizzInfo[i][sbOwner],
				SBizzInfo[i][sbMessage],
				SBizzInfo[i][sbExtortion],
				SBizzInfo[i][sbEntranceX],
				SBizzInfo[i][sbEntranceY],
				SBizzInfo[i][sbEntranceZ],
				SBizzInfo[i][sbLevelNeeded],
				SBizzInfo[i][sbBuyPrice],
				SBizzInfo[i][sbEntranceCost],
				SBizzInfo[i][sbTill],
				SBizzInfo[i][sbLocked],
				SBizzInfo[i][sbInterior],
				SBizzInfo[i][sbProducts],
				SBizzInfo[i][sbMaxProducts],
				SBizzInfo[i][sbPriceProd],
				SBizzInfo[i][sbType],
				SBizzInfo[i][sbID]);
		mysql_query(conn, sql);
	}
	//printf("Save sbusiness successfully.");
	/*idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}*/

	/*idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbMaxProducts],
		SBizzInfo[idx][sbPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}*/

	foreach(new idx : Vehicle)
	{
		if (IsAnOwnableCar(idx)) continue;
		UpdateCar(idx);
	}			
	//printf("Save cars successfully.");
	/*
	new idx = 184;
 	while (idx < sizeof(CarInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%s,%d,%d\n",
		CarInfo[idx][cModel],//
		CarInfo[idx][cLocationx],//
		CarInfo[idx][cLocationy],//
		CarInfo[idx][cLocationz],//
		CarInfo[idx][cAngle],//
		CarInfo[idx][cColorOne],//
		CarInfo[idx][cColorTwo],//
		CarInfo[idx][cOwner],//
		CarInfo[idx][cDescription],//
		CarInfo[idx][cValue],//
		CarInfo[idx][cLicense],//
		CarInfo[idx][cOwned],//
		CarInfo[idx][cLock]);
		if(idx == 184)
		{
			file2 = fopen("cars.cfg", io_write);
		}
		else
		{
			file2 = fopen("cars.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	*/
	return 1;
}
stock UpdateCar(idx)
{
	new sql[500];
	format(sql, sizeof(sql), "UPDATE car SET \
			Owner = '%s',\
			Owned = %d,\
			Model = %d,\
			Locationx = %f,\
			Locationy = %f,\
			Locationz = %f,\
			Angle = %f,\
			ColorOne = %d,\
			ColorTwo = %d,\
			Description = '%s',\
			`Value` = %d,\
			License = %d,\
			`Lock` = %d,\
			Type = %d \
			WHERE ID = %d",
			CarInfo[idx][cOwner],
			CarInfo[idx][cOwned],
			CarInfo[idx][cModel],
			CarInfo[idx][cLocationx],
			CarInfo[idx][cLocationy],
			CarInfo[idx][cLocationz],
			CarInfo[idx][cAngle],
			CarInfo[idx][cColorOne],
			CarInfo[idx][cColorTwo],
			CarInfo[idx][cDescription],
			CarInfo[idx][cValue],
			CarInfo[idx][cLicense],
			CarInfo[idx][cLock],
			CarInfo[idx][cType],
			CarInfo[idx][cID]);
	mysql_query(conn, sql);
	return 1;
}
public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public CBroadCast(color, const string[], level)
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (PlayerInfo[i][pHelper] >= level)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}


public OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendNewFamilyMessage(family, color, string[])
{
	if (color == -1)
		color = FamilyInfo[family][fColor];

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		   if(PlayerInfo[i][pFMember] == family)
		   {
            if(!gFam[i])
					SendClientMessage(i, color, string);
			}
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
					if(!gFam[i])
					SendClientMessage(i, color, string);
			}
		}
	}
}

public SendIRCMessage(channel, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayersChannel[i] == channel)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamBeepMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
				RingTone[i] = 20;
			}
		}
	}
}

public SendEnemyMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (gTeam[i] == TEAMVILLAIN)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

//public AddCar(carcoords)
/*public AddCar(carcoords)
{
	new randcol = random(126);
	new randcol2 = 1;
	if (rccounter == 14)
	{
		rccounter = 0;
	}
	AddStaticVehicleEx2(carselect[rccounter], CarSpawns[carcoords][pos_x], CarSpawns[carcoords][pos_y], CarSpawns[carcoords][pos_z], CarSpawns[carcoords][z_angle], randcol, randcol2, 60000);
	rccounter++;
	return 1;
}*/

public PlayerPlayMusic(playerid)
{
	if(IsLogOn(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsLogOn(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

public HouseLevel(playerid)
{
	if(IsLogOn(playerid))
	{
		new h = PlayerInfo[playerid][pPhousekey];
		if(h == 255) { return 0; }
		if(h <= 4) { return 1; }
		if(h >= 5 && h <= 9)  { return 2; }
		if(h >= 10 && h <= 18) { return 3; }
		if(h >= 19 && h <= 22) { return 4; }
		if(h >= 23 && h <= 25) { return 5; }
		if(h == 26) { return 6; }
		if(h == 27) { return 7; }
		if(h >= 28 && h <= 31) { return 7; }
	}
	return 0;

}

public CHouseLevel(houseid)
{
	if(houseid <= 4) { return 3; }
	if(houseid >= 29 && houseid <= 30) { return 4; }
	if(houseid >= 5 && houseid <= 9) { return 5; }
	if(houseid >= 10 && houseid <= 18 || houseid == 28) { return 7; }
	if(houseid >= 19 && houseid <= 22) { return 8; }
	if(houseid >= 23 && houseid <= 25) { return 9; }
	if(houseid == 26) { return 10; }
	if(houseid == 27) { return 11; }
	if(houseid >= 28 && houseid <= 31) { return 12; }
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsLogOn(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsLogOn(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsLogOn(playerid)&&IsLogOn(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsLogOn(playerid)&&IsLogOn(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsLogOn(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsLogOn(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	NameTimer();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			new tmpcar = GetPlayerVehicleID(i);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~San pham can~w~: %d~n~~y~Gia moi san pham: ~w~: $%d~n~~g~Tien quy: ~w~: $%d",SBizzInfo[h][sbMessage],(SBizzInfo[h][sbMaxProducts]-SBizzInfo[h][sbProducts]),SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						if(SBizzInfo[h][sbOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~So huu : %s~n~Nguoi thau : %s~n~Phi ra vao : ~g~$%d ~n~~w~de vao go /enter",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~Co so kinh doanh hien dang ban~n~Gia: ~g~$%d ~w~Level : %d ~n~to de mua go /muabiz",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(2.0, i, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							if(HouseInfo[h][hRentabil] == 0)
							{
								format(string, sizeof(string), "~w~Chu so huu nha: ~n~%s~n~Level : %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
							}
							else
							{
								format(string, sizeof(string), "~w~Chu so huu nha: ~n~%s~n~Rent: $%d Level : %d~n~Go /rentroom de thue nha",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
							}
							GameTextForPlayer(i, string, 5000, 3);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "~w~Ngoi nha hien tai dang ban~n~Mo ta: %s ~n~Gia: ~g~$%d~n~~w~ Level : %d~n~de mua nha (/muanha)",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						if (Trucking[tmpcar] == 1 && GetPlayerState(i) == PLAYER_STATE_DRIVER)
						{
							if (IsBizFullProduct(h))
								format(string, sizeof(string), "~r~Cua hang da du san pham, khong can mua them!");
							else if (!IsBizCanBuyProduct(h))
								format(string, sizeof(string), "~r~Ngan sach cua hang khong du de mua san pham!");
							else 
							{
								GetVehiclePos(tmpcar, TruckPos[i][0], TruckPos[i][1], TruckPos[i][2]);
								TruckBiz[i] = h;
								return 1;
							}
						}
						else
							format(string, sizeof(string), "~w~%s~n~~r~San pham can~w~: %d~n~~y~Gia moi san pham: ~w~: $%d~n~~g~Ngan sach: ~w~: $%d", BizzInfo[h][bMessage], (BizzInfo[h][bMaxProducts] - BizzInfo[h][bProducts]), BizzInfo[h][bPriceProd], BizzInfo[h][bTill]);

						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						if(BizzInfo[h][bOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~So huu : %s~n~Nguoi thau : %s~n~Phi ra vao : ~g~$%d ~n~~w~de vao go /enter",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~Co so kinh doanh hien dang ban~n~Gia: ~g~$%d ~w~Level : %d ~n~de mua go /buybiz",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
			}//custompickups end
			if (PlayerToPoint(2.0, i, 2063.0376,-1914.9541,13.5469))
			{// Hospital near speedway
				new str[255];
				format(str, sizeof(str), "~w~/thibanglai de bat dau bai thi~n~Le phi: ~r~$%d", DMVFEE);
				GameTextForPlayer(i, str, 5000, 5);
			}
			if (PlayerToPoint(2.0, i, 2584.6189, -1494.7810, -45.2369))
			{// Hospital near speedway
				GameTextForPlayer(i, "~w~/mophonggiam /dongphonggiam", 5000, 5);
			}
			if (PlayerToPoint(2.0, i, 20.5627,-103.7291,1005.2578))
			{// Binco pickup
				GameTextForPlayer(i, "~w~/muaquanao de thay doi trang phuc", 5000, 5);
			}
			if (PlayerToPoint(2.0, i, 203.9068,-41.0728,1001.8047))
			{// Binco pickup
				GameTextForPlayer(i, "~w~/muaquanao de thay doi trang phuc", 5000, 5);
			}
			if (PlayerToPoint(2.0, i, 161.3765,-83.8416,1001.8047))
			{// Binco pickup
				GameTextForPlayer(i, "~w~/muaquanao de thay doi trang phuc", 5000, 5);
			}
			if (PlayerToPoint(2.0, i, 214.4470,-7.6471,1001.2109))
			{// Binco pickup
				GameTextForPlayer(i, "~w~/muaquanao de thay doi trang phuc", 5000, 5);
			}
			if (PlayerToPoint(2.0, i, -1111.4635, -1681.5151, 76.3739))
			{// Hospital near speedway
				GameTextForPlayer(i, "~w~/buonlau de tien hanh buon lau", 5000, 5);
			}
			else if (PlayerToPoint(2.0, i, 2029.5945, -1404.6426, 17.2512))
			{// Hospital near speedway
				GameTextForPlayer(i, "~w~Go /hoimau de hoi mau", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, 349.5560,161.6693,1019.9912))
			{// All Saints hospital
				GameTextForPlayer(i, "~w~Go /hoimau de hoi mau", 5000, 5);
			}
			else if (PlayerToPoint(2.0, i, 1043.4530,-1028.0344,32.1016))
			{//Fernandez tuning start
				GameTextForPlayer(i, "~w~This mod shop belongs to Charles Luciano ~n~~r~ If you want to access it ~n~~y~ /call 961415", 5000, 3);
			}
			else if (PlayerToPoint(2.0, i, 1488.6949,-1721.7136,8.2067))
			{
			    GameTextForPlayer(i, "~w~Cho ~r~Den", 5000, 3);
			}
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,359.5408,206.7693,1008.3828))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Detective~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}*/
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,347.7374,193.7241,1014.1875))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Luat Su~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1215.1304,-11.8431,1000.9219))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Gai Diem~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1109.3318,-1796.3042,16.5938))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Car Jacker~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}*/
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1793.02,-1296.56,13.44))
			{
			    if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 9) { GameTextForPlayer(i, "~w~Type ~r~/paper ~w~to create a newspaper",5000,3); }
			    else if(PlayerInfo[i][pJob] == 15) { GameTextForPlayer(i, "~w~Type ~r~/papers ~w~to see all the made newspapers",5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2077.52,-2013.56,13.54))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Tho sua xe~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2226.1716,-1718.1792,13.5165))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Ve si~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,594.2437,-1249.4027,18.2232))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Car Dealer~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}*/
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,766.0804,14.5133,1000.7004))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Vo si~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1154.2208,-1770.8203,16.5992))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Tai xe xe buyt~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2439.7710,-2120.9285,13.5469))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Trucker~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2101.7620,-1812.5922,13.5547))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Nguoi giao Pizza~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,-382.6660,-1426.5121,26.2410))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Nong dan~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1784.58,-1297.52,13.37))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Paper Boy~y~ here ~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}*/
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,213.8549,-230.5761,1.7786))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh~r~Materials smuggler~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}*/
			/*else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2146.3523,-2267.7498,14.2344))
			{
			    GameTextForPlayer(i, "~y~You can get ~r~Materials~y~ from your packages here ~n~~w~Type /materials deliver", 5000, 3);
			}*/
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2072.5486,-1582.8029,13.4741))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Buon thuoc~y~~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i, -1109.5745, -1637.6207, 76.3672))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Nguoi trong trot~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i, 1611.5129, -1893.6997, 13.5469))
			{
				if (PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
				else { GameTextForPlayer(i, "~g~Xin chao,~n~~y~ban co the tro thanh ~r~Nguoi don rac~n~~w~Go /xinviec de xin viec.", 5000, 3); }
			}
			else if (PlayerToPoint(2.0, i,379.1396,-114.2661,1001.4922))
   			{// Pizza Pickup
        		if (PlayerInfo[i][pJob] != 17)
    			{
    			    SendClientMessage(i, COLOR_GREY, "Ban khong phai la nhan vien cua Pizza stack");
     				return 1;
    			}
    			if (sPizza[i] != 1)
    			{
     				SendClientMessage(i, COLOR_WHITE, "Ban da lay banh pizza, cho don dat hang");
       				sPizza[i] = 1;
      			}
   			}
			else if (PlayerToPoint(2.0, i,1174.9100,-1365.7330,13.9876))
			{
			    if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4) { SetTimerEx("elevator1", 1000, false, "i", i); }
			    else { GameTextForPlayer(i, "~r~Ban khong the su dung thang may", 5000, 3); }
			}
			else if (PlayerToPoint(2.0, i,1174.9591,-1369.8761,23.9736))
			{
			    if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4) { SetTimerEx("elevator2", 1000, false, "i", i); }
			    else { GameTextForPlayer(i, "~r~Ban khong the su dung thang may", 5000, 3); }
			}
			else if (PlayerToPoint(2.0, i, 1182.6879, -1317.7358, 1006.4028))
			{
				GameTextForPlayer(i, "~y~Go /trithuong de tri thuong", 5000, 3);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1381.0413,-1088.8511,27.3906))
			{
			    GameTextForPlayer(i, "~g~Welcome,~n~~y~Use /mission to take on a Mission", 5000, 3);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1600.8793,-2333.3535,13.5390))
			{
			    GameTextForPlayer(i, "~y~You found a guide book~n~ Type ~r~/guide ~y~to read it", 5000, 3);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,359.6820,207.0294,1008.3828))
			{
			    GameTextForPlayer(i, "~w~Advertisment business~n~Owner: ABC Studio~n~Post your ~g~/ad~w~ here", 5000, 3);
			}
			else if (PlayerToPoint(3.0, i,-38.8664,56.3031,3.1172))
			{
			    if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] == 6 || PlayerInfo[i][pJob] == 19)
			    {
			    	format(string, sizeof(string), "~r~Drugs ammount: %d", drugsys[DrugAmmount]);
					GameTextForPlayer(i, string, 5000, 3);
				}
				else if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] == 16 || PlayerInfo[i][pJob] == 20)
				{
					format(string, sizeof(string), "~w~Drugs Farm~n~Farm Owner: La Famiglia Sinatra~n~Drugs ammount:~r~ %d~n~~w~You can /smuggledrugs here", drugsys[DrugAmmount]);
					GameTextForPlayer(i, string, 5000, 3);
				}
				else
				{
				    GameTextForPlayer(i, "~r~Staff only!", 5000, 3);
				}
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2022.1492,-1108.7837,26.2031))
			{
				if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] == 16)
				{
					GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become ~r~Drugs Smuggler~n~~w~Go /xinviec de xin viec.", 5000, 3);
				}
				else
				{
				    GameTextForPlayer(i, "~r~Staff only", 5000, 3);
				}
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,242.7591,66.4315,1003.6406))
			{
			    if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			    {
			        GameTextForPlayer(i, "~g~Police Department elevator~n~~w~Type ~r~/pdup ~w~to go up~n~Type ~r~/pddown ~w~to go down", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(i, "~r~Staff only!", 5000, 3);
			    }
			}
			else if (GetPlayerState(i) == 2 && PlayerToPoint(3, i,2073.2979,-1831.1228,13.5469) || GetPlayerState(i) == 2 && PlayerToPoint(3, i,1024.9756,-1030.7930,32.0257) || GetPlayerState(i) == 2 && PlayerToPoint(3, i,488.3819,-1733.0563,11.1752) || GetPlayerState(i) == 2 && PlayerToPoint(3, i,719.8940,-464.8272,16.3359))
			{
			    format(string, sizeof(string), "~y~Pay ~r~& ~g~Spray~w~~n~Owner : %s~n~Entrance Fee : ~g~$%d ~w~~n~to enter type /enter",SBizzInfo[5][sbOwner],SBizzInfo[5][sbEntranceCost]);
				GameTextForPlayer(i, string, 5000, 3);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.5, i, 248.4994,-33.1366,1.5781))
			{
				GameTextForPlayer(i, "~w~Materials factory~n~You can ~r~/smugglemats ~w~here", 5000, 3);
			    /*if(PlayerInfo[i][pJob] == 22)
			    {
			        GameTextForPlayer(i, "~w~Materials factory~n~You can ~r~/smugglemats ~w~here", 5000, 3);
			    }*/
			   /* else
			    {
			        GameTextForPlayer(i, "~r~Staff only !", 5000, 3);
			    }*/
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, 2230.3579,-2286.2107,14.3751))
			{
			    /*if(PlayerInfo[i][pJob] == 22)
			    {
			        format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d", matssys[MatsAmmount]);
			        GameTextForPlayer(i, string, 5000, 3);
			    }*/
			    /*if(PlayerInfo[i][pJob] == 23)
			    {
			        format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d ~n~~w~You can ~g~/buymats ~w~here", matssys[MatsAmmount]);
			        GameTextForPlayer(i, string, 5000, 3);
			    }*/
			    /*else
			    {
			        GameTextForPlayer(i, "~r~Staff only !", 5000, 3);
			    }*/
				format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d ~n~~w~You can ~g~/buymats ~w~here", matssys[MatsAmmount]);
				GameTextForPlayer(i, string, 5000, 3);
			}
			else if(PlayerToPoint(2.0, i,1073.0619,-344.5148,73.9922))
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i, - 5000);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 2:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 31);
							SafeGivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i, - 6000);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 3:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 30);
							SafeGivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i, - 6000);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 4:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 31);
							SafeGivePlayerWeapon(i, 4, 1); SafeGivePlayerWeapon(i, 34);
			                SafeGivePlayerMoney(i, - 8000);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 5:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 30);
							SafeGivePlayerWeapon(i, 4, 1); SafeGivePlayerWeapon(i, 34);
			                SafeGivePlayerMoney(i, - 8000);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 6:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 31);
							SafeGivePlayerWeapon(i, 4, 1); SafeGivePlayerWeapon(i, 34);
							SafeGivePlayerMoney(i, - 8500);
							SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			            case 7:
			            {
			                SafeGivePlayerWeapon(i, 24);
							SafeGivePlayerWeapon(i, 29);
							SafeGivePlayerWeapon(i, 25);
							SafeGivePlayerWeapon(i, 30);
							SafeGivePlayerWeapon(i, 4, 1); SafeGivePlayerWeapon(i, 34);
			                SafeGivePlayerMoney(i, - 8500);
			                SendClientMessage(i, COLOR_WHITE, "* You picked up your Ordered Package.");
			            }
			        }
			        OrderReady[i] = 0;
			    }
			}//Hitman delivery stuff
			else if(PlayerOnMission[i] > 0 && PlayMission[kToggle] == 0)
			{
			    if(MissionCheckpoint[i] == 1 && PlayerToPoint(10.0, i,PlayMission[kCP1][0],PlayMission[kCP1][1],PlayMission[kCP1][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 2;
				}
				else if(MissionCheckpoint[i] == 2 && PlayerToPoint(10.0, i,PlayMission[kCP2][0],PlayMission[kCP2][1],PlayMission[kCP2][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 3;
				}
				else if(MissionCheckpoint[i] == 3 && PlayerToPoint(10.0, i,PlayMission[kCP3][0],PlayMission[kCP3][1],PlayMission[kCP3][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 4;
				}
				else if(MissionCheckpoint[i] == 4 && PlayerToPoint(10.0, i,PlayMission[kCP4][0],PlayMission[kCP4][1],PlayMission[kCP4][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 5;
				}
				else if(MissionCheckpoint[i] == 5 && PlayerToPoint(10.0, i,PlayMission[kCP5][0],PlayMission[kCP5][1],PlayMission[kCP5][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 6;
				}
				else if(MissionCheckpoint[i] == 6 && PlayerToPoint(10.0, i,PlayMission[kCP6][0],PlayMission[kCP6][1],PlayMission[kCP6][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "..:: Mission Passed : %s | Reward received: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(i, COLOR_GREEN, string);
					SafeGivePlayerMoney(i, PlayMission[kReward]);
					PlayerInfo[i][pMissionNr] = PlayerOnMission[i];
					MissionCheckpoint[i] = 0;
					PlayerOnMission[i] = 0;
				}
			}
		}
	}
	return 1;
}

public IdleKick()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
		    if(PlayerInfo[i][pAdmin] < 1)
		    {
				GetPlayerPos(i, PlayerPos[i][0], PlayerPos[i][1], PlayerPos[i][2]);
				if(PlayerPos[i][0] == PlayerPos[i][3] && PlayerPos[i][1] == PlayerPos[i][4] && PlayerPos[i][2] == PlayerPos[i][5])
				{
					new plname[64];
					new string[128];
					GetPlayerName(i, plname, sizeof(plname));
					format(string, sizeof(string), "AdmCmd: %s da bi kick boi SERVER, Ly do: AFK", plname);
					BroadCast(COLOR_LIGHTRED, string);
					KickEx(i);
				}
				PlayerPos[i][3] = PlayerPos[i][0];
				PlayerPos[i][4] = PlayerPos[i][1];
				PlayerPos[i][5] = PlayerPos[i][2];
			}
		}
	}
}

public SetCamBack(playerid)
{
    if(IsLogOn(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public AddsOn()
{
	adds=1;
	return 1;
}

public BackupClear(playerid, calledbytimer)
{
	if(IsLogOn(playerid))
	{
		if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsLogOn(i))
					{
						if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Yeu cau backup cua ban da bi xoa.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Yeu cau backup cua ban da bi xoa mot cach tu dong.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_DARKNICERED, "Ban khong co yeu cau backup nao!");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban khong phai la canh sat!");
			}
		}
	}
	return 1;
}

public ResetRoadblockTimer()
{
	roadblocktimer = 0;
	return 1;
}

public RemoveRoadblock(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsLogOn(i))
		{
			if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			{
				DisableCheckpoint(i);
			}
		}
	}
	DestroyObject(PlayerInfo[playerid][pRoadblock]);
	PlayerInfo[playerid][pRoadblock] = 0;
	return 1;
}

public IsPlayerInAreaRange(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

public AdvertiseToPlayersAtBusStop(Float:stopX, Float:stopY, Float:stopZ, eastorwest)
{
	for (new i; i<=MAX_PLAYERS; i++)
	{
		if (IsLogOn(i) && BusrouteWest[i][0] == 0 && BusrouteEast[i][0] == 0)
		{
			if (PlayerToPoint(100, i, stopX, stopY, stopZ))
			{
				SendClientMessage(i, TEAM_AZTECAS_COLOR, "Mot xe bus dang o diem dung gan do. Cac tuyen duong nhu sau:");
				if (eastorwest == 0) SendBusRoute(i, 0);
				else SendBusRoute(i, 1);
				SendClientMessage(i, TEAM_AZTECAS_COLOR, "Ban co muon duoc hien thi diem dung nay? (yes/no)");
				BusShowLocation[i][0] = 1;
				BusShowLocation[i][1] = stopX;
				BusShowLocation[i][2] = stopY;
				BusShowLocation[i][3] = stopZ;
			}
		}
	}
	return 1;
}

public SendBusRoute(playerid, eastorwest)
{
	if (eastorwest == 0)
	{
		// East
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Bus Station >> Airport >> Willowfield Factory >> Loco >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "6 Street Plaza >> 10 Green Bottles >> Pigpen >> Golden Palm >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Jefferson Motel >> Glen Park >> Back to Bus stop <<");
	}
	else
	{
		// West
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Bus Station >> Alhambra >> Glen Park >> Vinewood Burger >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Vice Theater >> Bank >> Rodeo >> Sana Maria Beach >> Verona Beach >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Pershing Square >> Back to Bus stop <<");
	}
	return 1;
}

public IsInBusrouteZone(playerid)
{
	if (IsPlayerInAreaRange(playerid, 1722.3599, 2901.8652, -2694.5417, -904.3515)) return 0; // east
	else if (IsPlayerInAreaRange(playerid, 127.4722, 1722.3599, -2694.5417, -904.3515)) return 1; // west
	return 1;
}
public BusrouteEnd(playerid, vehicleid)
{
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		SendClientMessage(playerid, COLOR_BLUE, "Bus route ended.");
		GameTextForPlayer(playerid, "~r~Bus Route Ended", 5000, 3);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
	}
	DisableCheckpoint(playerid);
	if (vehicleid != 0) SetVehicleToRespawn2(vehicleid);
	BusrouteEast[playerid][0] = 0;
	BusrouteEast[playerid][1] = 0;
	//BusrouteEast[playerid][2] = 0;
	BusrouteWest[playerid][0] = 0;
	BusrouteWest[playerid][1] = 0;
	//BusrouteWest[playerid][2] = 0;
	return 1;
}

public CheckForWalkingTeleport(playerid) // only put teleports ON FOOT here, use another function for vehicle ones - luk0r
{
	if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	if (GetPVarInt(playerid, "DelayWalkingTeleportTime") > 0) return 1;
	SetPVarInt(playerid, "DelayWalkingTeleportTime", 3);
	/*
	 *  HOW TO USE THIS FUNCTION:
	 *
	 *  Just use your normal PlayerToPoint functions but make them use PlayerToPointStripped instead.
	 *  Use the arguments cx,cy,cz at the end of each call (look at the others for an example).
	 *
	 */
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);
	new enter = 0;

	if(PlayerToPointStripped(1, playerid,1554.9537,-1675.6584,16.1953, cx,cy,cz))
	{//LSPD Entrance
		GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
		SetPlayerInterior(playerid, 6);
		SetPlayerPos(playerid,246.7079,66.2239,1003.6406);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid, 246.5325, 62.4251, 1003.6406, cx, cy, cz))
	{//LSPD Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1552.3231, -1674.6780, 16.1953);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid, 2574.7378, -1475.0773, -48.8995, cx, cy, cz))
	{//DoC Entrance Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 648.8242, -1360.7623, 13.5873);
		PlayerInfo[playerid][pInt] = 0;
		SetPVarInt(playerid, "SpecialCase", 1);
	}
	else if (PlayerToPointStripped(1, playerid, 648.8242, -1360.7623, 13.5873, cx, cy, cz))
	{//DoC Entrance
		GameTextForPlayer(playerid, "~w~Department of Corrections", 5000, 1);
		SetPlayerPos(playerid, 2574.7378, -1475.0773, -48.8995);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid, 2594.6277, -1540.4736, -48.9141, cx, cy, cz))
	{//DoC Back Entrance Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerPos(playerid, 732.9749, -1342.1331, 13.5236);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPVarInt(playerid, "SpecialCase", 1);
	}
	else if (PlayerToPointStripped(1, playerid, 732.9749, -1342.1331, 13.5236, cx, cy, cz))
	{//DoC Back Entrance
		GameTextForPlayer(playerid, "~w~Department of Corrections", 5000, 1);
		SetPlayerPos(playerid, 2594.6277, -1540.4736, -48.9141);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid, 2594.4473, -1540.8096, -45.2373, cx, cy, cz))
	{//DoC Little Entrance Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerPos(playerid, 741.4783, -1358.7620, 21.6406);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPVarInt(playerid, "SpecialCase", 1);
	}
	else if (PlayerToPointStripped(1, playerid, 741.4783, -1358.7620, 21.6406, cx, cy, cz))
	{//DoC Little Entrance
		GameTextForPlayer(playerid, "~w~Department of Corrections", 5000, 1);
		SetPlayerPos(playerid, 2594.4473, -1540.8096, -45.2373);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1.0, playerid,488.2531,-82.7632,998.7578, cx,cy,cz))
	{
		//Misty/10 Green Toilets
		SetPlayerPos(playerid,2277.5942,-1139.8883,1050.8984);
		GameTextForPlayer(playerid, "~w~Restroom", 5000, 3);
		SetPlayerInterior(playerid,11);
		PlayerInfo[playerid][pInt] = 11;
		enter = 1;
	}
	else if (PlayerToPointStripped(2.0, playerid,2280.0476,-1139.5413,1050.8984, cx,cy,cz))
	{
		//Misty/10 Green Toilets
		SetPlayerPos(playerid,490.9059,-81.4256,998.7578);
		GameTextForPlayer(playerid, "~w~Ten Green Bottles", 5000, 3);
		SetPlayerInterior(playerid,11);
		PlayerInfo[playerid][pInt] = 11;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,1352.1194,-1759.2534,13.5078, cx,cy,cz))
	{//24/7 near PD Entrance
		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		SetPlayerInterior(playerid, 6);
		SetPlayerPos(playerid,-26.6916,-55.7149,1003.5469);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,-27.3919,-58.2529,1003.5469, cx,cy,cz))
	{//24/7 near PD Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1352.3282,-1755.4298,13.3542);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,1833.6124,-1842.4968,13.5781, cx,cy,cz))
	{//24/7 near 8-ball entrance
		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		SetPlayerInterior(playerid, 18);
		SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		PlayerInfo[playerid][pInt] = 18;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,-30.9299,-92.0114,1003.5469, cx,cy,cz))
	{//24/7 near 8-ball exit
		if(GetPlayerVirtualWorld(playerid) == 0)
		{
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1831.5413,-1843.3785,13.5781);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if(GetPlayerVirtualWorld(playerid) == 2)
		{
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1315.7769,-901.4099,39.5781);
			PlayerInfo[playerid][pInt] = 0;
		}
	}
	else if(PlayerToPointStripped(1, playerid,1315.4581,-897.6843,39.5781, cx,cy,cz))
	{//24/7 vinewood
		SetVirtualWorld(playerid, 2);
		PlayerInfo[playerid][pVirWorld] = 2;
		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		SetPlayerInterior(playerid, 18);
		SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		PlayerInfo[playerid][pInt] = 18;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,1836.4064,-1682.4403,13.3493, cx,cy,cz))
	{//Alhambra Entrance
		GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
		SetPlayerInterior(playerid, 17);
		SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
		PlayerInfo[playerid][pInt] = 17;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,493.4393,-24.9169,1000.6719, cx,cy,cz))
	{//Alhambra Exit
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1834.4000,-1681.7500,13.4331);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2310.0183,-1643.4669,14.8270, cx,cy,cz))
	{//10 green
		GameTextForPlayer(playerid, "~w~Ten Green Bottles", 5000, 1);
		SetPlayerInterior(playerid, 11);
		SetPlayerPos(playerid,502.0531,-70.2137,998.7578);
		PlayerInfo[playerid][pInt] = 11;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,501.8708,-67.5820,998.7578, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2307.0027,-1645.2213,14.6882);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2244.3423,-1665.5542,15.4766, cx,cy,cz))
	{//Binco next to 10 green
		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
		SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /clothes to change your outfit");
		SetPlayerInterior(playerid, 15);
		SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
		PlayerInfo[playerid][pInt] = 15;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,207.7662,-111.2663,1005.1328, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2245.2778,-1661.1738,15.4690);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2229.9011,-1721.2582,13.5613, cx,cy,cz))
	{//Ganton Gym
		GameTextForPlayer(playerid, "~w~Gym", 5000, 1);
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
		PlayerInfo[playerid][pInt] = 5;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,772.3594,-5.5157,1000.7286, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2225.6699,-1725.3134,13.5586);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2421.4998,-1219.2438,25.5617, cx,cy,cz))
	{//Pigpen
		GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
		SetPlayerInterior(playerid, 2);
		SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
		PlayerInfo[playerid][pInt] = 2;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,1204.8462,-13.8521,1000.9219, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2419.5559,-1226.5612,24.9379);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
    else if(PlayerToPointStripped(1, playerid,2419.9941,-1509.5865,24.0000, cx,cy,cz))
	{//Cluckin Bell near pigpen
		OnPlayerEnterFood(playerid, 1);
	}
	else if(PlayerToPointStripped(1, playerid,364.0594,-11.7518,1001.8516, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		if(GetPlayerVirtualWorld(playerid) == 0)
		{
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2423.8145,-1510.2896,23.9922);
			PlayerInfo[playerid][pInt] = 0;
		}//cluckin bell near 10 green
		else if(GetPlayerVirtualWorld(playerid) == 2)
		{
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2398.5508,-1894.6324,13.3828);
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			PlayerInfo[playerid][pInt] = 0;
		}//cluckin bell marina
		else if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,923.8998,-1352.9694,13.3768);
			PlayerInfo[playerid][pInt] = 0;
		}
		OnPlayerExitFood(playerid); // ?
		return 1;
	}
	else if(PlayerToPointStripped(1, playerid,2398.6240,-1899.2014,13.5469, cx,cy,cz))
	{//Cluckin Bell near 10 green
		SetVirtualWorld(playerid, 2);
		PlayerInfo[playerid][pVirWorld] = 2;
		OnPlayerEnterFood(playerid, 1);
	}
	else if(PlayerToPointStripped(1, playerid,810.4849,-1616.2451,13.5469, cx,cy,cz))
	{//Marina Burger shot
		OnPlayerEnterFood(playerid, 2);
	}
	else if(PlayerToPointStripped(1, playerid,362.8835,-75.1787,1001.5078, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		if(GetPlayerVirtualWorld(playerid) == 0)
		{
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,815.5034,-1616.7700,13.7521);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if(GetPlayerVirtualWorld(playerid) == 1)// vinewood burger shot
		{
			SetVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1200.8680,-921.9525,43.0104);
			PlayerInfo[playerid][pInt] = 0;
		}
		OnPlayerExitFood(playerid);
		return 1;
	}
	else if(PlayerToPointStripped(1, playerid,928.9110,-1352.9958,13.3438, cx,cy,cz))
	{//Marina Cluckin bell
		SetVirtualWorld(playerid, 1);
		PlayerInfo[playerid][pVirWorld] = 1;
		OnPlayerEnterFood(playerid, 1);
	}
	else if(PlayerToPointStripped(1, playerid,1199.2477,-918.1447,43.1233, cx,cy,cz))
	{//Vinewood Burger shot
		SetVirtualWorld(playerid, 1);
		PlayerInfo[playerid][pVirWorld] = 1;
		OnPlayerEnterFood(playerid, 2);
	}
	else if(PlayerToPointStripped(1, playerid,1000.5861,-919.8832,42.3281, cx,cy,cz))
	{//24/7 gas station
		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		SetPlayerInterior(playerid, 4);
		SetPlayerPos(playerid,-28.2619,-26.2015,1003.5573);
		PlayerInfo[playerid][pInt] = 4;
		enter = 1;
	}
	else if(PlayerToPointStripped(1, playerid,-28.0241,-31.7674,1003.5573, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,994.6481,-920.7285,42.1797);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,227.5614,-7.3146,1002.2109, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		SetVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVirWorld] = 0;
		GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,454.5949,-1500.6449,30.8821);
		OnPlayerExitFood(playerid); // ?
		PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2105.4858,-1806.4725,13.5547, cx,cy,cz))
	{//Pizzaboy
		OnPlayerEnterFood(playerid, 3);
	}
	else if(PlayerToPointStripped(1, playerid,203.5140,-202.2578,1.5781, cx,cy,cz))
	{//Pizzaboy
	    SetVirtualWorld(playerid, 2);
	    PlayerInfo[playerid][pVirWorld] = 2;
		OnPlayerEnterFood(playerid, 3);
	}
	else if(PlayerToPointStripped(1, playerid,372.3847,-133.5248,1001.4922, cx,cy,cz))
	{//Some teleports are fucked up but they are working
	    if(GetPlayerVirtualWorld(playerid) == 2)
	    {
	        GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
	        SetPlayerInterior(playerid, 0);
	        SetPlayerPos(playerid,203.2209,-204.6613,1.5781);
	        OnPlayerExitFood(playerid); // ?
	        PlayerInfo[playerid][pInt] = 0;
	        SetVirtualWorld(playerid, 0);
	        PlayerInfo[playerid][pVirWorld] = 0;
	    }
	    else
	    {
			GameTextForPlayer(playerid, "~w~Los Angeles", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2099.9783,-1806.4928,13.5547);
			OnPlayerExitFood(playerid); // ?
			PlayerInfo[playerid][pInt] = 0;
		}
	}
	else if(PlayerToPointStripped(1, playerid,2105.4858,-1806.4725,13.5547, cx,cy,cz))
	{//Pizzaboy
		OnPlayerEnterFood(playerid, 3);
	}
	else if (PlayerToPointStripped(2.0, playerid,-2441.9749,754.0135,35.1786, cx,cy,cz))
	{
		//24-7
		SetPlayerPos(playerid, -25.1326,-139.0670,1003.5469);
		GameTextForPlayer(playerid, "~w~Welcome to the ~r~24-7",5000,3);
		SetPlayerInterior(playerid,16);
		PlayerInfo[playerid][pInt] = 16;
		enter = 1;
	}
	else if (PlayerToPointStripped(2.0, playerid,-25.1326,-141.0670,1003.5469, cx,cy,cz))
	{
		//24-7
		SetPlayerPos(playerid, -2441.9749,752.0135,35.1786);
		GameTextForPlayer(playerid, "~r~San Fierro",5000,3);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1298.7075,-798.5981,84.1406, cx,cy,cz))
	{
		//Madd dog crip enter
  		SetPlayerPos(playerid, 1254.3436,-789.3809,1084.0078);
		GameTextForPlayer(playerid, "~w~La Famiglia Sinatra HQ",5000,1);
		SetPlayerInterior(playerid,5);
		PlayerInfo[playerid][pInt] = 5;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,1252.5208,-789.2282,1084.0078, cx,cy,cz))
	{
		//Madd dog crip exit
		SetPlayerPos(playerid, 1298.6263,-801.5491,84.1406);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1518.5179,-1452.9224,14.2031, cx,cy,cz))
	{
		//FBI Enter
		SetPlayerPos(playerid, 288.7287,168.5377,1007.1719);
		GameTextForPlayer(playerid, "~w~FBI Department",5000,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 3;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,288.7287,167.0377,1007.1719, cx,cy,cz))
	{
		//FBI Exit
		SetPlayerPos(playerid, 1518.4724,-1450.2354,13.5469);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,238.3001,138.9406,1003.0234, cx,cy,cz))
	{
		//FBI Exit
		SetPlayerPos(playerid, 1518.4724,-1450.2354,13.5469);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1173.2563,-1323.3102,15.3943, cx,cy,cz))
	{
		//Hospital enter
		SetPlayerPos(playerid, 1172.1720,-1332.8326,1006.4028);
		GameTextForPlayer(playerid, "~w~All Saints Hospital",5000,1);
		SetPlayerInterior(playerid,6);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,1172.1730,-1333.9272,1006.4965, cx,cy,cz))
	{
		//Hospital exit
		SetPlayerPos(playerid, 1174.2563,-1323.3102,15.3943);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 270);
		PlayerInfo[playerid][pInt] = 0;
	}
	/*else if (PlayerToPointStripped(1, playerid,1038.0298,-1339.9967,13.7361, cx,cy,cz))
	{
		//Jim's sticky ring
		SetPlayerPos(playerid, 377.5237,-191.6597,1000.6328);
		GameTextForPlayer(playerid, "~w~Jim's sticky ring",5000,1);
		SetPlayerInterior(playerid,17);
		SetPlayerFacingAngle(playerid, 320);
		PlayerInfo[playerid][pInt] = 17;
	}
	else if (PlayerToPointStripped(1, playerid,377.1724,-193.3045,1000.6328, cx,cy,cz))
	{
		//Jim's sticky ring
		SetPlayerPos(playerid, 1038.5148,-1338.0944,13.7266);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}*/
	else if (PlayerToPointStripped(1, playerid,1038.0298,-1339.9967,13.7361, cx,cy,cz))
	{
		//Jim's sticky ring
		OnPlayerEnterFood(playerid, 4);
	}
	else if (PlayerToPointStripped(1, playerid,377.1724,-193.3045,1000.6328, cx,cy,cz))
	{
		//Jim's sticky ring
		SetPlayerPos(playerid, 1038.5148,-1338.0944,13.7266);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		OnPlayerExitFood(playerid);
	}
	else if (PlayerToPointStripped(1, playerid,2495.3481,-1691.1355,14.7656, cx,cy,cz))
	{
		//47th Street Saints  gang hq
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			SetPlayerPos(playerid, 2496.0061,-1693.5201,1014.7422);
			GameTextForPlayer(playerid, "~w~47th Street Saints HQ",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 181);
			PlayerInfo[playerid][pInt] = 3;
			enter = 1;
		}
		else if(hqlock[iolock] == 0)
		{
		    SetPlayerPos(playerid, 2496.0061,-1693.5201,1014.7422);
			GameTextForPlayer(playerid, "~w~47th Street Saints HQ",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 181);
			PlayerInfo[playerid][pInt] = 3;
			enter = 1;
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2496.0039,-1692.2004,1014.7422, cx,cy,cz))
	{
		//47th Street Saints gang hq
		SetPlayerPos(playerid, 2495.3718,-1688.8561,14.0673);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 1);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,2495.9866,-1692.0835,1014.7422, cx,cy,cz))
	{
		//Easy Side Bloods  gang hq
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			SetPlayerPos(playerid, 446.9658,1399.1479,1084.3047);
			GameTextForPlayer(playerid, "~w~Easy Side Bloods HQ",5000,1);
			SetPlayerInterior(playerid,2);
			SetPlayerFacingAngle(playerid, 1);
			PlayerInfo[playerid][pInt] = 2;
			enter = 1;
		}
		else if(hqlock[iolock] == 0)
		{
		    SetPlayerPos(playerid, 318.4700,1117.5127,1083.8828);
			GameTextForPlayer(playerid, "~w~Easy Side Bloods HQ",5000,1);
			SetPlayerInterior(playerid,2);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 2;
			enter = 1;
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,447.0208,1397.4796,1084.3047, cx,cy,cz))
	{
		//East Side Bloods gang hq
		SetPlayerPos(playerid, 2501.8979,-1495.7324,24.0000);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 179);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1828.1594,-1980.4380,13.5469, cx,cy,cz))
	{
		//Surenos HQ
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
		{
			SetPlayerPos(playerid, 2352.1885,-1180.9219,1027.9766);
			GameTextForPlayer(playerid, "~w~Los Surenos 13 HQ",5000,1);
			SetPlayerInterior(playerid,5);
			SetPlayerFacingAngle(playerid, 90);
			PlayerInfo[playerid][pInt] = 5;
			enter = 1;
		}
		else if(hqlock[surlock] == 0)
		{
		    SetPlayerPos(playerid, 1237.8329,-833.3148,1084.0078);
			GameTextForPlayer(playerid, "~w~Los Surenos 13 HQ",5000,1);
			SetPlayerInterior(playerid,5);
			SetPlayerFacingAngle(playerid, 90);
			PlayerInfo[playerid][pInt] = 5;
			enter = 1;
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2352.9187,-1180.9679,1027.9766, cx,cy,cz))
	{
		//Surenos HQ
		SetPlayerPos(playerid, 1828.1904,-1981.0223,13.5469);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 179);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1481.0206,-1771.1138,18.7958, cx,cy,cz))
	{
		//City hall
		SetPlayerPos(playerid, 386.2978,173.8582,1008.3828);
		GameTextForPlayer(playerid, "~w~City Hall",5000,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 3;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,390.0630,173.5741,1008.3828, cx,cy,cz))
	{
		//City hall
		SetPlayerPos(playerid, 1481.0206,-1769.5138,18.7958);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1784.58,-1297.52,13.37, cx,cy,cz))
	{
		//ABC studio
		SetPlayerPos(playerid, 366.5081,193.1942,1008.3828);
		GameTextForPlayer(playerid, "~w~ABC studio",5000,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 3;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,366.3892,190.9860,1008.3828, cx,cy,cz))
	{
		//ABC studio
		SetPlayerPos(playerid, 1784.3687,-1294.7397,13.4606);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1752.8452,-1894.1328,13.5573, cx,cy,cz))
	{
		//LA Yellow Cab Co.
		SetPlayerPos(playerid, 371.8502,182.0368,1014.1875);
		GameTextForPlayer(playerid, "~w~LA Yellow Cab Co.",5000,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 3;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,371.4523,180.2195,1014.1875, cx,cy,cz))
	{
		//LA Yellow Cab Co.
		SetPlayerPos(playerid, 1755.7578,-1894.1992,13.5566);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	/*else if (PlayerToPointStripped(1, playerid,2770.6973,-1628.4293,12.1775, cx,cy,cz))
	{
		//Institute of Race HQ
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			SetPlayerPos(playerid, 2464.8335,-1698.4218,1013.5078);
			GameTextForPlayer(playerid, "~w~Institute of Race HQ",5000,1);
			SetPlayerInterior(playerid,2);
			SetPlayerFacingAngle(playerid, 90);
			PlayerInfo[playerid][pInt] = 2;
		}
		else if(hqlock[iolock] == 0)
		{
		    SetPlayerPos(playerid, 2464.8335,-1698.4218,1013.5078);
			GameTextForPlayer(playerid, "~w~Institute of Race HQ",5000,1);
			SetPlayerInterior(playerid,2);
			SetPlayerFacingAngle(playerid, 90);
			PlayerInfo[playerid][pInt] = 2;
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked",5000,1);
		}
	}
	else if (PlayerToPointStripped(1.5, playerid,2468.7039,-1698.3466,1013.5078, cx,cy,cz))
	{
		//Institute of Race HQ
		SetPlayerPos(playerid, 2772.6973,-1628.4293,12.1775);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}*/
	else if (PlayerToPointStripped(1, playerid,2045.3928,-1908.0372,13.5469, cx,cy,cz))
	{
		//DMW
		SetPlayerPos(playerid, 1494.6207,1305.2336,1093.2891);
		GameTextForPlayer(playerid, "~w~License center",5000,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid, 0);
		PlayerInfo[playerid][pInt] = 3;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,1494.2778,1303.7288,1093.2891, cx,cy,cz))
	{
		//DMW Exit
		SetPlayerPos(playerid, 2046.8928,-1908.0372,13.5469);
		GameTextForPlayer(playerid, "~w~Los Angeles",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 280);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1524.5724,-1677.8043,6.2188, cx,cy,cz))
	{
	    //PD Elevator
	    SetPlayerPos(playerid, 244.0099,66.4152,1003.6406);
	    GameTextForPlayer(playerid, "~w~Police Department",5000,1);
	    SetPlayerInterior(playerid,6);
	    SetPlayerFacingAngle(playerid, 270);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1, playerid,1557.7257,-1675.2711,28.3955, cx,cy,cz))
	{
	    //PD Elevator
	    SetPlayerPos(playerid, 244.0099,66.4152,1003.6406);
	    GameTextForPlayer(playerid, "~w~Police Department",5000,1);
	    SetPlayerInterior(playerid,6);
	    SetPlayerFacingAngle(playerid, 270);
		PlayerInfo[playerid][pInt] = 6;
		enter = 1;
	}
	else if (PlayerToPointStripped(1.5, playerid,1570.3828,-1333.8882,16.4844, cx,cy,cz))
	{
	    //Next to PD building
	    SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
	    GameTextForPlayer(playerid, "~w~Roof of News building",5000,1);
	    SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1.5, playerid,1548.8167,-1366.2247,326.2109, cx,cy,cz))
	{
	    //Next to PD building
	    SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
	    GameTextForPlayer(playerid, "~w~News building",5000,1);
	    SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}

	if (enter == 1)
		UpdateLastEntrance(playerid, cx, cy, cz);
	else if(GetPlayerInterior(playerid) == 0)
		UpdateLastEntrance(playerid, 0, 0, 0);

	return 1;
}
stock UpdateLastEntrance(playerid, Float:x, Float:y, Float:z)
{
	LastEntrance[playerid][0] = x;
	LastEntrance[playerid][1] = y;
	LastEntrance[playerid][2] = z;
}
public CreateFoodMenus() // by Luk0r (Donut part by Ellis)
{
	// Burger Shot
	burgermenu = CreateMenu("Burger Shot", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(burgermenu,0,"Meals");
	AddMenuItem(burgermenu,0,"Sharp Shooter");
	AddMenuItem(burgermenu,0,"Cheeseburger");
	AddMenuItem(burgermenu,0,"Double Patty Sandwich");
	AddMenuItem(burgermenu,0,"Beefy Salad");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Drinks");
	AddMenuItem(burgermenu,0,"Bottle of Water");
	AddMenuItem(burgermenu,0,"Sprunk");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Leave");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$2"); // Sharp Shooter
	AddMenuItem(burgermenu,1,"$4"); // Cheeseburger
	AddMenuItem(burgermenu,1,"$5"); // DP Sandwich
	AddMenuItem(burgermenu,1,"$3"); // Beefy Salad
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$1"); // Water
	AddMenuItem(burgermenu,1,"$1"); // Sprunk
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	DisableMenuRow(burgermenu, 0);
	DisableMenuRow(burgermenu, 5);
	DisableMenuRow(burgermenu, 6);
	DisableMenuRow(burgermenu, 9);

	// Cluckin Bell
	chickenmenu = CreateMenu("Cluckin' Bell", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(chickenmenu,0,"Meals");
	AddMenuItem(chickenmenu,0,"Little Clucker");
	AddMenuItem(chickenmenu,0,"Chicken Nuggets");
	AddMenuItem(chickenmenu,0,"Chicken Sandwich");
	AddMenuItem(chickenmenu,0,"Chicken Salad");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Drinks");
	AddMenuItem(chickenmenu,0,"Bottle of Water");
	AddMenuItem(chickenmenu,0,"Sprunk");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Leave");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$2"); // Little Clucker
	AddMenuItem(chickenmenu,1,"$4"); // Nuggets
	AddMenuItem(chickenmenu,1,"$5"); // C Sandwich
	AddMenuItem(chickenmenu,1,"$3"); // Salad
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$1"); // Water
	AddMenuItem(chickenmenu,1,"$1"); // Sprunk
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	DisableMenuRow(chickenmenu, 0);
	DisableMenuRow(chickenmenu, 5);
	DisableMenuRow(chickenmenu, 6);
	DisableMenuRow(chickenmenu, 9);

	// Pizza Stack
	pizzamenu = CreateMenu("Well Stacked Pizza", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(pizzamenu,0,"Meals");
	AddMenuItem(pizzamenu,0,"Little Sicilian");
	AddMenuItem(pizzamenu,0,"Personal Pan Pizza");
	AddMenuItem(pizzamenu,0,"Sheet Pizza");
	AddMenuItem(pizzamenu,0,"Pepperoni Salad");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Drinks");
	AddMenuItem(pizzamenu,0,"Bottle of Water");
	AddMenuItem(pizzamenu,0,"Sprunk");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Leave");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$2"); // Sicilian
	AddMenuItem(pizzamenu,1,"$4"); // Personal Pan
	AddMenuItem(pizzamenu,1,"$5"); // Sheet
	AddMenuItem(pizzamenu,1,"$3"); // Salad
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$1"); // Water
	AddMenuItem(pizzamenu,1,"$1"); // Sprunk
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	DisableMenuRow(pizzamenu, 0);
	DisableMenuRow(pizzamenu, 5);
	DisableMenuRow(pizzamenu, 6);
	DisableMenuRow(pizzamenu, 9);

	// Jim's sticky ring
	donutshop = CreateMenu("Jim's sticky ring", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(donutshop,0,"Donuts");
	AddMenuItem(donutshop,0,"Little Donut");
	AddMenuItem(donutshop,0,"Regular Donut");
	AddMenuItem(donutshop,0,"Chief Donut");
	AddMenuItem(donutshop,0,"Extra large Donut");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Drinks");
	AddMenuItem(donutshop,0,"Bottle of Water");
	AddMenuItem(donutshop,0,"Sprunk");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Leave");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$2"); // Little Donut
	AddMenuItem(donutshop,1,"$4"); // Regular Donut
	AddMenuItem(donutshop,1,"$5"); // Chief Donut
	AddMenuItem(donutshop,1,"$4"); // Extra large Donut
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$1"); // Water
	AddMenuItem(donutshop,1,"$1"); // Sprunk
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	DisableMenuRow(donutshop, 0);
	DisableMenuRow(donutshop, 5);
	DisableMenuRow(donutshop, 6);
	DisableMenuRow(donutshop, 9);
}

public ClearChatbox(playerid, lines)
{
	if (IsLogOn(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}

public CreateGuideMenus()
{
	Guide = CreateMenu("Huong dan", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(Guide, 0, "Luat RP");
	AddMenuItem(Guide, 0, "Tim viec lam");
	AddMenuItem(Guide, 0, "Dia diem");
	AddMenuItem(Guide, 0, "- Thoat -");

	Place = CreateMenu("Dia diem", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(Place, 0, "Trung tam giay phep");
	AddMenuItem(Place, 0, "Noi thue xe");
	AddMenuItem(Place, 0, "Cua hang quan ao");
	AddMenuItem(Place, 0, "Lay vat lieu");
	AddMenuItem(Place, 0, "Lay hat giong");
	AddMenuItem(Place, 0, "Che sung");
	AddMenuItem(Place, 0, "Tru so LSPD");
	AddMenuItem(Place, 0, "City hall");
	AddMenuItem(Place, 0, "Cho den (black market)");
	AddMenuItem(Place, 0, "<- Sau");
	AddMenuItem(Place, 0, "- Thoat -");

	JobLocations = CreateMenu("Tim viec lam", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(JobLocations, 0, "Luat su");
	AddMenuItem(JobLocations, 0, "Gai diem");
	AddMenuItem(JobLocations, 0, "Tho sua xe");
	AddMenuItem(JobLocations, 0, "Ve si");
	AddMenuItem(JobLocations, 0, "Vo si");
	AddMenuItem(JobLocations, 0, "Lai xe bus");
	AddMenuItem(JobLocations, 0, "Trucker");
	AddMenuItem(JobLocations, 0, "Giao pizza");
	AddMenuItem(JobLocations, 0, "Toi ->");
	AddMenuItem(JobLocations, 0, "- Thoat -");

	JobLocations2 = CreateMenu("Tim viec lam", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(JobLocations2, 0, "Nong dan");
	AddMenuItem(JobLocations2, 0, "Don rac");
	AddMenuItem(JobLocations2, 0, "Tho vu khi");
	AddMenuItem(JobLocations2, 0, "Nguoi buon thuoc");
	AddMenuItem(JobLocations2, 0, "Trong trot");
	AddMenuItem(JobLocations2, 0, "Buon lau");
	AddMenuItem(JobLocations2, 0, "<- Lui");
	AddMenuItem(JobLocations2, 0, "- Thoat -");
}

public Startup(playerid, vehicleid)
{
    new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
    new newcar = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER || engineOn[vehicleid])
	{
		//I do nothing!
	}
	else if(IsPlayerInAnyVehicle(playerid) && !engineOn[vehicleid] && !vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && pveh != 462 && newcar != 59 && newcar != 60 && !IsAPlane(newcar) && !IsAHarvest(newcar) && !IsADrugHarvest(newcar) && !IsASweeper(newcar))
	{
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Go /engine hoac nhan 'N' de khoi dong xe!");
		//TogglePlayerControllable(playerid, false);
		vehicleEntered[playerid][vehicleid] = true;
	}
	else if(IsPlayerInAnyVehicle(playerid) && !engineOn[vehicleid] && vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && pveh != 462 && newcar != 59 && newcar != 60 && !IsAPlane(newcar) && !IsAHarvest(newcar) && !IsADrugHarvest(newcar) && !IsASweeper(newcar))
	{
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Go /engine hoac nhan 'N' de khoi dong xe!");
		//TogglePlayerControllable(playerid, false);
	}
}

public engine2(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    TogglePlayerControllable(playerid, 1);
	}
}

public busroutestoptimer(playerid)
{
	if(IsLogOn(playerid))
	{
	    new newcar = GetPlayerVehicleID(playerid);
	    if(IsABus(newcar))
	    {
	        TogglePlayerControllable(playerid, 1);
	        SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "You can go now!");
	    }
	}
}

stock strvalEx( const string[] ) // fix for strval-bug with > 50 letters.
{
	// written by mabako in less than a minute :X
	if( strlen( string ) >= 50 ) return 0; // It will just return 0 if the string is too long
	return strval(string);
}

public NameTimer()
{
	for(new i = 0;i < MAX_PLAYERS;i++)
 	{
	 	if(IsLogOn(i))
 		{
 			for(new q = 0;q < MAX_PLAYERS;q++)
 			{
				if(IsLogOn(q))
				{
 					new Float:p1x;
					new Float:p1y;
					new Float:p1z;
					new Float:p2x;
					new Float:p2y;
					new Float:p2z;
					if(IsLogOn(i) && IsLogOn(q))
					{
						GetPlayerPos(i,p1x,p1y,p1z);
    					GetPlayerPos(q,p2x,p2y,p2z);
						if(GetPointDistanceToPointExMorph(p1x,p1y,p1z,p2x,p2y,p2z) < pdistance)
						{
							if(PlayerInfo[q][pMaskuse] != 1)
	    					{
								ShowPlayerNameTagForPlayer(i,q,1);
							}
	    				}
						else
						{
							ShowPlayerNameTagForPlayer(i,q,0);
						}
                    }
                }
            }
        }
	}
}

//public CheckCarHealth()
//{
//    new string[256];
//    new sendername[MAX_PLAYER_NAME];
//    for (new i=0; i < MAX_PLAYERS; i++)
//    {
//        if (IsLogOn(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
//        {
//             new Float:health;
//             GetVehicleHealth(GetPlayerVehicleID(i),health);
//             new newcar = GetPlayerVehicleID(i);
//             if (health <= 500)
//             {
//                 if(engineOn[GetPlayerVehicleID(i)] == 1)
//                 {
//                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
//                    {
//                    	TogglePlayerControllable(i, 0);
//                 		SendClientMessage(i, COLOR_LIGHT_BLUE, "Xe cua ban da bi hong, khoi dong dong co len hoac goi tho sua xe! (/exit de ra khoi xe)");
//                 		engineOn[GetPlayerVehicleID(i)] = false;
//                 		GetPlayerName(i, sendername, sizeof(sendername));
//                 		format(string, sizeof(string), "* Dong co xe bi hong (( %s ))", sendername);
//							ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
//							}
//						}
//             }
//         }
//    }
//}
stock IsVehicleDamaged(vehid)
{
	new Float:vhealth;
	GetVehicleHealth(vehid, vhealth);
	if (vhealth <= 390)
		return 1;
	return 0;
}

stock VehicleEngine(vehid, bool:type)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	if (type == true)
		SetVehicleParamsEx(vehid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
	else 
		SetVehicleParamsEx(vehid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
	return 1;
}

stock VehicleLight(vehid, bool:type)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	if (type == true)
		SetVehicleParamsEx(vehid, engine, 1, alarm, doors, bonnet, boot, objective);
	else
		SetVehicleParamsEx(vehid, engine, 0, alarm, doors, bonnet, boot, objective);
	return 1;
}

stock VehicleHood(vehid, bool:type)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	if (type == true)
		SetVehicleParamsEx(vehid, engine, lights, alarm, doors, 1, boot, objective);
	else
		SetVehicleParamsEx(vehid, engine, lights, alarm, doors, 0, boot, objective);
	return 1;
}

stock VehicleTrunk(vehid, bool:type)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	if (type == true)
		SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, 1, objective);
	else
		SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, 0, objective);
	return 1;
}

public StartingTheVehicle(playerid)
{
    if(IsLogOn(playerid))
    {
		 new vehid = GetPlayerVehicleID(playerid);
		 if (IsVehicleDamaged(GetPlayerVehicleID(playerid)))
		 {
			 //VehicleEngine(GetPlayerVehicleID(playerid), 0);
			 new str[128];
			 format(str, sizeof(str), "* Dong co xe da hong (( %s )).", GN(playerid));
			 ProxDetector(30.0, playerid, str, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			 gEngine[playerid] = 0;
			 return 1;
		 }
        if(IsPlayerInAnyVehicle(playerid))
        {
			  new string[256];
			  if (!engineOn[vehid])
			  {
				  new RandomStart;
				  RandomStart = random(4);
				  switch (RandomStart)
				  {
					  case 0, 1, 2:
					  {
							VehicleEngine(vehid, true);
							engineOn[vehid] = 1;
							//TogglePlayerControllable(playerid, true);
							//GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Dong co da duoc khoi dong (( %s )).", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					  }
					  case 3:
					  {
							//GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Dong co khoi dong that bai (( %s )).", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					  }
				  }
			  }
        }
    }
	gEngine[playerid] = 0;
   return 1;
}

public FarmerExit(playerid)
{
	if(IsLogOn(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsAHarvest(vehicleid))
	    {
	        return 1;
	    }
	    if(FarmerVar[playerid] == 0)
	    {
	        return 1;
	    }
	    if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
		{
			FarmerPickup[playerid][0]--;
		}
    	DisableCheckpoint(playerid);
    	FarmerVar[playerid] = 0;
	}
	return 1;
}

public DrugFarmerExit(playerid)
{
	if(IsLogOn(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsADrugHarvest(vehicleid))
	    {
	        return 1;
	    }
	    if(DrugFarmerVar[playerid] == 0)
	    {
	        return 1;
	    }
	    if(DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
		{
			DrugFarmerPickup[playerid][0]--;
		}
    	DisableCheckpoint(playerid);
    	DrugFarmerVar[playerid] = 0;
	}
	return 1;
}

public LoadingDrugsForSmugglers(playerid)
{
    new idcar = GetPlayerVehicleID(playerid);
	if(IsLogOn(playerid))
	{
	    if(PlayerInfo[playerid][pJob] != 20)
     	{
      		SendClientMessage(playerid, COLOR_GREY, "Ban khong phai la ke buon lau thuoc.");
        	return 1;
		}
		if(!PlayerToPoint(7.0,playerid,-38.8664,56.3031,3.1172))
		{
		    SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong vuon trong thuoc.");
		    return 1;
		}
		if(GetPlayerMoney(playerid) < 299)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Mang it nhat 300$ khi ban la ke buon lau thuoc.");
		    return 1;
		}
		if(IsASmuggleCar(idcar))
		{
		    if(drugsys[DrugAmmount] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Khong co thuoc trong vuon.");
		        TogglePlayerControllable(playerid, true);
		        return 1;
		    }
		    if(drugsys[DrugAmmount] == 1)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 1 grams thuoc... (cho 25$)");
		        SmuggledDrugs[playerid] = 1;
		        drugsys[DrugAmmount]--;
		        SafeGivePlayerMoney(playerid, -25);
		    }
		    if(drugsys[DrugAmmount] == 2)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 2 grams thuoc... (cho 50$)");
		        SmuggledDrugs[playerid] = 2;
		        drugsys[DrugAmmount] -= 2;
		        SafeGivePlayerMoney(playerid, -50);
		    }
		    if(drugsys[DrugAmmount] == 3)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 3 grams thuoc... (cho 75$)");
		        SmuggledDrugs[playerid] = 3;
		        drugsys[DrugAmmount] -= 3;
		        SafeGivePlayerMoney(playerid, -75);
		    }
		    if(drugsys[DrugAmmount] == 4)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 4 grams thuoc... (cho 100$)");
		        SmuggledDrugs[playerid] = 4;
		        drugsys[DrugAmmount] -= 4;
		        SafeGivePlayerMoney(playerid, -100);
		    }
		    if(drugsys[DrugAmmount] == 5)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 5 grams thuoc... (cho 125$)");
		        SmuggledDrugs[playerid] = 5;
		        drugsys[DrugAmmount] -= 5;
		        SafeGivePlayerMoney(playerid, -125);
		    }
		    if(drugsys[DrugAmmount] == 6)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 6 grams thuoc... (cho 150$)");
		        SmuggledDrugs[playerid] = 6;
		        drugsys[DrugAmmount] -= 6;
		        SafeGivePlayerMoney(playerid, -150);
		    }
		    if(drugsys[DrugAmmount] == 7)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 7 grams thuoc... (cho 175$)");
		        SmuggledDrugs[playerid] = 7;
		        drugsys[DrugAmmount] -= 7;
		        SafeGivePlayerMoney(playerid, -175);
		    }
		    if(drugsys[DrugAmmount] == 8)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 8 grams thuoc... (for 200$)");
		        SmuggledDrugs[playerid] = 8;
		        drugsys[DrugAmmount] -= 8;
		        SafeGivePlayerMoney(playerid, -200);
		    }
		    if(drugsys[DrugAmmount] == 9)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 9 grams thuoc... (cho 225$)");
		        SmuggledDrugs[playerid] = 9;
		        drugsys[DrugAmmount] -= 9;
		        SafeGivePlayerMoney(playerid, -225);
		    }
		    if(drugsys[DrugAmmount] >= 10)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Chat 10 grams thuoc... (cho 250$)");
		        SmuggledDrugs[playerid] = 10;
		        drugsys[DrugAmmount] -= 10;
		        SafeGivePlayerMoney(playerid, -250);
		    }
		    SetPlayerCheckpoint(playerid, 1135.2180,-1325.2274,13.6277, 5.0);
		    SendClientMessage(playerid, COLOR_YELLOW, "Xe duoc chat hang thanh cong.");
		    SendClientMessage(playerid, COLOR_YELLOW, "Nhanh len! Van chuyen thuoc den noi ban (red marker).");
		    SendClientMessage(playerid, COLOR_YELLOW, "Truoc khi canh sat dieu tra.");
		    SaveDrugSystem();
		    SetPlayerCriminal(playerid,255, "Drugs smuggling");
		    TogglePlayerControllable(playerid, true);
		}
	}
	return 1;
}

public SmugglerExit(playerid)
{
	if(IsLogOn(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsASmuggleCar(vehicleid))
	    {
	        return 1;
	    }
	    if(SmugglerWork[playerid] == 0)
	    {
	        return 1;
	    }
    	DisableCheckpoint(playerid);
    	SmugglerWork[playerid] = 0;
	}
	return 1;
}

stock SafeGivePlayerMoney(plyid, amounttogive, bool:nofi = true, type = 1)
{
	/*new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);*/
	if (type == 1)
	{
		//ScriptMoneyUpdated[plyid] = curSecond;
		ScriptMoney[plyid] += amounttogive;
		GivePlayerMoney(plyid, amounttogive);
	}
	else if (type == 2)
		PlayerInfo[plyid][pAccount] += amounttogive;

	if (amounttogive != 0 && nofi == true)
	{
		new str[128];
		if (type == 1)
		{
			if (amounttogive > 0) format(str, sizeof(str), "~g~ +%s$", AddCommas(amounttogive));
			else format(str, sizeof(str), "~r~ %s$", AddCommas(amounttogive));
		}
		else if (type == 2)
		{
			if (amounttogive > 0) format(str, sizeof(str), "~g~ Bank +%s$", AddCommas(amounttogive));
			else format(str, sizeof(str), "~r~ Bank %s$", AddCommas(amounttogive));
		}
		GameTextForPlayer(plyid, str, 3000, 1);
		PlayerPlaySound(plyid, 1150, 0.0, 0.0, 0.0);
	}
	return 1;
}

public SafeResetPlayerMoney(plyid)
{
	/*new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);*/
	//ScriptMoneyUpdated[plyid] = curSecond;
	ScriptMoney[plyid] = 0;
	ResetPlayerMoney(plyid);
	return 1;
}

stock SafeGivePlayerWeapon(plyid, weaponid, ammo = 0x7FFFFFFF)
{
	if(ammo > 0) ammo = 999999;
	/*new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);*/
	//ScriptWeaponsUpdated[plyid] = curSecond;
	if (ammo > 0)
	{
		new slot = GetWeaponSlot(weaponid);
		GivePlayerWeapon(plyid, weaponid, ammo);
		ScriptWeapons[plyid][slot] = weaponid;
		PlayerPlaySound(plyid, 1052, 0.0, 0.0, 0.0);
	}
	else
	{
		new slot = GetWeaponSlot(weaponid);
		ScriptWeapons[plyid][slot] = 0;
		SafeReGivePlayerWeapon(plyid);
	}
	return 1;
}
stock GetWeaponSlot(weaponid)
{
	new slot;
	switch (weaponid)
	{
		case 0, 1: slot = 0;
		case 2 .. 9: slot = 1;
		case 10 .. 15: slot = 10;
		case 16 .. 18, 39: slot = 8;
		case 22 .. 24: slot = 2;
		case 25 .. 27: slot = 3;
		case 28, 29, 32: slot = 4;
		case 30, 31: slot = 5;
		case 33, 34: slot = 6;
		case 35 .. 38: slot = 7;
		case 40: slot = 12;
		case 41 .. 43: slot = 9;
		case 44 .. 46: slot = 11;
	}
	return slot;
}
public SafeResetPlayerWeapons(plyid)
{
	ResetPlayerWeapons(plyid);
	UpdateWeaponSlots(plyid);
	return 1;
}

public UpdateWeaponSlots(plyid)
{
	new weaponid, ammo;
	for (new i=0; i<13; i++)
	{
		GetPlayerWeaponData(plyid, i, weaponid, ammo);
		ScriptWeapons[plyid][i] = weaponid;
	}
	return 1;
}
stock SafeReGivePlayerWeapon(playerid)
{
	ResetPlayerWeapons(playerid);
	for (new i = 0; i<13; i++)
	{
		GivePlayerWeapon(playerid, ScriptWeapons[playerid][i], 999999);
	}
	return 1;
}
stock IsContainChar(const string[], cchar)
{
	for (new i = 0; i < strlen(string); i++)
	{
		if (string[i] == cchar)
			return 1;
	}
	return 0;
}
public ClearKnock(playerid)
{
	if (PlayerCuffed[playerid] == 0 && Escorted[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
	}
	KnockedDown[playerid] = 0;
	return 1;
}
public DrugEffectGone(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(UsingDrugs[playerid] == 1)
	    {
	    	SetPlayerWeather(playerid, DefaultWeather);
	    	GameTextForPlayer(playerid, "~w~Drug effect ~p~gone", 3000, 1);
	    	ClearAnimations(playerid);
	    	SetTimerEx("UsingDrugsUnset", 25000, false, "i", playerid);
		}
	}
	return 1;
}
public UsingDrugsUnset(playerid)
{
	if(IsLogOn(playerid))
	{
	    UsingDrugs[playerid] = 0;
	}
	return 1;
}
//public UpdatePlayerPosition(playerid)
/*public UpdatePlayerPosition(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(gPlayerLogged[playerid])
	    {
	    	new Float:x, Float:y, Float:z;
     		GetPlayerPos(playerid,x,y,z);
			PlayerInfo[playerid][pPos_x] = x;
			PlayerInfo[playerid][pPos_y] = y;
			PlayerInfo[playerid][pPos_z] = z;
			MySQLCheckConnection();
			new query[MAX_STRING];
			format(query, MAX_STRING, "UPDATE players SET ");
			MySQLUpdatePlayerFlo(query, PlayerInfo[playerid][pSQLID], "Pos_x", PlayerInfo[playerid][pPos_x]);
			MySQLUpdatePlayerFlo(query, PlayerInfo[playerid][pSQLID], "Pos_y", PlayerInfo[playerid][pPos_y]);
			MySQLUpdatePlayerFlo(query, PlayerInfo[playerid][pSQLID], "Pos_z", PlayerInfo[playerid][pPos_z]);
			MySQLUpdatePlayerInt(query, PlayerInfo[playerid][pSQLID], "Inte", PlayerInfo[playerid][pInt]);
			MySQLUpdatePlayerInt(query, PlayerInfo[playerid][pSQLID], "VirWorld", PlayerInfo[playerid][pVirWorld]);
			MySQLUpdatePlayerInt(query, PlayerInfo[playerid][pSQLID], "Crashed", PlayerInfo[playerid][pCrashed]);
			MySQLUpdateFinish(query, PlayerInfo[playerid][pSQLID]);
		}
	}
	return 1;
}*/
public UnsetAfterTutorial(playerid)
{
	if(IsLogOn(playerid))
	{
        AfterTutorial[playerid] = 0;
	}
	return 1;
}
public AfterSpray1(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 2076.5461,-1832.5647,13.5545);
		}
	}
	return 1;
}
public AfterSpray2(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1025.4225,-1033.1587,31.8380);
		}
	}
	return 1;
}
public AfterSpray3(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 488.3767,-1731.1235,11.2469);
		}
	}
	return 1;
}
public AfterSpray4(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 720.2908,-467.6113,16.3437);
		}
	}
	return 1;
}
//public UnsetCrash(playerid)
//{
//	if(IsLogOn(playerid))
//	{
//	    PlayerInfo[playerid][pCrashed] = 0;
//	}
//	return 1;
//}
public backtoclothes(playerid)
{
	if(IsLogOn(playerid))
	{
 		SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
   	SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}
public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	SafeResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
		SafeGivePlayerWeapon(playerid, plyWeapons[slot]);
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsLogOn(playerid))
	{
	    new Float:px,Float:py,Float:pz,Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,px,py,pz);
	    GetVehiclePos(vehicleid, x,y,z);
	    new Float:distance = (x-px)*(x-px)+(y-py)*(y-py)+(z-pz)*(z-pz);
		 if (distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

public UpdateBurgerPositions()
{
	for(new i = 0; i < MAX_PLAYERS; i ++)
	{
	    if(IsMenuShowed[i] == 0)
	    {
			for(new j = 0; j < sizeof(BurgerDriveIn); j ++)
			{
			    new Float:dist;
			    dist = GetDistance(i, BurgerDriveIn[j][0], BurgerDriveIn[j][1]);
			    if(dist < 5)
			    {
			        GameTextForPlayer(i, "~n~~n~~n~~w~Welcome to the ~r~Burger King~w~, please select your meal", 2000, 3);
			        TogglePlayerControllable(i, 0);
			        SetTimerEx("ShowMenuBurger", 2000, 0, "i", i);
			    }
			}
		}
	}
}

public ShowMenuBurger(i)
{
    BurgerShot = CreateMenu("Burger Shot", 2, 125, 150, 300);
	AddMenuItem(BurgerShot, 0, "Baby Burger");
	AddMenuItem(BurgerShot, 1, "$3");
	AddMenuItem(BurgerShot, 0, "Double Cheese");
	AddMenuItem(BurgerShot, 1, "$6");
	AddMenuItem(BurgerShot, 0, "Triple Whopper");
	AddMenuItem(BurgerShot, 1, "$9");
	AddMenuItem(BurgerShot, 0, "- Exit -");
	ShowMenuForPlayer(BurgerShot, i);
	IsMenuShowed[i] = 1;
}

public UpdateChickenPositions()
{
    for(new i = 0; i < MAX_PLAYERS; i ++)
	{
	    if(IsMenuShowed[i] == 0)
	    {
			for(new j = 0; j < sizeof(ChickenDriveIn); j ++)
			{
			    new Float:dist;
			    dist = GetDistance(i, ChickenDriveIn[j][0], ChickenDriveIn[j][1]);
			    if(dist < 5)
			    {
			        GameTextForPlayer(i, "~n~~n~~n~~w~Welcome to the ~r~Cluckin' Bell~w~, please select your meal", 2000, 3);
			        TogglePlayerControllable(i, 0);
			        SetTimerEx("ShowMenuChicken", 2000, 0, "i", i);
				}
			}
		}
	}
}

public ShowMenuChicken(i)
{
    CluckinBell = CreateMenu("Cluckin' Bell", 2, 125, 150, 300);
	AddMenuItem(CluckinBell, 0, "Chicken Nuggets");
	AddMenuItem(CluckinBell, 1, "$3");
	AddMenuItem(CluckinBell, 0, "Chicken Wing");
	AddMenuItem(CluckinBell, 1, "$6");
	AddMenuItem(CluckinBell, 0, "Crisp Chicken");
	AddMenuItem(CluckinBell, 1, "$9");
	AddMenuItem(CluckinBell, 0, "- Exit -");
	ShowMenuForPlayer(CluckinBell, i);
	IsMenuShowed[i] = 1;
}

public CanDriveThruAgain(playerid)
{
	IsMenuShowed[playerid] = 0;
}

public Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

public TraceLastCall()
{
	pdtrace = 0;
	pdtrace_x = 0;
	pdtrace_y = 0;
	pdtrace_z = 0;
	emdtrace = 0;
	emdtrace_x = 0;
	emdtrace_y = 0;
	emdtrace_z = 0;
}

public ReportReset(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(JustReported[playerid] == 1)
	    {
			JustReported[playerid] = 0;
	    }
	}
}

public ReduceTimer(playerid)
{
	if(IsLogOn(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}

public SendAdminMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (PlayerInfo[i][pAdmin] >= 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

#include <ProjectInc\ben>
#include <ProjectInc\geek>
#include <ProjectInc\anims>
#include <ProjectInc\reward>
#include <ProjectInc\ontimer>
#include <ProjectInc\map>

#include <uf>
//../pawno/include/ProjectInc/anims.inc TM
PlayAnim(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
	TextDrawShowForPlayer(playerid,TDAnimHelp);
}

PlayAnimEx(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
	gPlayerUsingLoopingAnim[playerid] = 1;
	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
	TextDrawShowForPlayer(playerid,TDAnimHelp);
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0,1);
}

IsAbleUseAnimation(playerid)
{
	if(GetPVarInt(playerid, "CantUseAnim") > 0 || Dying[playerid] > 0 || Tazered[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerTied[playerid] > 0) {
   		return 0;
    }
    return 1;
}

IsAblePedAnimation(playerid)
{
    if(IsAbleUseAnimation(playerid) == 0) {
   		SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the su dung anim!");
   		return 0;
	}
    if(IsPlayerInAnyVehicle(playerid) == 1)
    {
		SendClientMessage(playerid, COLOR_GRAD2, "Ban phai o ngoai xe de thuc hien anim nay.");
		return 0;
	}
	return 1;
}

IsAbleVehicleAnimation(playerid)
{
    if(IsAbleUseAnimation(playerid) == 0) {
   		SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the su dung anim!");
   		return 0;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0)
    {
		SendClientMessage(playerid, COLOR_GRAD2, "Ban phai o trong xe de thuc hien anim nay.");
		return 0;
	}
	return 1;
}

//-------------------------------------------------

// ********** SPECIFIC VEHICLES **********

IsCLowrider(carid)
{
	new Cars[] = { 536, 575, 567};
	for(new i = 0; i < sizeof(Cars); i++)
	{
		if(GetVehicleModel(carid) == Cars[i]) return 1;
	}
	return 0;
}

// ********** CALLBACKS **********

forward AnimOnPlayerKeyStateChange(playerid, newkeys, oldkeys);
public AnimOnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(Dying[playerid] != 0) return;
	if(!gPlayerUsingLoopingAnim[playerid]) return;

	if (newkeys & KEY_SPRINT)
	{
	    StopLoopingAnim(playerid);
        TextDrawHideForPlayer(playerid,TDAnimHelp);
    }
}

//------------------------------------------------

forward AnimOnPlayerDeath(playerid, killerid, reason);
public AnimOnPlayerDeath(playerid, killerid, reason)
{
	if(gPlayerUsingLoopingAnim[playerid])
	{
        gPlayerUsingLoopingAnim[playerid] = 0;
        TextDrawHideForPlayer(playerid,TDAnimHelp);
	}

 	return 1;
}

//-------------------------------------------------

forward AnimOnPlayerSpawn(playerid);
public AnimOnPlayerSpawn(playerid)
{
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
	    PreloadAnimLib(playerid,"AIRPORT");
		PreloadAnimLib(playerid,"Attractors");
		PreloadAnimLib(playerid,"BAR");
		PreloadAnimLib(playerid,"BASEBALL");
		PreloadAnimLib(playerid,"BD_FIRE");
		PreloadAnimLib(playerid,"benchpress");
        PreloadAnimLib(playerid,"BF_injection");
        PreloadAnimLib(playerid,"BIKED");
        PreloadAnimLib(playerid,"BIKEH");
        PreloadAnimLib(playerid,"BIKELEAP");
        PreloadAnimLib(playerid,"BIKES");
        PreloadAnimLib(playerid,"BIKEV");
        PreloadAnimLib(playerid,"BIKE_DBZ");
        PreloadAnimLib(playerid,"BMX");
        PreloadAnimLib(playerid,"BOX");
        PreloadAnimLib(playerid,"BSKTBALL");
        PreloadAnimLib(playerid,"BUDDY");
        PreloadAnimLib(playerid,"BUS");
        PreloadAnimLib(playerid,"CAMERA");
        PreloadAnimLib(playerid,"CAR");
        PreloadAnimLib(playerid,"CAR_CHAT");
        PreloadAnimLib(playerid,"CASINO");
        PreloadAnimLib(playerid,"CHAINSAW");
        PreloadAnimLib(playerid,"CHOPPA");
        PreloadAnimLib(playerid,"CLOTHES");
        PreloadAnimLib(playerid,"COACH");
        PreloadAnimLib(playerid,"COLT45");
        PreloadAnimLib(playerid,"COP_DVBYZ");
        PreloadAnimLib(playerid,"CRIB");
        PreloadAnimLib(playerid,"DAM_JUMP");
        PreloadAnimLib(playerid,"DANCING");
        PreloadAnimLib(playerid,"DILDO");
        PreloadAnimLib(playerid,"DODGE");
        PreloadAnimLib(playerid,"DOZER");
        PreloadAnimLib(playerid,"DRIVEBYS");
        PreloadAnimLib(playerid,"FAT");
        PreloadAnimLib(playerid,"FIGHT_B");
        PreloadAnimLib(playerid,"FIGHT_C");
        PreloadAnimLib(playerid,"FIGHT_D");
        PreloadAnimLib(playerid,"FIGHT_E");
        PreloadAnimLib(playerid,"FINALE");
        PreloadAnimLib(playerid,"FINALE2");
        PreloadAnimLib(playerid,"Flowers");
        PreloadAnimLib(playerid,"FOOD");
        PreloadAnimLib(playerid,"Freeweights");
        PreloadAnimLib(playerid,"GANGS");
        PreloadAnimLib(playerid,"GHANDS");
        PreloadAnimLib(playerid,"GHETTO_DB");
        PreloadAnimLib(playerid,"goggles");
        PreloadAnimLib(playerid,"GRAFFITI");
        PreloadAnimLib(playerid,"GRAVEYARD");
        PreloadAnimLib(playerid,"GRENADE");
        PreloadAnimLib(playerid,"GYMNASIUM");
        PreloadAnimLib(playerid,"HAIRCUTS");
        PreloadAnimLib(playerid,"HEIST9");
        PreloadAnimLib(playerid,"INT_HOUSE");
        PreloadAnimLib(playerid,"INT_OFFICE");
        PreloadAnimLib(playerid,"INT_SHOP");
        PreloadAnimLib(playerid,"JST_BUISNESS");
        PreloadAnimLib(playerid,"KART");
        PreloadAnimLib(playerid,"KISSING");
        PreloadAnimLib(playerid,"KNIFE");
        PreloadAnimLib(playerid,"LAPDAN1");
        PreloadAnimLib(playerid,"LAPDAN2");
        PreloadAnimLib(playerid,"LAPDAN3");
        PreloadAnimLib(playerid,"LOWRIDER");
        PreloadAnimLib(playerid,"MD_CHASE");
        PreloadAnimLib(playerid,"MEDIC");
        PreloadAnimLib(playerid,"MD_END");
        PreloadAnimLib(playerid,"MISC");
        PreloadAnimLib(playerid,"MTB");
        PreloadAnimLib(playerid,"MUSCULAR");
        PreloadAnimLib(playerid,"NEVADA");
        PreloadAnimLib(playerid,"ON_LOOKERS");
        PreloadAnimLib(playerid,"OTB");
        PreloadAnimLib(playerid,"PARACHUTE");
        PreloadAnimLib(playerid,"PARK");
        PreloadAnimLib(playerid,"PAULNMAC");
        PreloadAnimLib(playerid,"PED");
        PreloadAnimLib(playerid,"PLAYER_DVBYS");
        PreloadAnimLib(playerid,"PLAYIDLES");
        PreloadAnimLib(playerid,"POLICE");
        PreloadAnimLib(playerid,"POOL");
        PreloadAnimLib(playerid,"POOR");
        PreloadAnimLib(playerid,"PYTHON");
        PreloadAnimLib(playerid,"QUAD");
        PreloadAnimLib(playerid,"QUAD_DBZ");
        PreloadAnimLib(playerid,"RIFLE");
        PreloadAnimLib(playerid,"RIOT");
        PreloadAnimLib(playerid,"ROB_BANK");
        PreloadAnimLib(playerid,"ROCKET");
        PreloadAnimLib(playerid,"RUSTLER");
        PreloadAnimLib(playerid,"RYDER");
        PreloadAnimLib(playerid,"SCRATCHING");
        PreloadAnimLib(playerid,"SHAMAL");
        PreloadAnimLib(playerid,"SHOTGUN");
        PreloadAnimLib(playerid,"SILENCED");
        PreloadAnimLib(playerid,"SKATE");
        PreloadAnimLib(playerid,"SPRAYCAN");
        PreloadAnimLib(playerid,"STRIP");
        PreloadAnimLib(playerid,"SUNBATHE");
        PreloadAnimLib(playerid,"SWAT");
        PreloadAnimLib(playerid,"SWEET");
        PreloadAnimLib(playerid,"SWIM");
        PreloadAnimLib(playerid,"SWORD");
        PreloadAnimLib(playerid,"TANK");
        PreloadAnimLib(playerid,"TATTOOS");
        PreloadAnimLib(playerid,"TEC");
        PreloadAnimLib(playerid,"TRAIN");
        PreloadAnimLib(playerid,"TRUCK");
        PreloadAnimLib(playerid,"UZI");
        PreloadAnimLib(playerid,"VAN");
        PreloadAnimLib(playerid,"VENDING");
        PreloadAnimLib(playerid,"VORTEX");
        PreloadAnimLib(playerid,"WAYFARER");
        PreloadAnimLib(playerid,"WEAPONS");
        PreloadAnimLib(playerid,"WUZI");
        PreloadAnimLib(playerid,"SNM");
        PreloadAnimLib(playerid,"BLOWJOBZ");
        PreloadAnimLib(playerid,"SEX");
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	return 1;
}

//-------------------------------------------------

forward AnimOnPlayerConnect(playerid);
public AnimOnPlayerConnect(playerid)
{
    gPlayerUsingLoopingAnim[playerid] = 0;
	gPlayerAnimLibsPreloaded[playerid] = 0;
	return 1;
}

//-------------------------------------------------

forward OnAnimtInit();
public OnAnimtInit()
{
	TDAnimHelp = TextDrawCreate(630.0, 420.0,
	"~r~~k~~PED_SPRINT~ ~w~hoac~r~ /stopani~w~ de dung anim");
	TextDrawUseBox(TDAnimHelp, 0);
	TextDrawFont(TDAnimHelp, 2);
	TextDrawSetShadow(TDAnimHelp,0);
    TextDrawSetOutline(TDAnimHelp,1);
    TextDrawBackgroundColor(TDAnimHelp,0x000000FF);
    TextDrawColor(TDAnimHelp,0xFFFFFFFF);
    TextDrawAlignment(TDAnimHelp,3);
}

CMD:animlist(playerid, params[])
{
	SendClientMessage(playerid, COLOR_GRAD1, "/handsup /drunk /bomb /anrob /laugh /lookout /robman /crossarms /sit /siteat /hide /vomit /eat");
	SendClientMessage(playerid, COLOR_GRAD2, "/wave /slapass /deal /taichi /crack /smoke /chat /dance /fucku /taichi /drinkwater /pedmove");
	SendClientMessage(playerid, COLOR_GRAD3, "/checktime /sleep /blob /opendoor /wavedown /shakehand /reload /cpr /dive /showoff /box /tag");
	SendClientMessage(playerid, COLOR_GRAD4, "/goggles /cry /dj /cheer /throw /robbed /hurt /nobreath /bar /getjiggy /fallover /rap /piss");
	SendClientMessage(playerid, COLOR_GRAD5, "/salute /crabs /washhands /signal /stop /gesture /jerkoff /idles /lowrider /carchat");
	SendClientMessage(playerid, COLOR_GRAD6, "/blowjob /spank /sunbathe /kiss /snatch /sneak /copa /sexy /holdup /misc /bodypush");
	SendClientMessage(playerid, COLOR_GRAD6, "/lowbodypush /headbutt /airkick /doorkick /leftslap /elbow /coprun");
	SendClientMessage(playerid, COLOR_WHITE, "An {FFF000}space{FFFFFF} hoac go {FFF000}/stopani{FFFFFF} de dung anim.");
	return 1;
}

CMD:animhelp(playerid, params[])
{
	return cmd_animlist(playerid, params);
}

CMD:stopani(playerid, params[])
{
	if(IsAbleUseAnimation(playerid) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the su dung anim!");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ban phai o ngoai xe de thuc hien anim nay.");
		return 1;
	}
	TextDrawHideForPlayer(playerid,TDAnimHelp);
	ClearAnimations(playerid);
	SetPlayerSkin(playerid, GetPlayerSkin(playerid));
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	return 1;
}

CMD:bodypush(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
	return 1;
}

CMD:lowbodypush(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
	return 1;
}

CMD:headbutt(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
	return 1;
}

CMD:airkick(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
	return 1;
}

CMD:doorkick(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
	return 1;
}

CMD:leftslap(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
	return 1;
}

CMD:elbow(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
	return 1;
}

CMD:coprun(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
	return 1;
}

CMD:handsup(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}

CMD:piss(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
   	SetPlayerSpecialAction(playerid, 68);
	return 1;
}

CMD:sneak(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	PlayAnimEx(playerid, "PED", "Player_Sneak", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

CMD:drunk(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
   	PlayAnimEx(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 1, 1);
    return 1;
}

CMD:bomb(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
   	PlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:anrob(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	PlayAnimEx(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, 1, 1);
	return 1;
}

CMD:laugh(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	PlayAnimEx(playerid, "RAPPING", "Laugh_01", 4.0, 1, 0, 0, 0, 0, 1);
	return 1;
}

CMD:lookout(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
   	PlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:robman(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:hide(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:vomit(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "FOOD", "EAT_Vomit_P", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:eat(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "FOOD", "EAT_Burger", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:slapass(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:crack(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:fucku(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:taichi(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:drinkwater(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:checktime(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "COP_AMBIENT", "Coplook_watch", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:sleep(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckdeth4", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:blob(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckidle1", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:opendoor(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "AIRPORT", "thrw_barl_thrw", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:wavedown(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "BD_FIRE", "BD_Panic_01", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:cpr(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:dive(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "DODGE", "Crush_Jump", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:showoff(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "Freeweights", "gym_free_celebrate", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:goggles(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "goggles", "goggles_put_on", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:cry(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "GRAVEYARD", "mrnF_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:throw(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnim(playerid, "GRENADE", "WEAPON_throw", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:robbed(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "SHOP", "SHP_Rob_GiveCash", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:hurt(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "SWAT", "gnstwall_injurd", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:box(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "GYMNASIUM", "GYMshadowbox", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:washhands(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:crabs(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "MISC", "Scratchballs_01", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:salute(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "ON_LOOKERS", "Pointup_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:jerkoff(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "PAULNMAC", "wank_out", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:stop(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
    PlayAnimEx(playerid, "PED", "endchat_01", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:rap(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "RAPPING", "RAP_A_Loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "RAPPING", "RAP_B_Loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "RAPPING", "RAP_C_Loop", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /rap [1-3]");
	}
	return 1;
}

CMD:chat(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkA", 4.0, 1, 0, 0, 0, 0, 1);
	case 3:	PlayAnimEx(playerid, "GANGS", "prtial_gngtlkB", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkE", 4.0, 1, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkF", 4.0, 1, 0, 0, 0, 0, 1);
	case 6: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkG", 4.0, 1, 0, 0, 0, 0, 1);
	case 7:	PlayAnimEx(playerid, "GANGS", "prtial_gngtlkH", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /chat [1-7]");
	}
	return 1;
}

CMD:gesture(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "GHANDS", "gsign1", 4.0, 0, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "GHANDS", "gsign1LH", 4.0, 0, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "GHANDS", "gsign2", 4.0, 0, 0, 0, 0, 0, 1);
	case 4: PlayAnim(playerid, "GHANDS", "gsign2LH", 4.0, 0, 0, 0, 0, 0, 1);
	case 5: PlayAnim(playerid, "GHANDS", "gsign3", 4.0, 0, 0, 0, 0, 0, 1);
	case 6: PlayAnim(playerid, "GHANDS", "gsign3LH", 4.0, 0, 0, 0, 0, 0, 1);
	case 7: PlayAnim(playerid, "GHANDS", "gsign4", 4.0, 0, 0, 0, 0, 0, 1);
	case 8: PlayAnim(playerid, "GHANDS", "gsign4LH", 4.0, 0, 0, 0, 0, 0, 1);
	case 9: PlayAnim(playerid, "GHANDS", "gsign5", 4.0, 0, 0, 0, 0, 0, 1);
	case 10: PlayAnim(playerid, "GHANDS", "gsign5", 4.0, 0, 0, 0, 0, 0, 1);
	case 11: PlayAnim(playerid, "GHANDS", "gsign5LH", 4.0, 0, 0, 0, 0, 0, 1);
	case 12: PlayAnim(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0, 1);
	case 13: PlayAnim(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0, 1);
	case 14: PlayAnim(playerid, "GANGS", "prtial_gngtlkD", 4.0, 0, 0, 0, 0, 0, 1);
	case 15: PlayAnim(playerid, "GANGS", "smkcig_prtl", 4.0, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gesture [1-15]");
	}
	return 1;
}

CMD:lay(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "BEACH", "Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /lay [1-3]");
	}
	return 1;
}

CMD:wave(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "KISSING", "gfwave2", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "PED", "endchat_03", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /wave [1-3]");
	}
	return 1;
}

CMD:signal(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "POLICE", "CopTraf_Come", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "POLICE", "CopTraf_Stop", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /signal [1-2]");
	}
	return 1;
}

CMD:nobreath(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "PED", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "FAT", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /nobreath [1-3]");
	}
	return 1;
}

CMD:fallover(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
	case 2: PlayAnimEx(playerid, "PED", "KO_shot_face", 4.0, 0, 1, 1, 1, 0, 1);
	case 3: PlayAnimEx(playerid, "PED", "KO_shot_stom", 4.0, 0, 1, 1, 1, 0, 1);
	case 4: PlayAnimEx(playerid, "PED", "BIKE_fallR", 4.1, 0, 1, 1, 1, 0, 1);
	case 5: PlayAnimEx(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /fallover [1-5]");
	}
	return 1;
}

CMD:pedmove(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "PED", "JOG_femaleA", 4.0, 1, 1, 1, 1, 1, 1);
	case 2: PlayAnimEx(playerid, "PED", "JOG_maleA", 4.0, 1, 1, 1, 1, 1, 1);
	case 3: PlayAnimEx(playerid, "PED", "WOMAN_walkfatold", 4.0, 1, 1, 1, 1, 1, 1);
	case 4: PlayAnimEx(playerid, "PED", "run_fat", 4.0, 1, 1, 1, 1, 1, 1);
	case 5: PlayAnimEx(playerid, "PED", "run_fatold", 4.0, 1, 1, 1, 1, 1, 1);
	case 6: PlayAnimEx(playerid, "PED", "run_old", 4.0, 1, 1, 1, 1, 1, 1);
	case 7: PlayAnimEx(playerid, "PED", "Run_Wuzi", 4.0, 1, 1, 1, 1, 1, 1);
	case 8: PlayAnimEx(playerid, "PED", "swat_run", 4.0, 1, 1, 1, 1, 1, 1);
	case 9: PlayAnimEx(playerid, "PED", "WALK_fat", 4.0, 1, 1, 1, 1, 1, 1);
	case 10: PlayAnimEx(playerid, "PED", "WALK_fatold", 4.0, 1, 1, 1, 1, 1, 1);
	case 11: PlayAnimEx(playerid, "PED", "WALK_gang1", 4.0, 1, 1, 1, 1, 1, 1);
	case 12: PlayAnimEx(playerid, "PED", "WALK_gang2", 4.0, 1, 1, 1, 1, 1, 1);
	case 13: PlayAnimEx(playerid, "PED", "WALK_old", 4.0, 1, 1, 1, 1, 1, 1);
	case 14: PlayAnimEx(playerid, "PED", "WALK_shuffle", 4.0, 1, 1, 1, 1, 1, 1);
	case 15: PlayAnimEx(playerid, "PED", "woman_run", 4.0, 1, 1, 1, 1, 1, 1);
	case 16: PlayAnimEx(playerid, "PED", "WOMAN_runbusy", 4.0, 1, 1, 1, 1, 1, 1);
	case 17: PlayAnimEx(playerid, "PED", "WOMAN_runfatold", 4.0, 1, 1, 1, 1, 1, 1);
	case 18: PlayAnimEx(playerid, "PED", "woman_runpanic", 4.0, 1, 1, 1, 1, 1, 1);
	case 19: PlayAnimEx(playerid, "PED", "WOMAN_runsexy", 4.0, 1, 1, 1, 1, 1, 1);
	case 20: PlayAnimEx(playerid, "PED", "WOMAN_walkbusy", 4.0, 1, 1, 1, 1, 1, 1);
	case 21: PlayAnimEx(playerid, "PED", "WOMAN_walkfatold", 4.0, 1, 1, 1, 1, 1, 1);
	case 22: PlayAnimEx(playerid, "PED", "WOMAN_walknorm", 4.0, 1, 1, 1, 1, 1, 1);
	case 23: PlayAnimEx(playerid, "PED", "WOMAN_walkold", 4.0, 1, 1, 1, 1, 1, 1);
	case 24: PlayAnimEx(playerid, "PED", "WOMAN_walkpro", 4.0, 1, 1, 1, 1, 1, 1);
	case 25: PlayAnimEx(playerid, "PED", "WOMAN_walksexy", 4.0, 1, 1, 1, 1, 1, 1);
	case 26: PlayAnimEx(playerid, "PED", "WOMAN_walkshop", 4.0, 1, 1, 1, 1, 1, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /pedmove [1-26]");
	}
	return 1;
}

CMD:getjiggy(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "DANCING", "DAN_Down_A", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "DANCING", "DAN_Left_A", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "DANCING", "DAN_Loop_A", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "DANCING", "DAN_Right_A", 4.0, 1, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "DANCING", "DAN_Up_A", 4.0, 1, 0, 0, 0, 0, 1);
	case 6: PlayAnimEx(playerid, "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0, 0, 1);
	case 7: PlayAnimEx(playerid, "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0, 0, 1);
	case 8: PlayAnimEx(playerid, "DANCING", "dnce_M_c", 4.0, 1, 0, 0, 0, 0, 1);
	case 9: PlayAnimEx(playerid, "DANCING", "dnce_M_c", 4.0, 1, 0, 0, 0, 0, 1);
	case 10: PlayAnimEx(playerid, "DANCING", "dnce_M_d", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /getjiggy [1-10]");
	}
	return 1;
}

CMD:stripclub(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "STRIP", "PLY_CASH", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "STRIP", "PUN_CASH", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /stripclub [1-2]");
	}
	return 1;
}


CMD:dj(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "SCRATCHING", "scdldlp", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "SCRATCHING", "scdlulp", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "SCRATCHING", "scdrdlp", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "SCRATCHING", "scdrulp", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /dj [1-4]");
	}
	return 1;
}

CMD:reload(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /reload [1-2]");
	}
	return 1;
}

CMD:tag(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "GRAFFITI", "spraycan_fire", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /tag [1-2]");
	}
	return 1;
}

CMD:deal(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "DEALER", "DEALER_DEAL", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "DEALER", "shop_pay", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /deal [1-2]");
	}
	return 1;
}

CMD:crossarms(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1, 1);
	case 2: PlayAnimEx(playerid, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "GRAVEYARD", "mrnM_loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "GRAVEYARD", "prst_loopa", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /crossarms [1-4]");
	}
	return 1;
}

CMD:cheer(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "ON_LOOKERS", "shout_01", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "ON_LOOKERS", "shout_02", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "ON_LOOKERS", "shout_in", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "RIOT", "RIOT_ANGRY_B", 4.0, 1, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "RIOT", "RIOT_CHANT", 4.0, 1, 0, 0, 0, 0, 1);
	case 6: PlayAnimEx(playerid, "RIOT", "RIOT_shout", 4.0, 1, 0, 0, 0, 0, 1);
	case 7: PlayAnimEx(playerid, "STRIP", "PUN_HOLLER", 4.0, 1, 0, 0, 0, 0, 1);
	case 8: PlayAnimEx(playerid, "OTB", "wtchrace_win", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cheer [1-8]");
	}
	return 1;
}

CMD:sit(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "BEACH", "Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "BEACH", "ParkSit_W_loop", 4.0, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sit [1-5]");
	}
	return 1;
}

CMD:siteat(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "FOOD", "FF_Sit_Eat3", 4.0, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "FOOD", "FF_Sit_Eat2", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /siteat [1-2]");
	}
	return 1;
}

CMD:bar(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "BAR", "Barcustom_get", 4.0, 0, 1, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "BAR", "Barserve_give", 4.0, 0, 0, 0, 0, 0, 1);
	case 4: PlayAnim(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "BAR", "BARman_idle", 4.0, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bar [1-5]");
	}
	return 1;
}

CMD:dance(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: SetPlayerSpecialAction(playerid, 5);
	case 2: SetPlayerSpecialAction(playerid, 6);
	case 3: SetPlayerSpecialAction(playerid, 7);
	case 4: SetPlayerSpecialAction(playerid, 8);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /dance [1-4]");
	}
	return 1;
}

CMD:spank(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "SNM", "SPANKINGW", 4.1, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "SNM", "SPANKINGP", 4.1, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnimEx(playerid, "SNM", "SPANKEDW", 4.1, 1, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "SNM", "SPANKEDP", 4.1, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /spank [1-4]");
	}
	return 1;
}

CMD:sexy(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "STRIP", "strip_E", 4.1, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "STRIP", "strip_G", 4.1, 1, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "STRIP", "STR_A2B", 4.1, 0, 0, 0, 0, 0, 1);
	case 4: PlayAnimEx(playerid, "STRIP", "STR_Loop_A", 4.1, 1, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "STRIP", "STR_Loop_B", 4.1, 1, 0, 0, 0, 0, 1);
	case 6: PlayAnimEx(playerid, "STRIP", "STR_Loop_C", 4.1, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sexy [1-6]");
	}
	return 1;
}

CMD:holdup(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "POOL", "POOL_ChalkCue", 4.1, 0, 1, 1, 1, 1, 1);
	case 2: PlayAnimEx(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /holdup [1-2]");
	}
	return 1;
}

CMD:copa(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "POLICE", "CopTraf_Away", 4.1, 0, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "POLICE", "CopTraf_Come", 4.1, 0, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "POLICE", "CopTraf_Left", 4.1, 0, 0, 0, 0, 0, 1);
	case 4: PlayAnim(playerid, "POLICE", "CopTraf_Stop", 4.1, 0, 0, 0, 0, 0, 1);
	case 5: PlayAnimEx(playerid, "POLICE", "Cop_move_FWD", 4.1, 1, 1, 1, 1, 1, 1);
	case 6: PlayAnimEx(playerid, "POLICE", "crm_drgbst_01", 4.1, 0, 0, 0, 1, 5000, 1);
	case 7: PlayAnim(playerid, "POLICE", "Door_Kick", 4.1, 0, 1, 1, 1, 1, 1);
	case 8: PlayAnim(playerid, "POLICE", "plc_drgbst_01", 4.1, 0, 0, 0, 0, 5000, 1);
	case 9: PlayAnim(playerid, "POLICE", "plc_drgbst_02", 4.1, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /copa [1-9]");
	}
	return 1;
}

CMD:misc(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "CAR", "Fixn_Car_Loop", 4.1, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "CAR", "flag_drop", 4.1, 0, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "PED", "bomber", 4.1, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /misc [1-3]");
	}
	return 1;
}

CMD:snatch(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "PED", "BIKE_elbowL", 4.1, 0, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "PED", "BIKE_elbowR", 4.1, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /snatch [1-2]");
	}
	return 1;
}

CMD:blowjob(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.1, 1, 0, 0, 0, 0, 1);
	// case 2: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.1, 1, 0, 0, 0, 0, 1);
	case 2: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.1, 1, 0, 0, 0, 0, 1);
	//case 3: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.1, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /blowjob [1-2]");
	}
	return 1;
}

CMD:kiss(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "KISSING", "Playa_Kiss_01", 4.1, 0, 0, 0, 0, 0, 1);
	case 2: PlayAnim(playerid, "KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 1);
	case 3: PlayAnim(playerid, "KISSING", "Playa_Kiss_03", 4.1, 0, 0, 0, 0, 0, 1);
	case 4: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_01", 4.1, 0, 0, 0, 0, 0, 1);
	case 5: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_02", 4.1, 0, 0, 0, 0, 0, 1);
	case 6: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, 0, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /kiss [1-6]");
	}
	return 1;
}

CMD:idles(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "PLAYIDLES", "shift", 4.1, 1, 1, 1, 1, 1, 1);
	case 2: PlayAnimEx(playerid, "PLAYIDLES", "shldr", 4.1, 1, 1, 1, 1, 1, 1);
	case 3: PlayAnimEx(playerid, "PLAYIDLES", "stretch", 4.1, 1, 1, 1, 1, 1, 1);
	case 4: PlayAnimEx(playerid, "PLAYIDLES", "strleg", 4.1, 1, 1, 1, 1, 1, 1);
	case 5: PlayAnimEx(playerid, "PLAYIDLES", "time", 4.1, 1, 1, 1, 1, 1, 1);
	case 6: PlayAnimEx(playerid, "COP_AMBIENT", "Copbrowse_loop", 4.1, 1, 0, 0, 0, 0, 1);
	case 7: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 0, 0, 1);
	case 8: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_shake", 4.1, 1, 0, 0, 0, 0, 1);
	case 9: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_think", 4.1, 1, 0, 0, 0, 0, 1);
	case 10: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 1, 0, 0, 0, 0, 1);
	case 11: PlayAnimEx(playerid, "PED", "roadcross", 4.1, 1, 0, 0, 0, 0, 1);
	case 12: PlayAnimEx(playerid, "PED", "roadcross_female", 4.1, 1, 0, 0, 0, 0, 1);
	case 13: PlayAnimEx(playerid, "PED", "roadcross_gang", 4.1, 1, 0, 0, 0, 0, 1);
	case 14: PlayAnimEx(playerid, "PED", "roadcross_old", 4.1, 1, 0, 0, 0, 0, 1);
	case 15: PlayAnimEx(playerid, "PED", "woman_idlestance", 4.1, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /idles [1-15]");
	}
	return 1;
}

CMD:sunbathe(playerid, params[])
{
	if(!IsAblePedAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnimEx(playerid, "SUNBATHE", "batherdown", 4.1, 0, 1, 1, 1, 1, 1);
	case 2: PlayAnimEx(playerid, "SUNBATHE", "batherup", 4.1, 0, 1, 1, 1, 1, 1);
	case 3: PlayAnimEx(playerid, "SUNBATHE", "Lay_Bac_in", 4.1, 0, 1, 1, 1, 1, 1);
	case 4: PlayAnimEx(playerid, "SUNBATHE", "Lay_Bac_out", 4.1, 0, 1, 1, 1, 1, 1);
	case 5: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleA", 4.1, 0, 1, 1, 1, 1, 1);
	case 6: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleB", 4.1, 0, 1, 1, 1, 1, 1);
	case 7: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleC", 4.1, 0, 1, 1, 1, 1, 1);
	case 8: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 1, 1);
	case 9: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_out", 4.1, 0, 1, 1, 1, 1, 1);
	case 10: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleA", 4.1, 0, 1, 1, 1, 1, 1);
	case 11: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleB", 4.1, 0, 1, 1, 1, 1, 1);
	case 12: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleC", 4.1, 0, 1, 1, 1, 1, 1);
	case 13: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_in", 4.1, 0, 1, 1, 1, 1, 1);
	case 14: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_out", 4.1, 0, 1, 1, 1, 1, 1);
	case 15: PlayAnimEx(playerid, "SUNBATHE", "SBATHE_F_LieB2Sit", 4.1, 0, 1, 1, 1, 1, 1);
	case 16: PlayAnimEx(playerid, "SUNBATHE", "SBATHE_F_Out", 4.1, 0, 1, 1, 1, 1, 1);
	case 17: PlayAnimEx(playerid, "SUNBATHE", "SitnWait_in_W", 4.1, 0, 1, 1, 1, 1, 1);
	case 18: PlayAnimEx(playerid, "SUNBATHE", "SitnWait_out_W", 4.1, 0, 1, 1, 1, 1, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sunbathe [1-18]");
	}
	return 1;
}

CMD:lowrider(playerid, params[])
{
	if(!IsAbleVehicleAnimation(playerid)) return 1;
	if(IsCLowrider(GetPlayerVehicleID(playerid)))
	{
		switch(strval(params))
		{
		case 1: PlayAnim(playerid, "LOWRIDER", "lrgirl_bdbnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: PlayAnim(playerid, "LOWRIDER", "lrgirl_hair", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: PlayAnim(playerid, "LOWRIDER", "lrgirl_hurry", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: PlayAnim(playerid, "LOWRIDER", "lrgirl_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: PlayAnim(playerid, "LOWRIDER", "lrgirl_idle_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: PlayAnim(playerid, "LOWRIDER", "lrgirl_l12_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_to_l2", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_to_l3", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: PlayAnim(playerid, "LOWRIDER", "lrgirl_l345_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_to_l4", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_to_l5", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: PlayAnim(playerid, "LOWRIDER", "lrgirl_l5_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: PlayAnim(playerid, "LOWRIDER", "lrgirl_l5_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkB", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkC", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkH", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /lowrider [1-31]");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ban phai o trong xe lowrider de thuc hien anim nay");
	}
	return 1;
}

CMD:carchat(playerid, params[])
{
	if(!IsAbleVehicleAnimation(playerid)) return 1;
	switch(strval(params))
	{
	case 1: PlayAnim(playerid, "CAR_CHAT", "carfone_in", 4.1, 0, 1, 1, 1, 1, 1);
	case 2: PlayAnim(playerid, "CAR_CHAT", "carfone_loopA", 4.1, 0, 1, 1, 1, 1, 1);
	case 3: PlayAnim(playerid, "CAR_CHAT", "carfone_loopA_to_B", 4.1, 0, 1, 1, 1, 1, 1);
	case 4: PlayAnim(playerid, "CAR_CHAT", "carfone_loopB", 4.1, 0, 1, 1, 1, 1, 1);
	case 5: PlayAnim(playerid, "CAR_CHAT", "carfone_loopB_to_A", 4.1, 0, 1, 1, 1, 1, 1);
	case 6: PlayAnim(playerid, "CAR_CHAT", "carfone_out", 4.1, 0, 1, 1, 1, 1, 1);
	case 7: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_BL", 4.1, 0, 1, 1, 1, 1, 1);
	case 8: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_BR", 4.1, 0, 1, 1, 1, 1, 1);
	case 9: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_FL", 4.1, 0, 1, 1, 1, 1, 1);
	case 10: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_FR", 4.1, 0, 1, 1, 1, 1, 1);
	case 11: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc2_FL", 4.1, 0, 1, 1, 1, 1, 1);
	case 12: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_BR", 4.1, 0, 1, 1, 1, 1, 1);
	case 13: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_FL", 4.1, 0, 1, 1, 1, 1, 1);
	case 14: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_FR", 4.1, 0, 1, 1, 1, 1, 1);
	case 15: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 0, 1, 1, 1, 1, 1);
	case 16: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_BR", 4.1, 0, 1, 1, 1, 1, 1);
	case 17: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_FL", 4.1, 0, 1, 1, 1, 1, 1);
	case 18: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_FR", 4.1, 0, 1, 1, 1, 1, 1);
	case 19: PlayAnim(playerid, "CAR", "Sit_relaxed", 4.1, 0, 1, 1, 1, 1, 1);
	//case 20: PlayAnim(playerid, "CAR", "Tap_hand", 4.1, 1, 0, 0, 0, 0, 1);
	default: SendClientMessage(playerid, COLOR_WHITE, "USAGE: /carchat [1-19]");
	}
	return 1;
}
//../pawno/include/ProjectInc/ben.inc TM
stock ClearNails()
{
	for (new i = 0; i < MAX_NAILS; i++)
	{
		NailObject[i] = INVALID_OBJECT_ID;
	}

	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		InNails[i] = -1;
	}
	return 1;
}

stock GetClosestBehindPrisoner(playerid, Float:distancet = 2.0)
{
	new Float:mindistance = distancet;
	new ppri = -1;
	foreach(new pp: Player)
	{
		if (PlayerCuffed[pp] != 0)
		{
			new Float:pos[3];
			GetXYBehindPlayer(pp, pos[0], pos[1], pos[2]);
			new Float:pzdistance;
			pzdistance = GetDistanceToPointXY(playerid, pos[0], pos[1]);
			if (pzdistance < mindistance)
			{
				mindistance = pzdistance;
				ppri = pp;
			}
		}
	}
	return ppri;
}
stock CreateServerNails()
{
	ClearNails();
	for (new i = 0; i < LIMIT_NAILS; i++)
	{
		new rand = random(MAX_NAILS - 1);
		while (NailObject[rand] != INVALID_OBJECT_ID)
		{
			rand = random(MAX_NAILS - 1);
		}
		NailObject[rand] = CreateDynamicObject(19351, NailPos[rand][0], NailPos[rand][1], NailPos[rand][2] - 1.0025, -90, 0, NailPos[rand][3]);
		printf("Load Nails ID: %d Object ID: %d", rand, NailObject[rand]);
		CountNails++;
	}
	return 1;
}
stock CreateDailyNails()
{
	new countcreate = LIMIT_NAILS - CountNails;
	if (countcreate > 10) countcreate = 5;
	else if (countcreate <= 0) return 0;
	for (new i = 0; i < countcreate; i++)
	{
		new rand = random(MAX_NAILS - 1);
		while (NailObject[rand] != INVALID_OBJECT_ID)
		{
			rand = random(MAX_NAILS - 1);
		}
		NailObject[rand] = CreateDynamicObject(19351, NailPos[rand][0], NailPos[rand][1], NailPos[rand][2] - 1.0025, -90, 0, NailPos[rand][3]);
		printf("Daily Nails ID: %d Object ID: %d", rand, NailObject[rand]);
	}
	return 1;
}

stock CheckVehicleInNails(vehid)
{
	for (new i = 0; i < MAX_NAILS; i++)
	{
		//if (!IsVehicleConnected(i)) continue;
		if (NailObject[i] == INVALID_OBJECT_ID) continue;
		new tire = GetClosestTire(vehid, i);
		if (tire != -1 && i != InNails[vehid])
		{
			BreakTire(vehid, tire, i);
		}
	}
	return 1;
}
stock BreakTire(vehid, idtire, nailid)
{
	new Panels, Doors, Lights, Tires;
	GetVehicleDamageStatus(vehid, Panels, Doors, Lights, Tires);
	new idbinary = InputTireBinary(Tires, idtire);
	UpdateVehicleDamageStatus(vehid, Panels, Doors, Lights, idbinary);
	PlayerPlaySound(GetVehicleDriverID(vehid), 1009, 0.0, 0.0, 0.0);
	GetVehicleDamageStatus(vehid, CarRepairCheat[vehid][0], CarRepairCheat[vehid][1], CarRepairCheat[vehid][2], CarRepairCheat[vehid][3]);
	InNails[vehid] = nailid;
	return 1;
}
stock GetNearestNails(playerid, &Float:distance, &nailid)
{
	distance = 1000;
	for (new i = 0; i < MAX_NAILS; i++)
	{
		if (NailObject[i] == INVALID_OBJECT_ID) continue;

		new Float:objpos[3];
		GetDynamicObjectPos(NailObject[i], objpos[0], objpos[1], objpos[2]);
		new Float:distancez = GetDistanceToPoint(playerid, objpos[0], objpos[1], objpos[2]);
		if (distancez < distance)
		{
			nailid = i;
			distance = distancez;
		}
	}
	return 1;
}
stock InputTireBinary(tireb, idtire)
{
	new str[64];
	format(str, sizeof(str), "%s", TireBinary[tireb]);
	if (str[idtire] == '0')
		str[idtire] = '1';

	for (new i = 0; i < sizeof(TireBinary); i++)
	{
		if (!strcmp(str, TireBinary[i], true))
			return i;
	}
	return -1;
}

stock IsPointInRangeOfPoint(Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:range)
{
	x2 -= x;
	y2 -= y;
	z2 -= z;
	return ((x2 * x2) + (y2 * y2) + (z2 * z2)) < (range * range);
}
// Tire IDs: -1 (Not near a tire), 0 (Front-left), 1 (Back-left), 2 (Back-right), 3 (Front-right)
stock GetClosestTire(car, nailid)
{
	new Float:p[3], Float:c[3], Float:ang, Float:dist[2], tire;

	GetDynamicObjectPos(NailObject[nailid], p[0], p[1], p[2]);
	GetVehiclePos(car, c[0], c[1], c[2]);

	if (!IsPointInRangeOfPoint(c[0], c[1], c[2], p[0], p[1], p[2], 2)) return -1;

	GetVehicleZAngle(car, ang);

	tire = -1;
	dist[0] = Float:0xFFFFFFFF;
	ang += 45.0;
	for (new t = 0; t < 4; t++, ang += 90.0)
	{
		dist[1] = floatsqroot(
			((p[0] - (c[0] + floatsin(-ang, degrees))) * (p[0] - (c[0] + floatsin(-ang, degrees)))) +
			((p[1] - (c[1] + floatcos(-ang, degrees))) * (p[1] - (c[1] + floatcos(-ang, degrees)))));

		if (dist[1] < dist[0])
		{
			dist[0] = dist[1];
			tire = t;
		}
	}
	return tire;
}
stock DeleteNail(nailid)
{
	if (NailObject[nailid] != INVALID_OBJECT_ID)
	{
		DestroyDynamicObject(NailObject[nailid]);
		NailObject[nailid] = INVALID_OBJECT_ID;
		CountNails--;
	}
	return 1;
}

forward TazerKeyStateChange(playerid, newkeys, oldkeys);
public TazerKeyStateChange(playerid, newkeys, oldkeys)
{
	if (newkeys & KEY_FIRE && Tazering[playerid] == 1 && !IsPlayerInAnyVehicle(playerid))
	{
		ApplyAnimation(playerid, "KNIFE", "knife_3", 4.1, 0, 1, 1, 0, 0, 1);
		foreach(new i : Player)
		{
			if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 
				|| PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pLeader] == 17) continue;
			if (IsPlayerNearPlayer(playerid, i, 2) && i != playerid && Tazered[i] == 0 && !IsPlayerInAnyVehicle(i))
			{
				Tazered[i] = 15;
				TogglePlayerControllable(i, 0);
				ApplyAnimation(i, "KNIFE", "knife_hit_3", 4.1, 0, 1, 1, 1, 0, 1);
				SetTimerEx("TazeredCollapse", 1000, 0, "i", i);
			}
		}
	}
	if (newkeys & KEY_HANDBRAKE && !IsPlayerInAnyVehicle(playerid) && GetPlayerWeapon(playerid) == 0)
	{
		if (WearTazer[playerid] == 1)
		{
			if (Tazering[playerid] == 0)
			{
				Tazering[playerid] = 1;
				SetPlayerAttachedObject(playerid, 5, 18642, 6, 0.06, 0.01, 0.08, 180.0, 0.0, 0.0);
			}
			else if (Tazering[playerid] == 1)
			{
				Tazering[playerid] = 0;
				SetPlayerAttachedObject(playerid, 5, 18642, 1, -0.197000, -0.071000, -0.109999, 2.399994, 80.400001, 18.399993, 1.000000, 1.000000, 1.000000, 0, 0);
			}
		}
	}
}

forward TazeredCollapse(playerid);
public TazeredCollapse(playerid)
{
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 1, 0, 1);
	return 1;
}

stock IsPlayerNearPlayer(playerid, targetid, Float:radius)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(targetid, x, y, z);
	if (IsPlayerInRangeOfPoint(playerid, radius, x, y, z))
	{
		return 1;
	}
	return 0;
}

forward OnPIDUpdate(playerid);
public OnPIDUpdate(playerid)
{
	//SCM(playerid, COLOR_GREEN, "ABCDXYZ");
}

stock SCM(playerid, color, message[])
{
	return SendClientMessage(playerid, color, message);
}

stock GLN(playerid)
{
    new name[40];
    GetPlayerName(playerid,name,sizeof(name));
    return name;
}

stock GN(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid,name,sizeof(name));
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if(name[i] == '_') name[i] = ' ';
    }
    return name;
}

stock IsAdminVehicle(vid)
{
	for (new i = 0; i < MAXCUSTOMVEH; i++)
	{
		if (vid == aVeh[i])
			return i;
	}
	return -1;
}
stock IsAnyAdminInVehicle(vid)
{
	foreach(new i : Player)
	{
		if (PlayerInfo[i][pAdmin] > 0 && IsPlayerInVehicle(i, vid))
			return true;
	}
	return false;
}
stock RespawnCar(vid)
{
	new newvid = CreateVehicle2(CarInfo[vid][cModel], CarInfo[vid][cLocationx], CarInfo[vid][cLocationy], CarInfo[vid][cLocationz], CarInfo[vid][cAngle], CarInfo[vid][cColorOne], CarInfo[vid][cColorTwo], 60000);
	CarInfo[newvid][cID] = CarInfo[vid][cID];
	CarInfo[newvid][cModel] = CarInfo[vid][cModel];
	CarInfo[newvid][cLocationx] = CarInfo[vid][cLocationx];
	CarInfo[newvid][cLocationy] = CarInfo[vid][cLocationy];
	CarInfo[newvid][cLocationz] = CarInfo[vid][cLocationz];
	CarInfo[newvid][cAngle] = CarInfo[vid][cAngle];
	CarInfo[newvid][cColorOne] = CarInfo[vid][cColorOne];
	CarInfo[newvid][cColorTwo] = CarInfo[vid][cColorTwo];
	format(CarInfo[newvid][cOwner], 128, "%s", CarInfo[vid][cOwner]);
	format(CarInfo[newvid][cDescription], 128, "%s", CarInfo[vid][cDescription]);
	CarInfo[newvid][cValue] = CarInfo[vid][cValue];
	CarInfo[newvid][cLicense] = CarInfo[vid][cLicense];
	CarInfo[newvid][cRegistration] = CarInfo[vid][cRegistration];
	CarInfo[newvid][cOwned] = CarInfo[vid][cOwned];
	CarInfo[newvid][cLock] = CarInfo[vid][cLock];
	CarInfo[newvid][cType] = CarInfo[vid][cType];
	DestroyCar(vid);
	return 1;
}
stock GetVehicleByCarID(id)
{
	foreach(new i : Vehicle)
	{
		if (CarInfo[i][cID] == id)
		{
			return i;
		}
	}
	return -1;
}
stock DestroyCar(vid)
{
	CarInfo[vid][cID] = -1;
	CarInfo[vid][cModel] = 0;
	CarInfo[vid][cLocationx] = 0;
	CarInfo[vid][cLocationy] = 0;
	CarInfo[vid][cLocationz] = 0;
	CarInfo[vid][cAngle] = 0;
	CarInfo[vid][cColorOne] = 0;
	CarInfo[vid][cColorTwo] = 0;
	format(CarInfo[vid][cOwner], 128, "");
	format(CarInfo[vid][cDescription], 128, "");
	CarInfo[vid][cValue] = 0;
	CarInfo[vid][cLicense] = 0;
	CarInfo[vid][cRegistration] = 0;
	CarInfo[vid][cOwned] = 0;
	CarInfo[vid][cLock] = 0;
	CarInfo[vid][cType] = 0;
	DestroyVehicle2(vid);
	return 1;
}
stock GetVehicleIDFromKey(keyid)
{
	if (keyid == -1) return -1;
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (CarInfo[i][cID] == keyid)
			return i;
	}
	return -1;
}
stock GetFirstParams(const string[], result[], len)
{
	new index;
	format(result, len, "%s", strtok(string, index));
	return 1;
}
stock CountParams(const string[])
{
	new count = 0;
	for (new i = 0; i < strlen(string); i++)
	{
		if (string[i] == ' ' && string[i + 1] != ' ')
			count++;
	}
	return count;
}
stock IsValidIP(string[])
{
	new dotCount;
	for (new i; string[i] != EOS; ++i)
	{
		if (('0' <= string[i] <= '9') || string[i] == '.')
		{
			if ((string[i] == '.') && (string[i + 1] != '.') && ('0' <= string[i - 1] <= '9'))
			{
				++dotCount;
			}
			continue;
		}
	}
	return (dotCount > 2) ? 1 : 0;
}
CMD:veh(playerid, params[])
{
		 if (PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREY, "Khong co quyen han su dung cau lenh nay.");
		 new id, Float:pos[4], col[2], string[256];
		 if (sscanf(params, "iii", id, col[0], col[1])) return SCM(playerid, COLOR_GRAD2, "Su dung: /veh [vehicleid/destroy] [color1] [color2]");
		 if (id < 400 || id > 611) return SCM(playerid, COLOR_GREY, "ID tu 400 den 611.");
		 GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		 GetPlayerFacingAngle(playerid, pos[3]);
		 for (new i = 0; i<MAXCUSTOMVEH; i++)
		 {
			 if (!aVeh[i])
			 {
				 aVeh[i] = CreateVehicle2(id, pos[0], pos[1], pos[2], pos[3], col[0], col[1], 1200);
				 new str[128];
				 format(str, sizeof(str), "Xe He Thong\nID Veh: %d", i);
				 aVehLabel[i] = Create3DTextLabel(str, COLOR_YELLOW, 0, 0, 0, 30, 0, 0);
				 Attach3DTextLabelToVehicle(aVehLabel[i], aVeh[i], 0, 0, 0);
				 aColor[i][0] = col[0];
				 aColor[i][1] = col[1];
				 return 1;
			 }
		 }
		 format(string, sizeof(string), "AdmCMD: %s da tao mot Admin Vehicle ID %d.", GLN(playerid), id);
		 SendAdminMessage(COLOR_LIGHTRED, string);
		 return 1;
}
CMD:xoaveh(playerid, params[])
{
		 if (IsPlayerInAnyVehicle(playerid) && isnull(params))
		 {
			 new avid = IsAdminVehicle(GetPlayerVehicleID(playerid));
			 if (avid != -1)
				 DeleteAdminVeh(avid);
			 return 1;
		 }
		 new vidid[50];
		 if (sscanf(params, "s[50]", vidid))
		 {
			 SCM(playerid, COLOR_GRAD2, "Su dung: /xoaveh [lua chon]");
			 SCM(playerid, COLOR_GRAD2, "[Lua chon]: All, VehID");
			 return 1;
		 }
		 if (!(strcmp(vidid, "all", true)))
		 {
			 for(new i=0;i<MAXCUSTOMVEH;i++)
			 {
				 if (aVeh[i] != INVALID_VEHICLE_ID && !IsAnyAdminInVehicle(aVeh[i]))
					DeleteAdminVeh(i);
			 }
			 SendAdminMessage(COLOR_LIGHTRED, "AdmCMD: Da xoa tat ca Admin Vehicle!");
			 return 1;
		 }
		new avid = strval(vidid);
		if (avid != -1)
		{
			DeleteAdminVeh(avid);
			SCM(playerid, COLOR_LIGHTRED, "AdmCMD: Da xoa chiec Admin Vehicle nay thanh cong!");
			return 1;
		}
		else SCM(playerid, COLOR_GREY, "Id Admin Vehicle khong hop le.");
		//else SCM(playerid, COLOR_GREY, "Chiec xe nay khong ton tai.");
		 return 1;
}
CMD:spec(playerid, params[])
{
		if (PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREY, "Khong du quyen han de su dung cau lenh nay.");
		if (strcmp(params, "off", true) == 0)
		{
			if (Spectating[playerid] == 1)
				TogglePlayerSpectating(playerid, 0);

			else SCM(playerid, COLOR_GREY, "Hien ban khong theo doi ai.");
		}
		else
		{
			new pspec;
			if (sscanf(params, "u", pspec)) return SCM(playerid, COLOR_GRAD2, "Su dung: /spec [Ten/ID Nguoi Choi]");
			if (pspec == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai.");
			if (Spectating[playerid] == 0)
			{
				GetPlayerPos(playerid, SpecPos[playerid][0], SpecPos[playerid][1], SpecPos[playerid][2]);
				SpecInt[playerid] = GetPlayerInterior(playerid);
				SpecVWorld[playerid] = GetPlayerVirtualWorld(playerid);
			}
			TogglePlayerSpectating(playerid, 1);
			if (IsPlayerInAnyVehicle(pspec))
			{
				new carid = GetPlayerVehicleID(pspec);
				PlayerSpectateVehicle(playerid, carid);
			}
			else PlayerSpectatePlayer(playerid, pspec, 0);
			SpecPlayer[playerid] = pspec;
			Spectating[playerid] = 1;
			Spectated[SpecPlayer[playerid]]++;
		}
		return 1;
}

stock DeleteAdminVeh(avid)
{
	Delete3DTextLabel(aVehLabel[avid]);
	new vid = aVeh[avid];
	DestroyVehicle2(vid);
	aVeh[avid] = 0;
}

stock ClearOffer(playerid)
{
	SetPVarInt(playerid, "OfferBy", 0);
	SetPVarInt(playerid, "OfferP", 0);
	SetPVarInt(playerid, "OfferA", 0);
	SetPVarInt(playerid, "OfferG", 0);
	SetPVarInt(playerid, "OfferM", 0);
	SetPVarInt(playerid, "OfferType", 0);
}

stock IsPlayerInBike(playerid)
{
	new vmd = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (IsPlayerInAnyVehicle(playerid)
		&& (vmd == 448 || vmd == 461 || vmd == 462 || vmd == 463 || vmd == 468
			|| vmd == 471 || vmd == 481 || vmd == 509 || vmd == 510 || vmd == 521
			|| vmd == 522 || vmd == 523 || vmd == 581 || vmd == 586))
	{
		return 1;
	}
	return 0;
}

forward Float:GetVehicleSpeed(vehicleid, UseMPH);
public Float:GetVehicleSpeed(vehicleid, UseMPH)
{
    new Float:speed_x,Float:speed_y,Float:speed_z,Float:temp_speed;
    GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
    if(UseMPH == 0) temp_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*136.666667;
	else temp_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*85.4166672;
    floatround(temp_speed,floatround_round);
	return temp_speed;
}

stock ClearAllVehicle()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		CarInfo[i][cID] = -1;
		Trucking[i] = 0;
		CarRepairCheat[i][0] = 0;
		CarHealthCheat[i] = 1000;
	}
	return 1;
}
stock ClearAllBiz()
{
	for (new i = 0; i < MAX_BIZ; i++)
	{
		BizzInfo[i][bID] = -1;
	}
	for (new i = 0; i < MAX_SBIZ; i++)
	{
		SBizzInfo[i][sbID] = -1;
	}
}
stock ClearApGiai(playerid)
{
	if (Escorting[playerid] == 1)
	{
		Escorting[playerid] = 0;
		SCM(EscortedPlayer[playerid], COLOR_YELLOW, "Nguoi ap giai ban vua thoat khoi server.");
		Escorted[EscortedPlayer[playerid]] = 0;
		EscortedPlayer[playerid] = -1;
	}
	if (Escorted[playerid] == 1)
	{
		Escorted[playerid] = 0;
		foreach(new i : Player)
		{
			if (EscortedPlayer[i] == playerid)
			{
				SCM(i, COLOR_YELLOW, "Nguoi ban ap giai vua thoat khoi server.");
				Escorting[i] = 0;
				EscortedPlayer[i] = -1;
			}
		}
	}
	return 1;
}
stock GetIp(playerid)
{
	new ip[30];
	GetPlayerIp(playerid, ip, sizeof(ip));
	return ip;
}
stock IsAtATM(playerid)
{
	if (PlayerToPoint(1.5, playerid, 1346.5016, -1758.7649, 13.5156)
		|| PlayerToPoint(1.5, playerid, 1592.7152, -2335.3748, 13.5400)
		|| PlayerToPoint(1.5, playerid, 2308.4612, -1634.4176, 14.8270)
		|| PlayerToPoint(1.5, playerid, 2865.9014, -1415.4203, 11.0061)
		|| PlayerToPoint(1.5, playerid, 2404.5913, -1229.8973, 23.8301)
		|| PlayerToPoint(1.5, playerid, 1172.5912, -1328.4365, 15.4034))
		return 1;
	return 0;
}
CMD:buonlau(playerid, params[])
{
	if (countFaction(PD) < 3) return SCM(playerid, COLOR_GREY, "Phai co it nhat 3 canh sat onduty trong server moi co the thuc hien.");
	if (gTeam[playerid] == TEAMGOV || IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Ban la nhan vien chinh phu, khong the di buon lau.");
	if (PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, COLOR_GREY, "Ban phai dat cap 8 moi co the di buon.");
	if (!IsPlayerInRangeOfPoint(playerid, 3, -1111.4635, -1681.5151, 76.3739)) return SCM(playerid, COLOR_GREY, "Ban khong dung o khu vuc thuong luong de buon lau (/huongdan tim O Buon Lau");
	new drugs, str[128];
	if (sscanf(params, "i", drugs)) return SCM(playerid, COLOR_GRAD2, "Su dung: /buonlau [so luong thuoc]");
	if (drugs < 10 || drugs > 100) return SCM(playerid, COLOR_GREY, "Ban chi co the buon lau tu 50 den 200 thuoc mot phi vu.");
	if (PlayerInfo[playerid][pDrugs] < drugs) return SCM(playerid, COLOR_GREY, "Ban khong co du thuoc de buon lau.");

	new rand = random(sizeof(BuonLauTakeCP));

	format(str, sizeof(str), "Ban da thoa thuan %d thuoc de buon lau, hay toi cham do va mang theo mot chiec xe bon banh de chuan bi hang.", drugs);
	SCM(playerid, COLOR_YELLOW, str);
	SCM(playerid, COLOR_YELLOW, "Day la mot phi vu nguy hiem, xin hay chuan bi sung ong ky cang.");
	SetPlayerCheckpoint(playerid, BuonLauTakeCP[rand][0], BuonLauTakeCP[rand][1], BuonLauTakeCP[rand][2], 3);
	PlayerInfo[playerid][pDrugs] -= drugs;
	DrugDealer[playerid] = drugs;
	DrugDealing[playerid] = 1;
	OldDD[playerid] = rand;
	return 1;
}
CMD:doibuonlau(playerid, params[])
 {
		if (DrugDealing[playerid] != 3) return SCM(playerid, COLOR_GREY, "Ban hien tai khong buon lau hoac chua tien hanh buon lau.");
		if (CoopDD[playerid] >= 0) return SCM(playerid, COLOR_GREY, "Chi co truong nhom buon lau moi co the doi noi giao dich.");
		if (ChangeDD[playerid] == 1) return SCM(playerid, COLOR_GREY, "Ban chi co the doi diem giao dich 1 lan.");
		new rand = random(sizeof(BuonLauGiveCP));
		while (rand == OldDD[playerid])
		{
			rand = random(sizeof(BuonLauGiveCP));
		}
		SCM(playerid, COLOR_WHITE, "Dang lien lac de yeu cau doi dia diem giao dich...");
		SetTimerEx("ChangeDrugDealer", 5000, false, "ii", playerid, rand);
		return 1;
 }
CMD:tichthubuonlau(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1) return SCM(playerid, COLOR_GREY, "Ban khong phai canh sat.");
	new vid = GetClosestVehicle(playerid);
	if (vid == -1) return SCM(playerid, COLOR_GREY, "Ban khong dung gan chiec xe nao.");
	new Float:x, Float:y;
	GetXYBehindCar(vid, x, y, 4);
	if (GetDistanceToPointXY(playerid, x, y) > 4) return SCM(playerid, COLOR_GREY, "Ban can o thung xe de thuc hien.");
	if (trunkOn[vid] == 0) return SCM(playerid, COLOR_GREY, "Ban phai mo thung xe ra de thuc hien.");
	new ddvehicle = 0, sohang = 0;
	foreach(new pid : Player)
	{
		if (CarDD[pid] == vid)
		{
			sohang += DrugDealer[pid];

			DDTime[pid] = 0;
			DrugDealing[pid] = 0;
			DrugDealer[pid] = 0;
			CarDD[pid] = -1;
			OldDD[pid] = -1;
			ChangeDD[pid] = 0;
			CoopDD[pid] = -1;
			SCM(pid, COLOR_WHITE, "Hang tren xe buon da bi tich thu, phi vu buon lau that bai!");
			ddvehicle = 1;
			DisableCheckpoint(pid);
		}
	}
	if (ddvehicle == 0) return SCM(playerid, COLOR_GREY, "Chiec xe nay khong co hang buon lau.");
	else if (ddvehicle == 1)
	{
		new money = sohang * 7000;
		SafeGivePlayerMoney(playerid, money);
		new str[128];
		format(str, sizeof(str), "** [Tong dai]: Dong chi %s da lap cong va tich thu toan bo so hang buon lau (So tien: %s$) tren chiec xe %s! **", GN(playerid), AddCommas(money), GetVehicleName(vid));
		SendRadioMessage(1, TEAM_RADIO_COLOR, str);
		SendRadioMessage(1, TEAM_RADIO_COLOR, "** [Tong dai]: Cac dong chi hay mau chong truy bat cac doi tuong buon lau con lai! **");
	}
	return 1;
}
CMD:car(playerid, params[])
{
	//if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "Ban khong ngoi tren xe.");
	if (sscanf(params, "s[16]", params))
	{
		SCM(playerid, COLOR_GRAD2, "Su dung: /car [Lua Chon]");
		SCM(playerid, COLOR_GRAD2, "light | trunk | hood");
		return 1;
	}
	new vid = GetPlayerVehicleID(playerid);
	if (IsABicycle(vid)) return SCM(playerid, COLOR_GREY, "Xe dap khong co nhung chuc nang nay.");
	if (!strcmp(params, "light", true))
	{
		if (lightOn[vid] == 0)
		{
			VehicleLight(vid, true);
			GameTextForPlayer(playerid, "~w~Den Xe ~g~Mo", 1000, 4);
			lightOn[vid] = 1;
			return 1;
		}
		else
		{
			VehicleLight(vid, false);
			GameTextForPlayer(playerid, "~w~Den Xe ~r~Tat", 1000, 4);
			lightOn[vid] = 0;
			return 1;
		}
	}
	// Geek 2
	if (!strcmp(params, "hood", true)) 
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsABike(vid)) return SCM(playerid, COLOR_GREY, "Xe may khong co chuc nang nay.");
			if (hoodOn[vid] == 0)
			{
				VehicleHood(vid, true);
				GameTextForPlayer(playerid, "~w~Mui Xe ~g~Mo", 1000, 4);
				hoodOn[vid] = 1;
				return 1;
			}
			else
			{
				VehicleHood(vid, false);
				GameTextForPlayer(playerid, "~w~Mui Xe ~r~Dong", 1000, 4);
				hoodOn[vid] = 0;
				return 1;
			}
		}
		else
		{
			new newcar = GetClosestCar(playerid);
			if (newcar == -1) return SCM(playerid, COLOR_GREY, "Ban khong dung gan chiec xe nao.");
			if (IsABike(newcar)) return SCM(playerid, COLOR_GREY, "Xe may khong co chuc nang nay.");
			new Float:x, Float:y;
			GetXYFrontCar(newcar, x, y, 4);
			if (GetDistanceToPointXY(playerid, x, y) > 4) return SCM(playerid, COLOR_GREY, "Ban can o mui xe de thuc hien.");
			if (hoodOn[newcar] == 0)
			{
				VehicleHood(newcar, true);
				GameTextForPlayer(playerid, "~w~Mui Xe ~g~Mo", 1000, 4);
				hoodOn[newcar] = 1;
				return 1;
			}
			else
			{
				VehicleHood(newcar, false);
				GameTextForPlayer(playerid, "~w~Mui Xe ~r~Dong", 1000, 4);
				hoodOn[newcar] = 0;
				return 1;
			}
		}
	}
	if (!strcmp(params, "trunk", true))
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if (IsABike(vid)) return SCM(playerid, COLOR_GREY, "Xe may khong co chuc nang nay.");
			if (trunkOn[vid] == 0)
			{
				VehicleTrunk(vid, true);
				GameTextForPlayer(playerid, "~w~Thung Xe ~g~Mo", 1000, 4);
				trunkOn[vid] = 1;
				return 1;
			}
			else
			{
				VehicleTrunk(vid, false);
				GameTextForPlayer(playerid, "~w~Thung Xe ~r~Dong", 1000, 4);
				trunkOn[vid] = 0;
				return 1;
			}
		}
		else
		{
			new newcar = GetClosestCar(playerid);
			if (newcar == -1) return SCM(playerid, COLOR_GREY, "Ban khong dung gan chiec xe nao.");
			if (IsABike(newcar)) return SCM(playerid, COLOR_GREY, "Xe may khong co chuc nang nay.");
			new Float:x, Float:y;
			GetXYBehindCar(newcar, x, y, 4);
			if (GetDistanceToPointXY(playerid, x, y) > 4) return SCM(playerid, COLOR_GREY, "Ban can o thung xe de thuc hien.");
			if (trunkOn[newcar] == 0)
			{
				VehicleTrunk(newcar, true);
				GameTextForPlayer(playerid, "~w~Thung Xe ~g~Mo", 1000, 4);
				trunkOn[newcar] = 1;
				return 1;
			}
			else
			{
				VehicleTrunk(newcar, false);
				GameTextForPlayer(playerid, "~w~Thung Xe ~r~Dong", 1000, 4);
				trunkOn[newcar] = 0;
				return 1;
			}
		}
	}
	// Geek 2
	return 1;
}
forward Float:GetXYBehindCar(vid, &Float:q, &Float:w, Float:distance);
Float:GetXYBehindCar(vid, &Float:q, &Float:w, Float:distance)
{
    new Float:a;
    GetVehiclePos(vid, q, w, a);
    GetVehicleZAngle(vid, a);
    q += (distance * -floatsin(-a, degrees));
    w += (distance * -floatcos(-a, degrees));
    return a;
}
forward Float:GetXYFrontCar(vehicleid, &Float:q, &Float:w, Float:distance);
Float:GetXYFrontCar(vehicleid, &Float:q, &Float:w, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid, q, w, a);
	GetVehicleZAngle(vehicleid, a);
	q += (distance * floatsin(-a, degrees));
	w += (distance * floatcos(-a, degrees));
}
CMD:dichvu(playerid, params[])
{
	if (sscanf(params, "s[30]", params)) return SCM(playerid, COLOR_GRAD2, "Su dung: /dichvu [luachon]");
	if (!strcmp(params, "capcuu", true))
	{
		if (countFaction(4) == 0) return SCM(playerid, COLOR_GREY, "Hien tai khong co nhan vien y te nao onduty.");
		if (Dying[playerid] == 0) return SCM(playerid, COLOR_GREY, "Ban khong bi thuong.");
		if (CallMedic[playerid] > 0)
		{
			SCM(playerid, COLOR_GREY, "Ban da goi cap cuu, hay cho cap cuu den.");
			SCM(playerid, COLOR_GREY, "Ban co the goi lai sau 30 giay.");
			return 1;
		}
		CallMedic[playerid] = 30;
		new str[128];
		new zone[40];
		format(str, sizeof(str), "** [Tong Dai]: Da nhan duoc cuoc goi, nhan vien y te se den do ngay...");
		SCM(playerid, COLOR_YELLOW, str);
		GetPlayer2DZone(playerid, zone, sizeof(zone));
		format(str, sizeof(str), "** [Tong Dai]: %s(%d) bi thuong nang tai %s, dang yeu cau mot chiec xe cap cuu. (/nhancapcuu [id]) **", GN(playerid), playerid, zone);
		SendRadioMessage(4, TEAM_RADIO_COLOR, str);
		printf("%s", str);
	}
	return 1;
}
 CMD:hoisinh(playerid, params[])
 {
		if (PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_GREY, "Ban khong phai la Admin");
		new phs, str[128];
		if (sscanf(params, "u", phs)) return SCM(playerid, COLOR_GRAD2, "Su dung: /hoisinh [playerid]");
		if (IsLogOn(phs) && phs != INVALID_PLAYER_ID)
		{
			if (Dying[phs] != 1) return SCM(playerid, COLOR_GREY, "Nguoi choi nay khong chet.");
			printf("AdmCMD: %s hoi sinh %s", GN(playerid), GN(phs));
			format(str, sizeof(str), "AdmCMD: %s da duoc hoi sinh boi %s", GN(phs), GN(playerid));
			BroadCast(COLOR_LIGHTRED, str);
			Dying[phs] = 0;
			DyingTimeOut[phs] = 0;
			PlayerInfo[phs][pHospital] = 0;
			SetPlayerHealth(phs, 100);
			TogglePlayerControllable(phs, 1);
			ClearAnimations(phs);
		}
		return 1;
 }
 CMD:ncc(playerid, params[]) { return cmd_nhancapcuu(playerid, params); }
 CMD:nhancapcuu(playerid, params[])
 {
		if (PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4) return SCM(playerid, COLOR_GREY, "Khong phai nhan vien cuu thuong.");
		new pncc, str[128];
		if (sscanf(params, "r", pncc)) return SCM(playerid, COLOR_GRAD2, "Su dung: /nhancapcuu [Ten/ID Nguoi Choi]");
		if (CallMedic[pncc] == 0) return SCM(playerid, COLOR_GREY, "Nguoi nay khong goi cap cuu");
		if (MedicCaller[playerid] != -1) return SCM(playerid, COLOR_GREY, "Ban da nhan mot dot cap cuu, xin hay giai quyet.");
		format(str, sizeof(str), "** [Tong Dai]: %s da nhan cuoc goi cap cuu cua %s (%d)", GN(playerid), GN(pncc), pncc);
		SendRadioMessage(4, TEAM_RADIO_COLOR, str);
		SCM(pncc, COLOR_YELLOW, "** [Tong Dai]: Benh vien dang cu nhan vien toi vi tri cua ban, xin hay co chiu dung.");
		MedicCaller[playerid] = pncc;
		new inter = GetPlayerInterior(pncc);
		if (inter == 0)
		{
			GetPlayerPos(pncc, MedicPos[pncc][0], MedicPos[pncc][1], MedicPos[pncc][2]);
			SetCheckpoint(playerid, MedicPos[pncc][0], MedicPos[pncc][1], MedicPos[pncc][2], 4);
		}
		else
		{
			if (LastEntrance[pncc][0] == 0)
			{
				SCM(playerid, COLOR_GREY, "Khong the lay duoc vi tri cua nguoi choi.");
				SCM(playerid, COLOR_YELLOW, "Hay /pm nguoi choi kia de tim vi tri.");
			}
			else
			{
				SCM(playerid, COLOR_GREY, "Nguoi choi kia hien tai dang trong mot noi that.");
				SCM(playerid, COLOR_GREY, "Hay vao do de tim nan nhan.");
				MedicPos[pncc][0] = LastEntrance[pncc][0];
				MedicPos[pncc][1] = LastEntrance[pncc][1];
				MedicPos[pncc][2] = LastEntrance[pncc][2];
				SetCheckpoint(playerid, MedicPos[pncc][0], MedicPos[pncc][1], MedicPos[pncc][2], 4);
			}
		}
		return 1;
 }
CMD:pint(playerid, params[])
{
	new str[128];
	format(str, sizeof(str), "Interior: %d", GetPlayerInterior(playerid));
	SCM(playerid, COLOR_WHITE, str);
	format(str, sizeof(str), "VWorld: %d", GetPlayerVirtualWorld(playerid));
	SCM(playerid, COLOR_WHITE, str);
	format(str, sizeof(str), "Last Entrance X: %f | Y: %f | Z: %f", LastEntrance[playerid][0],
		LastEntrance[playerid][1], LastEntrance[playerid][2]);
	SCM(playerid, COLOR_WHITE, str);
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	format(str, sizeof(str), "Now Position X: %f | Y: %f | Z: %f", pos[0], pos[1], pos[2]);
	SCM(playerid, COLOR_WHITE, str);
	return 1;
}
CMD:trithuong(playerid, params[])
{
	if (PlayerInfo[playerid][pBleeding] != 1) return SCM(playerid, COLOR_GREY, "Ban khong can tri thuong.");
	if (!IsPlayerInRangeOfPoint(playerid, 10, 1182.6879, -1317.7358, 1006.4028)) return SCM(playerid, COLOR_GREY, "Ban khong o benh vien de tri thuong.");
	SafeGivePlayerMoney(playerid, -5000);
	PlayerInfo[playerid][pBleeding] = 0;
	SCM(playerid, COLOR_LIGHTGREEN, "Ban da chua tri dut diem vet thuong! Chi phi: 5,000$");
	return 1;
}
CMD:xoamuctieu(playerid, params[])
{
	if (MedicCaller[playerid] != -1)
	{
		MedicCaller[playerid] = -1;
		SCM(playerid, COLOR_WHITE, "Xoa nhan benh nhan thanh cong.");
	}
	DisableCheckpoint(playerid);
	return 1;
}
CMD:dieutri(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4) return SCM(playerid, COLOR_GREY, "Khong phai nhan vien cuu thuong.");
	if (!IsOnSavePosAmbulance(playerid)) return SCM(playerid, COLOR_GREY, "Ban khong ngoi tren xe cuu thuong hoac ngoi sai vi tri de cap cuu.");
	new patient = GetPatientAmbulance(GetPlayerVehicleID(playerid));
	if (patient == -1) return SCM(playerid, COLOR_GREY, "Khong co benh nhan nao o tren xe.");
	SCM(playerid, COLOR_LIGHTRED, "Tien hanh so cuu benh nhan, hay chac chan o yen tren xe trong 30 giay de cuu song benh nhan.");
	new str[128];
	format(str, sizeof(str), "Nhan vien y te %s dang tien hanh so cuu cho ban, trong 30 giay ban se duoc tri thuong.", GN(playerid));
	SCM(patient, COLOR_LIGHTRED, str);
	Saving[patient] = 30;
	Saver[patient] = playerid;
	SaveVehicle[patient] = GetPlayerVehicleID(playerid);
	TogglePlayerControllable(patient, 0);
	return 1;
}
CMD:pdfind(playerid, params[])
 {
		if (!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Ban khong phai nhan vien canh sat.");
		new pfind;
		if (sscanf(params, "u", pfind)) return SCM(playerid, COLOR_GRAD2, "Su dung: /pdfind [playerid]");
		if (pfind == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai.");
		if (PFind[playerid] != -1) return SCM(playerid, COLOR_GREY, "Ban hien dang tim kiem mot nguoi (/stopfind de dung tim kiem)");
		PFind[playerid] = pfind;
		new str[128];
		format(str, sizeof(str), "Tien hanh tim kiem %s! Cham do se xuat hien neu doi tuong trong thanh pho Los Santos.", GN(pfind));
		SCM(playerid, COLOR_LIGHTBLUE, str);
		return 1;
 }
CMD:stopfind(playerid, params[])
{
		if (PFind[playerid] != -1)
		{
			SetPlayerMarkerForPlayer(playerid, PFind[playerid], 0xFFFFFF00);
			PFind[playerid] = -1;
			SCM(playerid, COLOR_WHITE, "Xoa muc tieu tim kiem thanh cong.");
		}
		return 1;
}
stock DeleteTextLetter(string[])
{
	for (new i = 0; i < strlen(string); i++)
	{
		if (string[i] == '~' && IsTextLetter(string[i + 1]) && string[i+2] == '~')
			strdel(string, i, i + 3);
	}
}
stock IsTextLetter(cchar)
{
	if (cchar == 'n' || cchar == 'r' || cchar == 'g' ||
		cchar == 'b' || cchar == 'w' || cchar == 'y' ||
		cchar == 'p' || cchar == 'l' || cchar == 'h' ||
		cchar == 'u' || cchar == 'd' || cchar == '<' ||
		cchar == '>' || cchar == 'k')
		return 1;
	return 0;
}
stock GetRandomBiz()
{
	new rand = random(sizeof(BizzInfo));
	while (BizzInfo[rand][bID] == -1 || IsBizFullProduct(rand) || !IsBizCanBuyProduct(rand))
	{
		rand = random(sizeof(BizzInfo));
	}
	return rand;
}
stock LoadTruck(playerid)
{
	/*if (IsBizFullProduct(bizid) && BizzInfo[bizid][bID] != -1)
		return SCM(playerid, COLOR_GREY, "Cua hang nay da co du hang, khong can cung cap.");*/
	SCM(playerid, COLOR_WHITE, "Dat hang thanh cong. Phi dat hang: 10,000$!");
	SCM(playerid, COLOR_WHITE, "Giao hang thanh cong se tra lai tien");
	SCM(playerid, COLOR_WHITE, "Den cham do de giao hang.");
	SafeGivePlayerMoney(playerid, -10000);
	new vid = GetPlayerVehicleID(playerid);
	Trucking[vid] = 1;
	SCM(playerid, COLOR_YELLOW, "Dung lenh /timgiaohang de tim cua hang de giao hang.");
	SCM(playerid, COLOR_LIGHTGREEN, "Giao hang bang cach dung yen truoc cua hang trong 5 giay.");
	//SetCheckpoint(playerid, BizzInfo[bizid][bEntranceX], BizzInfo[bizid][bEntranceY], BizzInfo[bizid][bEntranceZ], 5);
	return 1;
}
stock AddCommas(so)
{
	new
		number,
		tStr[13]; // Up to 9,999,999,999,999

	if (so <0) number = so *-1;
	else number = so;
	format(tStr, sizeof(tStr), "%d", number);

	if (strlen(tStr) < 4)
		return tStr;

	new
		//rNumber = floatround((number+(number/3)),floatround_floor),
		iPos = strlen(tStr),
		iCount = 1;

	while (iPos > 0)
	{
		if (iCount == 4)
		{
			iCount = 0;
			strins(tStr, ",", iPos, 1);
			iPos++;
		}
		iCount++;
		iPos--;
	}
	if (so<0) strins(tStr, "-", 0);
	return tStr;
}
stock CheckAllBizTruck()
{
	new havebiz = 0;
	for (new i = 0; i < MAX_BIZ; i++)
	{
		if (BizzInfo[i][bID] == -1) continue;
		if (!IsBizFullProduct(i) && IsBizCanBuyProduct(i))
			havebiz = 1;
	}
	return havebiz;
}
stock GetBizLoadTruck()
{
	new str[500];
	format(str, sizeof(str), "Cua Hang\tTien Thuong Them\n");
	for (new i = 0; i < MAX_BIZ; i++)
	{
		if (BizzInfo[i][bID] == -1) continue;
		new title[300];
		format(title, sizeof(title), BizzInfo[i][bMessage]);
		DeleteTextLetter(title);
		if (!IsBizFullProduct(i) && IsBizCanBuyProduct(i))
			format(str, sizeof(str), "%s%s\t%d$\n", str, title, BizzInfo[i][bPriceProd]*10);
		else
		{
			if (IsBizFullProduct(i))
				format(str, sizeof(str), "%s%s (Full Hang)\t%d$\n", str, title, BizzInfo[i][bPriceProd]*10);
			else if (!IsBizCanBuyProduct(i))
				format(str, sizeof(str), "%s%s (Het Ngan Sach)\t%d$\n", str, title, BizzInfo[i][bPriceProd]*10);
		}
	}
	/*for (new i = 0; i < MAX_SBIZ; i++)
	{
		new title = SBizzInfo[i][sMessage];
		DeleteTextLetter(title);
		if (!IsBizFullProduct(i))
			format(str, sizeof(str), "%s\t%d$\n", title, SBizzInfo[i][sPriceProd]);
		else format(str, sizeof(str), "%s (Full Hang)\t%d$\n", title, SBizzInfo[i][sPriceProd]);
	}*/
	return str;
}
stock IsBizFullProduct(bizid)
{
	if (BizzInfo[bizid][bProducts] < BizzInfo[bizid][bMaxProducts])
		return 0;
	return 1;
}
stock IsBizCanBuyProduct(bizid)
{
	if (BizzInfo[bizid][bTill] <  (BizzInfo[bizid][bPriceProd] * 10))
		return 0;
	return 1;
}
stock GetFreeSeatAmbulance(vid)
{
	new freeseat = 2;
	foreach(new i : Player)
	{
		if (IsPlayerInVehicle(i, vid))
		{
			if (GetPlayerVehicleSeat(i) == 2)
				freeseat = -1;
		}
	}
	if (freeseat == -1)
	{
			freeseat = 3;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerInVehicle(i, vid))
			{
				if (GetPlayerVehicleSeat(i) == 3)
					freeseat = -1;
			}
		}
	}
	return freeseat;
}
stock ClearSaving(playerid)
{
	Saving[playerid] = 0;
	Saver[playerid] = -1;
	SaveVehicle[playerid] = -1;
}

stock GetPatientAmbulance(vid)
{
	foreach(new playerid : Player)
	{
		if (IsPlayerInVehicle(playerid, vid))
		{
			if (GetPlayerVehicleSeat(playerid) == 2 || GetPlayerVehicleSeat(playerid) == 3 && Dying[playerid] == 1)
				return playerid;
		}
	}
	return -1;
}
stock IsFD(playerid)
{
	if (IsLogOn(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if (member == 4)
		{
			return 1;
		}
		else if (leader == 4)
		{
			return 1;
		}
	}
	return 0;
}
stock IsOnSavePosAmbulance(playerid)
{
	new vid = GetPlayerVehicleID(playerid);
	if (IsAnAmbulance(vid))
	{
		new seat = GetPlayerVehicleSeat(playerid);
		if (seat == 2 || seat == 3)
			return 1;
	}
	return 0;
}

stock countFaction(idfac)
{
	new count = 0;
	foreach(new playerid : Player)
	{
		if ((PlayerInfo[playerid][pMember] == idfac || PlayerInfo[playerid][pLeader] == idfac) && (OnDuty[playerid] == 1 || JobDuty[playerid] == 1))
			count++;
	}
	return count;
}
		 
forward ChangeDrugDealer(playerid, rand);
public ChangeDrugDealer(playerid, rand)
{
	SCM(playerid, COLOR_WHITE, "[Stranger]: Tao da gui cho may thong tin dia diem giao dich moi, nhanh toi day va de phong may thang com!");
	SCM(playerid, COLOR_YELLOW, "Dia diem giao dich da duoc doi, hay toi cham do moi de giao dich.");
	SetCheckpoint(playerid, BuonLauGiveCP[rand][0], BuonLauGiveCP[rand][1], BuonLauGiveCP[rand][2], 5);

	foreach(new ddid : Player)
	{
		if (CoopDD[ddid] == playerid)
		{
			SetCheckpoint(ddid, BuonLauGiveCP[rand][0], BuonLauGiveCP[rand][1], BuonLauGiveCP[rand][2], 5);
			SCM(playerid, COLOR_YELLOW, "Truong nhom buon lau da doi dia diem giao dich, noi giao dich moi da duoc danh dau tren ban do.");
		}
	}
	return 1;
}

stock GetDriverVehicle(vid)
{
	foreach(new playerid : Player)
	{
		if (IsPlayerInVehicle(playerid, vid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			return playerid;
	}
	return -1;
}

stock CheckDrugDealerInVehicle(vid, ddcase)
{
	new count = 0;
	foreach(new playerid : Player)
	{
		if (DrugDealing[playerid] == ddcase && IsPlayerInVehicle(playerid, vid))
			count++;
	}
	return count;
}

stock IsPlayerDrugDealingCooperate(ddid, playerid, ddcase)
{
	new vid = GetPlayerVehicleID(playerid);
	if (DrugDealing[ddid] == ddcase && IsPlayerInVehicle(ddid, vid))
		return 1;
	return 0;
}

stock DisableCheckpoint(playerid)
{
	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	DisablePlayerCheckpoint(playerid);
}

stock SetCheckpoint(playerid, Float:x, Float:y, Float:z, Float:range)
{
	PlayerPlaySound(playerid, 1002, 0.0, 0.0, 0.0);
	AntiCheckpoint[playerid] = 1;
	AntiCPDistance[playerid] = GetPlayerDistanceFromPoint(playerid, x, y, z);
	SetPlayerCheckpoint(playerid, x,y,z,range);
	return 1;
}

stock KickEx(playerid)
{
	SetTimerEx("KickTime", 1000, 0, "i", playerid);
	return 1;
}

forward KickTime(playerid);
public KickTime(playerid)
{
	Kick(playerid);
	return 1;
}

stock GetClosestDoCPlayer(playerid)
{
	new result = -1;
	new Float:mindistance = 5.0;
	foreach(new i : Player)
	{
		new Float:distance = GetDistanceBetweenPlayers(playerid, i);
		if ((PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pLeader] == 17) && i != playerid)
		{
			if (distance < mindistance)
			{
				mindistance = distance;
				result = i;
			}
		}
	}
	return result;
}
stock GetClosestCell(playerid)
{
	for (new i = 0; i < 23; i++)
	{
		if (IsPlayerNearArrestOut(playerid, i))
			return i;
	}
	return -1;
}
stock IsPlayerNearArrestOut(playerid, id)
{
	if (IsPlayerInRangeOfPoint(playerid, 2, DocArrestOut[id][0], DocArrestOut[id][1], DocArrestOut[id][2]))
		return 1;
	return 0;
}
stock UpdateWantedLevel(playerid)
{
	new points = WantedPoints[playerid];
	switch (points)
	{
		case 3: WantedLevel[playerid] = 1;
		case 4, 5: WantedLevel[playerid] = 2;
		case 6, 7: WantedLevel[playerid] = 3;
		case 8, 9: WantedLevel[playerid] = 4;
		case 10, 11: WantedLevel[playerid] = 5;
		case 12, 13: WantedLevel[playerid] = 6;
	}
	if (points < 3) WantedLevel[playerid] = 0;
	else if (points >= 14) WantedLevel[playerid] = 10;
	return 1;
}
stock HitGate(playeridz, gateid, Float:health)
{
	GateInfo[gateid][gHealth] -= health;
	new str[128];
	format(str, sizeof(str), "~y~Mau Cua: ~r~%0.0f", GateInfo[gateid][gHealth]);
	GameTextForPlayer(playeridz, str, 1000, 4);
	if (GateInfo[gateid][gHealth] <= 0)
	{
		if (GateInfo[gateid][gFactionType] == FACTYPE)
		{
			format(str, sizeof(str), "[Camera] Phat hien co doi tuong pha cua o HQ, vui long dieu tra.");
			SendRadioMessage(GateInfo[gateid][gFactionID], TEAM_RADIO_COLOR, str);
			printf("%s", str);
			foreach(new playerid : Player)
			{
				if (LastHitGate[playerid] == gateid)
				{
					if (WantedPoints[playerid] == 0) { WantedPoints[playerid] = 3; }
					else { WantedPoints[playerid] += 2; }
					SetPlayerCriminalEx(playerid, 255, "Pha Cua");
				}
			}
		}
		DestroyGate(gateid);
	}
	return 1;
}
stock IsGate(objectid)
{
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] == objectid)
			return i;
	}
	return -1;
}
stock CreateGate(model, Float:startx, Float:starty, Float:startz, Float:endx, Float:endy, Float:endz, Float:srotatex, Float:srotatey, Float:srotatez, Float:erotatex, Float:erotatey, Float:erotatez, type = GATE,  factype = -1, facid = -1, autotime = 0, Float:time = 5.0, Float:objecthealth = -1.0, Float:range = 3.0)
{
	new idgate = -1;
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] == INVALID_OBJECT_ID)
			idgate = i;
	}
	if (idgate == -1) return 1;

	new objid = CreateDynamicObject(model, startx, starty, startz, srotatex, srotatey, srotatez);
	GateInfo[idgate][gModel] = model;
	GateInfo[idgate][gObject] = objid;
	GateInfo[idgate][StartX] = startx;
	GateInfo[idgate][StartY] = starty;
	GateInfo[idgate][StartZ] = startz;
	GateInfo[idgate][EndX] = endx;
	GateInfo[idgate][EndY] = endy;
	GateInfo[idgate][EndZ] = endz;
	GateInfo[idgate][SRotateX] = srotatex;
	GateInfo[idgate][SRotateY] = srotatey;
	GateInfo[idgate][SRotateZ] = srotatez;
	GateInfo[idgate][ERotateX] = erotatex;
	GateInfo[idgate][ERotateY] = erotatey;
	GateInfo[idgate][ERotateZ] = erotatez;
	GateInfo[idgate][gHealth] = objecthealth;
	GateInfo[idgate][gMaxHealth] = objecthealth;
	GateInfo[idgate][gType] = type;
	GateInfo[idgate][gTime] = time;
	GateInfo[idgate][gAutoTime] = autotime;
	GateInfo[idgate][gRange] = range;
	GateInfo[idgate][gFactionID] = facid;
	GateInfo[idgate][gFactionType] = factype;
	return 1;
}
stock DestroyGate(gateid)
{
	DestroyDynamicObject(GateInfo[gateid][gObject]);
	GateInfo[gateid][gObject] = INVALID_OBJECT_ID;
	return 1;
}

stock RespawnGate()
{
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] == INVALID_OBJECT_ID && GateInfo[i][gModel] != 0)
		{
			new objid = CreateDynamicObject(GateInfo[i][gModel], GateInfo[i][StartX], GateInfo[i][StartY], GateInfo[i][StartZ],
														GateInfo[i][SRotateX], GateInfo[i][SRotateY], GateInfo[i][SRotateZ]);
			GateInfo[i][gObject] = objid;
		}
		GateInfo[i][gHealth] = GateInfo[i][gMaxHealth];
	}
	return 1;
}
stock GetClosestGate(playerid)
{
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] != -1 && GateInfo[i][gType] == GATE &&
			IsPlayerInRangeOfPoint(playerid, GateInfo[i][gRange], GateInfo[i][StartX], GateInfo[i][StartY], GateInfo[i][StartZ]))
			return i;
	}
	return -1;
}

stock GetClosestDoor(playerid)
{
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] != -1 && (GateInfo[i][gType] == DOOR || GateInfo[i][gType] == DOCCELL) &&
			IsPlayerInRangeOfPoint(playerid, GateInfo[i][gRange], GateInfo[i][StartX], GateInfo[i][StartY], GateInfo[i][StartZ]))
			return i;
	}
	return -1;
}

stock MoveGate(gateid, type = -1)
{
	// 1 OPEN 2 CLOSED
	if (type == -1)
	{
		if (GateInfo[gateid][gMoved] == 0)
		{
			MoveDynamicObject(GateInfo[gateid][gObject], GateInfo[gateid][EndX], GateInfo[gateid][EndY], GateInfo[gateid][EndZ], GateInfo[gateid][gTime], GateInfo[gateid][ERotateX], GateInfo[gateid][ERotateY], GateInfo[gateid][ERotateZ]);
			if (GateInfo[gateid][gAutoTime] > 0)
				GateWaitTime[gateid] = GateInfo[gateid][gAutoTime];
			GateInfo[gateid][gMoved] = 1;
		}
		else
		{
			MoveDynamicObject(GateInfo[gateid][gObject], GateInfo[gateid][StartX], GateInfo[gateid][StartY], GateInfo[gateid][StartZ], GateInfo[gateid][gTime], GateInfo[gateid][SRotateX], GateInfo[gateid][SRotateY], GateInfo[gateid][SRotateZ]);
			GateInfo[gateid][gMoved] = 0;
		}
	}
	else
	{
		if (type == 1)
		{
			MoveDynamicObject(GateInfo[gateid][gObject], GateInfo[gateid][EndX], GateInfo[gateid][EndY], GateInfo[gateid][EndZ], GateInfo[gateid][gTime], GateInfo[gateid][ERotateX], GateInfo[gateid][ERotateY], GateInfo[gateid][ERotateZ]);
			if (GateInfo[gateid][gAutoTime] > 0)
				GateWaitTime[gateid] = GateInfo[gateid][gAutoTime];
			GateInfo[gateid][gMoved] = 1;
		}
		else if (type == 2)
		{
			MoveDynamicObject(GateInfo[gateid][gObject], GateInfo[gateid][StartX], GateInfo[gateid][StartY], GateInfo[gateid][StartZ], GateInfo[gateid][gTime], GateInfo[gateid][SRotateX], GateInfo[gateid][SRotateY], GateInfo[gateid][SRotateZ]);
			GateInfo[gateid][gMoved] = 0;
		}
	}
	return 1;
}
//../pawno/include/ProjectInc/declare.inc TM
#include <mSelection>
#include <timestamp>
//#include <jit>

//TextDraw
new Text:TDLoading;
new Text:TDPBank[MAX_PLAYERS];
new tdbank[50];

#define PLANTMONEY 5000
#define PLANTDRUG 2

#define OFFERWEAPON 1

#define MAXCUSTOMVEH 50
new aVeh[MAXCUSTOMVEH];
new Text3D:aVehLabel[MAXCUSTOMVEH];
new aColor[MAXCUSTOMVEH][2];

new Tazering[MAX_PLAYERS];
new Tazered[MAX_PLAYERS];
new WearTazer[MAX_PLAYERS];

//Newbie Chat
new NewbieChannelActive = 0;
new CountAdvisor = 0;
new Text3D:DanhHieu[MAX_PLAYERS];

//Bike Fall System
new HitTimes[MAX_PLAYERS];

//Ap Giai - Escort
new Escorted[MAX_PLAYERS];
new EscortedPlayer[MAX_PLAYERS];
new Escorting[MAX_PLAYERS];

/////////////////Skill Define//
#define PLANT 1

////////////FARMER////////////
#define MAXSEED 150
#define MAX_SEED_PLAYER 3
#define TIME_BONPHAN 20000 // milliseconds
#define TIME_CAYHEO 180000 // milliseconds
#define TIME_CAYCHET 120000 // milliseconds
#define TIME_SEEDGROWTH 60000 // milliseconds
new
	SeedGrowth[MAX_OBJECTS],
	SeedTuoiNuoc[MAX_OBJECTS],
	//SeedBonPhan[MAX_OBJECTS],
	SeedGatLua[MAX_OBJECTS],
	SeedCount[MAX_PLAYERS] = 0,
	Float:SeedPos[MAX_OBJECTS][3],
	SeedObject[MAX_OBJECTS],
	SeedOwner[MAX_OBJECTS][MAX_PLAYER_NAME + 1],
	SeedTime[MAX_OBJECTS],
	SeedTotal[MAX_OBJECTS],
	Text3D:SeedText[MAX_OBJECTS];

//Medic
new Float:MedicPos[MAX_PLAYERS][3];
new MedicCaller[MAX_PLAYERS];
new CallMedic[MAX_PLAYERS];
new Dying[MAX_PLAYERS];
new DyingTimeOut[MAX_PLAYERS];
new Saving[MAX_PLAYERS];
new Saver[MAX_PLAYERS];
new SaveVehicle[MAX_PLAYERS];

//BUON LAU
new DDTime[MAX_PLAYERS];
new DrugDealing[MAX_PLAYERS];
new DrugDealer[MAX_PLAYERS];
new CarDD[MAX_PLAYERS];
new ChangeDD[MAX_PLAYERS];
new OldDD[MAX_PLAYERS];
new CoopDD[MAX_PLAYERS];

new Float:BuonLauTakeCP[3][3] =
{
	{ -383.8653, -1040.2242, 58.8907 },
	{ -1073.3174, -1208.0381, 129.2188 },
	{ - 415.5736, -1761.8284, 5.6117 }
};
new Float:BuonLauGiveCP[4][3] =
{
	{ -2445.0994, -1759.8325, 13.5898 },
	{ 2667.3279, -1458.4261, 30.5938 },
	{ 2123.8247, -1185.9852, 24.0214 },
	{ 2795.4939, -1619.3204, 10.9219 }
};

new Float:DocArrestOut[23][3] =
{
	{ 2578.0896, -1516.9482, -48.9141 },
	{ 2577.9795, -1513.4364, -48.9141 },
	{ 2578.0840, -1509.5540, -48.9141 },
	{ 2578.0181, -1506.0131, -48.9141 },
	{ 2577.8655, -1502.2213, -48.9141 },
	{ 2588.4314, -1517.9393, -48.9141 },
	{ 2588.4795, -1514.1781, -48.9141 },
	{ 2588.3044, -1510.4994, -48.9141 },
	{ 2588.3792, -1506.9188, -48.9141 },
	{ 2588.5024, -1503.1636, -48.9141 },
	{ 2587.7209, -1522.0472, -48.9141 },
	{ 2584.2358, -1522.2797, -48.9141 },
	{ 2580.5249, -1522.2711, -48.9141 },
	{ 2587.7322, -1529.3362, -45.2369 },
	{ 2583.9592, -1529.5356, -45.2369 },
	{ 2580.3674, -1529.3932, -45.2369 },
	{ 2570.6887, -1502.3342, -45.2369 },
	{ 2570.8069, -1506.0854, -45.2369 },
	{ 2570.8640, -1509.4326, -45.2369 },
	{ 2570.8611, -1513.0879, -45.2373 },
	{ 2570.8345, -1516.7938, -45.2373 },
	{ 2587.2979, -1535.0804, -47.3400 },
	{ 2580.8687, -1535.0698, -47.3400 }
};

new Float:DocArrestIn[23][3] =
{
	{ 2575.9727, -1516.8209, -48.9141 },
	{ 2575.9553, -1513.3483, -48.9141 },
	{ 2575.6096, -1509.6593, -48.9141 },
	{ 2575.6218, -1505.9529, -48.9141 },
	{ 2575.7466, -1502.1635, -48.9141 },
	{ 2590.3359, -1518.0035, -48.9141 },
	{ 2590.8240, -1514.3561, -48.9141 },
	{ 2590.0112, -1510.6479, -48.9141 },
	{ 2590.6521, -1507.0378, -48.9141 },
	{ 2590.5320, -1503.5839, -48.9141 },
	{ 2587.8455, -1524.3763, -48.9141 },
	{ 2584.2048, -1524.4270, -48.9141 },
	{ 2580.4438, -1525.7611, -48.9141 },
	{ 2587.5615, -1526.2703, -45.2369 },
	{ 2583.8953, -1526.2755, -45.2369 },
	{ 2580.4639, -1527.3052, -45.2369 },
	{ 2573.2329, -1502.3574, -45.2369 },
	{ 2573.6370, -1505.9093, -45.2369 },
	{ 2572.9968, -1509.9520, -45.2369 },
	{ 2573.7371, -1513.3970, -45.2373 },
	{ 2573.6582, -1517.1709, -45.2373 },
	{ 2589.1501, -1538.0702, -48.9141 },
	{ 2583.6245, -1539.0674, -48.9141 }
};

#define MAX_NAILS 127
#define LIMIT_NAILS 35
new CountNails = 0;
new TimeNails[MAX_PLAYERS];
new SearchNails[MAX_PLAYERS];
new NailObject[MAX_NAILS];
new InNails[MAX_VEHICLES];
new Float:NailPos[MAX_NAILS][4] =
{
	{ 728.6450, -1320.7795, 13.3984, -90.0 },
	{ 799.9040, -1346.5721, 13.3828, -90.0 },
	{ 797.2269, -1422.2045, 13.3857, -90.0 },
	{ 774.0714, -1588.1799, 13.3828, -90.0 },
	{ 827.9992, -1616.8951, 13.3828, -90.0 },
	{ 817.8740, -1770.9966, 13.3828, -90.0 },
	{ 1007.0264, -1809.3763, 13.3828, -90.0 },
	{ 1185.4883, -1853.8613, 13.3828, -90.0 },
	{ 1520.8279, -1873.3431, 13.3828, -90.0 },
	{ 1548.0623, -1869.7402, 13.3828, -90.0 },
	{ 1682.1826, -1863.8546, 13.3828, -90.0 },
	{ 1890.2144, -1754.3682, 13.3828, -90.0 },
	{ 1940.4547, -1718.0732, 13.3828, -90.0 },
	{ 1941.2813, -1678.9716, 13.3828, -90.0 },
	{ 1945.6339, -1625.3254, 13.3828, -90.0 },
	{ 2007.5431, -1616.3417, 13.3828, -90.0 },
	{ 2092.4348, -1612.9803, 13.3828, -90.0 },
	{ 2126.4800, -1614.9279, 13.3828, -90.0 },
	{ 2288.6045, -1733.7295, 13.3828, -90.0 },
	{ 2394.3254, -1751.5524, 13.3828, -90.0 },
	{ 2409.3438, -1749.8817, 13.3828, -90.0 },
	{ 2419.7471, -1936.7133, 13.3828, -90.0 },
	{ 2487.7747, -1728.6785, 13.3828, -90.0 },
	{ 2515.9705, -1818.2275, 13.3828, -90.0 },
	{ 2072.2856, -1809.9269, 13.3828, -90.0 },
	{ 1749.4846, -1647.5687, 13.3828, -90.0 },
	{ 1697.6987, -1594.1803, 13.3828, -90.0 },
	{ 1527.7019, -1634.5322, 13.3828, -90.0 },
	{ 1534.1624, -1687.2218, 13.3828, -90.0 },
	{ 1450.9537, -1733.2712, 13.3828, -90.0 },
	{ 1312.5131, -1667.5985, 13.3828, -90.0 },
	{ 797.2224, -1258.4231, 13.3828, -90.0 },
	{ 671.3542, -1585.7765, 13.3828, -90.0 },
	{ 196.6848, -1633.4841, 13.5829, -90.0 },
	{ 359.8520, -1381.7119, 13.5829, -90.0 },
	{ 1758.0686, -1496.5553, 13.5829, -90.0 },
	{ 1753.4799, -1500.8778, 13.5829, -90.0 },
	{ 1208.4205, -1323.8865, 13.5829, -90.0 },
	{ 1355.4004, -986.3817, 29.6185, 90.0 },
	{1356.7314, -1208.1207, 17.2340, 90.0 },
	{1298.6150, -1604.7634, 13.3828, 90.0 },
	{1428.8035, -1709.9276, 13.3828, 90.0 },
	{1455.6887, -1409.7604, 13.3828, 90.0 },
	{1453.9257, -1173.9480, 23.7508, 90.0 },
	{1482.7883, -1147.3765, 23.9063, 90.0 },
	{1481.0729, -1054.7466, 23.6536, 90.0 },
	{1714.3423, -1180.7100, 23.6596, 90.0 },
	{1715.5841, -1296.0073, 13.3906, 90.0 },
	{1715.7869, -1428.4838, 13.3828, 90.0 },
	{1655.8702, -1461.7355, 13.3850, 90.0 },
	{1658.3876, -1579.5190, 13.3906, 90.0 },
	{1688.7194, -1634.1912, 13.3828, 90.0 },
	{1689.2428, -1729.6924, 13.3837, 90.0 },
	{1750.0969, -1717.6025, 13.3828, 90.0 },
	{1750.2872, -1621.7094, 13.3854, 90.0 },
	{1691.1243, -1823.7585, 13.3828, 90.0 },
	{1685.1206, -1860.4302, 13.3906, 90.0 },
	{1820.5314, -1877.6859, 13.3735, 90.0 },
	{1819.3440, -1769.5991, 13.3828, 90.0 },
	{1821.0054, -1624.1442, 13.3828, 90.0 },
	{1826.7620, -1555.6427, 13.3700, 90.0 },
	{1849.8151, -1442.7332, 13.4010, 90.0 },
	{1851.1796, -1343.5352, 13.3969, 90.0 },
	{1850.5322, -1262.5765, 13.3906, 90.0 },
	{1851.1960, -1198.5354, 22.5718, 90.0 },
	{1867.8810, -1142.5807, 23.7380, 90.0 },
	{1865.0367, -1076.6849, 23.6693, 90.0 },
	{1976.8998, -1078.8448, 24.9035, 90.0 },
	{1969.8295, -1152.7965, 25.8429, 90.0 },
	{1975.1041, -1244.2910, 24.1078, 90.0 },
	{2069.2075, -1129.7338, 23.7342, 90.0 },
	{2069.1335, -1231.9622, 23.8068, 90.0 },
	{2068.8787, -1363.2617, 23.8151, 90.0 },
	{2112.8406, -1459.2571, 23.8328, 90.0 },
	{2096.1509, -1736.4115, 13.3988, 90.0 },
	{2083.4050, -1894.5131, 13.3906, 90.0 },
	{2215.8066, -1711.1886, 13.3958, 90.0 },
	{2342.8013, -1582.0952, 23.7454, 90.0 },
	{2430.7952, -1503.9253, 23.8412, 90.0 },
	{2451.7251, -1410.9452, 23.8212, 90.0 },
	{2642.9937, -1458.6864, 30.2813, 90.0 },
	{2642.7847, -1430.8481, 30.2813, 90.0 },
	{2642.7217, -1268.2590, 49.4541, 90.0 },
	{2642.1868, -1239.5077, 49.8438, 90.0 },
	{2737.7815, -1315.7203, 51.0077, 90.0 },
	{2723.3191, -1328.7393, 48.6601, 90.0 },
	{2722.9404, -1582.4027, 15.8896, 90.0 },
	{2737.6526, -1564.5127, 20.7922, 90.0 },
	{2676.6914, -1462.6385, 30.3858, 90.0 },
	{2642.3757, -1067.6028, 69.4531, 90.0 },
	{1989.6840, -1030.6248, 24.8396, 90.0 },
	{1972.5956, -1222.0398, 25.0310, 90.0},
	{ 1813.5942, -1735.6245, 13.3828, 45.0 },
	{ 1828.7854, -1750.2850, 13.3828, 0.0 },
	{ 2046.8873, -1748.2388, 13.3828, 0.0 },
	{ 2175.6125, -1638.7552, 14.7322, 0.0 },
	{ 2252.0212, -1592.9293, 2.7347, 0.0 },
	{ 2058.0713, -1811.2554, 13.3828, 0.0 },
	{ 1760.4757, -1828.5929, 13.3828, 45.0 },
	{ 1688.7168, -1856.9003, 13.3828, 45.0 },
	{ 1594.2640, -1867.5999, 13.3828, 0.0 },
	{ 1049.7651, -1816.7489, 13.5915, 45.0 },
	{ 889.7949, -1770.1495, 13.3828, 0.0 },
	{ 801.9298, -1786.3522, 13.3057, 0.0 },
	{ 766.6042, -1777.7972, 12.8640, 0.0 },
	{ 83.8787, -1542.6871, 5.6306, 0.0 },
	{ 75.1096, -1533.3793, 5.2545, 0.0 },
	{ 40.7615, -1525.7382, 5.1920, 0.0 },
	{ 648.0573, -1586.4985, 15.5065, 0.0 },
	{ 670.4305, -1389.5850, 13.6168, 45.0 },
	{ 698.1785, -1410.1447, 13.4027, 45.0 },
	{ 1395.5315, -1406.7401, 13.3905, 0.0 },
	{ 1417.2698, -1396.2533, 13.3828, 0.0 },
	{ 1604.8142, -1445.5448, 13.3828, 0.0 },
	{ 1620.3564, -1160.5326, 23.8970, 0.0 },
	{ 1880.1550, -1047.6953, 23.6797, 45.0 },
	{ 2121.4116, -1082.5577, 24.2509, 45.0 },
	{ 2219.0979, -1115.2620, 25.6478, 45.0 },
	{ 2317.3169, -1149.0255, 26.8045, 0.0 },
	{ 2243.0964, -1384.0061, 23.8427, 0.0 },
	{ 2206.4390, -1647.3447, 15.2661, 0.0 },
	{ 2174.2524, -1751.6830, 13.3848, 0.0 },
	{ 1911.1361, -1755.7390, 13.3828, 0.0 },
	{ 2630.4563, -1256.0563, 49.6610, 0.0 },
	{ 2188.3042, -1385.3724, 23.8310, 0.0 },
	{ 2284.2844, -1381.7566, 24.0957, 0.0 },
	{ 2570.1814, -1251.1011, 45.9766, 0.0 }
};

new TireBinary[16][] = 
{
	{ "0000" }, 
	{ "0001" },
	{ "0010" },
	{ "0011" },
	{ "0100" },
	{ "0101" },
	{ "0110" },
	{ "0111" },
	{ "1000" },
	{ "1001" },
	{ "1010" },
	{ "1011" },
	{ "1100" },
	{ "1101" },
	{ "1110" },
	{ "1111" }
};

new LastShot[MAX_VEHICLES];

//Anti Checkpoint Cheat
new Float:AntiCPDistance[MAX_PLAYERS],
	AntiCPTime[MAX_PLAYERS],
	AntiCheckpoint[MAX_PLAYERS];

//PD Find
new PFind[MAX_PLAYERS];
new LSArea;
new Float:LSZone[] = {
	48.0, -1531.0, 324.0, -2083.0, 1324.0, -2739.0, 2916.0, -2735.0, 2896.0, -919.0, 1220.0, -771.0, 476.0, -1023.0, 48.0, -1531.0
};
new DOCArea;
new Float:DOCZone[] = {
	649.8716, -1383.8660, 650.1193, -1330.2158, 773.1381, -1331.3358, 773.2067, -1383.9464
};
new DOCCheck[MAX_PLAYERS];
new DOCDelay[MAX_PLAYERS];
new DOCAlarm = 0;
#define DOCAIR 40.0

new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];

new Text:TDAnimHelp;

new Float:LastEntrance[MAX_PLAYERS][3];

//Nail


//Spec
new SpecPlayer[MAX_PLAYERS],
Spectating[MAX_PLAYERS],
Spectated[MAX_PLAYERS],
Float:SpecPos[MAX_PLAYERS][3],
SpecInt[MAX_PLAYERS],
SpecVWorld[MAX_PLAYERS];

new Trucking[MAX_VEHICLES];
new TruckTime[MAX_PLAYERS];
new Float:TruckPos[MAX_PLAYERS][3];
new TruckBiz[MAX_PLAYERS];
//TYPECAR
#define HARVESTVEH 1
#define DHARVESTVEH 2
#define SMUGGLEVEH 3
#define SWEEPERVEH 4
#define COPVEH 5
#define FBIVEH 6
#define NGVEH 7
#define GORVEH 8
#define HSPDVEH 9
#define AMBUVEH 10
#define TRUCKVEH 11
#define PIZZAVEH 12
#define BUSVEH 13
#define TOWVEH 14
#define SCHOOLVEH 15
#define RENTVEH 16
#define KARTVEH 17
#define NEWSVEH 18
#define TAXIVEH 19
#define HITMANVEH 20
#define DOCVEH 21

#define UPDLNOVEH 1
#define UPDLVEH 2

#define GATE 1
#define DOOR 2
#define DOCCELL 3

#define PUBTYPE 0
#define FACTYPE 1
#define GANGTYPE 2

#define TIMESTAMP 0
#define HOUR 1
#define MINUTE 2
#define SECOND 3
#define DAY 4
#define MONTH 5
#define YEAR 6
#define FULLTIME 7
#define FULLDATE 8
#define ALL 9

#define PD 1
#define FBI 2
#define NG 3
#define FD 4
#define MAYOR 7
#define HITMAN 8
#define NEWS 9
#define TAXI 10
#define DOC 17

#define TEAMGOV 1
#define TEAMGANG 2
#define TEAMVILLAIN 4
#define TEAMCIVILLAIN 3

new mSkinList = mS_INVALID_LISTID;
new fpsObj[MAX_PLAYERS];
//Reward Type
#define TRUCKREWARD 1
#define MECHANICREWARD 2

stock CreateServerTextDraw()
{
	TDLoading = TextDrawCreate(328.500000, 183.155548, "Loading...~n~Dang_lay_thong_tin_tai_khoan...");
	TextDrawLetterSize(TDLoading, 0.410500, 2.315554);
	TextDrawTextSize(TDLoading, 0.000000, 306.000000);
	TextDrawAlignment(TDLoading, 2);
	TextDrawColor(TDLoading, -1);
	TextDrawUseBox(TDLoading, 1);
	TextDrawBoxColor(TDLoading, 102);
	TextDrawSetShadow(TDLoading, 0);
	TextDrawSetOutline(TDLoading, 1);
	TextDrawBackgroundColor(TDLoading, 255);
	TextDrawFont(TDLoading, 2);
	TextDrawSetProportional(TDLoading, 1);
	TextDrawSetShadow(TDLoading, 0);
}

stock CreateServerPlayerTextDraw(playerid)
{
	TDPBank[playerid] = TextDrawCreate(608.437072, 95.833282, "Bank$_100,000,000");
	TextDrawLetterSize(TDPBank[playerid], 0.400000, 1.600000);
	TextDrawAlignment(TDPBank[playerid], 3);
	TextDrawColor(TDPBank[playerid], -2139094785);
	TextDrawSetShadow(TDPBank[playerid], 0);
	TextDrawSetOutline(TDPBank[playerid], 1);
	TextDrawBackgroundColor(TDPBank[playerid], 255);
	TextDrawFont(TDPBank[playerid], 1);
	TextDrawSetProportional(TDPBank[playerid], 1);
	TextDrawSetShadow(TDPBank[playerid], 0);
}

//Anti Car Repair
new CarRepairCheat[MAX_VEHICLES][4];
new CarCheatAttemping[MAX_PLAYERS];
new Float:CarHealthCheat[MAX_VEHICLES];

new DriverLicenseCar[MAX_PLAYERS];
new Float:DriverLicenseTime[MAX_PLAYERS];
new Timer:DriverLicenseLoop[MAX_PLAYERS];
new PlayerText:DriverLicenseTD[MAX_PLAYERS][5];
new Float:DriverLicensePos[10][3] = {
	{ 2054.9548, -1932.3621, 13.3908 }, //Start
	{ 1961.6324, -1932.2354, 13.3828 },
	{ 1961.6705, -2166.4866, 13.3828 },
	{ 1993.6191, -2226.5842, 13.0795 }, //LS's Airport
	{ 1879.9777, -2469.4734, 13.6028 }, //Start Driver License
	{ 1856.8535, -2409.0413, 13.6028 },
	{ 1849.5590, -2452.4497, 13.6028 },
	{ 1829.0403, -2413.6301, 13.6106 },
	{ 1834.8435, -2456.9551, 13.6106 }, // Finish Driver License Test
	{ 2054.8250, -1919.2405, 13.5469 } // Get Driver License
};
//../pawno/include/ProjectInc/geek.inc TM
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    if(listid == mSkinList)
    {
        if(response)
        {
        	SetPlayerSkin(playerid, modelid);
			PlayerInfo[playerid][pModel] = modelid;
			SafeGivePlayerMoney(playerid, -SKINPRICE);
			PlayerPlaySound(playerid,5453,0.0,0.0,0.0);
   		}
        return 1;
    }
    return 1;
}

stock HP(playerid)
{
	new name[32];
	switch (PlayerInfo[playerid][pHelper])
	{
	case 1: format(name, sizeof(name), "[Helper]");
	case 2: format(name, sizeof(name), "[CA]");
	default: format(name, sizeof(name), "Khong");
	}
	return name;
}

stock IsPlayerNearSeed(playerid)
{
	for (new i = 0; i<MAXSEED; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2])) return 1;
	}
	return 0;
}
//stock IsPlayerInRectangle(playerid, Float:x1, Float:y1, Float:x2, Float:y2)
//{
//	if (IsLogOn(playerid))
//	{
//		new Float:xs, Float:ys, Float:zs;
//		GetPlayerPos(playerid, xs, ys, zs);
//		return IsPointInRectangle(xs, ys, x1, y1, x2, y2);
//	}
//	return 0;
//}
//stock IsPointInRectangle(Float:xs, Float:ys, Float:x1, Float:y1, Float:x2, Float:y2)
//{
//	if (IsBetweenFloats(xs, x1, x2) && IsBetweenFloats(ys, y1, y2))
//	{
//		return 1;
//	}
//	return 0;
//}
//stock IsBetweenFloats(Float:f, Float:f1, Float:f2)
//{
//	switch (floatcmp(f1, f2))
//	{
//	case 0: if (f == f1) { return 1; }
//	case 1: if (f <= f1 && f >= f2) { return 1; }
//	case -1: if (f >= f1 && f <= f2) { return 1; }
//	}
//	return 0;
//}
stock IsPlayerInRangeofFarmer(playerid)
{
	if (IsPlayerInRectangle(playerid, -1028.2699, -1575.5719, -949.1511, -1626.2856)) return 1;
	return 0;
}

stock ClearSeedPos(i)
{
	SeedPos[i][0] = 0;
	SeedPos[i][1] = 0;
	SeedPos[i][2] = 0;
}

stock DestroySeed(i)
{
	SeedGatLua[i] = 0;
	SeedTuoiNuoc[i] = 0;
	DestroyDynamic3DTextLabel(SeedText[i]);
	SeedTime[i] = 0;
	SeedTotal[i] = 0;
	DestroyDynamicObject(SeedObject[i]);
	SeedObject[i] = 0;
	ClearSeedPos(i);
	for (new playerid = 0; playerid <= GetPlayerPoolSize(); playerid++)
	{
		if (strcmp(SeedOwner[i], GLN(playerid), true) == 0 && SeedOwner[i][0] != EOS) {
			SeedCount[playerid]--;
			break;
		}
	}
	SeedOwner[i][0] = EOS;
}

stock GetPlayerNearSeed(playerid)
{
	for (new i = 0; i<MAXSEED; i++)
	{
		if (IsValidDynamicObject(SeedObject[i]) && IsPlayerInRangeOfPoint(playerid, 3, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2])) return i;
	}
	return 0;
}

stock GetSlotSeed()
{
	for (new i = 0; i<MAXSEED; i++)
	{
		if (!SeedObject[i]) return i;
	}
	return -1;
}

stock SeedCheck(i) {
	new str[100];
	if (SeedGrowth[i] == 4) {
		format(str, sizeof(str), "Nguoi gieo hat: %s\n[Da Truong Thanh] Co the gat lua ({00FF00} An ALT{008080})", SeedOwner[i]);
		UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
	}
	if (SeedGrowth[i] == 5) {
		format(str, sizeof(str), "Nguoi gieo hat: %s\n[Thieu Nuoc] Hay tuoi nuoc cho cay ngay! ({00FF00} An ALT{008080})", SeedOwner[i]);
		UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
	}
	if (SeedGrowth[i] == 6) {
		format(str, sizeof(str), "Nguoi gieo hat: %s\n[Chet] Do thieu nuoc !", SeedOwner[i]);
		UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
	}
}
stock RiceGrowth(i, a) {
	SeedGrowth[i] = a;
	SeedTotal[i] = 0;
	SeedTime[i] = 0;
	switch (SeedGrowth[i]) {
		case 2: {
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObject(802, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] - 0.6, 0.0, 0.0, 0.0);
		}
		case 3: {
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObject(801, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] - 1.5, 0.0, 0.0, 0.0);
		}
		case 4: {
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObject(809, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] - 1.5, 0.0, 0.0, 0.0);
		}
		case 5: {
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObject(812, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] + 0.2, 0.0, 0.0, 0.0);
		}
		case 6: {
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObject(815, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] - 1.5, 0.0, 0.0, 0.0);
		}
	}
	SeedCheck(i);
}
stock GetLevelSkill(playerid, skill)
{
	new value = 0;
	switch (skill)
	{
	case PLANT: value = PlayerInfo[playerid][pPlantSkill];
	}
	if (value>0 && value <100) return 1;
	else if (value >= 100 && value <500) return 2;
	else if (value >= 500 && value <1000) return 3;
	else if (value >= 1000 && value <2000) return 4;
	else if (value >= 2000) return 5;
	return 0;
}

stock TangSkill(playerid, skill, soluong)
{
	new str[128];
	switch (skill)
	{
		case PLANT:
		{
			if (PlayerInfo[playerid][pPlantSkill] > 0) PlayerInfo[playerid][pPlantSkill] += soluong;
			format(str, sizeof(str), "[Trong trot]: Tang %d diem ki nang.", soluong);
		}
		default: return 0;
	}
	SendClientMessage(playerid, COLOR_YELLOW, str);
	return 1;
}

CMD:goto(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Khong co quyen han su dung cau lenh nay.");
	if (sscanf(params, "s[32]", params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Su dung: /goto [Dia diem/PlayerId]");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: LS | LV | SF");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: XuongVuKhi | Truck | Dongo | Nongdan");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: Tosser | Nhamay | Binco | 247");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: AllSaints | County | Wangcar");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: DoC | TrongTrot");
		return 1;
	}
	new xe = GetPlayerVehicleID(playerid), str[255];
	if (!strcmp(params, "doc", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 777.9285, -1385.0005, 13.7251);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 777.9285, -1385.0005, 13.7251);
	}
	else if (!strcmp(params, "trongtrot", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, -1092.1846, -1650.5377, 76.3739);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -1092.1846, -1650.5377, 76.3739);
	}
	else if (!strcmp(params, "ls", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 1529.6, -1691.2, 13.3);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1529.6, -1691.2, 13.3);
	}
	else if (!strcmp(params, "lv", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 1699.2, 1435.1, 10.7);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1699.2, 1435.1, 10.7);
	}
	else if (!strcmp(params, "sf", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, -2015.261108, 154.379516, 27.687500);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -2015.261108, 154.379516, 27.687500);
	}
	//else if (!strcmp(params, "dd", true))
	//{
	//	if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, DiemDenPos[playerid][0], DiemDenPos[playerid][1], DiemDenPos[playerid][2] + 3);
	//	SetPlayerPos(playerid, DiemDenPos[playerid][0], DiemDenPos[playerid][1], DiemDenPos[playerid][2] + 3);
	//}
	else if (!strcmp(params, "xuongvukhi", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 2187.2886, -2265.1406, 13.4754);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2187.2886, -2265.1406, 13.4754);
	}
	else if (!strcmp(params, "truck", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 2461.0278, -2115.2649, 13.5469);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2461.0278, -2115.2649, 13.5469);
	}
	else if (!strcmp(params, "binco", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 2245.4258, -1662.2477, 15.4690);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2245.4258, -1662.2477, 15.4690);
	}
	else if (!strcmp(params, "247", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 1932.0830, -1776.4635, 13.3828);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1932.0830, -1776.4635, 13.3828);
	}
	else if (!strcmp(params, "wangcar", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 1790.7096, -1739.4459, 13.5469);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1790.7096, -1739.4459, 13.5469);
	}
	else if (!strcmp(params, "county", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 2026.7938, -1422.0918, 16.9922);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2026.7938, -1422.0918, 16.9922);
	}
	else if (!strcmp(params, "allsaints", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 1177.5790, -1323.5640, 14.0777);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1177.5790, -1323.5640, 14.0777);
	}
	else if (!strcmp(params, "nongdan", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, -374.0205, -1439.1160, 25.7266);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -374.0205, -1439.1160, 25.7266);
	}
	else if (!strcmp(params, "dongo", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, -534.1697, -83.0436, 62.8426);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -534.1697, -83.0436, 62.8426);
	}
	else if (!strcmp(params, "nhamay", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 39.5153, -287.3114, 2.0165);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 39.5153, -287.3114, 2.0165);
	}
	else if (!strcmp(params, "tosser", true))
	{
		if (IsPlayerInAnyVehicle(playerid)) return SetVehiclePos(xe, 681.5443, -476.8310, 16.3359);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 681.5443, -476.8310, 16.3359);
	}
	else if (IsNumeric(params))
	{
		new plo = strval(params);
		if (plo == INVALID_PLAYER_ID || !IsLogOn(plo))
		{
			format(str, sizeof(str), "   %d , nguoi choi khong hop le.", plo);
			return SendClientMessage(playerid, COLOR_GRAD1, str);
		}
		new Float:plocx, Float: plocy, Float: plocz;
		if (Spectate[playerid] != 255)
		{
			Spectate[playerid] = 256;
		}
		GetPlayerPos(plo, plocx, plocy, plocz);
		if (PlayerInfo[plo][pInt] > 0)
		{
			SetPlayerInterior(playerid, PlayerInfo[plo][pInt]);
			PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
			PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
		}
		if (PlayerInfo[playerid][pInt] == 0)
		{
			SetPlayerInterior(playerid, 0);
		}
		if (plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
		{
			SetPlayerInterior(playerid, 1);
			PlayerInfo[playerid][pInt] = 1;
		}
		if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, plocx, plocy + 4, plocz);
			TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, plocx, plocy + 2, plocz);
		}
		PlayerInfo[playerid][pVirWorld] = GetPlayerVirtualWorld(plo);
		SetVirtualWorld(playerid, PlayerInfo[playerid][pVirWorld]);
	}
	else {
		return SendClientMessage(playerid, COLOR_GRAD1, "   Sai [Dia diem] hoac [Playerid] !");
	}
	SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen !");
	return 1;
}

CMD:sendto(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Khong co quyen han su dung cau lenh nay.");
	new nguoichoi, location[32];
	if (sscanf(params, "us[32]", nguoichoi, location))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sendto [ID] [Dia diem]");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: LS | LV | SF");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: Truck | Congnhan | Dongo | Nongdan");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: Tosser | Nhamay | Binco | 247");
		SendClientMessage(playerid, COLOR_GREY, "Dia diem: AllSaints | County | Wangcar");
		return 1;
	}
	if (!IsLogOn(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "ID khong hop le.");
	new xe = GetPlayerVehicleID(nguoichoi), str[255];
	if (!strcmp(location, "ls", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 1529.6, -1691.2, 13.3);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 1529.6, -1691.2, 13.3);
	}
	else if (!strcmp(location, "lv", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 1699.2, 1435.1, 10.7);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 1699.2, 1435.1, 10.7);
		return 1;
	}
	else if (!strcmp(location, "sf", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, -2015.261108, 154.379516, 27.687500);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, -2015.261108, 154.379516, 27.687500);
	}
	else if (!strcmp(location, "truck", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 2187.2886, -2265.1406, 13.4754);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 2187.2886, -2265.1406, 13.4754);
	}
	else if (!strcmp(location, "congnhan", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 2461.0278, -2115.2649, 13.5469);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 2461.0278, -2115.2649, 13.5469);
	}
	else if (!strcmp(location, "binco", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 2245.4258, -1662.2477, 15.4690);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 2245.4258, -1662.2477, 15.4690);
	}
	else if (!strcmp(location, "247", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 1932.0830, -1776.4635, 13.3828);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 1932.0830, -1776.4635, 13.3828);
	}
	else if (!strcmp(location, "wangcar", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 1790.7096, -1739.4459, 13.5469);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 1790.7096, -1739.4459, 13.5469);
	}
	else if (!strcmp(location, "county", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 2026.7938, -1422.0918, 16.9922);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 2026.7938, -1422.0918, 16.9922);
	}
	else if (!strcmp(location, "allsaints", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 1177.5790, -1323.5640, 14.0777);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 1177.5790, -1323.5640, 14.0777);
	}
	else if (!strcmp(location, "nongdan", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, -374.0205, -1439.1160, 25.7266);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, -374.0205, -1439.1160, 25.7266);
	}
	else if (!strcmp(location, "dongo", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, -534.1697, -83.0436, 62.8426);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, -534.1697, -83.0436, 62.8426);
	}
	else if (!strcmp(location, "nhamay", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 39.5153, -287.3114, 2.0165);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 39.5153, -287.3114, 2.0165);
	}
	else if (!strcmp(location, "tosser", true))
	{
		if (IsPlayerInAnyVehicle(nguoichoi)) return SetVehiclePos(xe, 681.5443, -476.8310, 16.3359);
		SetPlayerInterior(nguoichoi, 0);
		SetVirtualWorld(nguoichoi, 0);
		SetPlayerPos(nguoichoi, 681.5443, -476.8310, 16.3359);
	}
	else {
		return SendClientMessage(playerid, COLOR_GRAD1, "Sai [Dia diem] !");
	}
	format(str, sizeof(str), " Ban da dich chuyen %s.", GN(nguoichoi));
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "[Admin] %s da dich chuyen ban.", GN(playerid));
	SendClientMessage(nguoichoi, COLOR_YELLOW, str);
	return 1;
}
CMD:gotopos(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Khong co quyen han su dung cau lenh nay.");
	new Float:p[3], interior;
	if (sscanf(params, "fffd", p[0], p[1], p[2], interior)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /gotoco [ x ] [ y ] [ z ] [ int ]");
	new vid = GetPlayerVehicleID(playerid);
	if (IsPlayerInAnyVehicle(playerid))
	{
		SetVehiclePos(vid, p[0], p[1], p[2] + 2);
		LinkVehicleToInterior(vid, interior);
		SetVehicleVirtualWorld(vid, 0);
		PutPlayerInVehicle(playerid, vid, 0);
		SetPlayerInterior(playerid, interior);
		SetVirtualWorld(playerid, 0);
	}
	else
	{
		SetPlayerPos(playerid, p[0], p[1], p[2] + 2);
		SetPlayerInterior(playerid, interior);
		SetVirtualWorld(playerid, 0);
	}
	SendClientMessage(playerid, COLOR_GRAD1, "Dich chuyen.");
	return 1;
}

CMD:nonewb(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Khong co quyen han su dung cau lenh nay.");
	if (NewbieChannelActive == 0) { NewbieChannelActive = 1; BroadCast(COLOR_NEWBIE, "Kenh chat Newbie da duoc mo khoa."); }
	else if (NewbieChannelActive == 1) { NewbieChannelActive = 0; BroadCast(COLOR_NEWBIE, "Kenh chat Newbie da duoc khoa."); }
	return 1;
}

CMD:n(playerid, params[]) { return cmd_newb(playerid, params); }
CMD:newb(playerid, params[])
{
	new str[255], mess[255];
	if (sscanf(params, "s[255]", mess)) return SendClientMessage(playerid, COLOR_GREY, "Su dung: /newb [Noi Dung]");
	if (NewbieChannelActive == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Kenh newbie da bi khoa.");
	if (PlayerInfo[playerid][pAdmin] > 0) format(str, sizeof(str), "[Admin] %s(%d): %s", GN(playerid), playerid, mess);
	else if (PlayerInfo[playerid][pHelper] > 0) format(str, sizeof(str), "%s %s(%d): %s", HP(playerid), GN(playerid), playerid, mess);
	else
	{
		if (GetPVarInt(playerid, "InNewbieChannel") == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Thoi gian giua hai cau hoi la 15s.");
		format(str, sizeof(str), "%s(%d): %s", GN(playerid), playerid, mess);
		SetPVarInt(playerid, "InNewbieChannel", 1);
		defer NewbieChannel[15000](playerid);
	}
	BroadCast(COLOR_NEWBIE, str);
	return 1;
}
CMD:yeucautrogiup(playerid, params[])
{
	if (CountAdvisor == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Hien gio khong co Advisor nao.");
	if (PlayerInfo[playerid][pLevel] >5) return SendClientMessage(playerid, COLOR_GRAD1, "Cap cua ban da qua cao.");
	if (GetPVarInt(playerid, "CanTroGiup") == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Hay cho mot luc sau hay tiep tuc gui yeu cau.");
	new str[128];
	format(str, sizeof(str), "%s(%i) yeu cau su tro giup tu Advisor. (/chapnhangiupdo %i)", GN(playerid), playerid, playerid);
	CBroadCast(COLOR_LIGHTGREEN, str, 2);
	format(str, sizeof(str), "%s(%i) da gui yeu cau tro giup. Dang doi Advisor duyet...", GN(playerid), playerid);
	ABroadCast(COLOR_LIGHTGREEN, str, 1);
	SetPVarInt(playerid, "CanTroGiup", 1);
	defer RequestAdvisor[30000](playerid);
	return 1;
}
CMD:chapnhangiupdo(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong phai advisor.");
	if (CADuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ban phai onduty Advisor truoc.");
	new pgd;
	if (sscanf(params, "u", pgd)) return SendClientMessage(playerid, COLOR_GRAD1, "/chapnhangiupdo [Ten/ID Nguoi Choi]");
	if (pgd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Nguoi choi khong ton tai.");
	if (GetPVarInt(pgd, "CanTroGiup") != 1) return SendClientMessage(playerid, COLOR_GRAD1, "Nguoi nay khong can tro giup.");
	new str[128];
	format(str, sizeof(str), "Ban da chap nhan giup do cho %s , khi da hoan thanh cong viec su dong /dagiup de tro lai vi tri cu.", GN(pgd));
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "%s %s da chap nhan yeu cau giup do cua ban.", HP(playerid), GN(playerid));
	SendClientMessage(pgd, COLOR_LIGHTGREEN, str);
	format(str, sizeof(str), "%s %s da chap nhan yeu cau tro giup cua %s.", HP(playerid), GN(playerid), GN(pgd));
	ABroadCast(COLOR_LIGHTGREEN, str, 1);
	CBroadCast(COLOR_LIGHTGREEN, str, 2);
	new Float: x, Float:y, Float:z, Float:r, i, vw;
	vw = GetPlayerVirtualWorld(playerid);
	i = GetPlayerInterior(playerid);
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, r);
	SetPVarFloat(playerid, "AdvisorLastx", x);
	SetPVarFloat(playerid, "AdvisorLasty", y);
	SetPVarFloat(playerid, "AdvisorLastz", z);
	SetPVarFloat(playerid, "AdvisorLastr", r);
	SetPVarInt(playerid, "AdvisorLastInt", i);
	SetPVarInt(playerid, "AdvisorLastVW", vw);

	GetPlayerPos(pgd, x, y, z);
	vw = GetPlayerVirtualWorld(pgd);
	i = GetPlayerInterior(pgd);
	SetPlayerPos(playerid, x, y + 2, z);
	SetVirtualWorld(playerid, vw);
	SetPlayerInterior(playerid, i);

	DanhHieu[playerid] = CreateDynamic3DTextLabel("Nguoi Tro Giup", COLOR_LIGHTGREEN, x, y, z + 6.0, 15.0, playerid);
	SetPVarInt(playerid, "DangHelp", 1);
	DeletePVar(pgd, "CanGiupDo");
	return 1;
}
CMD:dagiup(playerid, params[])
{
	if (GetPVarInt(playerid, "DangHelp") != 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ban hien khong giup do ai.");
	new string[128];
	format(string, sizeof(string), "%s da hoan thanh yeu cau tro giup.", GN(playerid));
	CBroadCast(COLOR_LIGHTGREEN, string, 2);
	ABroadCast(COLOR_LIGHTGREEN, string, 1);
	DestroyDynamic3DTextLabel(DanhHieu[playerid]);
	SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
	SetVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
	SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
	DeletePVar(playerid, "DangHelp");
	return 1;
}
CMD:c(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] < 2 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong the dung lenh nay");
	new mess[255], str[255];
	if (sscanf(params, "s[255]", mess)) return SendClientMessage(playerid, COLOR_GRAD1, "/c [Noi Dung]");
	if(PlayerInfo[playerid][pAdmin] > 0) {
		format(str, sizeof(str), "[Admin] %s(%d): %s", GN(playerid), playerid, mess);
	}
	else {
		format(str, sizeof(str), "%s %s(%d): %s", HP(playerid), GN(playerid), playerid, mess);
	}
	CBroadCast(COLOR_LIGHT_BLUE, str, 2);
	ABroadCast(COLOR_LIGHT_BLUE, str, 1);
	return 1;
}
CMD:plant(playerid, params[]) { return cmd_gieohat(playerid, params); }
CMD:gieohat(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 19) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong phai nguoi trong trot.");
	if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong theo gieo hat giong khi dang o trong xe!");
	if (!IsPlayerInRangeofFarmer(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong dung trong khu vuc co the gieo hat");
	if (IsPlayerNearSeed(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong the trong gan cay khac!");
	//if (PInfo[playerid][HatGiong] <= 0) return SendMessage(playerid, COLOR_GRAD1, "Ban khong con hat giong de gieo");
	new str[128];
	if (SeedCount[playerid] >= MAX_SEED_PLAYER)
	{
		format(str, sizeof(str), "Ban da gieo hat den toi da [%d/%d] cay lua!", SeedCount[playerid], MAX_SEED_PLAYER);
		SendClientMessage(playerid, COLOR_GRAD1, str);
		return 1;
	}
	new i = GetSlotSeed();
	if (i == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Dat da het dinh duong.");
	GetPlayerPos(playerid, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2]);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
	SeedObject[i] = CreateDynamicObject(675, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2] - 1, 0.0, 0.0, 0.0);
	format(str, sizeof(str), "Nguoi gieo hat: %s\n[Can] Tuoi nuoc ({00FF00} An ALT{008080})", GN(playerid));
	SeedText[i] = CreateDynamic3DTextLabel(str, 0x008080FF, SeedPos[i][0], SeedPos[i][1], SeedPos[i][2], 5.0);
	SeedGrowth[i] = 1;
	SeedCount[playerid]++;
	SeedTime[i] = 0;
	SeedTotal[i] = 0;
	format(SeedOwner[i], 128, "%s", GLN(playerid));
	SendClientMessage(playerid, COLOR_WHITE, "Ban da gieo hat giong thanh cong!");
	SendClientMessage(playerid, COLOR_WHITE, "Hay chu y tuoi nuoc thuong xuyen de cay phat trien!");
	return 1;
}

CMD:muaquanao(playerid, params[])
{
	if(!IsAtClothShop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Khong dung o shop quan ao.");
	new str[255];
	format(str, sizeof(str), "Ban can co it nhat $%d de mua trang phuc", SKINPRICE);
	if(GetPlayerMoney(playerid) < SKINPRICE) return SendClientMessage(playerid, COLOR_GRAD1, str);
	ShowModelSelectionMenu(playerid, mSkinList, "Mua Trang Phuc");
	return 1;
}

CMD:thibanglai(playerid, params[]){
	if(!PlayerToPoint(5,playerid,2063.0376,-1914.9541,13.5469))
		return SendClientMessage(playerid, COLOR_GRAD1, "Ban khong dung tai dia diem thi bang lai");
	new str[255];
	format(str, sizeof(str), "Ban can co it nhat $%d dong le phi thi bang lai", DMVFEE);
	if(GetPlayerMoney(playerid) < DMVFEE) return SendClientMessage(playerid, COLOR_GRAD1, str);
	if(DriverLicenseCar[playerid] != INVALID_VEHICLE_ID || GetPVarInt(playerid, "DriverLicenseTest") == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Vui long tap trung vao bai thi hien tai cua ban");

	SafeGivePlayerMoney(playerid, -DMVFEE);
	DisablePlayerRaceCheckpoint(playerid);
	SetPVarInt(playerid,"DriverLicenseTest", 1);
	SendClientMessage(playerid, COLOR_WHITE, "Len xe de bat dau bai thi bang lai.");
	return 1;
}

forward PlantKeyStateChange(playerid, newkeys, oldkeys);
public PlantKeyStateChange(playerid, newkeys, oldkeys)
{
	if (PlayerInfo[playerid][pJob] == 19 && IsPlayerNearSeed(playerid) && newkeys == KEY_WALK)
	{
		if (IsPlayerInAnyVehicle(playerid)) return 1;
		new i = GetPlayerNearSeed(playerid), str[100], RandomTime[3][1] = { { TIME_SEEDGROWTH / 3 }, { TIME_SEEDGROWTH * 2 / 3 }, { TIME_SEEDGROWTH } }, rand = random(sizeof(RandomTime));
		if (SeedGrowth[i] < 4 && SeedTuoiNuoc[i] == 0 && !IsPlayerAttachedObjectSlotUsed(playerid, 9) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
		{
			SeedTuoiNuoc[i] = 1;
			ApplyAnimation(playerid, "MISC", "CASE_PICKUP", 4.0, 1, 0, 0, 0, 5000, 1);
			defer TuoiCay[RandomTime[rand][0]](i, RandomTime[rand][0]);
			SendClientMessage(playerid, COLOR_WHITE, "Ban da tuoi nuoc cho cay lua!");
			format(str, sizeof(str), "Nguoi gieo hat: %s\nCay da tuoi nuoc", SeedOwner[i]);
			UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
		}
		else if (SeedGrowth[i] == 4 && SeedGatLua[i] == 0 && !IsPlayerAttachedObjectSlotUsed(playerid, 9) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
		{
			if (strcmp(SeedOwner[i], GLN(playerid), true) != 0 && SeedOwner[i][0] != EOS) return SendClientMessage(playerid, COLOR_GRAD1, "Day la cay thuoc so huu cua nguoi khac!");
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
			DestroyDynamicObject(SeedObject[i]);
			SeedObject[i] = CreateDynamicObjectEx(2901, SeedPos[i][0] + 1.2, SeedPos[i][1], SeedPos[i][2] - 1, 4, 0.00000000, 0.00000000, 0.00000000);
			SeedTime[i] = 0;
			SeedGatLua[i] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Ban da gat lua tu cay lua!");
			format(str, sizeof(str), "Nguoi gieo hat: %s\nLua da gat, hay mang toi kho! ({00FF00} An ALT{008080})", SeedOwner[i]);
			UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
		}
		else if (SeedGatLua[i] == 1 && !IsPlayerAttachedObjectSlotUsed(playerid, 9))
		{
			if (strcmp(SeedOwner[i], GLN(playerid), true) != 0 && SeedOwner[i][0] != EOS) return SendClientMessage(playerid, COLOR_GRAD1, "Day la cay thuoc so huu cua nguoi khac!");
			SetPlayerAttachedObject(playerid, 9, 2901, 1, 0.25, 0.470760, 0.000000, 0.000000, 90.217391, 0.000000, 0.8, 0.8, 0.8);
			SetPlayerSpecialAction(playerid, 25);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 1, 1, 1, 1, 1);
			SetPVarInt(playerid, "CantUseAnim", 1);
			SendClientMessage(playerid, COLOR_WHITE, "Ban da thu hoach lua, hay mang no toi kho!");
			SetCheckpoint(playerid, -1102.0814, -1636.1648, 76.3672, 4);
			DestroySeed(i);
		}
	}
	return 1;
}

forward mSkinOnGameModeInit();
public mSkinOnGameModeInit() {
	mSkinList = LoadModelSelectionMenu("mSelection/skin.txt");
}

forward IncOnPlayerDisconnect(playerid, reason);
public IncOnPlayerDisconnect(playerid, reason) {
	SetPVarInt(playerid,"DMVSuccess", 0);
	SetPVarInt(playerid,"DriverLicenseTest", 0);
	DisablePlayerRaceCheckpoint(playerid);
	DestroyDriverLicenseTD(playerid);
	stop DriverLicenseLoop[playerid];
	if(DriverLicenseCar[playerid] != INVALID_VEHICLE_ID) {
		SetVehicleToRespawn2(DriverLicenseCar[playerid]);
		DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
		SafeGivePlayerMoney(playerid, DMVFEE);
		for(new i=0; i < MAX_PLAYERS; i++) {
			SetVehicleParamsForPlayer(DriverLicenseCar[playerid],i,0,0);
		}
	}

}

forward DMVOnPlayerEnterRaceCP(playerid);
public DMVOnPlayerEnterRaceCP(playerid) {
	for	(new i = 0; i<8; ++i) {
		if (DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInRangeOfPoint(playerid, 5, DriverLicensePos[i][0], DriverLicensePos[i][1], DriverLicensePos[i][2])) {
			new raceType = 0;
			if(i == 4) {
				SetVehicleVirtualWorld(DriverLicenseCar[playerid], playerid);
				SetVirtualWorld(playerid, playerid);
				SetVehiclePos(DriverLicenseCar[playerid], 1878.8151, -2482.3274, 13.6470);
				SetVehicleZAngle(DriverLicenseCar[playerid], 0);
				PutPlayerInVehicle(playerid, DriverLicenseCar[playerid], 0);
				SetVehicleHealthEx(DriverLicenseCar[playerid], 1000);
				SetCameraBehindPlayer(playerid);
				FixVehicle(DriverLicenseCar[playerid]);
				new str[500];
				str = "- Toc do khong duoc duoi 5 km/h.\n- Mau xe phai tren 995.\n- Hoan thanh bai thi duoi 30s.\n-------------------------------------------";
				ShowPlayerDialog(playerid, DIALOG_DRIVERLICENSE_RULE, DIALOG_STYLE_MSGBOX, "----Quy Tac Sat Hach----", str, "Bat Dau", "");
				ShowDriverLicenseTD(playerid);
				DriverLicenseTime[playerid] = 0.0;
			}
			if(i == 7) raceType = 1;
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, raceType, DriverLicensePos[i+1][0], DriverLicensePos[i+1][1], DriverLicensePos[i+1][2], DriverLicensePos[i+2][0], DriverLicensePos[i+2][1], DriverLicensePos[i+2][2], 5);
			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		}
	}
	if (DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInRangeOfPoint(playerid, 5, DriverLicensePos[8][0], DriverLicensePos[8][1], DriverLicensePos[8][2])) 
	{
		stop DriverLicenseLoop[playerid];
		DisablePlayerRaceCheckpoint(playerid);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		SetVehicleVirtualWorld(DriverLicenseCar[playerid], 0);
		SetVirtualWorld(playerid, 0);
		HideDriverLicenseTD(playerid);
		PutPlayerInVehicle(playerid, DriverLicenseCar[playerid], 0);
		GameTextForPlayer(playerid, "~g~Chuc mung ban hoan thanh bai sat hach lai xe~n~~y~Tro lai DMV de nhan bang lai xe", 5000, 3);
		SetPVarInt(playerid,"DMVSuccess", 1);
		SetPlayerCheckpoint(playerid, DriverLicensePos[9][0], DriverLicensePos[9][1], DriverLicensePos[9][2], 5);
		DriverLicenseTime[playerid] = 0.0;
	}
}

stock FailDrivingTest(playerid)
{
	stop DriverLicenseLoop[playerid];
	GameTextForPlayer(playerid, "~r~Ban da rot bai thi sat hach lai xe", 5000, 3);
	SetPVarInt(playerid, "DMVSuccess", 0);
	DisablePlayerRaceCheckpoint(playerid);
	DisablePlayerCheckpoint(playerid);
	SetVehicleVirtualWorld(DriverLicenseCar[playerid], 0);
	SetVirtualWorld(playerid, 0);
	SetVehicleToRespawn2(DriverLicenseCar[playerid]);
	DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
	SetPlayerPos(playerid, 2054.8250, -1919.2405, 13.5469);
	DriverLicenseTime[playerid] = 0.0;
	HideDriverLicenseTD(playerid);
	return 1;
}
forward DMVOnPlayerEnterCP(playerid);
public DMVOnPlayerEnterCP(playerid) {
	if (DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInRangeOfPoint(playerid, 5, DriverLicensePos[9][0], DriverLicensePos[9][1], DriverLicensePos[9][2])) {
		if(GetPVarInt(playerid, "DMVSuccess") == 1) {
			PlayerInfo[playerid][pCarLic] = 1;
			GameTextForPlayer(playerid, "~w~Chuc mung ban da nhan duoc bang lai xe", 5000, 3);
		}
		RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn2(DriverLicenseCar[playerid]);
		DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
	}
}

forward ShowDriverLicenseTD(playerid);
public ShowDriverLicenseTD(playerid) {
	for(new i=0; i<5; i++) {
		PlayerTextDrawShow(playerid,DriverLicenseTD[playerid][i]);
	}
}

forward DestroyDriverLicenseTD(playerid);
public DestroyDriverLicenseTD(playerid) {
	for(new i=0; i<5; i++) {
		PlayerTextDrawDestroy(playerid,DriverLicenseTD[playerid][i]);
	}
}

forward HideDriverLicenseTD(playerid);
public HideDriverLicenseTD(playerid) {
	for(new i=0; i<5; i++) {
		PlayerTextDrawHide(playerid,DriverLicenseTD[playerid][i]);
	}
}

forward InitDriverLicenseTD(playerid);
public InitDriverLicenseTD(playerid) {
	DriverLicenseTD[playerid][0] = CreatePlayerTextDraw(playerid, 627.916809, 340.889007, "A");
	PlayerTextDrawLetterSize(playerid, DriverLicenseTD[playerid][0], 0.529167, 6.572588);
	PlayerTextDrawTextSize(playerid, DriverLicenseTD[playerid][0], 488.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, DriverLicenseTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, DriverLicenseTD[playerid][0], -16777216);
	PlayerTextDrawUseBox(playerid, DriverLicenseTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, DriverLicenseTD[playerid][0], 120);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, DriverLicenseTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, DriverLicenseTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, DriverLicenseTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, DriverLicenseTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][0], 0);

	DriverLicenseTD[playerid][1] = CreatePlayerTextDraw(playerid, 500.000000, 350.000000, "Mau");
	PlayerTextDrawLetterSize(playerid, DriverLicenseTD[playerid][1], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, DriverLicenseTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, DriverLicenseTD[playerid][1], -1378294017);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, DriverLicenseTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, DriverLicenseTD[playerid][1], 16777215);
	PlayerTextDrawFont(playerid, DriverLicenseTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, DriverLicenseTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][1], 0);

	DriverLicenseTD[playerid][2] = CreatePlayerTextDraw(playerid, 500.000000, 375.000000, "Thoi Gian");
	PlayerTextDrawLetterSize(playerid, DriverLicenseTD[playerid][2], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, DriverLicenseTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, DriverLicenseTD[playerid][2], -1378294017);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, DriverLicenseTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, DriverLicenseTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, DriverLicenseTD[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, DriverLicenseTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][2], 0);

	DriverLicenseTD[playerid][3] = CreatePlayerTextDraw(playerid, 570.000000, 350.000000, "1000");
	PlayerTextDrawLetterSize(playerid, DriverLicenseTD[playerid][3], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, DriverLicenseTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, DriverLicenseTD[playerid][3], -2139062017);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, DriverLicenseTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, DriverLicenseTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, DriverLicenseTD[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, DriverLicenseTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][3], 0);

	DriverLicenseTD[playerid][4] = CreatePlayerTextDraw(playerid, 570.000000, 375.000000, "0.0");
	PlayerTextDrawLetterSize(playerid, DriverLicenseTD[playerid][4], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, DriverLicenseTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, DriverLicenseTD[playerid][4], -2139062017);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, DriverLicenseTD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, DriverLicenseTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, DriverLicenseTD[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, DriverLicenseTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, DriverLicenseTD[playerid][4], 0);
	return 1;
}

task Plant[1000]()
{
	///////////////////Growth///////////////////
	for (new i = 0; i<MAXSEED; i++)
	{
		if (IsValidDynamicObject(SeedObject[i]))
		{
			SeedTime[i] += 1000;
			if (SeedGatLua[i] == 0 && SeedTime[i] == TIME_CAYHEO && (SeedGrowth[i] == 1 || SeedGrowth[i] == 2 || SeedGrowth[i] == 3 || SeedGrowth[i] == 4))
			{
				RiceGrowth(i, 5);
			}
			else if (SeedGatLua[i] == 0 && SeedTime[i] == TIME_CAYCHET && SeedGrowth[i] == 5)
			{
				RiceGrowth(i, 6);
			}
			else if (SeedGatLua[i] == 0 && SeedTime[i] == (TIME_CAYCHET / 2) && SeedGrowth[i] == 6)
			{
				DestroySeed(i);
			}
			else if (SeedTime[i] == TIME_CAYHEO && SeedGatLua[i] == 1) DestroySeed(i);
		}
	}
	return 1;
}
timer TuoiCay[15000](i, time)
{
	new str[100];
	SeedTuoiNuoc[i] = 0;
	SeedTime[i] = 0;
	SeedTotal[i] += time;
	format(str, sizeof(str), "Nguoi gieo hat: %s\n[Can] Tuoi nuoc ({00FF00} An ALT{008080})", SeedOwner[i]);
	UpdateDynamic3DTextLabelText(SeedText[i], 0x008080FF, str);
	if (SeedTotal[i] >= TIME_SEEDGROWTH)
	{
		if (SeedGrowth[i] == 5)  RiceGrowth(i, 2);
		RiceGrowth(i, SeedGrowth[i] + 1);
	}
	return 1;
}
timer NewbieChannel[1000](playerid)
{
	SetPVarInt(playerid, "InNewbieChannel", 0);
}
timer RequestAdvisor[1000](playerid)
{
	SetPVarInt(playerid, "CanTroGiup", 0);
}
timer DriverLicenseTimer[100](playerid) {
	new Float:health, str[12];
	DriverLicenseTime[playerid]+=0.1;
	GetVehicleHealth(DriverLicenseCar[playerid], health);
	format(str, sizeof(str), "%.1f", health );
	PlayerTextDrawSetString(playerid, DriverLicenseTD[playerid][3], str);
	format(str, sizeof(str), "%.1f", DriverLicenseTime[playerid] );
	PlayerTextDrawSetString(playerid, DriverLicenseTD[playerid][4], str);
}
//../pawno/include/ProjectInc/map.inc TM
stock CreateMap()
{
	OldModeMap();
	DocMap();
	DocInterior();
	return 1;
}

stock DocMap()
{
	CreateDynamicObject(984, 780.98773, -1330.10071, 17.21400, 0.00000, 0.00000, 88.56026);
	CreateDynamicObject(984, 768.20361, -1329.81970, 17.21400, 0.00000, 0.00000, 88.79820);
	CreateDynamicObject(984, 755.39337, -1329.58105, 17.21400, 0.00000, 0.00000, 89.30839);
	CreateDynamicObject(984, 742.61438, -1329.48474, 17.21400, 0.00000, 0.00000, 90.31840);
	CreateDynamicObject(983, 734.61206, -1329.60840, 17.21400, 0.00000, 0.00000, 90.31840);
	CreateDynamicObject(984, 787.41968, -1336.66138, 17.21400, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(982, 787.40997, -1355.85767, 17.20000, 0.44000, 0.00000, 0.00000);
	CreateDynamicObject(984, 787.35718, -1375.08618, 17.20000, 0.44000, 0.00000, 178.96490);
	CreateDynamicObject(983, 787.21710, -1381.80615, 17.30000, 0.44000, 0.00000, 359.29291);
	CreateDynamicObject(982, 774.33478, -1384.89990, 17.40000, 0.00000, 0.00000, 89.48270);
	CreateDynamicObject(983, 758.30780, -1384.80676, 17.40000, 0.00000, 0.00000, 89.68370);
	CreateDynamicObject(19313, 777.87079, -1330.14648, 13.34039, 0.00000, 0.00000, 178.92033);
	CreateDynamicObject(2048, 777.86853, -1330.13647, 15.91850, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2048, 777.85834, -1330.15430, 15.91850, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3113, 731.54999, -1340.86780, 16.58740, 0.00000, 15.00000, 0.00000);
	CreateDynamicObject(3113, 731.54999, -1363.50000, 16.58740, 0.00000, 15.00000, 0.00000);
	CreateDynamicObject(1508, 732.34027, -1342.33496, 14.23000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5837, 783.62018, -1380.35059, 14.16620, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3515, 742.99530, -1344.31995, 12.50000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 742.46625, -1344.33740, 16.50000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 743.58221, -1379.20837, 24.70000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 743.58221, -1366.24048, 24.70000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3279, 769.66632, -1380.05811, 12.58000, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(987, 773.81909, -1384.44543, 11.87000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 773.81909, -1372.44543, 11.87000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 773.81909, -1360.44543, 11.87000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 784.04962, -1366.85449, 12.57310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 784.04962, -1361.35449, 12.57310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 784.04962, -1355.85449, 12.57310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 784.04962, -1350.35449, 12.57310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 784.04962, -1344.85449, 12.57310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 773.81909, -1352.30005, 11.87000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19857, 740.81000, -1359.52808, 21.93000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 755.50336, -1369.34912, 14.80480, 0.00000, 0.00000, 90.39381);
	CreateDynamicObject(3660, 746.87946, -1358.23621, 14.80480, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 754.25629, -1332.81726, 12.57310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 758.75629, -1332.81726, 12.57310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 749.25629, -1332.81726, 12.57310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 763.25629, -1332.81726, 12.57310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 744.25629, -1332.81726, 12.57310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2047, 741.56238, -1359.50256, 24.00630, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11245, 777.94421, -1386.79248, 19.09700, 0.00000, -40.00000, -90.00000);
	CreateDynamicObject(11245, 781.44421, -1386.79248, 19.09700, 0.00000, -40.00000, -90.00000);
	CreateDynamicObject(11245, 774.44421, -1386.79248, 19.09700, 0.00000, -40.00000, -90.00000);
	CreateDynamicObject(2614, 732.27142, -1342.32166, 17.71540, 0.00000, 0.00000, 90.26000);
	CreateDynamicObject(618, 786.50208, -1331.83313, 12.54170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 785.96167, -1333.96729, 13.04530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 785.96167, -1338.96729, 13.04530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 785.67010, -1371.86743, 13.03680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 782.17383, -1372.12280, 13.40000, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19834, 782.10370, -1381.03479, 13.78960, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19425, 776.60663, -1381.34705, 12.73590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 779.40662, -1381.34705, 12.74590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 776.60663, -1379.84705, 12.73590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 779.40662, -1379.84705, 12.74590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 776.60663, -1378.34705, 12.73590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 779.40662, -1378.34705, 12.74590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19467, 783.89661, -1366.81067, 12.16270, -90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19467, 783.90637, -1345.08740, 12.36270, -180.00000, 0.00000, 0.00000);
	CreateDynamicObject(966, 781.57361, -1383.92688, 12.62200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(789, 764.51379, -1343.85120, 25.98760, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19672, 777.96631, -1384.80005, 15.21260, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1616, 781.64569, -1384.88342, 17.16000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1616, 732.60083, -1330.17383, 23.83660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19143, 786.20001, -1331.44238, 17.53770, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(1215, 742.96307, -1344.26794, 13.39430, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 756.78369, -1357.38733, 12.99240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 757.20520, -1357.07129, 21.13960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 772.77087, -1331.38159, 15.80000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 733.00092, -1331.00183, 15.80000, 0.00000, 0.00000, 130.00000);
	CreateDynamicObject(1297, 755.48395, -1383.76880, 15.80000, 0.00000, 0.00000, -140.00000);
	CreateDynamicObject(1297, 772.58478, -1346.84851, 15.80000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 772.58478, -1358.84851, 15.80000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 772.58478, -1371.34851, 15.80000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 785.81262, -1342.01660, 15.80000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 785.81262, -1369.01660, 15.80000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 733.17322, -1349.76904, 15.80000, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1297, 758.14532, -1356.22534, 15.80000, 0.00000, 0.00000, -140.00000);
	CreateDynamicObject(1297, 764.27087, -1331.38159, 15.80000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 743.77087, -1331.38159, 15.80000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 783.27087, -1331.38159, 15.80000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 764.48389, -1383.76880, 15.80000, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3785, 754.80273, -1377.35754, 17.14290, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3785, 754.84137, -1364.71802, 20.64290, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3785, 732.28760, -1356.68591, 15.42959, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3785, 749.06073, -1359.40173, 22.44940, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3785, 735.06073, -1359.40173, 22.44940, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3785, 754.06073, -1359.40173, 18.44940, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3785, 744.56073, -1359.40173, 18.44940, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3785, 732.28760, -1356.68591, 20.42960, 0.00000, 0.00000, 0.00000);
	return 1;
}

stock OldModeMap()
{
	CreateDynamicObject(971, 2644.4778, -2038.8990, 13.5500, 0, 0.0000, 0.0000);
	CreateDynamicObject(971, 1972.8408, -1622.1426, 15.9688, 0, 0.0000, 90);
	CreateDynamicObject(980, 2774.4670, -2494.5842, 14.2665, 0, 0.0000, 90);
	CreateDynamicObject(971, 2796.7512, -2481.5188, 12.5143, 0, 0.0000, 0);
	CreateDynamicObject(971, 2796.7512, -2506.3359, 12.5143, 0, 0.0000, 0);
	CreateDynamicObject(980, 2625.6016, -2347.2651, 13.6328, 0, 0.0000, 90);
	CreateDynamicObject(980, 2625.6016, -2336.8651, 13.6328, 0, 0.0000, 90);
	CreateDynamicObject(971, 1643.22240000, -1696.45610000, 15.40130000, 0.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(1215, 1544.43981900, -1623.94665500, 12.81510000, 0.00000000, 0.00000000, 264.43505800); //
	CreateDynamicObject(1215, 1544.21948200, -1630.79406700, 12.83241100, 0.00000000, 0.00000000, 241.32073900); //
	CreateDynamicObject(1215, 1584.37329100, -1637.75146400, 12.90435100, 0.00000000, 0.00000000, 164.79415800); //
	CreateDynamicObject(1215, 1592.68176200, -1637.68530200, 12.97956200, 0.00000000, 0.00000000, 184.22105400); //
	CreateDynamicObject(1215, 1546.05383300, -1672.45275800, 12.98466900, 0.00000000, 0.00000000, 308.63958700); //
	CreateDynamicObject(1215, 1546.10009700, -1678.70324700, 13.09776200, 0.00000000, 0.00000000, 211.86653100); //
	CreateDynamicObject(2008, 256.91271900, 86.26664700, 1001.38043200, 0.00000000, 0.00000000, 89.63777100); //
	CreateDynamicObject(2008, 256.89572100, 84.36031300, 1001.38714500, 0.00000000, 0.00000000, 90.26439600); //
	CreateDynamicObject(1708, 258.06747400, 87.68148800, 1001.34387200, 0.00000000, 0.00000000, 270.07254000); //
	CreateDynamicObject(1708, 258.01110800, 85.87433600, 1001.30187900, 0.00000000, 0.00000000, 268.48245200); //
	CreateDynamicObject(1500, 1582.62050000, -1638.05870000, 12.37760000, 0.00000000, -1.00000000, 0.00000000); //
	CreateDynamicObject(1500, 2278.85990000, -1140.48960000, 1049.78840000, 0.00000000, 0.00000000, 90.00000000); //toilet door
	CreateDynamicObject(14819, 2278.55990000, -1138.88960000, 1050.99840000, 0.00000000, 0.00000000, 90.00000000); //toilet door
	CreateDynamicObject(3968, -1827.92456000, 5.41173000, 1061.14355400, 0.00000000, 0.00000000, 179.35473600); //inside sfpd 5
	CreateDynamicObject(7927, 354.06550000, 168.79280000, 1019.98440000, 0.00000000, 0.00000000, 90.00000000); //hospital gate
	CreateDynamicObject(7927, 1240.60160000, -833.60310000, 1084.26780000, 0.00000000, 0.00000000, 0.00000000); //surrenos hq
	CreateDynamicObject(7927, 1280.45070000, -789.16810000, 1084.25780000, 0.00000000, 0.00000000, 0.00000000); //madd dog crib
	CreateDynamicObject(7927, 1251.80770000, -789.19340000, 1084.25780000, 0.00000000, 0.00000000, 180.00000000); //madd dog crib
	CreateDynamicObject(982, 1306.96280000, -1698.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1306.96280000, -1723.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1306.96280000, -1749.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1306.96280000, -1774.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1306.96280000, -1800.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1306.96280000, -1825.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1698.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1723.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1749.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1774.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1800.15490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1302.96280000, -1825.65490000, 13.26160000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1843.79870000, -1060.06090000, 24.62330000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1843.79870000, -1034.56090000, 24.62330000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1843.79870000, -1060.06090000, 25.92330000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 1843.79870000, -1034.56090000, 25.92330000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(982, 2195.16380000, -1675.15870000, 14.12810000, -2.40000000, 0.00000000, 167.20000000); //
	CreateDynamicObject(982, 2191.32890000, -1700.50390000, 13.35200000, -0.80000000, 0.00000000, 175.20000000); //
	CreateDynamicObject(982, 2218.16380000, -1675.15870000, 14.32810000, -2.60000000, 0.00000000, 167.20000000); //
	CreateDynamicObject(982, 2213.57890000, -1700.00390000, 13.55200000, -0.80000000, 0.00000000, 172.30000000); //
	CreateDynamicObject(7927, 366.49870000, 189.72340000, 1008.61030000, 0.00000000, 0.00000000, 90.00000000); // abc studio
	CreateDynamicObject(7927, 371.64720000, 179.13610000, 1014.40750000, 0.00000000, 0.00000000, 270.00000000); // la yellow cab co.
	CreateDynamicObject(994, 1544.43850000, -1617.59250000, 12.50460000, 0.00000000, 0.00000000, 270.00000000); //
	CreateDynamicObject(994, 1544.43850000, -1632.75250000, 12.50460000, 0.00000000, 0.00000000, 270.00000000); //
	CreateDynamicObject(982, 2390.91430000, -1742.13710000, 13.04690000, 0.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(982, 2365.41430000, -1742.13710000, 13.04690000, 0.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(982, 2339.91430000, -1742.13710000, 13.04690000, 0.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(1798, 346.73440000, 165.51530000, 1013.18750000, 0.00000000, 0.00000000, 270.00000000); // bed
	CreateDynamicObject(1798, 346.73440000, 163.01530000, 1013.18750000, 0.00000000, 0.00000000, 270.00000000); // bed
	CreateDynamicObject(1798, 346.73440000, 160.51530000, 1013.18750000, 0.00000000, 0.00000000, 270.00000000); // bed
	CreateDynamicObject(7927, 345.70730000, 157.30660000, 1014.40750000, 0.00000000, 0.00000000, 90.00000000); // wound hospital
	CreateDynamicObject(971, -1935.99300000, 239.12910000, 34.32100000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(971, -2716.04800000, 217.94180000, 4.34940000, 0.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(971, 2386.67800000, 1043.55660000, 10.82030000, 0.00000000, 0.00000000, 0.00000000); //
	CreateDynamicObject(971, 1843.26670000, -1854.58950000, 12.08280000, 0.00000000, 0.00000000, 270.00000000); //
	CreateDynamicObject(971, 1025.27950000, -1029.22990000, 32.10160000, 0.00000000, 0.00000000, 0.00000000); // pay & spray
	CreateDynamicObject(971, 488.23410000, -1735.45910000, 11.14160000, 0.00000000, 0.00000000, 174.00000000); // pay & spray
	CreateDynamicObject(971, 2071.54100000, -1831.41430000, 13.54690000, 0.00000000, 0.00000000, 90.00000000); // pay & spray
	CreateDynamicObject(971, 719.81990000, -462.47680000, 16.33590000, 0.00000000, 0.00000000, 0.00000000); // pay & spray
	CreateDynamicObject(971, -1904.45610000, 277.85780000, 41.04690000, 0.00000000, 0.00000000, 0.00000000); // pay & spray
	CreateDynamicObject(14668, 1172.08140000, -1323.23990000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // 24/7
	CreateDynamicObject(3395, 1184.06910000, -1317.06040000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // operation pc
	CreateDynamicObject(3391, 1184.06910000, -1321.06040000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // operation pc
	CreateDynamicObject(3383, 1180.76100000, -1318.17240000, 1005.20280000, 0.00000000, 0.00000000, 90.00000000); // operation bed
	CreateDynamicObject(2604, 1180.45030000, -1330.66520000, 1005.87280000, 0.00000000, 0.00000000, 360.00000000); // registration pc
	CreateDynamicObject(2610, 1176.92220000, -1332.31210000, 1006.15280000, 0.00000000, 0.00000000, 180.00000000); // registration files
	CreateDynamicObject(2202, 1183.72350000, -1332.20640000, 1005.40280000, 0.00000000, 0.00000000, 180.00000000); // printer
	CreateDynamicObject(1797, 1162.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // bed
	CreateDynamicObject(1797, 1165.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // bed
	CreateDynamicObject(1797, 1168.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // bed
	CreateDynamicObject(1797, 1171.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // bed
	CreateDynamicObject(1797, 1162.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 180.00000000); // bed
	CreateDynamicObject(1797, 1165.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 180.00000000); // bed
	CreateDynamicObject(1797, 1168.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 180.00000000); // bed
	CreateDynamicObject(1797, 1171.22660000, -1317.70130000, 1005.40280000, 0.00000000, 0.00000000, 180.00000000); // bed
	CreateDynamicObject(1726, 1163.54140000, -1327.95950000, 1005.40280000, 0.00000000, 0.00000000, 90.00000000); // sofa
	CreateDynamicObject(1726, 1167.54140000, -1327.95950000, 1005.40280000, 0.00000000, 0.00000000, 270.00000000); // sofa
	CreateDynamicObject(1726, 1165.62340000, -1325.64870000, 1005.40280000, 0.00000000, 0.00000000, 0.00000000); // sofa
	CreateDynamicObject(1676, 1007.33360000, -936.41270000, 42.75810000, 0.00000000, 0.00000000, 5.00000000); // gas tank in vinewood
	CreateDynamicObject(1676, 1000.64060000, -937.10270000, 42.75810000, 0.00000000, 0.00000000, 5.00000000); // gas tank in vinewood
	CreateDynamicObject(868, 2129.98974600, -1874.79541000, 13.03090200, 0.00000000, 0.00000000, 441.56753500); //
	CreateDynamicObject(2913, 2137.46337800, -1871.32067800, 12.66707800, 0.00000000, -90.00000000, 178.30253600); //
	CreateDynamicObject(2628, 2135.05053700, -1871.42468200, 12.60901200, 0.00000000, 0.00000000, 179.39443900); //
	CreateDynamicObject(2629, 2137.53125000, -1868.60363700, 12.55558300, 0.00000000, 0.00000000, 268.79595900); //
	CreateDynamicObject(2915, 2133.90112300, -1868.33837800, 12.62577500, 0.00000000, 0.00000000, 267.21060100); //
	CreateDynamicObject(2916, 2137.31665000, -1867.19970700, 12.62609400, 0.00000000, 0.00000000, 235.60694800); //
	CreateDynamicObject(1462, 2108.08056600, -1869.76867600, 12.51977800, 0.00000000, 0.00000000, 89.77522200); //
	CreateDynamicObject(1433, 2145.34008700, -1871.20214800, 12.73119600, 0.00000000, 0.00000000, 178.47007700); //
	CreateDynamicObject(2804, 2145.51977500, -1871.18896400, 13.29692800, 0.00000000, 0.00000000, 157.18295200); //
	CreateDynamicObject(1484, 2145.07885700, -1871.11547800, 13.40539200, -12.00000000, 29.00000000, 177.65742400); //
	CreateDynamicObject(1486, 2145.22045800, -1871.40539500, 13.38108500, 0.00000000, 0.00000000, 195.86706500); //
	CreateDynamicObject(1546, 2145.00756800, -1871.34924300, 13.31301800, 0.00000000, 0.00000000, 200.08616600); //
	CreateDynamicObject(1334, 2125.28198200, -1874.19628900, 13.36744900, 0.00000000, 0.00000000, 361.17449900); //
	CreateDynamicObject(955, 2142.30371000, -1863.81945800, 13.05880500, 0.00000000, -90.00000000, 0.95052700); //
	CreateDynamicObject(1302, 2143.30029200, -1863.50585900, 12.48657700, -15.00000000, 0.00000000, 357.52993700); //
	CreateDynamicObject(923, 2107.99096600, -1872.67663500, 13.42584800, 0.00000000, 0.00000000, 89.75312000); //
	CreateDynamicObject(933, 2115.85156200, -1869.43725500, 12.52377300, 0.00000000, 0.00000000, 77.71019700); //
	CreateDynamicObject(933, 2122.39746000, -1869.41113200, 12.53230400, 0.00000000, 0.00000000, 186.31358300); //
	CreateDynamicObject(944, 2159.27099600, -1864.64758300, 13.41929900, 0.00000000, 0.00000000, 269.43975800); //
	CreateDynamicObject(944, 2159.23559500, -1867.67578100, 13.41929900, 0.00000000, 0.00000000, 269.43975800); //
	CreateDynamicObject(944, 2159.19262600, -1870.77233800, 13.41929900, 0.00000000, 0.00000000, 269.43975800); //
	CreateDynamicObject(1372, 2100.13354400, -1867.96423300, 12.66138900, 0.00000000, 0.00000000, 180.35742100); //
	CreateDynamicObject(1315, 2119.26660100, -1874.09399400, 15.62769600, 0.00000000, 0.00000000, 271.77136200); //
	CreateDynamicObject(1315, 2103.99047800, -1868.73046800, 16.09560300, 0.00000000, 0.00000000, 6.73446600); //
	CreateDynamicObject(1303, 2151.11254800, -1865.05493100, 13.55389000, 0.00000000, 0.00000000, 95.63800800); //
	CreateDynamicObject(1451, 2129.07080000, -1863.24841300, 13.37556000, 0.00000000, 0.00000000, 0.25471400); //
	CreateDynamicObject(2114, 2141.25073200, -1863.69494600, 13.78794500, 0.00000000, 0.00000000, 52.14162800); //
	CreateDynamicObject(1460, 2129.52539000, -1876.66845700, 16.32402600, -55.00000000, -91.00000000, 269.03491200); //
	CreateDynamicObject(5269, 2112.05224600, -1866.30187900, 13.54687500, 0.00000000, 0.00000000, 2.50896400); //
	CreateDynamicObject(5269, 2112.48535100, -1876.40661600, 13.54687500, 0.00000000, 0.00000000, 2.50896400); //
	CreateDynamicObject(3265, 2091.54321200, -1868.91333000, 12.46601600, 0.00000000, 0.00000000, 265.75683500); //
	CreateDynamicObject(1473, 2095.45776300, -1863.86608800, 13.42572400, 36.00000000, 0.00000000, 0.87903100); //
	CreateDynamicObject(1497, 2110.98413000, -1864.98083400, 13.91426400, -22.00000000, 90.00000000, 269.52188100); //
	CreateDynamicObject(1295, 2141.17480400, -1872.53674300, 13.55389000, 0.00000000, 0.00000000, 48.96246300); //
	CreateDynamicObject(1492, 2091.81201100, -1863.63647400, 12.48870500, 0.00000000, 0.00000000, 267.74984700); //
	CreateDynamicObject(969, 2091.74560500, -1873.95410100, 11.83589400, 0.00000000, 0.00000000, 89.18146500); //
	CreateDynamicObject(2781, 1346.39050000, -1759.60390000, 13.51560000, 90.00000000, 0.00000000, 180.00000000); //
	CreateDynamicObject(2781, 1592.46550000, -2335.94080000, 13.54010000, 90.00000000, 0.00000000, 180.00000000); //
	CreateDynamicObject(2781, 2308.87170000, -1634.44620000, 14.82700000, 90.00000000, 0.00000000, 270.00000000); //
	CreateDynamicObject(2781, 2865.31700000, -1415.34290000, 11.00100000, 90.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(2781, 2403.98790000, -1229.84410000, 23.82880000, 90.00000000, 0.00000000, 90.00000000); //
	CreateDynamicObject(2781, 1172.48880000, -1328.96830000, 15.40480000, 90.00000000, 0.00000000, 180.00000000); //
	return 1;
}

stock DocInterior()
{
	CreateDynamicObject(19377, 2604.69556, -1479.21655, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.24170, -1479.19153, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1479.20496, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1479.20496, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.73657, -1488.83032, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.73657, -1498.44824, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.73413, -1508.06628, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.73657, -1517.68286, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.71655, -1527.30066, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.23755, -1488.83032, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.23755, -1498.44824, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.23755, -1508.07593, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.23755, -1517.70288, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.22144, -1527.33264, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1488.83032, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1498.44824, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1508.07593, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1517.70288, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1527.31873, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1488.83032, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1498.44824, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1508.07593, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1517.70288, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.25171, -1527.32068, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1488.84753, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1498.46826, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1508.08655, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1517.71619, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1527.34375, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 2573.23828, -1536.92749, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.75342, -1536.94226, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.23755, -1536.94226, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.73657, -1536.92224, -50.00000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1536.97681, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2572.73511, -1541.61340, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2582.35132, -1541.61340, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2591.98022, -1541.61340, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2601.59912, -1541.61340, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2611.22363, -1541.61340, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2609.64673, -1536.97681, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2609.64673, -1527.34375, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2609.64673, -1517.71619, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2609.64673, -1508.08655, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2609.64673, -1498.46826, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2609.64673, -1488.84753, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2577.53418, -1485.62036, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2578.33325, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19411, 2580.72949, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2582.39258, -1487.15344, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2588.80151, -1487.15344, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2579.20117, -1487.15344, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2595.20630, -1487.15344, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2601.62769, -1487.15344, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2585.52222, -1491.90063, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1491.96057, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2585.53613, -1483.94971, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19394, 2579.12988, -1483.94971, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2591.95581, -1483.94971, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2598.36108, -1483.94971, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19394, 2607.97900, -1483.94971, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2604.77515, -1483.94971, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2606.36792, -1491.89099, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1501.58716, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2583.94214, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19411, 2575.93896, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2573.54858, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19411, 2571.15869, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2568.76416, -1491.93372, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2588.71118, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2606.36792, -1498.30066, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2595.12354, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2593.50073, -1498.25647, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2591.92236, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2579.10840, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2572.69751, -1496.64905, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2593.50073, -1504.66357, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2606.36792, -1504.71655, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1536.85156, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2596.73438, -1511.19775, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2579.10498, -1532.16663, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19394, 2572.68799, -1532.16663, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2593.50073, -1514.29639, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2593.50073, -1523.92566, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2580.17871, -1537.02161, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2592.84033, -1533.52258, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2588.73242, -1532.16663, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2569.49292, -1532.16663, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2593.50073, -1530.33081, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2592.84058, -1536.72754, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2592.84058, -1539.92944, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2606.36792, -1514.33423, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2581.71582, -1535.09802, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2588.12769, -1535.09802, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2591.31812, -1535.10168, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2586.59912, -1539.92896, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1527.22974, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1517.60791, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2596.73438, -1508.00098, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2601.62329, -1538.23767, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2606.36792, -1523.92163, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14410, 2603.18066, -1540.22668, -49.42110, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2606.36792, -1533.50403, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2601.46436, -1522.82019, -48.15700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2606.36792, -1527.10815, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2606.36792, -1520.74219, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 2580.90771, -1537.05920, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1527.34375, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1517.71619, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1508.08655, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2567.98242, -1498.46826, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2579.10498, -1532.16663, -44.66560, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2588.73242, -1532.16663, -44.66560, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2569.49292, -1532.16663, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2569.50122, -1496.64905, -44.66560, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2591.92236, -1496.64905, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2588.72119, -1496.64905, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2575.88525, -1496.64905, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.67749, -1532.16663, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2611.22363, -1541.61340, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2601.59912, -1541.61340, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2591.98022, -1541.61340, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2609.64673, -1536.97681, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2601.46338, -1538.23767, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2593.46069, -1536.82861, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2588.82397, -1518.85535, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1499, 2592.84473, -1534.26465, -49.92010, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14410, 2574.25952, -1498.61865, -49.42110, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2572.72388, -1504.14124, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2585.51172, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2582.30908, -1496.64905, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14410, 2591.63647, -1525.89551, -49.42110, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19457, 2589.66089, -1527.42822, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2590.38696, -1519.81201, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1519.81201, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1516.14624, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2588.82397, -1515.19543, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2588.88403, -48.66390, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1512.49951, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2588.82397, -1511.55188, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19365, 2590.38696, -1508.83838, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2588.82397, -1507.86768, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2588.88403, -48.66390, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1505.17712, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2588.82397, -1504.22510, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2588.88403, -48.66390, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1501.50879, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1516.14624, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1508.83838, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1512.49951, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1505.17712, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1501.50879, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1501.50879, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1501.50879, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2590.38696, -1519.81201, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2592.78369, -1519.81201, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.49097, -1501.45276, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.43091, -48.66390, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2572.72388, -1500.48474, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.49097, -1505.09802, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2572.72388, -1507.78198, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.49097, -1508.74573, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.43091, -48.66390, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2572.72388, -1511.46228, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.49097, -1512.40625, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.43091, -48.66390, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2572.72388, -1515.10449, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.49097, -1516.07214, -48.66390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2577.43091, -48.66390, -48.66390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2572.72388, -1518.77844, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, -1522.68372, -48.66390, -48.66390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2586.95972, -1522.64368, -48.66390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19457, 2585.99341, -1527.42822, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, -1522.68372, -48.66390, -48.66390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2583.27686, -1522.64368, -48.66390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19457, 2582.31201, -1527.42822, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, -1522.70374, -48.66390, -48.66390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2579.62646, -1522.64368, -48.66390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19365, 2584.92163, -1535.09802, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2578.66724, -1527.42822, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2583.44385, -1529.08032, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2589.85205, -1529.08032, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2571.35767, -1513.92432, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2571.35767, -1504.30652, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1533, 2596.31348, -1541.49646, -49.91540, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1537, 2593.30347, -1541.50256, -49.91520, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19365, 2593.49902, -1530.65002, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19273, 2587.68384, -1496.70154, -48.57370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2579.30176, -1529.71985, -49.93800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2819, 2572.33154, -1515.02246, -46.24090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2843, 2571.78833, -1507.56091, -46.24090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2844, 2573.01489, -1517.60657, -46.24090, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2852, 2569.12988, -1519.36218, -49.91600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2855, 2568.41553, -1519.85400, -49.91580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2591.57056, -1500.70532, -49.51590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1369, 2572.51929, -1508.48364, -45.63970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 2592.69019, -1500.98840, -49.91660, 0.00000, 0.00000, -120.00000);
	CreateDynamicObject(1712, 2575.10474, -1521.60791, -49.91530, 0.00000, 0.00000, 220.00000);
	CreateDynamicObject(1710, 2572.42480, -1522.98169, -49.91550, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2202, 2568.61523, -1485.09546, -49.91860, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 2572.80518, -1503.66809, -49.35030, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2718, 2583.29663, -1496.86487, -47.33910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2713, 2586.62939, -1496.74292, -47.07579, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2670, 2588.79297, -1505.17224, -49.81600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2671, 2577.37207, -1511.55420, -49.89690, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2673, 2585.87183, -1522.61853, -49.81540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2586.58960, -1529.61963, -49.93800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2585.10864, -1528.30640, -49.93800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2593.82910, -1519.16614, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2594.43774, -1502.44714, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2594.09326, -1508.22900, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2594.49976, -1515.55029, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2593.84644, -1509.71021, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2576.26758, -1501.41138, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2575.28101, -1517.93799, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2576.25122, -1514.52551, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2576.31226, -1508.65601, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2575.98706, -1507.13489, -49.93800, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2604.76782, -1530.64587, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2591.71436, -1542.23181, -49.93800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2585.56396, -1542.43237, -49.93800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73291, -1501.50732, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.50073, -1500.78638, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.50073, -1496.67261, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86792, -1503.19250, -46.60810, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(3278, -1502.87170, -44.73340, -44.73340, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2578.66724, -1527.42786, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2572.72388, -1518.77844, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2580.88477, -1491.93469, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2575.99390, -1491.95569, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2571.26660, -1491.93286, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2571.26660, -1491.93286, -48.07390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 2575.99390, -1491.95569, -48.07390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 2580.88477, -1491.93469, -48.07390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19438, 2578.31860, -1492.65125, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2573.61475, -1492.65125, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2597.53979, -1530.64587, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2602.35913, -1530.64502, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19365, 2599.94849, -1530.64502, -50.79670, 0.00000, 180.00000, 90.00000);
	CreateDynamicObject(19450, 2572.74170, -1487.11389, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19388, 2577.52100, -1485.62708, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19450, 2577.52100, -1479.22351, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19450, 2568.04858, -1482.28113, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19450, 2568.04858, -1472.68555, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19450, 2572.70215, -1474.37366, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19376, 2572.30908, -1482.24805, -49.98540, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19376, 2572.29688, -1472.63074, -49.98540, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19376, 2585.49756, -1479.14197, -49.98540, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19376, 2582.85132, -1479.14355, -49.98600, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1491, 2581.60938, -1487.16541, -49.92915, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2578.34424, -1483.96143, -49.92915, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2591.17407, -1483.97058, -49.92915, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2607.19409, -1483.95923, -49.92915, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2606.38599, -1499.04651, -49.92910, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2606.36719, -1524.65271, -49.92910, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2596.74072, -1511.93921, -49.92910, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2603.99561, -1530.66272, -49.92910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2596.73438, -1535.11438, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2596.73438, -1537.50696, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.71509, -1528.70300, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2596.73438, -1522.29004, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2596.73438, -1515.88171, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2596.73438, -1507.94800, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2596.73633, -1510.28113, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2596.74634, -1508.70105, -46.41220, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2596.74268, -1523.02856, -46.39220, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2596.73853, -1535.85486, -46.41220, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19383, 2596.74243, -1511.18933, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19389, 2607.98511, -1483.93140, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 2600.04883, -1479.17151, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 2568.00049, -1487.06604, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19413, 2580.72876, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 2582.39893, -1487.16382, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19440, 2578.33716, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 2601.62573, -1519.32007, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19390, 2596.74512, -1522.29639, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2596.74512, -1515.88208, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2601.57861, -1503.61792, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19384, 2606.36426, -1498.30371, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2577.64526, -1479.12122, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19390, 2579.13159, -1483.94873, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2590.37671, -1479.16846, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2590.70972, -1479.03870, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2595.59399, -1474.44043, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 2604.87866, -1476.27332, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 2609.63794, -1479.12170, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2585.53589, -1483.94873, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2586.36011, -1474.33655, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2576.73926, -1474.33655, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 2606.31226, -1514.43140, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 2601.52612, -1509.52893, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 2596.74243, -1517.60657, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2601.56958, -1483.93140, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19446, 2606.36426, -1491.89954, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2601.50659, -1487.19727, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19446, 2596.81445, -1492.05701, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2596.81396, -1501.69055, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2606.36426, -1504.71265, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2605.17773, -1523.80847, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19396, 2596.74243, -1507.93945, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19441, 2596.75220, -1537.48865, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 2575.99341, -1487.16382, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 2566.37207, -1487.16382, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 2585.52173, -1490.38965, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 2584.78125, -1487.16980, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19440, 2585.52173, -1488.00598, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 2583.93018, -1491.91785, -48.15700, 0.00000, 0.00000, 990.00000);
	CreateDynamicObject(19413, 2575.94653, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19440, 2573.53979, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19413, 2571.15576, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19440, 2568.75244, -1491.91785, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19440, 2573.61475, -1491.23413, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 2578.31860, -1491.23413, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2601.49902, -1523.92810, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2604.40186, -1519.21802, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2604.40723, -1514.36414, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2601.52881, -1509.55347, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2605.18359, -1533.41101, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2601.54688, -1538.22644, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2606.34937, -1504.71692, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2601.61230, -1499.81580, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2601.56616, -1509.53284, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2596.74243, -1501.52954, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2596.75220, -1528.67676, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19396, 2596.75220, -1535.09338, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2601.58057, -1524.01147, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19434, 2596.74512, -1510.27942, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19389, 2591.95532, -1483.93140, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19359, 2595.14453, -1483.93140, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2583.40991, -1522.69897, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2588.94702, -1522.69946, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2577.47266, -1505.22424, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2589.66089, -1527.40613, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2589.66089, -1524.21826, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2585.99341, -1527.40613, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2585.99341, -1524.21826, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2582.31201, -1524.21826, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2582.31201, -1527.40613, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2575.94946, -1500.48474, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.75977, -1500.48474, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.75977, -1504.14124, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2575.94946, -1504.14124, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.75977, -1507.78198, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2575.94946, -1507.78198, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.75977, -1511.46228, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2575.94946, -1511.46228, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2572.75977, -1515.10449, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2575.94946, -1515.10449, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2583.40991, -1522.69995, -45.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2588.94702, -1522.70020, -45.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2577.46680, -1514.04822, -45.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2577.46289, -1505.22412, -45.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 2584.49292, -1527.44690, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.97290, -1527.44690, -46.32320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.39526, -1533.42480, -46.34320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.37622, -1523.79626, -46.34320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.37622, -1514.20166, -46.32320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.37622, -1504.58643, -46.32320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2591.38745, -1536.89417, -46.32320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2611.08936, -1538.23767, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 2572.18408, -1513.94531, -46.32320, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2572.18408, -1505.22791, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19303, 2571.18823, -1503.19775, -44.98580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2571.18823, -1506.85437, -44.98580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2571.24829, -44.98580, -44.98580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2571.18823, -1510.49536, -44.98580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2571.24829, -44.98580, -44.98580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2571.18823, -1514.13904, -44.98580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19303, 2571.24829, -44.98580, -44.98580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 2571.18823, -1517.80603, -44.98580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19457, 2571.22729, -1505.22424, -41.98680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2571.22754, -1514.04822, -41.98680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2581.35059, -1528.97156, -44.98580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2583.40991, -1528.94238, -41.98680, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 6.00000, -44.98580, -44.98580, 0.00000, 0.00000, 180.86830);
	CreateDynamicObject(19303, -1528.91162, -44.98580, -44.98580, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19303, 2585.03296, -1528.97156, -44.98580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 2588.69336, -1528.97156, -44.98580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, -1528.91162, -44.98580, -44.98580, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19438, 2588.94702, -1528.94202, -41.98680, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2579.32202, -1527.93164, -46.27398, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2582.93384, -1526.51917, -46.27398, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2588.66797, -1527.36243, -46.27398, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 2577.43042, -1501.41919, -46.27400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2577.11499, -1505.10083, -46.27400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2577.59204, -1510.85632, -46.27400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2577.44751, -1512.31799, -46.27400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1800, 2577.47534, -1516.01294, -46.27400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2588.86646, -1506.45715, -46.60810, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86597, -1509.73706, -46.60810, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86548, -1513.03381, -46.60810, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86499, -1516.33594, -46.60810, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86548, -1518.14807, -46.60810, 90.00000, 0.00000, 180.00000);
	CreateDynamicObject(19438, 2588.86646, -1516.41406, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.88135, -1504.90344, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.86646, -1508.99731, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2588.87012, -1512.33447, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 2590.42920, -1500.51331, -49.91660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1810, 2586.68237, -1497.30750, -49.91660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2572.14648, -1504.59937, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2573.22412, -1511.01282, -49.35030, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2573.22266, -1511.92688, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2572.79858, -1515.56519, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2591.27979, -1516.63000, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2591.74487, -1512.97473, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2592.38574, -1512.03723, -49.35030, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2591.84839, -1505.66943, -49.35030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2591.37744, -1504.71008, -49.35030, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2582.76782, -1527.49097, -49.35030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 2589.18628, -1526.14258, -49.35030, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 2581.86279, -1526.67358, -49.35030, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 2581.86060, -1523.89819, -45.61610, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 2585.52637, -1524.74927, -45.61610, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 2586.44727, -1524.84241, -45.61610, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 2576.57471, -1518.32629, -45.61610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2576.43530, -1514.63892, -45.61610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2575.47778, -1508.23962, -45.61610, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 2576.33154, -1507.31702, -45.61610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 2576.11206, -1503.66699, -45.61610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2718, 2568.19434, -1527.00000, -47.33910, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1711, 2578.03882, -1529.53357, -49.91520, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1711, 2576.34570, -1531.33813, -49.91520, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2635, 2569.77515, -1530.23474, -49.51590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 2569.92432, -1529.15881, -49.91660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 2569.37134, -1531.29395, -49.91660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1810, 2568.62671, -1530.01941, -49.91660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1810, 2570.78198, -1530.48633, -49.91660, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1810, 2576.96851, -1519.39624, -49.91660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19273, 2594.08350, -1487.19788, -48.57370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19273, 2594.18018, -1487.10999, -48.57370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19273, 2589.69604, -1496.60120, -48.57370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19273, 2593.41919, -1497.23035, -48.57370, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19273, 2593.55542, -1499.23413, -48.57370, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19273, 2577.58984, -1486.57471, -48.57370, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19273, 2577.44214, -1484.65076, -48.57370, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 2587.07300, -1539.93286, -49.35030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 2580.64624, -1539.87231, -49.35030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 2598.66260, -1533.35229, -46.32270, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.66260, -1523.75049, -46.32270, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.66260, -1514.12561, -46.32270, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.66260, -1504.50085, -46.32270, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.66260, -1494.88330, -46.32270, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2593.63184, -1506.68372, -46.32320, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 2593.63184, -1514.64746, -46.32230, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(638, 2568.48364, -1477.85156, -49.19830, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2245, 2572.41943, -1481.87903, -48.68350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2252, 2572.42139, -1485.11365, -48.68350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2253, 2568.62402, -1481.60767, -48.72350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19175, 2585.85278, -1474.42944, -47.35350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19174, 2574.56104, -1487.03320, -47.61350, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19173, 2570.72852, -1474.47534, -47.60280, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19172, 2568.13721, -1479.89917, -47.61350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18070, 2569.50610, -1483.44165, -49.47186, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2586.90967, -1488.75354, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, 2596.98218, -1492.31104, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2162, 2596.87769, -1490.86902, -48.72180, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2163, 2606.37378, -1499.91345, -48.52203, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 2602.21899, -1487.31799, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 2605.77466, -1496.28833, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2167, 2596.95679, -1493.40100, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2169, 2597.33545, -1490.92798, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 2597.42065, -1500.96277, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2174, 2599.37720, -1487.76538, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2181, 2603.72656, -1502.96973, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2182, 2605.72803, -1502.02673, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2183, 2601.35400, -1497.89331, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2184, 2599.82764, -1527.04395, -46.25660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2185, 2602.97461, -1531.84851, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2193, 2598.41455, -1503.01685, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2198, 2601.69312, -1503.04260, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2199, 2597.56201, -1524.18323, -46.25660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2200, 2604.13843, -1487.38721, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2204, 2604.62842, -1509.37769, -46.25660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2205, 2597.36426, -1502.96680, -46.25660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2206, 2603.71655, -1505.10828, -46.25660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2308, 2597.39551, -1488.77307, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 2605.20947, -1504.24695, -46.21650, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2569.63257, -1474.60681, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2611, 2591.42407, -1487.29639, -48.26870, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2606, 2591.78906, -1496.30676, -47.69410, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2604, 2596.13354, -1494.63843, -49.11350, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2616, 2574.79102, -1518.92114, -48.60635, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 2598.48486, -1538.24622, -46.25660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1671, 2600.98779, -1524.89697, -45.79235, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 2591.63574, -1500.69678, -49.08870, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1998, 2586.08789, -1488.74377, -49.91875, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 2600.10474, -1479.13501, -49.92952, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2742, 2600.31421, -1482.18481, -48.60370, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2741, 2605.64014, -1483.76282, -48.46370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1775, 2579.58594, -1474.87830, -48.82513, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(956, 2580.95557, -1474.80444, -49.49685, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1789, 2588.80957, -1486.76392, -49.35120, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2146, 2596.20996, -1508.98181, -49.43050, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2628, 2574.28003, -1540.58179, -49.92200, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2627, 2572.58423, -1540.41638, -49.91840, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2629, 2575.20313, -1533.17505, -49.91780, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2630, 2568.96802, -1537.28748, -49.91880, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2631, 2577.87817, -1534.40308, -49.91780, 0.00000, 0.00000, 15.00000);
	CreateDynamicObject(2632, 2569.96753, -1534.49731, -49.91730, 0.00000, 0.00000, 100.00000);
	CreateDynamicObject(1363, 2584.37109, -1493.30212, -49.08420, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2596, 2571.47485, -1519.17908, -48.30616, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1713, 2584.90649, -1481.50220, -49.90458, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2000, 2586.11768, -1494.90564, -49.91420, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2523, 2601.54858, -1483.32410, -49.81460, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2525, 2607.53931, -1476.88062, -49.91460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3072, 2570.91357, -1532.60449, -49.71390, 0.00000, 90.00000, 50.00000);
	CreateDynamicObject(3004, 2578.01782, -1537.85706, -49.01550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2995, 2578.33276, -1537.65479, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2996, 2578.62646, -1537.23999, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2997, 2578.38940, -1538.05322, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2998, 2578.55835, -1538.38879, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2999, 2578.71729, -1537.82056, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3000, 2577.95215, -1538.75720, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2995, 2577.85596, -1538.33630, -48.99400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2964, 2578.29688, -1537.96448, -49.91370, 0.00000, 0.00000, 80.00000);
	CreateDynamicObject(14401, 2587.76660, -1469.15039, -49.62430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1363, 2584.37109, -1495.10706, -49.08420, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 2577.31763, -1481.97693, -48.38499, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14455, 2590.16699, -1481.47791, -48.38499, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2146, 2605.76953, -1516.00061, -49.43050, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2611, 2603.20459, -1524.15088, -44.87059, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 2604.03296, -1509.76282, -48.28500, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 2569.67407, -1481.68408, -49.75700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 2598.97168, -1535.75232, -48.28500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 2598.63550, -1523.78687, -44.68180, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 2603.71631, -1500.01074, -44.70180, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2600.41162, -1488.70020, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2568.52417, -1486.66736, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2577.07935, -1474.77063, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 2576.44922, -1474.44080, -49.90040, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2946, 2573.27051, -1474.41724, -49.90040, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2614, 2570.66675, -1486.98413, -47.63040, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2010, 2568.47461, -1474.89624, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2570.24854, -1474.60681, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2570.86060, -1474.60681, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2571.47290, -1474.60681, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2583.87866, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.25098, -1488.88098, -49.90590, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2570.82275, -1490.87329, -49.91700, 0.00000, 0.00000, 200.00000);
	CreateDynamicObject(3004, 2578.15698, -1538.35229, -49.01550, 0.00000, 0.00000, -150.00000);
	CreateDynamicObject(3072, 2568.93994, -1535.83972, -49.71390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3072, 2569.24634, -1533.01208, -49.67390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(3072, 2579.19116, -1533.47083, -49.67390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3072, 2579.59277, -1535.24817, -49.71390, 0.00000, 90.00000, -15.00000);
	CreateDynamicObject(2819, 2575.37158, -1504.00977, -49.91674, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2844, 2574.35718, -1511.12402, -49.91626, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2852, 2576.17847, -1504.80542, -49.91603, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2852, 2589.46997, -1511.89709, -49.91603, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2855, 2575.18433, -1511.84570, -49.91580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2843, 2575.69604, -1518.78784, -49.91651, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1369, 2575.72192, -1515.83301, -49.31600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2855, 2589.40991, -1501.91907, -49.91580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2843, 2588.94653, -1508.74988, -49.91651, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2819, 2589.46948, -1513.59839, -49.91674, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2855, 2589.45874, -1519.40405, -49.91580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2852, 2578.05347, -1531.53015, -49.91600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1369, 2597.63550, -1513.57092, -49.31600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2146, 2602.29590, -1518.70361, -49.43050, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14455, 2596.43384, -1517.47253, -44.72180, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 2578.67944, -1490.76758, -43.61390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2606, 2597.10278, -1505.08801, -44.05260, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2819, 2599.03271, -1480.38318, -49.29670, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2596, 2585.77661, -1483.56042, -47.88430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2594.95313, -1495.69495, -49.91700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1806, 2580.77637, -1490.76599, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2576.08960, -1490.74622, -49.91700, 0.00000, 0.00000, 170.00000);
	CreateDynamicObject(14401, 2613.71362, -1470.69446, -49.62430, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14401, 2596.19336, -1474.96106, -49.62430, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14782, 2591.12061, -1478.68481, -48.91040, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19359, 2601.70410, -1477.57898, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 2601.76587, -1479.13501, -49.92950, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19359, 2603.36670, -1477.57898, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 2603.43408, -1479.13501, -49.92950, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19359, 2605.05103, -1477.57898, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 2605.11182, -1479.13501, -49.92950, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19359, 2606.72070, -1477.57898, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 2606.78003, -1479.13501, -49.92950, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19359, 2608.38110, -1477.57898, -48.15700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19359, 2609.90601, -1479.10535, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 2605.34692, -1479.18799, -49.91380, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2525, 2605.91382, -1476.88062, -49.91460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2525, 2604.16821, -1476.88062, -49.91460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2525, 2602.54395, -1476.88062, -49.91460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2525, 2600.89771, -1476.88062, -49.91460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2523, 2603.16846, -1483.32410, -49.81460, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2523, 2606.63232, -1483.32410, -49.81460, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2523, 2604.84888, -1483.32410, -49.81460, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2741, 2603.85864, -1483.76282, -48.46370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2741, 2600.60522, -1483.76282, -48.46370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2741, 2602.20996, -1483.76282, -48.46370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2742, 2600.31421, -1480.62231, -48.60370, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2742, 2609.43042, -1480.52808, -48.60370, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2742, 2609.43042, -1482.34863, -48.60370, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1789, 2609.24829, -1492.59570, -49.35120, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1789, 2609.24463, -1510.89917, -49.35120, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2185, 2598.71509, -1529.34131, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2185, 2598.69971, -1531.77185, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2185, 2604.92847, -1529.39124, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2185, 2604.92847, -1534.41040, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2180, 2604.58057, -1526.72522, -46.23660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2185, 2604.92847, -1531.84851, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2185, 2602.97461, -1534.41040, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2185, 2602.97461, -1529.39294, -46.23660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2844, 2594.80347, -1475.47400, -49.29630, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2843, 2593.65186, -1483.94617, -49.27650, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2852, 2599.43823, -1483.13098, -49.91600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2855, 2593.16162, -1474.95178, -49.91580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1789, 2593.90356, -1529.38184, -49.35120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1369, 2583.47314, -1535.81604, -49.31600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3072, 2582.31519, -1540.82629, -49.71390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2852, 2590.54321, -1541.08350, -49.91600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2590.40771, -1535.82129, -49.51590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2819, 2591.74268, -1536.52283, -49.91670, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2844, 2583.94360, -1538.20215, -49.91626, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2586.97827, -1535.93213, -49.89690, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1810, 2580.68408, -1536.78333, -49.91660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1810, 2588.70215, -1541.01331, -49.91660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1810, 2591.71729, -1536.16455, -49.91660, 0.00000, 0.00000, -100.00000);
	CreateDynamicObject(1713, 2600.71387, -1508.91553, -46.28670, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2010, 2578.33032, -1475.01855, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2589.80762, -1475.05420, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2589.81470, -1483.41736, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2580.66528, -1483.34033, -49.90100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2584.48218, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.08569, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.70093, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2586.31104, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2586.93262, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2587.53809, -1474.54224, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2587.53809, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2586.93262, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2586.31104, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.70093, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.08569, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2584.48218, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2583.87866, -1478.06799, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2587.53809, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2586.93262, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2586.31104, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2585.70093, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2585.08569, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2584.48218, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2583.87866, -1477.80798, -49.90590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 2577.85864, -1477.00391, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1477.61597, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1478.22400, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1478.83960, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1479.44983, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1480.05359, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2577.85864, -1480.66565, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19173, 2577.74170, -1478.78918, -47.34280, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 2568.24292, -1488.48950, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2568.25806, -1489.10095, -49.90590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, 2572.55347, -1487.33875, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2573.16187, -1487.34607, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2573.76978, -1487.35364, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2577.89258, -1487.38855, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2578.49341, -1487.37585, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2579.09424, -1487.36316, -49.90590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 2585.25098, -1489.48145, -49.90590, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 2585.25098, -1490.08191, -49.90590, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1810, 2580.52197, -1492.96436, -49.91660, 0.00000, 0.00000, 190.00000);
	CreateDynamicObject(1810, 2575.77637, -1492.75854, -49.91660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1810, 2570.69043, -1492.83032, -49.91660, 0.00000, 0.00000, 160.00000);
	CreateDynamicObject(1363, 2569.69702, -1494.92078, -49.08421, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2000, 2586.11768, -1494.39185, -49.91420, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2000, 2586.11768, -1493.86658, -49.91420, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2000, 2605.48438, -1518.76184, -49.91420, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2000, 2605.00439, -1518.75061, -49.91420, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2615, 2588.26880, -1487.28296, -48.52640, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2615, 2574.38354, -1518.93274, -48.44710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2615, 2601.38721, -1538.09265, -44.93370, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2184, 2599.55859, -1512.51917, -46.25660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2852, 2582.84888, -1527.43164, -46.24090, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2852, 2572.39941, -1501.08386, -46.24090, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2852, 2568.61255, -1497.22864, -46.24090, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2855, 2577.09937, -1505.96021, -46.24090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2819, 2582.33325, -1527.63440, -46.24090, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2844, 2586.07373, -1526.79089, -46.24090, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1810, 2573.23657, -1503.49475, -46.24090, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1810, 2585.36938, -1526.96338, -46.24090, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2165, 2605.77905, -1493.67004, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 2605.81689, -1491.15540, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2183, 2601.35352, -1493.96692, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2598.38501, -1488.60022, -49.91704, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2600.89673, -1502.00037, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2603.20557, -1502.23035, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2598.52271, -1502.08582, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2598.15820, -1500.15710, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2605.02002, -1502.13989, -49.91700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1806, 2604.91797, -1495.18140, -49.91700, 0.00000, 0.00000, 190.00000);
	CreateDynamicObject(1806, 2605.14307, -1492.21313, -49.91700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 2605.41919, -1490.08899, -49.91700, 0.00000, 0.00000, 160.00000);
	CreateDynamicObject(1806, 2601.67261, -1497.34338, -49.91700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2602.03223, -1491.72705, -49.91700, 0.00000, 0.00000, 100.00000);
	CreateDynamicObject(1806, 2601.80176, -1495.71045, -49.91700, 0.00000, 0.00000, 100.00000);
	CreateDynamicObject(1806, 2601.73486, -1493.26978, -49.91700, 0.00000, 0.00000, 80.00000);
	CreateDynamicObject(1806, 2599.17505, -1491.63220, -49.91700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1806, 2599.11133, -1497.35950, -49.91700, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1806, 2599.21216, -1493.34729, -49.91700, 0.00000, 0.00000, -80.00000);
	CreateDynamicObject(1806, 2599.11914, -1494.95374, -49.91700, 0.00000, 0.00000, -860.00000);
	CreateDynamicObject(2202, 2597.38647, -1497.29321, -49.91860, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2202, 2605.84692, -1501.26392, -46.25660, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2202, 2604.26831, -1537.74451, -46.25660, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2635, 2601.48755, -1515.65649, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2199, 2599.06812, -1509.67236, -46.25660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 2597.60156, -1509.65869, -46.25660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2611, 2602.52026, -1509.70483, -44.87059, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 2600.68555, -1510.39087, -46.21650, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.59888, -1515.65698, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.71069, -1515.65796, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.71240, -1516.58228, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.71802, -1517.51526, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.71387, -1518.43994, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.71118, -1519.36511, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.70850, -1520.29028, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.58838, -1520.28259, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.47729, -1520.28918, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.47974, -1519.36768, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.47559, -1518.44104, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.47559, -1517.51526, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.47559, -1516.58228, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.59888, -1516.58228, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.59888, -1517.51526, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.59888, -1518.43994, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.59888, -1519.36511, -45.81770, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2601.18921, -1521.74365, -46.23790, 0.00000, 0.00000, 10.00000);
	CreateDynamicObject(1806, 2604.15088, -1530.79492, -46.23790, 0.00000, 0.00000, 15.00000);
	CreateDynamicObject(1806, 2604.09448, -1535.74048, -46.23790, 0.00000, 0.00000, 15.00000);
	CreateDynamicObject(1806, 2603.93750, -1533.27576, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2602.18140, -1530.70654, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2601.81592, -1535.80945, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2602.22144, -1533.18469, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2598.36084, -1530.76440, -46.23790, 0.00000, 0.00000, 15.00000);
	CreateDynamicObject(1806, 2597.86426, -1533.26538, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2599.85864, -1521.53955, -46.23790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2602.92407, -1518.60632, -46.23790, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2602.81445, -1516.00598, -46.23790, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2602.81958, -1517.30981, -46.23790, 0.00000, 0.00000, 100.00000);
	CreateDynamicObject(1806, 2602.77197, -1520.11450, -46.23790, 0.00000, 0.00000, 80.00000);
	CreateDynamicObject(1806, 2598.47681, -1517.20923, -46.23790, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1806, 2598.59570, -1520.40613, -46.23790, 0.00000, 0.00000, 290.00000);
	CreateDynamicObject(1806, 2598.32495, -1515.85583, -46.23790, 0.00000, 0.00000, 260.00000);
	CreateDynamicObject(1806, 2598.46143, -1518.56140, -46.23790, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2894, 2600.37036, -1512.12280, -45.48580, 0.00000, 0.00000, -10.00000);
	CreateDynamicObject(2894, 2603.79810, -1504.21948, -45.32550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2894, 2598.10400, -1529.46814, -45.42781, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 2604.37891, -1531.95337, -45.43073, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 2602.46851, -1534.55371, -45.43033, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 2597.29370, -1500.36682, -46.23613, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 2605.67236, -1500.43628, -46.23713, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 2605.86353, -1509.00757, -46.23719, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 2597.51782, -1509.20056, -46.23853, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2245, 2597.29150, -1501.55530, -45.10540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2252, 2600.58569, -1519.09448, -45.10540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2252, 2600.63550, -1516.62964, -45.10540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2253, 2601.65112, -1512.40173, -45.12540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 2600.86157, -1526.71851, -45.48580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 2605.73901, -1512.52026, -49.91470, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2009, 2598.35034, -1518.66821, -49.91380, 0.00000, 0.00000, 18090.00000);
	CreateDynamicObject(1806, 2598.55957, -1517.70276, -49.91330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2604.53857, -1513.04248, -49.91330, 0.00000, 0.00000, -120.00000);
	CreateDynamicObject(1999, 2597.33716, -1516.68750, -49.91330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2598.66626, -1515.95056, -49.91330, 0.00000, 0.00000, 80.00000);
	CreateDynamicObject(1806, 2601.09863, -1529.57886, -49.91330, 0.00000, 0.00000, 170.00000);
	CreateDynamicObject(1806, 2599.12573, -1529.55432, -49.91330, 0.00000, 0.00000, 210.00000);
	CreateDynamicObject(2635, 2599.46484, -1532.53149, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.33936, -1532.53198, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2599.46265, -1533.45850, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2600.34717, -1533.46289, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.21802, -1533.46277, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2635, 2601.22827, -1532.52905, -49.53300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2601.50391, -1535.96143, -48.15700, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2602.64160, -1532.93860, -49.91330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 2597.96924, -1532.92883, -49.91330, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1808, 2606.14307, -1532.02734, -49.91390, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2611, 2606.21655, -1534.06055, -48.50110, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2615, 2596.87427, -1534.12744, -48.26969, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2604, 2598.77588, -1523.37158, -49.16039, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 2606.38892, -1527.54590, -49.91400, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2894, 2601.38232, -1533.00220, -49.09920, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2245, 2600.28979, -1532.98804, -48.92830, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2599.87769, -1524.60071, -49.91330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 2601.19189, -1523.51062, -49.91369, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 2602.09302, -1524.65088, -49.91330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2289, 2602.73682, -1530.51477, -48.19218, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2287, 2597.32715, -1528.70410, -48.49450, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19173, 2606.26440, -1505.40930, -44.33310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19174, 2604.31934, -1516.84656, -44.20910, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19377, 2570.48438, -1536.98816, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2609.05151, -1495.01025, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2588.26196, -1491.91650, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2577.76514, -1491.91650, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2567.30249, -1491.85706, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2609.04883, -1485.38208, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2609.05371, -1475.81421, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.59033, -1485.25952, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2598.60522, -1475.78210, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2588.22559, -1482.30920, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2577.75000, -1482.28381, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2567.30493, -1482.27686, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2588.32837, -1472.82227, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2577.97363, -1472.76172, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2567.49756, -1472.73145, -46.32280, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.06641, -1501.30261, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.55322, -1501.27698, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2593.98682, -1501.26221, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.46899, -1501.23511, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.21289, -1510.93457, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.19482, -1520.48315, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2573.17261, -1530.09070, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.78564, -1539.13416, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.33789, -1539.16272, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.61108, -1527.38879, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.59595, -1517.81982, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2583.57471, -1508.38232, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2594.01123, -1510.68335, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.43481, -1510.66492, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2593.84204, -1520.25879, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2593.91895, -1529.78552, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.27930, -1520.22876, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2604.24341, -1529.55286, -43.14100, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(16779, 2573.03149, -1480.88623, -46.41247, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16779, 2583.56738, -1479.21240, -46.41266, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16779, 2602.03760, -1504.97571, -43.23161, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16779, 2600.71997, -1519.15662, -43.23109, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16779, 2600.74341, -1513.91467, -43.23240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2597.88989, -1481.67188, -48.01162, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2607.06226, -1479.55444, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2587.03491, -1483.66406, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2606.71167, -1483.48694, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2594.33618, -1494.36743, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2590.17407, -1494.06519, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2602.65259, -1530.03674, -44.77839, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2602.65381, -1536.29956, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2594.78369, -1517.27771, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2594.73267, -1510.18250, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2576.17236, -1487.53223, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2580.87866, -1487.46729, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2580.84375, -1492.36255, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2576.27808, -1492.71997, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2573.37939, -1539.67676, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2578.07520, -1539.60449, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2585.70508, -1536.43091, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2591.81128, -1536.13403, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2587.90649, -1531.57642, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2596.62573, -1538.75452, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2596.89502, -1525.88184, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2596.87769, -1517.50830, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2596.88208, -1508.79663, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2602.65771, -1516.59473, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2603.02002, -1529.10193, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2603.24658, -1535.49536, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2602.77759, -1501.35938, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2602.91504, -1494.98413, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2609.90112, -1492.45386, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2597.30737, -1483.54065, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2597.30737, -1483.54065, -48.01160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2610.06348, -1504.14380, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2609.78418, -1530.53442, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2609.78125, -1516.39758, -48.01160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2603.16992, -1542.31421, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2596.68042, -1535.33899, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14438, 2582.89795, -1509.68689, -41.55914, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14680, 2574.86792, -1527.99976, -44.85020, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2615, 2591.48560, -1501.63916, -44.87640, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2604, 2596.16553, -1503.93079, -45.48770, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14685, 2569.72339, -1541.74365, -49.17550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14686, 2569.99048, -1539.16528, -49.49780, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19430, 2569.26294, -1541.66345, -49.19740, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19394, 2595.02148, -1495.94958, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2596.73291, -1495.08789, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19365, 2579.09326, -1496.64905, -44.66560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2595.20044, -1493.53894, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2588.92554, -1490.47449, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19365, 2593.66895, -1492.01538, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2579.29199, -1490.47449, -44.64560, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2574.54614, -1491.76636, -44.64560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1494, 2595.76807, -1495.93347, -46.39760, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3394, 2591.60400, -1491.15332, -46.23640, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3395, 2578.17749, -1496.01196, -46.23630, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3389, 2575.11060, -1492.32385, -46.23840, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3388, 2575.11060, -1491.28015, -46.23840, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3387, 2575.11060, -1493.35913, -46.23840, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3386, 2575.11060, -1494.40210, -46.23840, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2606, 2578.67944, -1490.76758, -44.06360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2606, 2578.67944, -1490.76758, -44.51390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14391, 2584.80005, -1492.38745, -45.18270, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1671, 2585.79834, -1493.32935, -45.79240, 0.00000, 0.00000, 200.00000);
	CreateDynamicObject(1671, 2583.03809, -1493.37903, -45.79240, 0.00000, 0.00000, 170.00000);
	CreateDynamicObject(1671, 2591.25732, -1491.89514, -45.79240, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1671, 2578.37451, -1495.59460, -45.79240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2606, 2589.80542, -1496.32996, -43.81910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2606, 2589.80542, -1496.32996, -44.25910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19377, 2592.14258, -1491.71265, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2581.78101, -1491.87976, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 2571.33789, -1491.62769, -43.14140, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(14680, 2590.65576, -1496.53162, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14680, 2583.76318, -1496.50903, -44.77840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.46069, -1523.85315, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.46069, -1528.16846, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.46069, -1526.56458, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2593.45996, -1525.10400, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2855, 2589.30444, -1523.53430, -49.91580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2852, 2579.39990, -1523.78247, -49.91603, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2819, 2582.60229, -1524.50977, -49.91674, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2583.98071, -1496.63440, -44.22130, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 2593.47339, -1521.86755, -43.01513, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2593.50684, -1530.39648, -42.97044, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2588.88647, -1517.69177, -42.50720, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2588.88647, -1514.42761, -42.50720, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2588.88647, -1510.71814, -42.50720, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2588.88647, -1506.75598, -42.50720, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2588.88647, -1503.50513, -42.50720, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2593.45288, -1499.01685, -43.11288, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2577.48267, -1514.06824, -44.66560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2600.22559, -1530.64111, -48.07390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2571.90991, -1532.16614, -49.92000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19857, 2593.73120, -1541.51990, -44.95000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2578.33203, -1496.63513, -49.90000, 0.00000, 0.00000, 0.00000);
	return 1;
}

stock CreateServerGate()
{
	for (new i = 0; i < MAX_GATES; i++)
	{
		GateInfo[i][gObject] = INVALID_OBJECT_ID;
		GateInfo[i][gModel] = 0;
		GateInfo[i][gMoved] = 0;
		GateInfo[i][gAutoTime] = 0;
	}
	CreateGate(1500, 2577.5000, -1484.8264, -49.9200, 2577.5000, -1483.5000, -49.9200, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOOR, FACTYPE, DOC, 6, 2, 500);
	CreateGate(1500, 2595.9553, -1487.1398, -49.9200, 2597.300, -1487.1398, -49.9200, 0.00000, 0.00000, 180.00000, 0.00000, 0.00000, 180.00000, DOOR, FACTYPE, DOC, 6, 2, 500);
	CreateGate(2930, 2587.8567, -1496.6121, -47.3400, 2587.8567, -1496.6121, -44.8400, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOOR, FACTYPE, DOC, 6, 2, 500);
	CreateGate(2930, 2593.5430, -1497.4093, -47.3400, 2593.5430, -1498.9093, -47.3400, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, DOOR, FACTYPE, DOC, 6, 2, 500);
	CreateGate(19303, 2588.8840, -1502.4752, -48.6639, 2588.8840, -1503.9752, -48.6639, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2588.8840, -1506.1300, -48.6639, 2588.8840, -1507.6300, -48.6639, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2588.8840, -1509.8019, -48.6639, 2588.8840, -1511.3019, -48.6639, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2588.8840, -1513.4536, -48.6639, 2588.8840, -1514.9536, -48.6639, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2588.8840, -1517.1119, -48.6639, 2588.8840, -1518.6119, -48.6639, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2588.6919, -1522.6837, -48.6639, 2587.1919, -1522.6837, -48.6639, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2585.0291, -1522.6837, -48.6639, 2583.5291, -1522.6837, -48.6639, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2581.3618, -1522.6837, -48.6639, 2579.8618, -1522.6837, -48.6639, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2577.4309, -1517.8059, -48.6639, 2577.4309, -1516.3059, -48.6639, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2577.4309, -1514.1403, -48.6639, 2577.4309, -1512.6403, -48.6639, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2577.4309, -1510.4968, -48.6639, 2577.4309, -1508.9968, -48.6639, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOCCELL, 0, 2, 1000);
	CreateGate(19303, 2577.4309, -1506.8295, -48.6639, 2577.4309, -1505.3295, -48.6639, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2577.4309, -1503.1895, -48.6639, 2577.4309, -1501.6895, -48.6639, 0.00000, 0.00000, -90.00000, 0.00000, 0.00000, -90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2571.2483, -1501.4462, -44.9858, 2571.2483, -1502.9462, -44.9858, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2571.2483, -1505.1049, -44.9858, 2571.2483, -1506.6049, -44.9858, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2571.2483, -1508.7466, -44.9858, 2571.2483, -1510.2466, -44.9858, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2571.2483, -1512.4198, -44.9858, 2571.2483, -1513.9198, -44.9858, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2571.2483, -1516.0664, -44.9858, 2571.2483, -1517.5664, -44.9858, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2586.9456, -1528.9116, -44.9858, 2588.4456, -1528.9116, -44.9858, 0.00000, 0.00000, 180.00000, 0.00000, 0.00000, 180.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2583.2839, -1528.9116, -44.9858, 2584.7839, -1528.9116, -44.9858, 0.00000, 0.00000, 180.00000, 0.00000, 0.00000, 180.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(19303, 2579.6033, -1528.9116, -44.9858, 2581.1033, -1528.9116, -44.9858, 0.00000, 0.00000, 180.00000, 0.00000, 0.00000, 180.00000, DOCCELL, FACTYPE, DOC, 0, 2, 1000);
	CreateGate(2930, 2587.2979, -1535.0804, -47.3400, 2587.2979, -1535.0804, -44.8400, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOOR, FACTYPE, DOC, 6, 2, 1000);
	CreateGate(2930, 2580.8687, -1535.0698, -47.3400, 2580.8687, -1535.0698, -44.8400, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, DOOR, FACTYPE, DOC, 6, 2, 1000);
	CreateGate(2990, 773.8500, -1335.4272, 14.4183, 773.8500, -1345.4272, 14.4183, 0.00000, 0.00000, 90.00000, 0.00000, 0.00000, 90.00000, GATE, FACTYPE, DOC, 7, 3, -1, 20);
	CreateGate(968, 781.5565, -1383.9156, 13.3104, 781.5565, -1383.9156, 13.3104, 0.00000, -90.00000, 0.00000, 0.00000, 0.0000, 0.00000, GATE, FACTYPE, DOC, 7, 3, -1, 20);
	return 1;
}

stock RemoveBuilding(playerid)
{
	//DocMap
	RemoveBuildingForPlayer(playerid, 1689, 745.5859, -1381.1094, 25.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 751.3359, -1368.0313, 25.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, 732.8516, -1332.8984, 12.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 732.7266, -1341.7734, 12.6328, 0.25);

	//Fence LS's Airport
	RemoveBuildingForPlayer(playerid, 1412, 1996.8281, -2227.3828, 13.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1991.5547, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1986.2813, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2002.1094, -2227.3438, 13.8281, 0.25);
	return 1;
}

stock RemoveVendingMachine(playerid)
{
	//Los Santos and Countryside
	RemoveBuildingForPlayer(playerid, 956, 1634.1487, -2238.2810, 13.5077, 20.0); //Snack vender @ LS Airport
	RemoveBuildingForPlayer(playerid, 956, 2480.9885, -1958.5117, 13.5831, 20.0); //Snack vender @ Sushi Shop in Willowfield
	RemoveBuildingForPlayer(playerid, 955, 1729.7935, -1944.0087, 13.5682, 20.0); //Sprunk machine @ Unity Station
	RemoveBuildingForPlayer(playerid, 955, 2060.1099, -1898.4543, 13.5538, 20.0); //Sprunk machine opposite Tony's Liqour in Willowfield
	RemoveBuildingForPlayer(playerid, 955, 2325.8708, -1645.9584, 14.8270, 20.0); //Sprunk machine @ Ten Green Bottles
	RemoveBuildingForPlayer(playerid, 955, 1153.9130, -1460.8893, 15.7969, 20.0); //Sprunk machine @ Market
	RemoveBuildingForPlayer(playerid, 955, 1788.3965, -1369.2336, 15.7578, 20.0); //Sprunk machine in Downtown Los Santos
	RemoveBuildingForPlayer(playerid, 955, 2352.9939, -1357.1105, 24.3984, 20.0); //Sprunk machine @ Liquour shop in East Los Santos
	RemoveBuildingForPlayer(playerid, 1775, 2224.3235, -1153.0692, 1025.7969, 20.0); //Sprunk machine @ Jefferson Motel
	RemoveBuildingForPlayer(playerid, 956, 2140.2566, -1161.7568, 23.9922, 20.0); //Snack machine @ pick'n'go market in Jefferson
	RemoveBuildingForPlayer(playerid, 956, 2154.1199, -1015.7635, 62.8840, 20.0); //Snach machine @ Carniceria El Pueblo in Las Colinas
	RemoveBuildingForPlayer(playerid, 956, 662.5665, -551.4142, 16.3359, 20.0); //Snack vender at Dillimore Gas Station
	RemoveBuildingForPlayer(playerid, 955, 200.2010, -107.6401, 1.5513, 20.0); //Sprunk machine @ Blueberry Safe House
	RemoveBuildingForPlayer(playerid, 956, 2271.4666, -77.2104, 26.5824, 20.0); //Snack machine @ Palomino Creek Library
	RemoveBuildingForPlayer(playerid, 955, 1278.5421, 372.1057, 19.5547, 20.0); //Sprunk machine @ Papercuts in Montgomery
	RemoveBuildingForPlayer(playerid, 955, 1929.5527, -1772.3136, 13.5469, 20.0); //Sprunk machine @ Idlewood Gas Station

	//San Fierro
	RemoveBuildingForPlayer(playerid, 1302, -2419.5835, 984.4185, 45.2969, 20.0); //Soda machine 1 @ Juniper Hollow Gas Station
	RemoveBuildingForPlayer(playerid, 1209, -2419.5835, 984.4185, 45.2969, 20.0); //Soda machine 2 @ Juniper Hollow Gas Station
	RemoveBuildingForPlayer(playerid, 956, -2229.2075, 287.2937, 35.3203, 20.0); //Snack vender @ King's Car Park
	RemoveBuildingForPlayer(playerid, 955, -1349.3947, 493.1277, 11.1953, 20.0); //Sprunk machine @ SF Aircraft Carrier
	RemoveBuildingForPlayer(playerid, 956, -1349.3947, 493.1277, 11.1953, 20.0); //Snack vender @ SF Aircraft Carrier
	RemoveBuildingForPlayer(playerid, 955, -1981.6029, 142.7232, 27.6875, 20.0); //Sprunk machine @ Cranberry Station
	RemoveBuildingForPlayer(playerid, 955, -2119.6245, -422.9411, 35.5313, 20.0); //Sprunk machine 1/2 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2097.3696, -397.5220, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2068.5593, -397.5223, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2039.8802, -397.5214, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2011.1403, -397.5225, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2005.7861, -490.8688, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2034.5267, -490.8681, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2063.1875, -490.8687, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2091.9780, -490.8684, 35.5313, 20.0); //Sprunk machine 3 @ SF Stadium

	//Las Venturas
	RemoveBuildingForPlayer(playerid, 956, -1455.1298, 2592.4138, 55.8359, 20.0); //Snack vender @ El Quebrados GONE
	RemoveBuildingForPlayer(playerid, 955, -252.9574, 2598.9048, 62.8582, 20.0); //Sprunk machine @ Las Payasadas GONE
	RemoveBuildingForPlayer(playerid, 956, -252.9574, 2598.9048, 62.8582, 20.0); //Snack vender @ Las Payasadas GONE
	RemoveBuildingForPlayer(playerid, 956, 1398.7617, 2223.3606, 11.0234, 20.0); //Snack vender @ Redsands West GONE
	RemoveBuildingForPlayer(playerid, 955, -862.9229, 1537.4246, 22.5870, 20.0); //Sprunk machine @ The Smokin' Beef Grill in Las Barrancas GONE
	RemoveBuildingForPlayer(playerid, 955, -14.6146, 1176.1738, 19.5634, 20.0); //Sprunk machine @ Fort Carson GONE
	RemoveBuildingForPlayer(playerid, 956, -75.2839, 1227.5978, 19.7360, 20.0); //Snack vender @ Fort Carson GONE
	RemoveBuildingForPlayer(playerid, 955, 1519.3328, 1055.2075, 10.8203, 20.0); //Sprunk machine @ LVA Freight Department GONE
	RemoveBuildingForPlayer(playerid, 956, 1659.5096, 1722.1096, 10.8281, 20.0); //Snack vender near Binco @ LV Airport GONE
	RemoveBuildingForPlayer(playerid, 955, 2086.5872, 2071.4958, 11.0579, 20.0); //Sprunk machine @ Sex Shop on The Strip
	RemoveBuildingForPlayer(playerid, 955, 2319.9001, 2532.0376, 10.8203, 20.0); //Sprunk machine @ Pizza co by Julius Thruway (North)
	RemoveBuildingForPlayer(playerid, 955, 2503.2061, 1244.5095, 10.8203, 20.0); //Sprunk machine @ Club in the Camels Toe
	RemoveBuildingForPlayer(playerid, 956, 2845.9919, 1294.2975, 11.3906, 20.0); //Snack vender @ Linden Station

	//Interiors: 24/7 and Clubs
	RemoveBuildingForPlayer(playerid, 1775, 496.0843, -23.5310, 1000.6797, 20.0); //Sprunk machine 1 @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1775, 501.1219, -2.1968, 1000.6797, 20.0); //Sprunk machine 2 @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1776, 501.1219, -2.1968, 1000.6797, 20.0); //Snack vender @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1775, -19.2299, -57.0460, 1003.5469, 20.0); //Sprunk machine @ Roboi's type 24/7 stores
	RemoveBuildingForPlayer(playerid, 1776, -35.9012, -57.1345, 1003.5469, 20.0); //Snack vender @ Roboi's type 24/7 stores
	RemoveBuildingForPlayer(playerid, 1775, -17.0036, -90.9709, 1003.5469, 20.0); //Sprunk machine @ Other 24/7 stores
	RemoveBuildingForPlayer(playerid, 1776, -17.0036, -90.9709, 1003.5469, 20.0); //Snach vender @ Others 24/7 stores
	return 1;
}

stock DMVMapping() {
	CreateDynamicObject(983, 2048.29834, -1922.27002, 13.23043,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(984, 2065.23560, -1922.28430, 13.18355,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(966, 2058.55420, -1922.07886, 12.54688,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(968, 2058.54712, -1922.12927, 13.60612,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(984, 2071.61426, -1915.90137, 13.18355,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(984, 2071.61035, -1903.10156, 13.18355,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10829, 2064.19629, -1917.64050, 12.51599,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1256, 2067.63452, -1915.02600, 13.20633,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1256, 2064.99756, -1915.02466, 13.20633,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1432, 2063.57617, -1899.12219, 12.68560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(617, 2070.28101, -1918.01184, 12.54071,   0.00000, 0.00000, 58.49986);
	CreateDynamicObject(617, 2069.44653, -1899.83569, 12.54763,   0.00000, 0.00000, -119.93877);
	CreateDynamicObject(617, 2047.46423, -1921.01440, 12.54071,   0.00000, 0.00000, -102.47797);
	CreateDynamicObject(910, 2042.60596, -1923.32996, 13.81603,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2051.41113, -1922.13940, 13.11120,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2059.10742, -1922.08118, 13.11120,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1216, 2045.43555, -1915.30200, 13.23888,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1216, 2045.42908, -1916.39990, 13.23888,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1478, 2050.50610, -1922.81079, 13.18305,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3860, 2054.56519, -1898.81616, 13.71921,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1514, 2055.49072, -1899.84668, 13.63017,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2485, 2053.62866, -1899.55640, 13.41080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2490, 2054.79468, -1899.90063, 13.49693,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2489, 2054.09277, -1899.90442, 13.49718,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1671, 2055.39697, -1897.78589, 13.01402,   0.00000, 0.00000, -11.25003);
	CreateDynamicObject(3448, 216.07875, 7669.84473, -610.18018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3448, 1852.13745, -2419.64185, 12.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2435.63940, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2432.41479, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2438.86279, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2442.06372, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2451.65527, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2445.24316, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2448.45264, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2454.79272, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2457.91382, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2464.25220, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2461.14722, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2465.33276, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2468.20435, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2408.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.80176, -2405.16895, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79224, -2402.06787, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.77197, -2401.22021, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1885.15979, -2399.62598, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1882.05920, -2399.62842, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1878.87280, -2399.62769, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1875.67297, -2399.63965, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1872.42517, -2399.64771, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1869.21960, -2399.65234, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1866.05457, -2399.65479, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1862.82141, -2399.66553, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1859.57788, -2399.64844, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1856.37158, -2399.66309, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1853.20679, -2399.66919, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1849.98877, -2399.65552, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1846.79028, -2399.64111, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1843.57031, -2399.64429, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1837.19299, -2399.64014, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1840.41028, -2399.64648, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1833.98840, -2399.63037, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1830.80420, -2399.64795, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1827.93579, -2399.65625, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1825.33008, -2399.65527, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1823.79163, -2401.20557, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.79968, -2404.42871, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.78577, -2407.64868, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81250, -2410.86963, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.80493, -2417.24292, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81555, -2414.05054, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81860, -2420.46509, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81848, -2423.66699, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.84106, -2426.90820, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.83960, -2430.12109, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.83044, -2433.30176, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.83838, -2436.53174, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.82092, -2439.73267, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81299, -2442.91260, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.81848, -2446.11475, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.82288, -2449.29736, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.80005, -2452.52173, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.80396, -2455.74243, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.79822, -2458.90454, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.80774, -2462.13794, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.78467, -2465.34082, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1823.79163, -2468.19580, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1849.96741, -2456.70874, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1833.03320, -2469.74487, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1830.87097, -2469.72852, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1827.68579, -2469.71582, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1825.30164, -2469.72339, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1853.23572, -2456.70874, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1856.40210, -2456.70874, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1859.64343, -2456.70874, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1862.76404, -2456.72803, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1865.92798, -2456.72192, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1869.10925, -2456.69531, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1871.52393, -2456.73267, 14.23170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19362, 1873.08569, -2458.50635, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1873.06958, -2461.73877, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1873.09448, -2464.93921, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1873.09851, -2468.14575, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1870.16052, -2441.35132, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1870.15295, -2436.03906, 13.56030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1870.14197, -2424.72388, 13.56030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1870.16113, -2418.78882, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1852.52026, -2425.09717, 13.56030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1852.50305, -2419.47656, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1852.54126, -2435.91504, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1852.56592, -2441.24023, 13.56030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1834.66785, -2442.50342, 13.56050,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1834.65125, -2436.27832, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1834.64099, -2425.37549, 13.56050,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1834.64734, -2419.60571, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3852, 1825.83289, -2430.33496, 12.83980,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3852, 1828.91650, -2430.31909, 12.83940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3852, 1831.57825, -2430.30127, 12.83900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2418.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.95203, -2418.90356, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1845.23962, -2418.90356, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1848.54712, -2418.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.60754, -241.21091, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.60754, -2413.21094, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.92505, -2413.21094, 12.62000,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(19425, 1845.21350, -2413.21094, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.52161, -2413.21094, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.51501, -2415.99658, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.20691, -2415.99658, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.91919, -2415.99658, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.60156, -2415.99658, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2421.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.95203, -2421.90356, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1845.23962, -2421.90356, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1848.54712, -2421.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2424.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.95203, -2424.90356, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1845.23962, -2424.90356, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1848.54712, -2424.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2427.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.95203, -2427.90356, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1845.23962, -2427.90356, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1848.54712, -2427.90356, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2430.76001, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1841.95203, -2430.76001, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1845.23962, -2430.76001, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1848.54712, -2430.76001, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1838.63477, -2433.76001, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.54712, -2433.76001, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2433.76001, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2433.76001, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1848.54712, -2436.64990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2436.64990, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2436.64990, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1838.63477, -2436.64990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.54712, -2439.64990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2439.64990, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2439.64990, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1838.63477, -2439.64990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.54712, -2442.55005, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2442.55005, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2442.55005, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1838.63477, -2442.55005, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.54712, -2445.55005, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2445.55005, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2445.55005, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1838.63477, -2445.55005, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1848.54712, -2448.39990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1845.23962, -2448.39990, 12.62000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(19425, 1841.95203, -2448.39990, 12.62000,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(19425, 1838.63477, -2448.39990, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3852, 1831.57825, -2432.80127, 12.83900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3852, 1828.91650, -2432.81909, 12.83940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3852, 1825.83289, -2432.83496, 12.83980,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2411.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2414.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2417.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2420.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2423.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2426.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19362, 1886.79260, -2429.34961, 14.23170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8843, 1879.71912, -2447.69141, 12.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8843, 1841.19275, -2463.11865, 12.61000,   0.00000, 0.00000, -134.00000);
	CreateDynamicObject(8843, 1829.09741, -2440.98413, 12.61000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3578, 1837.08923, -2448.46631, 13.06050,   0.00000, 0.00000, -65.00000);
	CreateDynamicObject(3578, 1843.79919, -2454.59009, 13.06050,   0.00000, 0.00000, -20.00000);
	CreateDynamicObject(19131, 1842.02991, -2435.22534, 13.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19131, 1844.94751, -2426.69263, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19131, 1842.49963, -2414.75488, 13.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3578, 1852.52026, -2408.49634, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1852.52026, -2404.99634, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1870.16052, -2451.35132, 13.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8843, 1861.71912, -2432.19141, 12.61000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3578, 1882.44043, -2403.14185, 13.06050,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(973, 1846.48315, -2435.07910, 13.09680,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(973, 1840.48315, -2426.57910, 13.09680,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(973, 1846.98315, -2414.57910, 13.09680,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(4639, 1887.92175, -2420.34204, 14.33920,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1828.54944, -2465.64258, 13.06050,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(973, 1855.89551, -2420.39160, 13.09680,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(973, 1862.30078, -2417.04883, 13.09680,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(973, 1859.05286, -2429.18213, 13.09680,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(973, 1865.49878, -2425.77075, 13.09680,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(973, 1859.11963, -2438.56763, 13.09680,   0.00000, 0.00000, -100.00000);
	CreateDynamicObject(973, 1865.86816, -2435.10059, 13.09680,   0.00000, 0.00000, -95.00000);
	CreateDynamicObject(973, 1864.20496, -2444.49780, 13.09680,   0.00000, 0.00000, -105.00000);
	CreateDynamicObject(973, 1854.75745, -2446.28809, 13.09680,   0.00000, 0.00000, -140.00000);
	CreateDynamicObject(973, 1859.16821, -2451.70093, 13.09680,   0.00000, 0.00000, -145.00000);
	CreateDynamicObject(973, 1864.88257, -2412.55688, 13.09680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11711, 1834.19849, -2469.59790, 15.10512,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19957, 1871.89783, -2448.45679, 12.59191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19961, 1863.39685, -2448.95679, 12.58160,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19961, 1864.96301, -2421.15942, 12.58160,   0.00000, 0.00000, 230.00000);
	CreateDynamicObject(19971, 1873.28137, -2455.56860, 12.59500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8843, 1829.09741, -2422.48413, 12.61000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19977, 1834.62366, -2412.84961, 12.83660,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19959, 1855.17810, -2454.51685, 12.59490,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19960, 1881.00342, -2402.18091, 13.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19960, 1835.77954, -2414.12866, 12.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1828.03638, -2403.29419, 13.06050,   0.00000, 0.00000, 40.00000);
}
//../pawno/include/ProjectInc/onevent.inc TM
public OnGameModeInit()
{
	GameModeInit();
	ConnectMySQL();
	ClearFamilies();
	CreateMap();
	CreateServerTextDraw();
	CreateServerGate();
	LSArea = CreateDynamicPolygon(LSZone);
	DOCArea = CreateDynamicPolygon(DOCZone);
	new string[MAX_PLAYER_NAME];
	new string1[MAX_PLAYER_NAME];
	for (new c = 0; c<CAR_AMOUNT; c++)
		Gas[c] = GasMax;
	ClearAllVehicle();
	ClearAllBiz();
	LoadCar();
	CreateFoodMenus();
	CreateGuideMenus();
	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadIRC();
	LoadFamilies();
	LoadCK();
	LoadTurfs();
	LoadPapers();
	LoadDrugSystem();
	LoadMatsSystem();
	LoadHQLocks();
	LoadTrunk();
	CreateServerNails();
	IRCInfo[0][iPlayers] = 0; IRCInfo[1][iPlayers] = 0; IRCInfo[2][iPlayers] = 0;
	IRCInfo[3][iPlayers] = 0; IRCInfo[4][iPlayers] = 0; IRCInfo[5][iPlayers] = 0;
	IRCInfo[6][iPlayers] = 0; IRCInfo[7][iPlayers] = 0; IRCInfo[8][iPlayers] = 0;
	IRCInfo[9][iPlayers] = 0;
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "No-one");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	/*PlayerHaul[108][pCapasity] = 100;
	PlayerHaul[109][pCapasity] = 100;
	PlayerHaul[110][pCapasity] = 50;
	PlayerHaul[111][pCapasity] = 50;*/
	SetGameModeText("Grand Mode v1.0");
	Streamer_SetCellDistance(800);
	Streamer_SetCellSize(800);
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 1000);
	/*SendRconCommand("mapname Los Angeles");
	SendRconCommand("weburl");*/
	format(objstore, sizeof(objstore), "MOLE: I got nothing, check back with me later.");
	format(cbjstore, sizeof(cbjstore), "HQ: There is nothing in your Vicinity, Out.");
	format(motd, sizeof(motd), "Welcome to the Los Angeles Roleplay server.");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if (!realtime)
		SetWorldTime(wtime);
	SetPDistance(10);

	for (new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
		InitLockDoors(playerid);
		ClearPlayer(playerid);
	}

	//EnableTirePopping(1); // it was remved since 0.3a
	//EnableZoneNames(1); // it was remved since 0.3a
	AllowInteriorWeapons(1);
	AllowAdminTeleport(0);
	//UsePlayerPedAnims();  //unique walking
	//ShowPlayerMarkers(false);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ManualVehicleEngineAndLights();
	//-----------Objects---------
	pdgate1 = CreateObject(971, 1589.053344, -1638.123168, 14.122960, 0.000000, 0.000000, 180);
	pdgate2 = CreateObject(968, 1544.700317, -1630.735717, 13.096980, -1.000000, -91.000000, 269.972869);
	tugate = CreateObject(971, 1042.2530, -1026.0344, 32.1016, 0, 0.0000, 0.0000);
	lspddoor1 = CreateObject(1500, 245.0578, 72.4314, 1002.5406, 0, 0.0000, 0.0000);
	lspddoor2 = CreateObject(1500, 245.9478, 72.4314, 1002.5406, 0, 0.0000, 0.0000);
	armygate1 = CreateObject(969, 2720.3772, -2409.7523, 12.6, 0, 0.0000, 90);
	armygate2 = CreateObject(969, 2720.3772, -2508.3069, 12.6, 0, 0.0000, 90);
	fbigate = CreateObject(980, 1534.9020, -1451.5979, 14.4882, 0, 0.0000, 0);
	hspdgate = CreateObject(971, 1643.3379, -1714.9338, 15.3067, 0, 0.0000, 90);

	DMVMapping();
	// CreatedCars check
	/*for (new i = 0; i < sizeof(CreatedCars); i++)
	{
		CreatedCars[i] = 0;
	}*/
	// Zones
	for (new i = 0; i < sizeof(TurfInfo); i++)
	{
		Turfs[i] = GangZoneCreate(TurfInfo[i][zMinX], TurfInfo[i][zMinY], TurfInfo[i][zMaxX], TurfInfo[i][zMaxY]);
		//surenos = GangZoneCreate(2107.1521,-1091.9614, 1840.1005,-1307.0010);
		//black_yakuza = GangZoneCreate(1190.004, -1039.178, 1500.711, -738.613);
		//nortenos = GangZoneCreate(646.1987, -1410.788, 888.454, -1139.701);
		//street_zone = GangZoneCreate(2450.1934,-1598.5278, 2250.6870,-1821.3060);
		//jefferson_saints = GangZoneCreate(2082.62,-1482.82, 2382.62,-1232.82);
	}
	// Player Class's
	/*for (new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0], 1958.3783, 1343.1572, 1100.3746, 269.1425, -1, -1, -1, -1, -1, -1);
	}*/
	// Car Spawns
	/*for(new h = 0; h < MAX_HOUSES; h++)
	{
	AddStaticVehicleEx2(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 60000);
	gCarLock[h+1] = 1;
	}//34*/
	//-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(596, 2779.3843, -2434.2644, 13.3568, 88.5203, 44, 86, 30000); // Army police 1
	//AddStaticVehicleEx2(596, 2779.4299, -2439.7708, 13.3572, 88.1692, 44, 86, 30000); // Army police 2
	//AddStaticVehicleEx2(596, 2779.1882, -2471.9214, 13.3576, 86.6550, 44, 86, 30000); // Army police 3
	//AddStaticVehicleEx2(596, 2779.1497, -2477.8547, 13.3590, 86.9500, 44, 86, 30000); // Army police 4
	//AddStaticVehicleEx2(432, 2791.3584, -2494.2971, 13.6588, 89.3376, 43, 0, 30000); // Army tank 5
	//AddStaticVehicleEx2(470, 2792.0173, -2455.8245, 14.0688, 90, 43, 0, 30000); // Army patriot 6
	//AddStaticVehicleEx2(470, 2793.1680, -2418.1855, 13.6259, 88.3914, -1, -1, 30000); // Patriot 7
	//AddStaticVehicleEx2(470, 2785.0979, -2417.6987, 13.6273, 87.4559, -1, -1, 30000); //Patriot 8
	//AddStaticVehicleEx2(433, 2781.4146, -2455.5208, 14.0714, 90, 43, 0, 30000); // Army truck 9
	//AddStaticVehicleEx2(430, 2698.8132, -2311.0671, -0.2161, 87.3657, -1, -1, 30000); // Army boat 10
	//AddStaticVehicleEx2(430, 2722.9766, -2311.2756, -0.3360, 89.2799, -1, -1, 30000); // Army boat 11
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(405, 1406.93, -1790.2, 13.3, 90, 0, 0, 30000); // Mayor security 12
	//AddStaticVehicleEx2(405, 1406.9, -1793.8, 13.3, 90, 0, 0, 30000); // Mayor security 13
	//AddStaticVehicleEx2(405, 1406.7, -1782.16, 13.3, 90, 0, 0, 30000); // Mayor security 14
	//AddStaticVehicleEx2(409, 1405.87, -1785.96, 13.3, 90, 1, 1, 30000); // Mayor stretch 15
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(599, 616.1244, -601.7048, 17.4214, 271.5325, -1, -1, 30000); // Cop cruiser (Dillimore) 16
	//AddStaticVehicleEx2(525, 1530.3849, -1645.1930, 5.7777, 179.3521, 0, 0, 30000); // Cop TowTruck 17
	//AddStaticVehicleEx2(596, 1570.1555, -1710.3179, 5.6136, 358.7748, -1, -1, 30000); // Cop cruiser 18
	//AddStaticVehicleEx2(596, 1574.4703, -1710.9795, 5.6115, 0.4220, -1, -1, 30000); // Cop cruiser 19
	//AddStaticVehicleEx2(596, 1587.4816, -1710.3594, 5.6104, 358.9421, -1, -1, 30000); // Cop cruiser 20
	//AddStaticVehicleEx2(596, 1595.6578, -1710.9442, 5.6119, 359.6335, 0, 1, 30000); // Cop cruiser 21
	//AddStaticVehicleEx2(596, 1545.7845, -1684.4004, 5.6342, 271.1593, 0, 1, 30000); // Cop cruiser 22
	//AddStaticVehicleEx2(596, 1558.7819, -1710.9503, 5.6119, 1.1862, 0, 1, 30000); // Cop cruiser 23
	//AddStaticVehicleEx2(596, 1601.8564, -1704.1805, 5.6110, 88.9959, -1, -1, 30000); // Cop cruiser 24
	//AddStaticVehicleEx2(596, 1600.9231, -1691.9321, 5.6113, 91.6221, -1, -1, 30000); // Cop cruiser 25
	//AddStaticVehicleEx2(596, 1600.4153, -1687.9385, 5.6118, 90.7431, -1, -1, 30000); // Cop cruiser 26
	//AddStaticVehicleEx2(596, 1529.6339, -1683.7720, 5.6124, 270.5692, 29, 29, 30000); // Cop general car 27
	//AddStaticVehicleEx2(596, 1529.5374, -1688.0181, 5.6114, 270.0886, 29, 29, 30000); // Cop general car 28
	//AddStaticVehicleEx2(523, 1557.9637, -1694.5964, 5.4673, 226.4766, -1, -1, 30000); // Police moto 29
	//AddStaticVehicleEx2(523, 1557.9060, -1697.4153, 5.4689, 220.9842, -1, -1, 30000); // Police moto 30
	//AddStaticVehicleEx2(523, 1558.1632, -1691.8335, 5.4596, 224.7542, -1, -1, 30000); // Police moto 31
	//AddStaticVehicleEx2(599, 1584.6510, -1671.4448, 6.0541, 271.5708, 0, 1, 30000); // Police ranger 32
	//AddStaticVehicleEx2(599, 1584.7875, -1667.6138, 6.0592, 272.0818, 0, 1, 30000); // Police ranger 33
	//AddStaticVehicleEx2(599, 1545.3936, -1667.7957, 6.0809, 87.7152, 29, 29, 30000); // Police tan-white rancher 34
	//AddStaticVehicleEx2(599, 1545.0044, -1671.9329, 6.0791, 91.5492, 29, 29, 30000); // Police tan-white rancher 35
	//AddStaticVehicleEx2(427, 1544.2870, -1659.3522, 5.6119, 88.5025, -1, -1, 30000);// Police SWAT enforcer 36
	//AddStaticVehicleEx2(601, 1544.6962, -1663.2948, 6.0225, 88.9357, -1, -1, 30000); // Police SWAT APC 37
	//AddStaticVehicleEx2(497, 1566.6628, -1653.8688, 28.5752, 91.9445, 0, 1, 30000);// Police maverick 38
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(490, 1514.1959, -1478.1108, 9.6270, 270.0, -1, -1, 30000); // FBI rancher 39
	//AddStaticVehicleEx2(490, 1514.1621, -1474.2642, 9.6278, 270, 0, 0, 30000); // FBI rancher 40
	//AddStaticVehicleEx2(426, 1525.4424, -1461.3640, 9.2431, 0, 0, 0, 30000); // FBI elegant 41
	//AddStaticVehicleEx2(426, 1520.8752, -1461.1650, 9.2430, 0, 0, 0, 30000); // FBI elegant 42
	//AddStaticVehicleEx2(426, 1516.1973, -1461.1393, 9.2430, 0, 0, 0, 30000); // FBI elegant 43
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(411, 1667.8558, -1717.4535, 14.3364, 270.2589, 0, 0, 30000); // HSPD car 44
	//AddStaticVehicleEx2(411, 1667.6758, -1712.7479, 14.3365, 269.3311, 0, 0, 30000); // HSPD car 45
	//AddStaticVehicleEx2(411, 1667.7336, -1707.8774, 14.3364, 268.2024, 0, 0, 30000); // HSPD car 46
	//AddStaticVehicleEx2(411, 1667.7771, -1702.7943, 14.3365, 267.2334, 0, 0, 30000); // HSPD car 47
	//AddStaticVehicleEx2(415, 1668.1741, -1698.2887, 14.3815, 267.3284, 0, 0, 30000); // HSPD car 48
	//AddStaticVehicleEx2(415, 1647.4928, -1702.9298, 14.3815, 91.1837, 0, 0, 30000); // HSPD car 49
	//AddStaticVehicleEx2(415, 1647.4895, -1707.9279, 14.3800, 91.9683, 0, 0, 30000); // HSPD car 50
	//AddStaticVehicleEx2(451, 1667.9532, -1693.5905, 14.3152, 270.0380, 0, 0, 30000); // HSPD car 51
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(416, 1177.35, -1339.24, 13.66, 269.58, -1, -1, 30000); // Ambulance 52
	//AddStaticVehicleEx2(416, 1176.98, -1308.65, 13.62, 269.33, -1, -1, 30000); // Ambulance 53
	//AddStaticVehicleEx2(416, 1189.87, -1357.14, 13.21, 180.78, -1, -1, 30000); // Ambulance 54
	//AddStaticVehicleEx2(487, 1211.58, -1324.46, 13.21, 0.42, 1, 3, 30000); // Medic chopper 55
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(467, 1067.1295, -295.5681, 73.7826, 179.6040, 90, -1, 30000); // Hitman oceanic 56
	//AddStaticVehicleEx2(467, 1077.3829, -295.1148, 73.7812, 180.2754, 90, -1, 30000); // Hitman oceanic 57
	//AddStaticVehicleEx2(467, 1071.9189, -294.9166, 73.7250, 178.9444, 90, -1, 30000); // Hitman oceanic 58
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(431, 1172.5, -1795.5, 13.1, 0.0, -1, -1, 30000); // Bus 59
	//AddStaticVehicleEx2(431, 1182.1, -1795.9, 13.1, 0.0, -1, -1, 30000); // Bus 60
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(409, 1789.4137, -1932.6389, 13.1079, 357.7568, 0, 0, 30000); // YCAT Co. Limo 61
	//AddStaticVehicleEx2(421, 1803.6373, -1916.4673, 13.1141, 89.0899, 0, 0, 30000); // YCAT Co. Washington 62
	//AddStaticVehicleEx2(421, 1803.6617, -1925.0874, 13.1319, 266.7457, 0, 0, 30000); // YCAT Co. Washington 63
	//AddStaticVehicleEx2(420, 1800.6991, -1886.0063, 13.1462, 268.8892, -1, -1, 30000); // YCAT Co.Taxi 64
	//AddStaticVehicleEx2(420, 1777.9976, -1886.0128, 13.1922, 267.6736, -1, -1, 30000); // YCAT Co. Taxi 65
	//AddStaticVehicleEx2(420, 1803.7118, -1906.2510, 13.2024, 85.1059, -1, -1, 30000); // YCAT Co. Taxi 66
	//AddStaticVehicleEx2(420, 1777.3717, -1896.7965, 13.1916, 270.3214, -1, -1, 30000); // YCAT Co. Taxi 67
	//AddStaticVehicleEx2(420, 1796.4906, -1932.9441, 13.1914, 357.7162, -1, -1, 30000); // YCAT Co. Taxi 68
	//AddStaticVehicleEx2(420, 1780.8253, -1931.8109, 13.1295, 358.2670, -1, -1, 30000); // YCAT Co. Taxi 69
	//AddStaticVehicleEx2(420, 1777.6808, -1913.4772, 13.1285, 267.0958, -1, -1, 30000); // YCAT Co. Taxi 70
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(582, 1795.24, -1284.89, 13.44, 125.29, 125, 125, 30000); // News van 71
	//AddStaticVehicleEx2(582, 1797.18, -1291.08, 13.27, 108.95, 125, 125, 30000); // News van 72
	//AddStaticVehicleEx2(488, 1545.4849, -1353.9330, 329.6510, 185.4584, 125, 125, 30000); // News Chopper 73
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(525, 2078.74, -2006.38, 13.25, 271.64, 0, 0, 30000); // Towcar 74
	//AddStaticVehicleEx2(525, 2079.06, -2019.84, 13.25, 269.24, 0, 0, 30000); // Towcar 75
	//AddStaticVehicleEx2(525, 2097.83, -2006.09, 13.25, 44.15, 0, 0, 30000); // Towcar 76
	//AddStaticVehicleEx2(525, 2106.72, -2015.25, 13.25, 44.15, 0, 0, 30000); // Towcar 77
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(571, 2286.2141, -2354.5000, 12.8306, 225.8705, -1, -1, 30000); // kart 78
	//AddStaticVehicleEx2(571, 2279.9412, -2348.4141, 12.8312, 225.8585, -1, -1, 30000); // kart 79
	//AddStaticVehicleEx2(571, 2291.7932, -2345.5356, 12.8305, 227.3060, -1, -1, 30000); // kart 80
	//AddStaticVehicleEx2(571, 2287.5615, -2341.6433, 12.8306, 226.5350, -1, -1, 30000); // kart 81
	//AddStaticVehicleEx2(571, 2299.6785, -2338.3186, 12.8307, 224.3563, -1, -1, 30000); // kart 82
	//AddStaticVehicleEx2(571, 2295.3887, -2334.9448, 12.8307, 227.9102, -1, -1, 30000); // kart 83
	//CreateVehicle2(494, -1401.0436, -210.0052, 1042.9913, 1.6623, 1, 0, 30000); //hotring 84
	//CreateVehicle2(494, -1400.4019, -219.9365, 1043.0348, 5.3554, 1, 3, 30000); //hotring 85
	//CreateVehicle2(494, -1394.4932, -207.7917, 1042.9963, 3.6872, 0, 6, 30000); //hotring 86
	//CreateVehicle2(494, -1393.7854, -217.9354, 1043.0325, 2.9556, 1, 2, 30000); //hotring 87
	//CreateVehicle2(468, -1445.6392, -592.3033, 1055.7831, 90.2133, -1, -1, 30000); //bike 88
	//CreateVehicle2(468, -1433.1708, -592.4930, 1055.6533, 92.4067, -1, -1, 30000); //bike 89
	//CreateVehicle2(468, -1448.5325, -584.4943, 1055.4949, 95.5400, -1, -1, 30000); //bike 90
	//CreateVehicle2(468, -1434.8973, -585.1266, 1055.2488, 91.1533, -1, -1, 30000); //bike 91
	//CreateVehicle2(468, -1449.2814, 1610.7823, 1052.5313, 272.9406, -1, -1, 30000); // bike 92
	//CreateVehicle2(468, -1453.8767, 1611.2418, 1052.5313, 89.0355, -1, -1, 30000); // bike 93
	//CreateVehicle2(468, -1454.4746, 1614.3342, 1052.5313, 86.8422, -1, -1, 30000); // bike 94
	//CreateVehicle2(468, -1449.5795, 1614.0684, 1052.5313, 269.2039, -1, -1, 30000); // bike 95
	////-------------------------------------------------------------------------------------------
	//CreateVehicle2(514, -77.5039, -1108.1729, 1.6683, 161.8915, -1, -1, 30000); // truck 96
	//CreateVehicle2(514, -72.3507, -1109.7822, 1.6670, 161.7769, -1, -1, 30000); // truck 97
	//CreateVehicle2(514, -67.0126, -1111.7156, 1.6688, 160.4800, -1, -1, 30000); // truck 98
	//CreateVehicle2(435, -51.0638, -1135.2831, 1.0781, 68.3320, -1, -1, 30000); // trailer 99
	//CreateVehicle2(435, -53.6230, -1139.7546, 1.0781, 67.5604, -1, -1, 30000); // trailer 100
	//CreateVehicle2(435, -55.0517, -1144.3676, 0.8018, 68.1347, -1, -1, 30000); // trailer 101
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(448, 2122, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 102
	//AddStaticVehicleEx2(448, 2120, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 103
	//AddStaticVehicleEx2(448, 2118, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 104
	//AddStaticVehicleEx2(448, 2116, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 105
	//AddStaticVehicleEx2(448, 2114, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 106
	//AddStaticVehicleEx2(448, 2112, -1784.1558, 12.9844, 0.9122, 3, 6, 30000); // PizzaBoy 107
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(456, 2508.9116, -2111.7759, 13.7206, 0, -1, -1, 30000); // Component Truck Yankee 108
	//AddStaticVehicleEx2(456, 2484.5356, -2111.7759, 13.7196, 0, -1, -1, 30000); // Component Truck Yankee 109
	//AddStaticVehicleEx2(440, 2529.0413, -2085.3999, 13.6651, 90, -1, -1, 30000); // Component Truck Rumpo 110
	//AddStaticVehicleEx2(440, 2528.9482, -2092.6104, 13.6631, 90, -1, -1, 30000); // Component Truck Rumpo 111
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(510, 1556.2643, -2361.6479, 13.1627, 6.6305, 39, 39, 30000); // Mountain bike 112
	//AddStaticVehicleEx2(510, 1552.8982, -2361.8359, 13.1623, 10.5426, 16, 16, 30000); // Mountain bike 113
	//AddStaticVehicleEx2(510, 1549.1460, -2362.0383, 13.1626, 5.5903, 6, 6, 30000); // Mountain bike 114
	//AddStaticVehicleEx2(510, 1546.0422, -2362.0017, 13.1630, 6.6997, 5, 5, 30000); // Mountain bike 115
	//AddStaticVehicleEx2(510, 1542.7434, -2361.9631, 13.1626, 15.3254, 2, 2, 30000); // Mountain bike 116
	//AddStaticVehicleEx2(510, 1539.4385, -2362.1431, 13.1625, 11.8010, 43, 43, 30000); // Mountain bike 117
	//AddStaticVehicleEx2(510, 1536.1389, -2362.0837, 13.1626, 12.2595, 46, 46, 30000); // Mountain bike 118
	//AddStaticVehicleEx2(510, 1532.6709, -2362.2327, 13.1631, 8.4654, 39, 39, 30000); // Mountain bike 119
	//AddStaticVehicleEx2(510, 1529.8967, -2362.2913, 13.1633, 3.8305, 28, 28, 30000); // Mountain bike 120
	//AddStaticVehicleEx2(510, 1526.7921, -2362.0647, 13.1630, 8.0961, 16, 16, 30000); // Mountain bike 121
	//AddStaticVehicleEx2(462, 1561.2104, -2338.5303, 13.1464, 107.7252, 13, 13, 30000); // Faggio 122
	//AddStaticVehicleEx2(462, 1561.0819, -2335.0010, 13.1470, 94.8441, 14, 14, 30000); // Faggio 123
	//AddStaticVehicleEx2(462, 1560.7794, -2331.9216, 13.1464, 96.7927, 1, 2, 30000); // Faggio 124
	//AddStaticVehicleEx2(462, 1560.7391, -2328.2046, 13.1470, 92.0937, 2, 1, 30000); // Faggio 125
	//AddStaticVehicleEx2(462, 1560.9022, -2325.0593, 13.1462, 91.0980, 1, 3, 30000); // Faggio 126
	//AddStaticVehicleEx2(462, 1561.0276, -2321.8657, 13.1475, 95.4715, 3, 1, 30000); // Faggio 127
	//AddStaticVehicleEx2(462, 1561.0735, -2318.5796, 13.1443, 97.1012, 10, 10, 30000); // Faggio 128
	//AddStaticVehicleEx2(462, 1560.9514, -2315.0532, 13.1465, 94.5565, 12, 12, 30000); // Faggio 129
	//AddStaticVehicleEx2(462, 1560.8143, -2311.6104, 13.1455, 95.1219, 13, 13, 30000); // Faggio 130
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(405, 2052.5889, -1903.9319, 13.4218, 180.9040, 84, 84, 30000); // Driving school 131
	//AddStaticVehicleEx2(405, 2055.9761, -1903.8756, 13.4219, 179.6732, 84, 84, 30000); // Driving school 132
	//AddStaticVehicleEx2(405, 2059.1111, -1903.9015, 13.4219, 180.2001, 84, 84, 30000); // Driving school 133
	//AddStaticVehicleEx2(405, 2062.3347, -1903.9109, 13.4219, 179.3091, 84, 84, 30000); // Driving school 134
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(404, 1681.5526, -1035.9557, 23.6389, 180, 123, 92, 30000); // Rent car 135
	//AddStaticVehicleEx2(404, 1685.3273, -1035.4058, 23.6409, 180, 101, 101, 30000); // Rent car 136
	//AddStaticVehicleEx2(404, 1689.9888, -1035.6348, 23.6384, 180, 83, 110, 30000); // Rent car 137
	//AddStaticVehicleEx2(401, 1694.3981, -1034.7706, 23.6860, 180, 74, 74, 30000); // Rent car 138
	//AddStaticVehicleEx2(401, 1703.3409, -1044.8248, 23.6857, 0, 91, 91, 30000); // Rent car 139
	//AddStaticVehicleEx2(401, 1712.7332, -1034.9132, 23.6933, 180, 41, 41, 30000); // Rent car 140
	//AddStaticVehicleEx2(410, 1690.2993, -1044.3937, 23.5577, 0, 10, 1, 30000); // Rent car 141
	//AddStaticVehicleEx2(410, 1681.0250, -1044.6152, 23.5528, 0, 36, 1, 30000); // Rent car 142
	//AddStaticVehicleEx2(410, 1703.0122, -1035.1486, 23.5598, 180, 45, 1, 30000); // Rent car 143
	//AddStaticVehicleEx2(418, 1698.9230, -1044.6398, 23.9990, 0, 114, 114, 30000); // Rent car 144
	//AddStaticVehicleEx2(418, 1707.8655, -1035.1423, 24.0034, 180, 95, 95, 30000); // Rent car 145
	//AddStaticVehicleEx2(418, 1698.7041, -1034.9835, 23.9997, 180, 61, 61, 30000); // Rent car 146
	//AddStaticVehicleEx2(418, 1685.3434, -1044.4137, 23.9994, 0, 119, 119, 30000); // Rent car 147
	//AddStaticVehicleEx2(436, 1694.5468, -1044.4786, 23.6760, 0, 92, 1, 30000); // Rent car 148
	//AddStaticVehicleEx2(436, 1707.9614, -1044.8055, 23.6739, 0, 109, 1, 30000); // Rent car 149
	//AddStaticVehicleEx2(436, 1712.5034, -1044.1735, 23.6731, 0, 11, 1, 30000); // Rent car 150
	//AddStaticVehicleEx2(458, 1709.2091, -1061.1398, 23.7847, 180, 109, 1, 30000); // Rent car 151
	//AddStaticVehicleEx2(458, 1700.3168, -1060.6760, 23.7848, 180, 4, 1, 30000); // Rent car 152
	//AddStaticVehicleEx2(458, 1717.9724, -1069.8695, 23.7848, 0, 30, 1, 30000); // Rent car 153
	//AddStaticVehicleEx2(458, 1691.3545, -1069.6636, 23.7849, 0, 91, 1, 30000); // Rent car 154
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(532, -387.4058, -1476.6927, 26.7035, 265.6719, 0, 0, 30000); // Harvest 155
	//AddStaticVehicleEx2(532, -382.8609, -1465.2964, 26.7162, 262.4081, 0, 0, 30000); // Harvest 156
	//AddStaticVehicleEx2(532, -392.8095, -1487.2607, 26.3314, 268.0157, 0, 0, 30000); // Harvest 157
	//AddStaticVehicleEx2(532, -399.6307, -1500.4774, 25.4502, 265.1973, 0, 0, 30000); // Harvest 158
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(532, -54.1143, 86.1869, 4.0927, 246.1964, 16, 0, 30000); // Drug harvest 159
	//AddStaticVehicleEx2(532, -39.0122, -19.7210, 4.0923, 66.2487, 16, 0, 30000); // Drug harvest 160
	//AddStaticVehicleEx2(532, -34.2867, -9.5510, 4.0883, 62.7305, 16, 0, 30000); // Drug harvest 161
	//AddStaticVehicleEx2(532, -83.7403, -17.7843, 4.0917, 340.3535, 16, 0, 30000); // Drug harvest 162
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(442, 1097.7876, -1327.8087, 13.1820, 2.3556, 3, 13, 30000); // Drugs smuggler car 163
	//AddStaticVehicleEx2(442, 1110.4362, -1327.9688, 13.1654, 1.1852, 3, 13, 30000); // Drugs smuggler car 164
	//AddStaticVehicleEx2(442, 1123.7722, -1327.3230, 13.2222, 359.7142, 3, 13, 30000); // Drugs smuggler car 165
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(407, 1750.9323, -1453.7485, 13.7822, 257.2471, 3, 1, 30000); // FireTruck 166
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(487, 1549.7140, -2430.7375, 13.7305, 154.5285, 84, 84, 30000); // School Helicopter 167
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(487, 1902.4270, -2628.4958, 13.7092, 62.7501, 0, 0, 30000); // Government Helicopter 168
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicleEx2(574, 1668.6692, -1896.1118, 13.2720, 268.0269, 26, 26, 30000); // Street sweeper 169
	//AddStaticVehicleEx2(574, 1668.7383, -1891.4990, 13.2720, 270.7320, 26, 26, 30000); // Street sweeper 170
	//AddStaticVehicleEx2(574, 1668.7280, -1886.8180, 13.2720, 268.9658, 26, 26, 30000); // Street sweeper 171
	////-------------------------------------------------------------------------------------------
	//AddStaticVehicle2(426, 604.1163, 841.5123, -43.5796, 101.6071, 7, 7); // Reservation 172
	//AddStaticVehicle2(426, 608.9548, 852.5673, -43.2947, 275.9953, 7, 7); // Reservation 173
	//AddStaticVehicle2(426, 614.8525, 873.8575, -43.2182, 28.9858, 7, 7); // Reservation 174
	//AddStaticVehicle2(426, 612.1263, 887.0045, -43.4468, 5.1609, 7, 7); // Reservation 175
	//AddStaticVehicle2(426, 588.0759, 893.6481, -44.7892, 128.3505, 7, 7); // Reservation 176
	//AddStaticVehicle2(426, 579.7737, 910.1716, -43.5148, 321.5789, 7, 7); // Reservation 177
	//AddStaticVehicle2(426, 604.1163, 841.5123, -43.5796, 101.6071, 7, 7); // Reservation 178
	//AddStaticVehicle2(426, 608.9548, 852.5673, -43.2947, 275.9953, 7, 7); // Reservation 179
	//AddStaticVehicle2(426, 614.8525, 873.8575, -43.2182, 28.9858, 7, 7); // Reservation 180
	//AddStaticVehicle2(426, 612.1263, 887.0045, -43.4468, 5.1609, 7, 7); // Reservation 181
	//AddStaticVehicle2(426, 588.0759, 893.6481, -44.7892, 128.3505, 7, 7); // Reservation 182
	//AddStaticVehicle2(426, 579.7737, 910.1716, -43.5148, 321.5789, 7, 7); // Reservation 183
	////-------------------------------------------------------------------------------------------
	//////////////Text draw
	//InsertVeh();
	OnAnimtInit();
	//for (new h = 184; h < sizeof(CarInfo); h++)
	//{
	//	AddStaticVehicleEx2(CarInfo[h][cModel], CarInfo[h][cLocationx], CarInfo[h][cLocationy], CarInfo[h][cLocationz] + 1.0, CarInfo[h][cAngle], CarInfo[h][cColorOne], CarInfo[h][cColorTwo], 60000);
	//}
	//LinkVehicleToInterior(84, 7);
	//LinkVehicleToInterior(85, 7);
	//LinkVehicleToInterior(86, 7);
	//LinkVehicleToInterior(87, 7);
	//LinkVehicleToInterior(88, 4);
	//LinkVehicleToInterior(89, 4);
	//LinkVehicleToInterior(90, 4);
	//LinkVehicleToInterior(91, 4);
	//LinkVehicleToInterior(92, 14);
	//LinkVehicleToInterior(93, 14);
	//LinkVehicleToInterior(94, 14);
	//LinkVehicleToInterior(95, 14);
	//LinkVehicleToInterior(96, 14);
	for (new h = 0; h < MAX_HOUSES; h++)
	{
		if (HouseInfo[h][hOwned] == 0)
		{
			AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			HouseLabel[h] = Create3DTextLabel("[Nha]", 0x00FF00AA, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 25, 0, 1);
			pickups++;
		}
		if (HouseInfo[h][hOwned] == 1)
		{
			AddStaticPickup(1239, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			HouseLabel[h] = Create3DTextLabel("[Nha So Huu]", 0x00FFFFAA, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 25, 0, 1);
			pickups++;
		}
	}
	for (new h = 0; h < MAX_BIZ; h++)
	{
		if (BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(1272, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			BizzLabel[h] = Create3DTextLabel("[Bizz]", 0x00FF00AA, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 50, 0, 1);
			pickups++;
		}
		if (BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(1239, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			BizzLabel[h] = Create3DTextLabel("[Bizz So Huu]", 0x00FFFFAA, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 50, 0, 1);
			pickups++;
		}
	}
	for (new h = 0; h < MAX_SBIZ; h++)
	{
		if (SBizzInfo[h][sbOwned] == 0)
		{
			AddStaticPickup(1272, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			SBizzLabel[h] = Create3DTextLabel("[Bizz]", 0x00FF00AA, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 30, 0, 1);
			pickups++;
		}
		if (SBizzInfo[h][sbOwned] == 1)
		{
			AddStaticPickup(1239, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			SBizzLabel[h] = Create3DTextLabel("[Bizz]", 0x00FFFFAA, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 30, 0, 1);
			pickups++;
		}
	}
	for (new i = 0; i < sizeof(BurgerDriveIn); i++)
	{
		BurgerPickUp[i] = CreatePickup(1239, 23, BurgerDriveIn[i][0], BurgerDriveIn[i][1], BurgerDriveIn[i][2]);
		pickups++;
	}
	for (new i = 0; i < sizeof(ChickenDriveIn); i++)
	{
		ChickenPickUp[i] = CreatePickup(1239, 23, ChickenDriveIn[i][0], ChickenDriveIn[i][1], ChickenDriveIn[i][2]);
		pickups++;
	}
	AddStaticPickup(1239, 23, 1173.2563, -1323.3102, 15.3943); //Hospital 1 near Ammu
	AddStaticPickup(1239, 23, 2029.5945, -1404.6426, 17.2512); //Hospital 2 near speedway
	AddStaticPickup(1239, 23, 253.9280, 69.6094, 1003.6406); //Clear icon in Police Station
	AddStaticPickup(1239, 23, 1481.0206, -1771.1138, 18.7958); //City Hall
	AddStaticPickup(1239, 23, 648.8242, -1360.7623, 13.5873); //DoC Entrance
	AddStaticPickup(1239, 23, 741.4783, -1358.7620, 21.6406); //DoC Back Entrance
	AddStaticPickup(1239, 23, 732.9749, -1342.1331, 13.5236); //DoC Little Entrance
	AddStaticPickup(1239, 23, 2584.6189, -1494.7810, -45.2369); //DoC Control Room
	/*AddStaticPickup(1239, 2, 359.5408,206.7693,1008.3828); //Detective Registration*/
	AddStaticPickup(1239, 23, 347.7374, 193.7241, 1014.1875); //Lawyer Registration
	AddStaticPickup(1239, 23, 1215.1304, -11.8431, 1000.9219); //Whore Registration
	AddStaticPickup(1239, 23, 1793.02, -1296.56, 13.44); //NewsReporter Registration & /paper
	AddStaticPickup(1239, 23, 2077.52, -2013.56, 13.54); //CarMechanic Registration
	AddStaticPickup(1239, 23, 2226.1716, -1718.1792, 13.5165); //BodyGuard Registration
	AddStaticPickup(1239, 23, 766.0804, 14.5133, 1000.7004); //Boxer Registration
	AddStaticPickup(1239, 23, 1154.2208, -1770.8203, 16.5992); //BusDriver Registration
	AddStaticPickup(1239, 23, 2439.7710, -2120.9285, 13.5469); //Trucker Registration
	AddStaticPickup(1239, 23, 1488.6949, -1721.7136, 8.2067); //Black Market
	AddStaticPickup(1239, 23, 1381.0413, -1088.8511, 27.3906); //Bill Board (old Job Department)
	AddStaticPickup(1239, 23, 1512.33, -1459.90, 9.50); //Factory
	AddStaticPickup(1239, 23, 1073.0619, -344.5148, 73.9922); //Hitman Agency entrance
	AddStaticPickup(1239, 23, 1182.6879, -1317.7358, 1006.4028); //Tri thuong
	/*AddStaticPickup(371, 23, 1544.2,-1353.4,329.4); //LS towertop
	AddStaticPickup(371, 23, 1536.0, -1360.0, 1150.0); //LS towertop*/
	AddStaticPickup(1242, 23, 1527.5, -12.1, 1002.0); // binco armor
	AddStaticPickup(1240, 23, 279.3000, 1853.5619, 8.7649); // area51 health
	AddStaticPickup(1239, 23, 2101.7620, -1812.5922, 13.5547); // PizzaBoy Registration
	AddStaticPickup(1239, 23, 1174.9100, -1365.7330, 13.9876); // Elevator 1
	AddStaticPickup(1239, 23, 1174.9591, -1369.8761, 23.9736); // Elevator 2
	//AddStaticPickup(1254, 23, 2146.3523,-2267.7498,14.2344); // Materials Drop Off.
	AddStaticPickup(1239, 23, 379.1396, -114.2661, 1001.4922); // Pizza Pickup
	AddStaticPickup(1240, 23, 263.1702, 76.4346, 1001.0391); // Jail health
	AddStaticPickup(1239, 23, 359.6820, 207.0294, 1008.3828); // AD
	AddStaticPickup(1239, 23, -382.6660, -1426.5121, 26.2410); // Farmer job pickup
	AddStaticPickup(1239, 23, -1109.5745, -1637.6207, 76.3672); // Trong trot job pickup
	AddStaticPickup(1239, 23, -1111.4635, -1681.5151, 76.3739); // Trong trot job pickup
	AddStaticPickup(1239, 23, -38.8664, 56.3031, 3.1172); // Drugs for smugglers
	AddStaticPickup(1239, 23, 2022.1492, -1108.7837, 26.2031); // Drugs Smuggler pickup
	AddStaticPickup(1239, 23, 2072.5486, -1582.8029, 13.4741); // Drugs Dealer reg
	AddStaticPickup(1239, 23, 1611.5129, -1893.6997, 13.5469); // Street sweeper reg
	//AddStaticPickup(1239, 23, 213.8549, -230.5761, 1.7786); // Materials smuggler reg
	// Entrances and exits start
	AddStaticPickup(1247, 23, 1554.9537, -1675.6584, 16.1953);//PD Building
	AddStaticPickup(1239, 23, 1836.4064, -1682.4403, 13.3493);//Alhabra
	AddStaticPickup(1239, 23, 2310.0183, -1643.4669, 14.8270);//10 green
	AddStaticPickup(1239, 23, 2244.3423, -1665.5542, 15.4766);//binco next to it
	AddStaticPickup(1239, 23, 2229.9011, -1721.2582, 13.5613);//Ganton gym
	AddStaticPickup(1239, 23, 2421.4998, -1219.2438, 25.5617);//Pig Pen
	AddStaticPickup(1239, 23, 2419.9941, -1509.5865, 24.0000);//Cluckin bell under it
	AddStaticPickup(1239, 23, 2398.6240, -1899.2014, 13.5469);//Cluckin bell next to 10 green
	AddStaticPickup(1239, 23, 810.4849, -1616.2451, 13.5469);//Marina burger
	AddStaticPickup(1239, 23, 928.9110, -1352.9958, 13.3438);//Cluckin above it
	AddStaticPickup(1239, 23, 1199.2477, -918.1447, 43.1233);//Vinewood burger
	AddStaticPickup(1239, 23, 1000.5861, -919.8832, 42.3281);//24/7 gas station vinewood
	AddStaticPickup(1239, 23, 1315.4581, -897.6843, 39.5781);//24/7 vinewood
	AddStaticPickup(1239, 23, 2105.4858, -1806.4725, 13.5547);//Pizzaboy
	AddStaticPickup(1239, 23, -2441.9749, 754.0135, 35.1786); // 24-7 Entrance
	AddStaticPickup(1239, 23, -25.1326, -141.0670, 1003.5469); // 24-7 Exit
	AddStaticPickup(1239, 23, 1352.1194, -1759.2534, 13.5078);//24/7 Near DMV
	AddStaticPickup(1239, 23, 1833.6124, -1842.4968, 13.5781);//24/7 Near 8-Ball
	AddStaticPickup(1239, 23, 1298.7075, -798.5981, 84.1406);//Madd dog crib
	AddStaticPickup(1239, 23, 1518.5179, -1452.9224, 14.2031);//FBI
	AddStaticPickup(1239, 23, 1038.0298, -1339.9967, 13.7361);//Jim's sticky ring
	AddStaticPickup(1239, 23, 349.5560, 161.6693, 1019.9912); //Heal me
	AddStaticPickup(1239, 23, 1600.8793, -2333.3535, 13.5390); //Map icon
	AddStaticPickup(1239, 23, 2380.5647, -1785.7302, 13.5469); //Surenos HQ
	AddStaticPickup(1239, 23, 1784.58, -1297.52, 13.37); //ABC studio
	AddStaticPickup(1239, 23, 1752.8452, -1894.1328, 13.5573); //LA Yellow Cab Co.
	AddStaticPickup(1239, 23, 2770.6973, -1628.4293, 12.1775); //Institute of Race HQ
	AddStaticPickup(1239, 23, 2045.3928, -1908.0372, 13.4869); //DMW
	AddStaticPickup(1239, 23, 203.5140, -202.2578, 1.5781); //Pizza stack at BlueBerry
	AddStaticPickup(1239, 23, 242.7591, 66.4315, 1003.6406); // Inside PD elevator
	AddStaticPickup(1239, 23, 1570.3828, -1333.8882, 16.4844); // Building next ABC
	AddStaticPickup(1239, 23, 2495.3481, -1691.1355, 14.7656); // 47th Street Saints HQ
	// Entrances and exits ends
	/*license_pu = CreatePickup(1274, 23, 2048.352,-1900.153,13.5538); // Buy Driving License
	license_pu2 = CreatePickup(1274, 23, 1588.291,-2641.629,13.54688); // Buy Flying License
	license_pu3 = CreatePickup(1274, 23, 397.2415,-1804.371,7.829849); // Buy Sailing License
	license_pu4 = CreatePickup(1274, 23, 1365.159,-1288.066,13.54688); // Buy Gun License
	license_pu5 = CreatePickup(1274, 23, 396.2429,-2074.728,7.835938); // Buy Fishing License*/
	AddStaticPickup(1314, 23, 1528.779, -1678.113, 5.890625); //Arrest Place
	AddStaticPickup(1239, 23, 1043.4530, -1028.0344, 32.1016); //Fernandez tuning
	AddStaticPickup(1239, 23, 2073.2979, -1831.1228, 13.5469); // Pay & Spray
	AddStaticPickup(1239, 23, 1024.9756, -1030.7930, 32.0257); // Pay & Spray
	AddStaticPickup(1239, 23, 488.3819, -1733.0563, 11.1752); // Pay & Spray
	AddStaticPickup(1239, 23, 719.8940, -464.8272, 16.3359); // Pay & Spray
	AddStaticPickup(1239, 23, 242.7591, 66.4315, 1003.6406); // Inside PD elevator
	AddStaticPickup(1239, 23, 1524.5724, -1677.8043, 6.2188); // PD Tunnel
	AddStaticPickup(1239, 23, 1557.7257, -1675.2711, 28.3955); // PD roof
	AddStaticPickup(1239, 23, 248.4994, -33.1366, 1.5781); // Materials pickup
	AddStaticPickup(1239, 23, 2660.3398, -1590.6552, 13.8936); // Materials bank
	AddStaticPickup(1239, 23, 20.5627,-103.7291,1005.2578); // Binco pickup
	AddStaticPickup(1239, 23, 203.9068,-41.0728,1001.8047); // Binco pickup
	AddStaticPickup(1239, 23, 214.4470,-7.6471,1001.2109); // Binco pickup
	AddStaticPickup(1239, 23, 161.3765,-83.8416,1001.8047); // Binco pickup
	AddStaticPickup(1239, 23, 2063.0376,-1914.9541,13.5469); // DMV pickup
	pickups = pickups + 71 + 3;
	printf("Loading %d pickups... Loaded successfuly !", pickups);

	//new randa = random(sizeof(RandCars));
	//randa = random(sizeof(RandCars)); carselect[0] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[1] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[2] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[3] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[4] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[5] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[6] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[7] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[8] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[9] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[10] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[11] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[12] = RandCars[randa][0];
	//randa = random(sizeof(RandCars)); carselect[13] = RandCars[randa][0];
	//randa = random(sizeof(RandLCars)); carselect[14] = RandLCars[randa][0];
	//AddStaticVehicleEx2(carselect[14], 1279.4, -1337.0, 13.5, 1.0, -1, -1, -1);//long

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}

	//hackchecktimer = SetTimer("GlobalHackCheck", 300, 1);
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	//spectatetimer = SetTimer("Spectator", 2000, 1);
	idletimer = SetTimer("IdleKick", idletime, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	accountstimer = SetTimer("SaveAccounts", 900000, 1); //15 mins every account saved
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
	//checkcarhealthtimer = SetTimer("CheckCarHealth", 10000, 1);
	burgertimer = SetTimer("UpdateBurgerPositions", 1000, 1);
	chickentimer = SetTimer("UpdateChickenPositions", 1000, 1);
	tracetimer = SetTimer("TraceLastCall", 300000, 1);

	mSkinOnGameModeInit();
	//updateplayerpos = SetTimer("UpdatePlayerPosition", 3000, 1);
	//for(new i = 0; i < sizeof(CarSpawns); i++)
	/*	for(new i = 0; i < 165; i++)
	{
	AddCar(i);
	}
	CarInit();*/
	//buszonewest = GangZoneCreate(1722.3599, 2901.8652, -2694.5417, -904.3515); // West Bus Route Zone
	//buszoneeast = GangZoneCreate(127.4722, 1722.3599, -2694.5417, -904.3515);  // East Bus Route Zone
	return 1;
}
public OnPlayerConnect(playerid)
{
	ClearPlayer(playerid);
	CheckBan(playerid);
	RemoveBuilding(playerid);
	RemoveVendingMachine(playerid);
	CreateServerPlayerTextDraw(playerid);
	InitDriverLicenseTD(playerid);
	new plname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, plname, sizeof(plname));
	if (Security != 0)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Host has broken one of the Agreement rules, action has been taken.");
		KickEx(playerid);
		return 1;
	}
	new namestring = strfind(plname, "_", true);
	if (namestring == -1)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, "Immigration Department: Your name is not acceptable.");
		SendClientMessage(playerid, COLOR_YELLOW2, "Hint: Your name must be in the format Firstname_Lastname.");
		KickEx(playerid);
		return 1;
	}
	gActivePlayers[playerid]++;
	numplayers++;
//	new string[128]; // credits to Virtual1ty taken from GTA: RolePlay topic
	SetPlayerColor(playerid, COLOR_GRAD2);

	GetPlayerName(playerid, plname, sizeof(plname));
	new sql[128];
	format(sql, 128, "SELECT * FROM user WHERE Name = '%s'", plname);
	mysql_query(conn, sql);
	new rowcount;
	cache_get_row_count(rowcount);
	if (rowcount > 0)
	{
		gPlayerAccount[playerid] = 1;
		new tempstr[128];
		cache_get_value_name(0, "Password", tempstr);
		format(PlayerInfo[playerid][pKey], 128, "%s", tempstr);
		/*SendClientMessage(playerid, COLOR_YELLOW2, "Immigration: You are a registered citizen of San Andreas.");
		SendClientMessage(playerid, COLOR_YELLOW2, "Huong dan : Su dung /login <Mat khau> de dang nhap tai khoan game cua ban.");*/
		//return 1;
	}
	else gPlayerAccount[playerid] = 0;
	AnimOnPlayerConnect(playerid);
	//TogglePlayerSpectating(playerid, true);
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	if (Spectated[playerid] > 1)
	{
		foreach(new i : Player)
		{
			if (Spectating[i] == 1 && SpecPlayer[i] == playerid)
			{
				new str[128];
				format(str, sizeof(str), "AdmWarns: %s, nguoi ban dang theo doi da thoat khoi game.", GN(playerid));
				SCM(i, COLOR_LIGHTRED, str);
				TogglePlayerSpectating(i, 0);
				SpecPlayer[i] = INVALID_PLAYER_ID;
				Spectating[i] = 0;
			}
		}
		Spectated[playerid] = 0;
	}

	gActivePlayers[playerid]--;
	numplayers--;
	if (reason == 0)
	{
		PlayerInfo[playerid][pCrashed] = 1;
		for (new slot = 0; slot != 12; slot++)
		{
			new wep, ammo;
			GetPlayerWeaponData(playerid, slot, wep, ammo);
			if (wep != 0 && ammo != 0)
			{
				if (PlayerInfo[playerid][pGun][0] == 0) { PlayerInfo[playerid][pGun][0] = wep; PlayerInfo[playerid][pAmmo][0] = ammo; }
				else if (PlayerInfo[playerid][pGun][1] == 0) { PlayerInfo[playerid][pGun][1] = wep; PlayerInfo[playerid][pAmmo][1] = ammo; }
				else if (PlayerInfo[playerid][pGun][2] == 0) { PlayerInfo[playerid][pGun][2] = wep; PlayerInfo[playerid][pAmmo][2] = ammo; }
				else if (PlayerInfo[playerid][pGun][3] == 0) { PlayerInfo[playerid][pGun][3] = wep; PlayerInfo[playerid][pAmmo][3] = ammo; }
			}
		}
	}
	if (GetPVarInt(playerid, "DangHelp") == 1)
	{
		DestroyDynamic3DTextLabel(DanhHieu[playerid]);
		SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
		SetVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
		PlayerInfo[playerid][pPos_x] = GetPVarFloat(playerid, "AdvisorLastx");
		PlayerInfo[playerid][pPos_y] = GetPVarFloat(playerid, "AdvisorLasty");
		PlayerInfo[playerid][pPos_z] = GetPVarFloat(playerid, "AdvisorLastz");
		PlayerInfo[playerid][pVirWorld] = GetPVarInt(playerid, "AdvisorLastVW");
		PlayerInfo[playerid][pInt] = GetPVarInt(playerid, "AdvisorLastInt");
		DeletePVar(playerid, "DangHelp");
	}
	SavePlayer(playerid);
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (TaxiAccepted[i] < 999)
			{
				if (TaxiAccepted[i] == playerid)
				{
					TaxiAccepted[i] = 999;
					GameTextForPlayer(i, "~w~Nguoi goi taxi~n~~r~Da roi khoi game", 5000, 1);
					TaxiCallTime[i] = 0;
					DisableCheckpoint(i);
				}
			}
			else if (BusAccepted[i] < 999)
			{
				if (BusAccepted[i] == playerid)
				{
					BusAccepted[i] = 999;
					GameTextForPlayer(i, "~w~Nguoi goi xe buyt~n~~r~Da roi khoi game", 5000, 1);
					BusCallTime[i] = 0;
					DisableCheckpoint(i);
				}
			}
		}
	}
	/*if(GettingCK[playerid] < 999)
	{
	if(IsLogOn(GettingCK[playerid]))
	{
	SendClientMessage(GettingCK[playerid], COLOR_YELLOW, "Your Character Kill has left the server, try again later.");
	OnCK[GettingCK[playerid]] = 999;
	}
	}*/
	if (TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
		if (IsLogOn(TransportDriver[playerid]))
		{
			new string[64];
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			format(string, sizeof(string), "~w~Hanh khach da roi khoi~n~~g~Nhan duoc $%d", TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if (GotHit[playerid] > 0)
	{
		if (GetChased[playerid] < 999)
		{
			if (IsLogOn(GetChased[playerid]))
			{
				SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Muc tieu cua ban da thoat game.");
				GoChase[GetChased[playerid]] = 999;
			}
		}
	}
	if (PlayerPaintballing[playerid] != 0)
	{
		PaintballPlayers--;
	}
	if (PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
	{
		KartingPlayers--;
	}
	if (PlayersChannel[playerid] < 999)
	{
		IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	}
	if (HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		if (reason != 0)
		{
			SetVehicleToRespawn2(HireCar[playerid]);
		}
	}
	if (GangCar[playerid] != 512)
	{
		gLastDriver[GangCar[playerid]] = 520;
		gCarLock[GangCar[playerid]] = 0;
		UnLockCar(GangCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if (PlayerInfo[playerid][pPhousekey] != gLastCar[playerid] - 1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if (PlayerBoxing[playerid] > 0)
	{
		if (Boxer1 == playerid)
		{
			if (IsLogOn(Boxer2))
			{
				PlayerBoxing[Boxer2] = 0;
				SetPlayerPos(Boxer2, 765.8433, 3.2924, 1000.7186);
				SetPlayerInterior(Boxer2, 5);
				PlayerInfo[Boxer2][pInt] = 5;
				GameTextForPlayer(Boxer2, "~r~Tran dau da bi huy", 5000, 1);
			}
		}
		else if (Boxer2 == playerid)
		{
			if (IsLogOn(Boxer1))
			{
				PlayerBoxing[Boxer1] = 0;
				SetPlayerPos(Boxer1, 765.8433, 3.2924, 1000.7186);
				SetPlayerInterior(Boxer1, 5);
				PlayerInfo[Boxer2][pInt] = 5;
				GameTextForPlayer(Boxer1, "~r~Tran dau da bi huy", 5000, 1);
			}
		}
		InRing = 0;
		RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
	if (TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
	else if (TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if (PlayerInfo[playerid][pJob] == 11)
	{
		if (JobDuty[playerid] == 1) { Medics -= 1; }
	}
	else if (PlayerInfo[playerid][pJob] == 7)
	{
		if (JobDuty[playerid] == 1) { Mechanics -= 1; }
	}
	else if (PlayerInfo[playerid][pJob] == 17)
	{
		if (JobDuty[playerid] == 1) { PizzaBoys -= 1; }
	}
	if (PlayerInfo[playerid][pRoadblock] != 0)
	{
		RemoveRoadblock(playerid);
	}
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
	if (IsValidDynamic3DTextLabel(DanhHieu[playerid]))
	{
		DestroyDynamic3DTextLabel(DanhHieu[playerid]);
	}
	if (PlayerInfo[playerid][pHelper] > 0)
	{
		CountAdvisor--;
	}
	SetPVarInt(playerid, "CantUseAnim", 0);
	ClearPlayer(playerid);
	IncOnPlayerDisconnect(playerid, reason);
}
//dcmd_specplayer(playerid, params[])
//{
//	new Giveplayerid, Name[256], String[256], Name2[256];
//	if (PlayerInfo[playerid][pAdmin] >= 1)
//	{
//		if (sscanf(params, "d", Giveplayerid)) SendClientMessage(playerid, COLOR_WHITE, "SERVER: /specplayer [Playerid]");
//		else if (!IsLogOn(Giveplayerid)) SendClientMessage(playerid, COLOR_PURPLE, "Player not connected?");
//		else
//		{
//			if (Specing[Giveplayerid] == 1)
//			{
//				SendClientMessage(playerid, COLOR_RED, "   The person you have tried to spec is spectating someone else.");
//			}
//			else
//			{
//				GetPlayerName(playerid, Name, 256);
//				GetPlayerName(Giveplayerid, Name2, 256);
//				format(String, 256, "[%i] %s is now spectating [%i] %s", playerid, Name, Giveplayerid, Name2);
//				CallLocalFunction("ircRemoteSay", "iss", 1, "#FSE", String);
//				Specing[playerid] = 1;
//			}
//			if (!IsPlayerInAnyVehicle(Giveplayerid))
//			{
//				TogglePlayerSpectating(playerid, 1);
//				PlayerSpectatePlayer(playerid, Giveplayerid);
//				SetPlayerInterior(playerid, GetPlayerInterior(Giveplayerid));
//				SetVirtualWorld(playerid, GetPlayerVirtualWorld(Giveplayerid));
//				return 1;
//			}
//			else
//			{
//				TogglePlayerSpectating(playerid, 1);
//				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(Giveplayerid));
//				SetPlayerInterior(playerid, GetPlayerInterior(Giveplayerid));
//				SetVirtualWorld(playerid, GetPlayerVirtualWorld(Giveplayerid));
//				return 1;
//			}
//		}
//	}
//	return 1;
//}
//dcmd_specoff(playerid, params[])
//{
//#pragma unused params
//	TogglePlayerSpectating(playerid, 0);
//	Specing[playerid] = 0;
//	return 1;
//}
public OnPlayerCommandText(playerid, cmdtext[])
{
	/*dcmd(specplayer, 10, cmdtext);
	dcmd(specoff, 7, cmdtext);*/
	return 0;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if (!success) SendClientMessage(playerid, -1, "SERVER: Cau lenh khong ton tai.");
	return 1;
}
public OnPlayerVirtualWorldChange(playerid, oldvw, newvw)
{
	if (Spectated[playerid] > 1)
	{
		foreach(new i : Player)
		{
			if (Spectating[i] == 1 && SpecPlayer[i] == playerid)
			{
				SetVirtualWorld(playerid, newvw);
			}
		}
	}
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if (Spectated[playerid] > 1)
	{
		foreach(new i : Player)
		{
			if (Spectating[i] == 1 && SpecPlayer[i] == playerid)
			{
				SetPlayerInterior(playerid, newinteriorid);
			}
		}
	}
	if (AntiCheckpoint[playerid] == 1)
	{
		AntiCheckpoint[playerid] = 0;
		AntiCPDistance[playerid] = 0;
		AntiCPTime[playerid] = 0;
	}
	if (newinteriorid == 0 && (PlayerInfo[playerid][pJailed] == 1 || PlayerInfo[playerid][pJailed] == 3))
	{
		new str[128];
		if (PlayerInfo[playerid][pJailed] == 1)
			format(str, sizeof(str), "[HQ Police Department] Doi tuong %s vua tron khoi phong giam, hay mau chong bat han ta.", GN(playerid));
		else if (PlayerInfo[playerid][pJailed] == 3)
			format(str, sizeof(str), "[HQ Department of Corrections] Doi tuong %s vua vuot nguc, hay mau chong bat han ta.", GN(playerid));
		SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, str);

		PlayerInfo[playerid][pJailed] = 0;
		WantedPoints[playerid] = 14;
		SetPlayerCriminalEx(playerid, 255, "Vuot Nguc");
	}
	PlayerInfo[playerid][pInt] = newinteriorid;
	return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if (IsAdminVehicle(vehicleid) != -1) return 1;
	if (IsACopCar(vehicleid) && !ispassenger)
	{
		if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3) {}
		else {
			//WantedPoints[playerid]+=2;
			//SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPos(playerid, cx, cy, cz);
		}
	}
	if (IsNgCar(vehicleid) && !ispassenger)
	{
		if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3) {}
		else {
			//WantedPoints[playerid]+=2;
			//SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPos(playerid, cx, cy, cz);
		}
	}
	if (IsAnAmbulance(vehicleid) && !ispassenger)
	{
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {}
		else { WantedPoints[playerid] += 2; SetPlayerCriminal(playerid, 255, "Dang trom xe cuu thuong"); }
	}
	if (IsATank(vehicleid) && !ispassenger)
	{
		if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3) {}
		else { WantedPoints[playerid] += 2; SetPlayerCriminal(playerid, 255, "Dang trom xe tank"); SendClientMessage(playerid, COLOR_GREY, "You don't know how to drive it yet."); }
	}
	if (IsAnOwnableCar(vehicleid) && CarInfo[vehicleid][cLock] == 1 && CarInfo[vehicleid][cOwned] == 1)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337 && AdminDuty[playerid] == 1) {}
		else
		{
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPos(playerid, cx, cy, cz);
		}
	}
	return 1;
}
stock IsHitObjectWeaponID(weaponid)
{
	if (weaponid == 2 || weaponid == 3 || weaponid == 5 || weaponid == 6)
		return 1;
	return 0;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if (hittype == 2)
		LastShot[hitid] = playerid;
	return 1;
}
public OnVehicleSpawn2(vehicleid, dynamic)
{
	CarRepairCheat[vehicleid][0] = 0;
	CarHealthCheat[vehicleid] = 1000;
	engineOn[vehicleid] = 0;
	hoodOn[vehicleid] = 0;
	trunkOn[vehicleid] = 0;
	lightOn[vehicleid] = 0;
	Trucking[vehicleid] = 0;
	InNails[vehicleid] = -1;
	return 1;
}
stock ClearDDVehicle(vehid)
{
	new ddvehicle = 0, money = 0;
	foreach(new pid : Player)
	{
		if (CarDD[pid] == vehicleid)
		{
			DDTime[pid] = 0;
			DrugDealing[pid] = 0;
			DrugDealer[pid] = 0;
			CarDD[pid] = -1;
			OldDD[pid] = -1;
			ChangeDD[pid] = 0;
			CoopDD[pid] = -1;
			SCM(pid, COLOR_WHITE, "Xe buon da no, phi vu buon lau that bai!");
			ddvehicle = 1;
			DisableCheckpoint(pid);
		}
	}
	if (ddvehicle == 1)
	{
		new str[128];
		if (LastShot[vehicleid] != -1)
			format(str, sizeof(str), "** [Tong dai]: %s da ban no chiec xe buon lau %s, toan bo so hang buon lau tren xe bi tieu huy! **", GN(LastShot[vehicleid]), GetVehicleName(vehicleid));
		else format(str, sizeof(str), "** [Tong dai]: Chiec xe buon lau %s da lao xuong song, toan bo so hang buon lau tren xe bi tieu huy! **", GetVehicleName(vehicleid));
		SendRadioMessage(1, TEAM_RADIO_COLOR, str);
		SendRadioMessage(1, TEAM_RADIO_COLOR, "** [Tong dai]: Cac dong chi hay mau chong truy bat cac doi tuong buon lau con lai! **");
	}
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	CarRepairCheat[vehicleid][0] = 0;
	Trucking[vehicleid] = 0;
	LastShot[vehicleid] = -1;
	return 1;
}
forward delayfaildd(playerid, killerid);
public delayfaildd(playerid, killerid)
{
	if (DrugDealing[playerid] > 0)
	{
		new str[128];
		if (killerid != INVALID_PLAYER_ID)
		{
			new money = DrugDealer[playerid] * 7000;
			format(str, sizeof(str), "** [Tong dai]: %s da ban ha doi tuong buon lau %s, tich thu %d gram thuoc, tuong ung %d$. **", GN(killerid), GN(playerid), DrugDealer[playerid], money);
			SendRadioMessage(1, TEAM_RADIO_COLOR, str);
			SafeGivePlayerMoney(killerid, money);
		}
		else
		{
			format(str, sizeof(str), "** [Tong dai]: Doi tuong buon lau %s da tu sat, so thuoc bi tieu huy. **", GN(killerid));
			SendRadioMessage(1, TEAM_RADIO_COLOR, str);
		}
		DDTime[playerid] = 0;
		DrugDealing[playerid] = 0;
		DrugDealer[playerid] = 0;
		CarDD[playerid] = -1;
		OldDD[playerid] = -1;
		ChangeDD[playerid] = 0;
		CoopDD[playerid] = -1;
		SCM(playerid, COLOR_WHITE, "Phi vu buon lau that bai, ban mat toan bo so thuoc!");
		DisableCheckpoint(playerid);
	}
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	if (Dying[playerid] == 0 && PlayerInfo[playerid][pJailed] == 0)
	{
		Dying[playerid] = 1;
		DyingTimeOut[playerid] = 30;
		new Float:x, Float:y, Float:z, Float:ang;
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, ang);
		SetPVarFloat(playerid, "DeathX", x);
		SetPVarFloat(playerid, "DeathY", y);
		SetPVarFloat(playerid, "DeathZ", z);
		SetPVarFloat(playerid, "DeathAngle", ang);
		SetPVarInt(playerid, "DeathInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "DeathVW", GetPlayerVirtualWorld(playerid));
		PlayerInfo[playerid][pHospital] = 1;
	}
	else if (Dying[playerid] != 0) Dying[playerid] = 0;

	new name[MAX_PLAYER_NAME];
	new string[256];
	//new dmessage[128];
	//new deathreason[20];
	new Float:px, Float:py, Float:pz;

	SetTimerEx("delayfaildd", 100, false, "ii", playerid, killerid);

	gPlayerSpawned[playerid] = 0;
	PlayerInfo[playerid][pInvWeapon] = 0;
	PlayerInfo[playerid][pInvAmmo] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerPos(playerid, px, py, pz);
	if (killerid != 255)
	{
		if (GetPlayerState(killerid) == 2)
		{
			if (ProxDetectorS(20, killerid, playerid))
			{
				if (!IsPlayerInAnyVehicle(playerid))
				{
					if (PlayerInfo[killerid][pMember] == 1 || PlayerInfo[killerid][pLeader] == 1 || PlayerInfo[killerid][pMember] == 2 || PlayerInfo[killerid][pLeader] == 2)
					{
						SendClientMessage(killerid, COLOR_YELLOW, "Khong lam dung drive-by de giet nguoi.");
						return 1;
					}
					SetPlayerCriminal(killerid, 255, "Manslaughter");
					//SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid) + 1);
					return 1;
				}
			}
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisableCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if (caller != 255)
	{
		if (caller < 255)
		{
			SendClientMessage(caller, COLOR_GRAD2, "   Nguoi o dau day ben kia da chet....");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if (PlayerPaintballing[playerid] != 0)
	{
		PlayerPaintballKills[killerid] ++;
		if (PlayerPaintballKills[killerid] > PaintballWinnerKills)
		{
			new killer[MAX_PLAYER_NAME];
			PaintballWinner = killerid;
			PaintballWinnerKills = PlayerPaintballKills[killerid];
			GetPlayerName(killerid, killer, sizeof(killer));
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerPaintballing[i] != 0)
					{
						format(string, sizeof(string), "* %s la nguoi dan dau voi %d Kills.", killer, PaintballWinnerKills);
						SendClientMessage(i, COLOR_WHITE, string);
					}
				}
			}
		}
		return 1;
	}
	if (GettingCK[playerid] < 999)
	{
		if (IsLogOn(killerid))
		{
			if (OnCK[killerid] < 999)
			{
				new killer[MAX_PLAYER_NAME];
				new dier[MAX_PLAYER_NAME];
				GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
				format(string, sizeof(string), "* %s da dat Character Kill len ban, ban khong the dung Character nay nua.", killer);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "** %s has Character Killed %s **", killer, dier);
				CKLog(string);
				BroadCast(COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pCK] = 1;
				if (GettingCK[playerid] < 999) { GettingCK[playerid] = 999; }
				else if (OnCK[playerid] < 999) { OnCK[playerid] = 999; }
				if (GettingCK[killerid] < 999) { GettingCK[killerid] = 999; }
				else if (OnCK[killerid] < 999) { OnCK[killerid] = 999; }
				KickPlayer[playerid] = 1;
			}
		}
	}
	if (PlayerInfo[playerid][pHeadValue] > 0)
	{
		if (IsLogOn(killerid))
		{
			if (gTeam[killerid] == TEAMCIVILLAIN || PlayerInfo[killerid][pLeader] == HITMAN)
			{
				if (GoChase[killerid] == playerid)
				{
					//ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					SafeGivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string, 128, "<< Hitman %s da hoan thanh hop dong cho %s nhan duoc $%d >>", killer, name, PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(8, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		if (BusrouteEast[playerid][0] != 0) BusrouteEnd(playerid, BusrouteEast[playerid][1]);
		else if (BusrouteWest[playerid][0] != 0) BusrouteEnd(playerid, BusrouteWest[playerid][1]);
		else BusrouteEnd(playerid, 0);
	}
	if (FarmerVar[playerid] != 0)
	{
		FarmerVar[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	if (DrugFarmerVar[playerid] != 0)
	{
		DrugFarmerVar[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	if (SmugglerWork[playerid] != 0)
	{
		SmugglerWork[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	AnimOnPlayerDeath(playerid, killerid, reason);
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid, COLOR_GRAD2);
	return 1;
}
stock TogglePlayerSpawn(playerid, bool:type, time = 0)
{
	if (type == true)
	{
		SetPlayerCameraPos(playerid, 1890.1014, -1194.7969, 25.8091);
		SetPlayerCameraLookAt(playerid, 1933.4393, -1196.2479, 18.8163);
		SetPlayerPos(playerid, 1888.1014, -1194.7969, 25.8091);
		//SetPlayerInterior(playerid, 99);
		SetVirtualWorld(playerid, 999);
		TogglePlayerControllable(playerid, 0);
	}
	else
	{
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetVirtualWorld(playerid, 0);
		if (time > 0 && PlayerInfo[playerid][pHospital] == 0)
			SetTimerEx("InteriorFreeze", 2000, 0, "i", playerid);
		else TogglePlayerControllable(playerid, 1);
	}
	return 1;
}
forward InteriorFreeze(playerid);
public InteriorFreeze(playerid)
{
	TogglePlayerControllable(playerid, 1);
}
stock IsLogOn(playerid)
{
	if (IsPlayerConnected(playerid) && gPlayerLogged[playerid] != 0)
		return 1;
	return 0;
}
stock SetPlayerToTeam(playerid)
{
	//PlayerInfo[playerid][pHospital] = 0;
	//new model = PlayerInfo[playerid][pChar];
	new team = TEAMCIVILLAIN;
	//printf("member: %d | leader: %d", PlayerInfo[playerid][pMember], PlayerInfo[playerid][pLeader]);
	if (PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0) 
		SendClientMessage(playerid, COLOR_LIGHTRED, "Ban la thanh vien cua mot to chuc, tu dong set skin cua to chuc !");
	if (PlayerInfo[playerid][pMember] > 0)
	{
		switch (PlayerInfo[playerid][pMember])
		{
			case PD: team = TEAMGOV;
			case NG: team = TEAMGOV;
			case FBI: team = TEAMGOV;
			case FD: team = TEAMGOV;
			case DOC: team = TEAMGOV;
			case MAYOR: team = TEAMGOV;
			case NEWS, TAXI, HITMAN: team = TEAMCIVILLAIN;
		}
	}
	else if (PlayerInfo[playerid][pLeader] > 0)
	{
		switch (PlayerInfo[playerid][pLeader])
		{
			case PD: team = TEAMGOV;
			case NG: team = TEAMGOV;
			case FBI: team = TEAMGOV;
			case FD: team = TEAMGOV;
			case DOC: team = TEAMGOV;
			case MAYOR: team = TEAMGOV;
			case NEWS, TAXI, HITMAN: team = TEAMCIVILLAIN;
		}
	}
	if (PlayerInfo[playerid][pFMember] != 255)
		team = TEAMCIVILLAIN;
	if (PlayerInfo[playerid][pJailed] > 0 || WantedLevel[playerid] > 0)
		team = TEAMVILLAIN;
	PlayerInfo[playerid][pTeam] = team; 
	gTeam[playerid] = team;
	//PlayerInfo[playerid][pModel] = model;
	SetPlayerToTeamColor(playerid);
	return 1;
}
public OnPlayerSpawn(playerid)
{
	//new Hour, Minute, Second;
	//gettime(Hour, Minute, Second);
	//printf("--1-- Spawn %02d:%02d:%02d", Hour, Minute, Second);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
	
	if (FirstSpawn[playerid] == 1) return 1;

	//TogglePlayerSpawn(playerid, true);
	if (gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "** Vui long dang nhap truoc (kicked) **");
		KickEx(playerid);
		return 1;
	}
	//InitLockDoors(playerid);
	STDPlayer[playerid] = 0;

	SetPlayerToTeam(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerWeapons(playerid);
	PlayerFixRadio(playerid);
	//for (new i = 0; i < sizeof(Turfs); i++)
	//{
	//	GangZoneShowForPlayer(playerid, i, TurfInfo[i][zColor]);
	//	//GangZoneShowForPlayer(playerid, surenos, 0x4C5386AA);
	//	//GangZoneShowForPlayer(playerid, black_yakuza, 0x000000C2);
	//	//GangZoneShowForPlayer(playerid, nortenos, 0x9D000096);
	//	//GangZoneShowForPlayer(playerid, street_zone, 0x33AA33AA);
	//	//GangZoneShowForPlayer(playerid, jefferson_saints, 0xD900D3C8);
	//	return 1;
	//}
	if (MapIconsShown[playerid] != 1)
	{
		MapIconsShown[playerid] = 1;
		for (new i = 0; i < MAX_BIZ; i++)
		{
			SetPlayerMapIcon(playerid, i + 1, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ], 36, COLOR_LIGHTRED);
		}
		for (new i = 0; i < MAX_SBIZ; i++)
		{
			SetPlayerMapIcon(playerid, i + 20, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ], 36, COLOR_LIGHTRED);
		}
	}
	//AnimOnPlayerSpawn(playerid);
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if (GetPVarInt(playerid, "FORTESTING") == 1) return 1;
	new string[128];
	new string2[128];
	new name[MAX_PLAYER_NAME];
	new truckid = GetPlayerVehicleID(playerid);
	if (Trucking[truckid] == 2 && IsPlayerInRangeOfPoint(playerid, 5, 2458.2568, -2077.1592, 13.5469))
	{
		SCM(playerid, COLOR_GREEN, "Giao hang thanh cong, da nhan duoc tien cong!");
		GiveJobReward(playerid, TRUCKREWARD, BizzInfo[TruckBiz[playerid]][bPriceProd] * 10);
		BizzInfo[TruckBiz[playerid]][bTill] -= BizzInfo[TruckBiz[playerid]][bPriceProd] * 10;
		BizzInfo[TruckBiz[playerid]][bProducts] += 10;
		if (BizzInfo[TruckBiz[playerid]][bProducts] > BizzInfo[TruckBiz[playerid]][bMaxProducts])
			BizzInfo[TruckBiz[playerid]][bProducts] = BizzInfo[TruckBiz[playerid]][bMaxProducts];
		Trucking[GetPlayerVehicleID(playerid)] = 0;
		TruckBiz[playerid] = -1;
		PlayerInfo[playerid][pTruckSkill]++;
		TruckPos[playerid][0] = 0;
		TruckPos[playerid][1] = 0;
		TruckPos[playerid][2] = 0;
		SetVehicleToRespawn2(truckid);
		OnPropUpdate();
	}
	if(AntiCheckpoint[playerid] == 1)
	{
		new time = floatround(floatdiv(AntiCPDistance[playerid], 190));
		if (AntiCPTime[playerid] < time)
		{
			new str[128];
			format(str, sizeof(str), "[Hack/Cheat]: %s co the dang su dung hack teleport checkpoint!", GN(playerid));
			SendAdminMessage(COLOR_LIGHTRED, str);
			return KickEx(playerid);
		}
		else
		{
			AntiCheckpoint[playerid] = 0;
			AntiCPDistance[playerid] = 0;
			AntiCPTime[playerid] = 0;
		}
	}
	if (Trucking[truckid] != 0)
	{
		for (new i = 0; i < MAX_BIZ; i++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 5, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				DisableCheckpoint(playerid);
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid, 5, MedicPos[playerid][0], MedicPos[playerid][1], MedicPos[playerid][2]))
	{
		SCM(playerid, COLOR_WHITE, "Da den vi tri cua benh nhan, hay dua benh nhan len xe va vao phia sau de de tien hanh dieu tri.");
		SCM(playerid, COLOR_WHITE, "MEO: /dualenxe /dieutri");
		DisableCheckpoint(playerid);
		return 1;
	}
	if (DrugDealing[playerid] == 1)
	{
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		for (new i = 0; i<sizeof(BuonLauTakeCP); i++)
		{
			new vid = GetPlayerVehicleID(playerid);
			if (IsPlayerInRangeOfPoint(playerid, 5, BuonLauTakeCP[i][0], BuonLauTakeCP[i][1], BuonLauTakeCP[i][2]))
			{
				if (IsPlayerInBike(playerid)) return SCM(playerid, COLOR_GREY, "Ban phai dung xe bon banh de di buon lau.");
				if (CheckDrugDealerInVehicle(vid, 1) > 1)
				{
					foreach(new ddid : Player)
					{
						if (IsPlayerDrugDealingCooperate(ddid, playerid, 1) && ddid != playerid)
						{
							DDTime[ddid] = 15;
							DrugDealing[ddid] = 2;
							TogglePlayerControllable(ddid, 0);
							SCM(ddid, COLOR_YELLOW, "Hay cho 15 giay de hang duoc chuyen len xe.");
							new str[128];
							format(str, sizeof(str), "Ban se cung hop tac buon lau voi %s", GN(playerid));
							SCM(ddid, COLOR_GREEN, str);
							DisableCheckpoint(ddid);
						}
					}
				}
				DDTime[playerid] = 15;
				DrugDealing[playerid] = 2;
				TogglePlayerControllable(playerid, 0);
				SCM(playerid, COLOR_YELLOW, "Hay cho 15 giay de hang duoc chuyen len xe.");
				DisableCheckpoint(playerid);
				return 1;
			}
		}
		return 1;
	}
	if (DrugDealing[playerid] == 3)
	{
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		for (new i = 0; i<sizeof(BuonLauGiveCP); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 5, BuonLauGiveCP[i][0], BuonLauGiveCP[i][1], BuonLauGiveCP[i][2]))
			{
				new vid = GetPlayerVehicleID(playerid);
				if (vid != CarDD[playerid] && !IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Day khong phai chiec xe cho hang buon lau cua ban.");

				if (CoopDD[playerid] == -1)
				{
					new money;
					foreach(new ddid : Player)
					{
						if (CoopDD[ddid] == playerid)
						{
							new str[128];
							money = DrugDealer[ddid] * 10000;
							SafeGivePlayerMoney(ddid, money);
							format(str, sizeof(str), "Chuc mung! %s da giao hang buon lau thanh cong!", GN(playerid));
							GameTextForPlayer(ddid, str, 5000, 4);
							format(str, sizeof(str), "Ban nhan duoc %d$ cho phi vu buon lau.", money);
							SCM(ddid, COLOR_GREEN, str);
							DrugDealing[ddid] = 0;
							DrugDealer[ddid] = 0;
							CarDD[ddid] = -1;
							OldDD[ddid] = -1;
							ChangeDD[ddid] = 0;
							CoopDD[ddid] = -1;
						}
					}
					money = DrugDealer[playerid] * 10000;
					SafeGivePlayerMoney(playerid, money);
					GameTextForPlayer(playerid, "Chuc mung! Ban da buon lau thanh cong!", 5000, 4);
					new str[128];
					format(str, sizeof(str), "Ban nhan duoc %d$ cho phi vu buon lau.", money);
					SCM(playerid, COLOR_GREEN, str);
					DrugDealing[playerid] = 0;
					DrugDealer[playerid] = 0;
					CarDD[playerid] = -1;
					OldDD[playerid] = -1;
					ChangeDD[playerid] = 0;
					CoopDD[playerid] = -1;
				}
				else if (CoopDD[playerid] >= 0)
				{
					new leader = CoopDD[playerid];
					new money;
					foreach(new ddid : Player)
					{
						if (CoopDD[ddid] == leader && ddid != playerid)
						{
							new str[128];
							money = DrugDealer[ddid] * 10000;
							SafeGivePlayerMoney(ddid, money);
							format(str, sizeof(str), "Chuc mung! %s da giao hang buon lau thanh cong!", GN(playerid));
							GameTextForPlayer(ddid, str, 5000, 4);
							format(str, sizeof(str), "Ban nhan duoc %d$ cho phi vu buon lau.", money);
							SCM(ddid, COLOR_GREEN, str);
							DrugDealing[ddid] = 0;
							DrugDealer[ddid] = 0;
							CarDD[ddid] = -1;
							OldDD[ddid] = -1;
							ChangeDD[ddid] = 0;
							CoopDD[ddid] = -1;
						}
					}
					money = DrugDealer[playerid] * 10000;
					SafeGivePlayerMoney(playerid, money);
					GameTextForPlayer(playerid, "Chuc mung! Ban da buon lau thanh cong!", 5000, 4);
					new str[128];
					format(str, sizeof(str), "Ban nhan duoc %d$ cho phi vu buon lau.", money);
					SCM(playerid, COLOR_GREEN, str);
					DrugDealing[playerid] = 0;
					DrugDealer[playerid] = 0;
					CarDD[playerid] = -1;
					OldDD[playerid] = -1;
					ChangeDD[playerid] = 0;
					CoopDD[playerid] = -1;
				}
			}
		}
		return 1;
	}
	if (TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
		TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Da den", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	else if (BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
		BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Da den", 5000, 1);
		BusCallTime[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	else if (CP[playerid] == 1)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			PlayerInfo[playerid][pJackSkill] ++;
			if (PlayerInfo[playerid][pJackSkill] == 50)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang Car Jack tang len Level 2, ban se nan duoc nhieu tien hon va Reload Time nhanh hon.");
			}
			else if (PlayerInfo[playerid][pJackSkill] == 100)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang Car Jack tang len Level 3, ban se nan duoc nhieu tien hon va Reload Time nhanh hon.");
			}
			else if (PlayerInfo[playerid][pJackSkill] == 200)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang Car Jack tang len Level 4, ban se nan duoc nhieu tien hon va Reload Time nhanh hon.");
			}
			else if (PlayerInfo[playerid][pJackSkill] == 400)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang Car Jack tang len Level 5, ban se nan duoc nhieu tien hon va Reload Time nhanh hon.");
			}
			new level = PlayerInfo[playerid][pJackSkill];
			if (level >= 0 && level <= 50)
			{
				new rand = random(sizeof(SELLCAR1));
				format(string, sizeof(string), "Ban da ban chiec xe voi gia $%d, reload time cua ban la 20'.", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR1[rand]);
				PlayerInfo[playerid][pCarTime] = 1200;
			}
			else if (level >= 51 && level <= 100)
			{
				new rand = random(sizeof(SELLCAR2));
				format(string, sizeof(string), "Ban da ban chiec xe voi gia $%d, reload time cua ban la 18'.", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR2[rand]);
				PlayerInfo[playerid][pCarTime] = 1080;
			}
			else if (level >= 101 && level <= 200)
			{
				new rand = random(sizeof(SELLCAR3));
				format(string, sizeof(string), "Ban da ban chiec xe voi gia $%d, reload time cua ban la 16'.", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR3[rand]);
				PlayerInfo[playerid][pCarTime] = 960;
			}
			else if (level >= 201 && level <= 400)
			{
				new rand = random(sizeof(SELLCAR4));
				format(string, sizeof(string), "Ban da ban chiec xe voi gia $%d, reload time cua ban la 14'.", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR4[rand]);
				PlayerInfo[playerid][pCarTime] = 840;
			}
			else if (level >= 401)
			{
				new money = 6000;
				format(string, sizeof(string), "Ban da ban chiec xe voi gia $%d, reload time cua ban la 12'.", money);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, money);
				PlayerInfo[playerid][pCarTime] = 720;
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			CP[playerid] = 0;
			DisableCheckpoint(playerid);
			SetVehicleToRespawn2(GetPlayerVehicleID(playerid));
		}
		else
		{
			GameTextForPlayer(playerid, "Khong ngoi trong xe", 5000, 1);
		}
	}
	else if (CP[playerid] == 5)
	{
		GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
		CP[playerid] = 0;
		DisableCheckpoint(playerid);
	}
	else if (CP[playerid] == 9)//Karting
	{
		GameTextForPlayer(playerid, "~r~Wait here for more Kart Racers", 4000, 3);
		DisableCheckpoint(playerid);
	}
	else if (CP[playerid] == 10) { CP[playerid] = 11; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2258.7874, -2402.9712, 12.7035, 8.0); }
	else if (CP[playerid] == 11) { CP[playerid] = 12; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2225.8755, -2461.3875, 12.7190, 8.0); }
	else if (CP[playerid] == 12) { CP[playerid] = 13; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2276.9983, -2662.8328, 12.8580, 8.0); }
	else if (CP[playerid] == 13) { CP[playerid] = 14; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2449.1399, -2663.0562, 12.8138, 8.0); }
	else if (CP[playerid] == 14) { CP[playerid] = 15; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2566.9814, -2504.5686, 12.7692, 8.0); }
	else if (CP[playerid] == 15) { CP[playerid] = 16; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2719.0520, -2503.5962, 12.7706, 8.0); }
	else if (CP[playerid] == 16) { CP[playerid] = 17; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2720.7881, -2405.6589, 12.7441, 8.0); }
	else if (CP[playerid] == 17) { CP[playerid] = 18; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2571.5195, -2401.1531, 12.7528, 8.0); }
	else if (CP[playerid] == 18) { CP[playerid] = 19; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2406.6995, -2423.1182, 12.6641, 8.0); }
	else if (CP[playerid] == 19) { CP[playerid] = 20; DisableCheckpoint(playerid); SetPlayerCheckpoint(playerid, 2322.9194, -2341.5715, 12.6664, 8.0); }
	else if (CP[playerid] == 20)//End of Karting
	{
		CP[playerid] = 0;
		DisableCheckpoint(playerid);
		GetPlayerName(playerid, name, sizeof(name));
		if (FirstKartWinner == 999)
		{
			FirstKartWinner = playerid;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
					{
						format(string, sizeof(string), "* %s ve dich dau tien trong Kart Race.", name);
						SendClientMessage(i, COLOR_WHITE, string);
					}
				}
			}
		}
		else if (SecondKartWinner == 999)
		{
			SecondKartWinner = playerid;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
					{
						format(string, sizeof(string), "* %s ve dich thu hai trong Kart Race.", name);
						SendClientMessage(i, COLOR_WHITE, string);
					}
				}
			}
		}
		else if (ThirdKartWinner == 999)
		{
			ThirdKartWinner = playerid;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
					{
						format(string, sizeof(string), "* %s  ve dich thu ba trong Kart Race.", name);
						SendClientMessage(i, COLOR_WHITE, string);
						SendClientMessage(i, COLOR_WHITE, "** Kart Race ket thuc**");
						CP[i] = 0;
						DisableCheckpoint(i);
					}
				}
			}
		}
	}
	else if (MissionCheckpoint[playerid] > 0 && PlayMission[kToggle] == 1)//Missions + Checkpoint on toggle
	{
		RingTone[playerid] = 20;
		switch (MissionCheckpoint[playerid])
		{
		case 1:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisableCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP2][0], PlayMission[kCP2][1], PlayMission[kCP2][2], 8);
					MissionCheckpoint[playerid] = 2;
		}
		case 2:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisableCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP3][0], PlayMission[kCP3][1], PlayMission[kCP3][2], 8);
					MissionCheckpoint[playerid] = 3;
		}
		case 3:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisableCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP4][0], PlayMission[kCP4][1], PlayMission[kCP4][2], 8);
					MissionCheckpoint[playerid] = 4;
		}
		case 4:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisableCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP5][0], PlayMission[kCP5][1], PlayMission[kCP5][2], 8);
					MissionCheckpoint[playerid] = 5;
		}
		case 5:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisableCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP6][0], PlayMission[kCP6][1], PlayMission[kCP6][2], 8);
					MissionCheckpoint[playerid] = 6;
		}
		case 6:
		{
					format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "..:: Mission Passed : %s | Reward received: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					DisableCheckpoint(playerid);
					SafeGivePlayerMoney(playerid, PlayMission[kReward]);
					PlayerInfo[playerid][pMissionNr] = PlayerOnMission[playerid];
					MissionCheckpoint[playerid] = 0;
					PlayerOnMission[playerid] = 0;
		}
		}
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case CHECKPOINT_HOME:
		{
									  PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
									  DisableCheckpoint(playerid);
									  gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
									  GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
		}
		}
	}
	if (BusrouteEast[playerid][0] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
			new nextstop[64];
			BusrouteWest[playerid][0] = 0;
			switch (BusrouteEast[playerid][0])
			{
			case 1:
			{
						nextstop = "Airport";
						SetPlayerCheckpoint(playerid, 1979.7369, -2171.4861, 13.5363, 5.0);
						AdvertiseToPlayersAtBusStop(1979.7369, -2171.4861, 13.5363, 0);
			}
			case 2:
			{
						nextstop = "Willowfield Factory";
						SetPlayerCheckpoint(playerid, 2227.6953, -2201.9053, 13.5164, 5.0);
						AdvertiseToPlayersAtBusStop(2227.6953, -2201.9053, 13.5164, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 3:
			{
						nextstop = "Loco";
						SetPlayerCheckpoint(playerid, 2719.9419, -2030.2104, 13.5076, 5.0);
						AdvertiseToPlayersAtBusStop(2719.9419, -2030.2104, 13.5076, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 4:
			{
						nextstop = "6 Street Plaza";
						SetPlayerCheckpoint(playerid, 2470.8059, -1926.7136, 13.5125, 5.0);
						AdvertiseToPlayersAtBusStop(2470.8059, -1926.7136, 13.5125, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 5:
			{
						nextstop = "10 Green Bottles";
						SetPlayerCheckpoint(playerid, 2348.0249, -1695.8247, 13.5286, 5.0);
						AdvertiseToPlayersAtBusStop(2348.0249, -1695.8247, 13.5286, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 6:
			{
						nextstop = "Pigpen";
						SetPlayerCheckpoint(playerid, 2422.4092, -1251.1915, 23.9176, 5.0);
						AdvertiseToPlayersAtBusStop(2422.4092, -1251.1915, 23.9176, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 7:
			{
						nextstop = "Golden Palm";
						SetPlayerCheckpoint(playerid, 2717.7463, -1218.8141, 64.9276, 5.0);
						AdvertiseToPlayersAtBusStop(2717.7463, -1218.8141, 64.9276, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 8:
			{
						nextstop = "Jefferson Motel";
						SetPlayerCheckpoint(playerid, 2173.1165, -1114.3069, 25.4259, 5.0);
						AdvertiseToPlayersAtBusStop(2173.1165, -1114.3069, 25.4259, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 9:
			{
						nextstop = "Glen Park";
						SetPlayerCheckpoint(playerid, 2028.4354, -1259.1379, 23.9287, 5.0);
						AdvertiseToPlayersAtBusStop(2028.4354, -1259.1379, 23.9287, 0);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 10:
			{
						 nextstop = "Bus Station";
						 SetPlayerCheckpoint(playerid, 1203.5101, -1833.5771, 13.4946, 5.0);
						 AdvertiseToPlayersAtBusStop(1203.5101, -1833.5771, 13.4946, 0);
						 SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						 TogglePlayerControllable(playerid, 0);
						 SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 11:
			{
						 nextstop = "end";
						 TogglePlayerControllable(playerid, 0);
						 SendClientMessage(playerid, COLOR_YELLOW, "Xe buyt da toi tram cuoi cung, su dung /starteast hoac /startwest de tiep tuc di xe buyt.");
						 SendClientMessage(playerid, COLOR_YELLOW, "Su dung /exit de roi khoi xe buyt.");
						 DisableCheckpoint(playerid);
			}
			}
			BusrouteEast[playerid][0]++;
			if (strcmp(nextstop, "end", true) != 0)
			{
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~r~$3 Bonus~n~~n~~g~Next Stop: %s", nextstop);
				format(string2, sizeof(string2), "~n~~n~~n~~n~~n~~n~~n~~g~Next Stop: %s", nextstop);
			}
			else
			{
				string = "~g~Tram cuoi~n~~n~~r~$50 bonus~n~~n~~w~/starteast de tiep tuc";
				string2 = "~n~~g~Tram cuoi~n~~n~~w~Vui long roi khoi xe buyt hoac doi de tiep tuc chang moi";
				//BusrouteEast[playerid][0] = 0;
				SafeGivePlayerMoney(playerid, 47);
			}
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			for (new i = 0; i <= MAX_PLAYERS; i++)
			{
				if (IsLogOn(i) && GetPlayerVehicleID(i) == BusrouteEast[playerid][1])
				{
					if (BusrouteEast[i][0] != 0) GameTextForPlayer(i, string, 10000, 3);
					else GameTextForPlayer(i, string2, 10000, 3);
				}
			}
			SafeGivePlayerMoney(playerid, 3);
			return 1;
		}
	}
	else if (BusrouteWest[playerid][0] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new nextstop[64];
			BusrouteEast[playerid][0] = 0;
			switch (BusrouteWest[playerid][0])
			{
			case 1:
			{
						nextstop = "Alhambra";
						SetPlayerCheckpoint(playerid, 1826.8738, -1634.5306, 13.5588, 5.0);
						AdvertiseToPlayersAtBusStop(1826.8738, -1634.5306, 13.5588, 1);
			}
			case 2:
			{
						nextstop = "Glen Park";
						SetPlayerCheckpoint(playerid, 1856.7260, -1211.7167, 20.3898, 5.0);
						AdvertiseToPlayersAtBusStop(1856.7260, -1211.7167, 20.3898, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 3:
			{
						nextstop = "Vinewood Burger";
						PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
						SetPlayerCheckpoint(playerid, 1208.0479, -929.9481, 42.9049, 5.0);
						AdvertiseToPlayersAtBusStop(1208.0479, -929.9481, 42.9049, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 4:
			{
						nextstop = "Vice Theater";
						SetPlayerCheckpoint(playerid, 1119.0096, -1137.8805, 23.7597, 5.0);
						AdvertiseToPlayersAtBusStop(1119.0096, -1137.8805, 23.7597, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 5:
			{
						nextstop = "Bank";
						SetPlayerCheckpoint(playerid, 1443.0234, -1028.7131, 23.8281, 5.0);
						AdvertiseToPlayersAtBusStop(1443.0234, -1028.7131, 23.8281, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 6:
			{
						nextstop = "Rodeo";
						SetPlayerCheckpoint(playerid, 526.6218, -1480.9631, 14.5567, 5.0);
						AdvertiseToPlayersAtBusStop(526.6218, -1480.9631, 14.5567, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 7:
			{
						nextstop = "Sana Maria Beach";
						SetPlayerCheckpoint(playerid, 443.9078, -1724.8008, 10.0896, 5.0);
						AdvertiseToPlayersAtBusStop(443.9078, -1724.8008, 10.0896, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 8:
			{
						nextstop = "Verona Beach";
						SetPlayerCheckpoint(playerid, 836.2728, -1788.8121, 13.9260, 5.0);
						AdvertiseToPlayersAtBusStop(836.2728, -1788.8121, 13.9260, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 9:
			{
						nextstop = "Pershing Square";
						SetPlayerCheckpoint(playerid, 1508.7136, -1735.5184, 13.4921, 5.0);
						AdvertiseToPlayersAtBusStop(1508.7136, -1735.5184, 13.4921, 1);
						SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						TogglePlayerControllable(playerid, 0);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 10:
			{
						 nextstop = "Bus Station";
						 SetPlayerCheckpoint(playerid, 1203.5101, -1833.5771, 13.4946, 5.0);
						 AdvertiseToPlayersAtBusStop(1203.5101, -1833.5771, 13.4946, 1);
						 SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
						 TogglePlayerControllable(playerid, 0);
						 SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Ban phai doi 10s.");
			}
			case 11:
			{
						 nextstop = "end";
						 TogglePlayerControllable(playerid, 0);
						 SendClientMessage(playerid, COLOR_YELLOW, "Xe buyt da toi tram cuoi cung, su dung /starteast hoac /startwest de tiep tuc di xe buyt.");
						 SendClientMessage(playerid, COLOR_YELLOW, "Su dung /exit de roi khoi xe buyt.");
						 DisableCheckpoint(playerid);
			}
			}
			BusrouteWest[playerid][0]++;
			if (strcmp(nextstop, "end", true) != 0)
			{
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~r~$3 Bonus~n~~n~~g~Next Stop: %s", nextstop);
				format(string2, sizeof(string2), "~n~~n~~n~~n~~n~~n~~n~~g~Next Stop: %s", nextstop);
			}
			else
			{
				string = "~g~Tram cuoi~n~~n~~r~$50 bonus~n~~n~~w~/startwest de tiep tuc";
				string2 = "~n~~g~Tram cuoi~n~~n~~w~Vui long roi khoi xe buyt hoac doi de tiep tuc chang moi";
				//BusrouteWest[playerid][0] = 0;
				SafeGivePlayerMoney(playerid, 47);
			}

			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			for (new i = 0; i <= MAX_PLAYERS; i++)
			{
				if (IsLogOn(i) && GetPlayerVehicleID(i) == BusrouteWest[playerid][1])
				{
					if (BusrouteWest[i][0] != 0) GameTextForPlayer(i, string, 10000, 3);
					else GameTextForPlayer(i, string2, 10000, 3);
				}
			}
			SafeGivePlayerMoney(playerid, 3);
			return 1;
		}
	}
	if (BusShowLocationC[playerid] == 1)
	{
		DisableCheckpoint(playerid);
		BusShowLocationC[playerid] = 0;
		return 1;
	}
	if (FarmerVar[playerid] == 1)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			new cash = (random(70 - 20) + 20);
			if (IsAHarvest(carid))
			{
				switch (FarmerPickup[playerid][0])
				{
				case 0:
				{
							SetPlayerCheckpoint(playerid, -205.9348, -1332.2749, 10.4056, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 1:
				{
							SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 2:
				{
							if (JustStarted[playerid] != 1)
							{
								PlayerInfo[playerid][pPayCheck] += cash * 5;
								format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								GameTextForPlayer(playerid, string, 5000, 1);
							}
							else
							{
								JustStarted[playerid] = 0;
							}
							SetPlayerCheckpoint(playerid, -548.5396, -1329.0653, 19.6210, 5.0);
				}
				case 3:
				{
							SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 4:
				{
							if (JustStarted[playerid] != 1)
							{
								PlayerInfo[playerid][pPayCheck] += cash * 5;
								format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								GameTextForPlayer(playerid, string, 5000, 1);
							}
							else
							{
								JustStarted[playerid] = 0;
							}
							SetPlayerCheckpoint(playerid, -370.9486, -1281.1089, 29.8698, 5.0);
				}
				case 5:
				{
							SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 6:
				{
							if (JustStarted[playerid] != 1)
							{
								PlayerInfo[playerid][pPayCheck] += cash * 5;
								format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								GameTextForPlayer(playerid, string, 5000, 1);
							}
							else
							{
								JustStarted[playerid] = 0;
							}
							SetPlayerCheckpoint(playerid, -258.3272, -1387.9211, 10.1292, 5.0);
				}
				case 7:
				{
							SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 8:
				{
							if (JustStarted[playerid] != 1)
							{
								PlayerInfo[playerid][pPayCheck] += cash * 5;
								format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								GameTextForPlayer(playerid, string, 5000, 1);
							}
							else
							{
								JustStarted[playerid] = 0;
							}
							SetPlayerCheckpoint(playerid, -288.8517, -1385.0117, 9.8957, 5.0);
				}
				case 9:
				{
							SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 10:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -283.1325, -1338.2822, 7.4280, 5.0);
				}
				case 11:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 12:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -224.5992, -1509.1902, 7.4473, 5.0);
				}
				case 13:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 14:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -247.2859, -1528.8744, 6.5904, 5.0);
				}
				case 15:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 16:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -283.9610, -1549.7180, 6.4975, 5.0);
				}
				case 17:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 18:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -431.6107, -1334.0961, 28.6561, 5.0);
				}
				case 19:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 20:
				{
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~g~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -476.4104, -1391.6769, 20.4733, 5.0);
				}
				case 21:
				{
							 SetPlayerCheckpoint(playerid, -376.7750, -1437.6874, 25.7266, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 22:
				{
							 DisableCheckpoint(playerid);
							 TogglePlayerControllable(playerid, 0);
							 GameTextForPlayer(playerid, "~w~Su dung /exit de dung thu hoach~n~~r~Bonus 100$", 5000, 1);
							 SafeGivePlayerMoney(playerid, 100);
				}
				}
				FarmerPickup[playerid][0]++;
				PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			}
		}
		return 1;
	}
	if (MatsHolding[playerid] == 25)
	{
		/*if (PlayerInfo[playerid][pJob] == 22)
		{
			DisableCheckpoint(playerid);
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SafeGivePlayerMoney(playerid, 300);
			SendClientMessage(playerid, COLOR_WHITE, "Ban da ban 25 vat lieu .");
			MatsHolding[playerid] = 0;
			matssys[MatsAmmount] += 25;
			GameTextForPlayer(playerid, "~w~Vat lieu da duoc them vao", 5000, 1);
			SaveMatsSystem();
		}*/
		DisableCheckpoint(playerid);
		PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		SafeGivePlayerMoney(playerid, 300);
		SendClientMessage(playerid, COLOR_WHITE, "Ban da ban 25 vat lieu .");
		MatsHolding[playerid] = 0;
		matssys[MatsAmmount] += 25;
		GameTextForPlayer(playerid, "~w~Vat lieu da duoc them vao", 5000, 1);
		SaveMatsSystem();
		return 1;
	}
	if (IsPuttingMaterials[playerid] == 1)
	{
		//if (PlayerInfo[playerid][pJob] == 23)
		if (PlayerInfo[playerid][pMats] < CreatingGunPrice[playerid])
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu ");
			return 1;
		}
		DisableCheckpoint(playerid);
		PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~w~Vat lieu duoc giao thanh cong", 5000, 1);
		PlayerInfo[playerid][pMats] -= CreatingGunPrice[playerid];
		CreatingGunPrice[playerid] = 0;
		IsPuttingMaterials[playerid] = 0;
		new randomize = random(3) + 1;
		if (randomize == 1) ProxDetector(40.0, playerid, "Factory speaker: Take da gat outside homie !", COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		else if (randomize == 2) ProxDetector(40.0, playerid, "Factory speaker: Chea' ya blasta is outside !", COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		else ProxDetector(40.0, playerid, "Factory speaker: Damn nice ass gun i made. It's waiting for ya outside !", COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		IsTakingGun[playerid] = 1;
		SetPlayerCheckpoint(playerid, 2163.3430, -2271.9934, 13.3293, 1.0);
		return 1;
	}
	if (IsTakingGun[playerid] == 1)
	{
		//if (PlayerInfo[playerid][pJob] == 23)
		if (CreatingGun[playerid] == 0 || CreatingGunAmmo[playerid] == 0)
		{
			return 1;
		}
		DisableCheckpoint(playerid);
		new gunname[128];
		GetWeaponName(CreatingGun[playerid], gunname, sizeof(gunname));
		format(string, sizeof(string), "   Ban da nhan duoc %s.", gunname);
		SendClientMessage(playerid, COLOR_GREY, string);
		SafeGivePlayerWeapon(playerid, CreatingGun[playerid], CreatingGunAmmo[playerid]);
		CreatingGun[playerid] = 0;
		CreatingGunAmmo[playerid] = 0;
		IsTakingGun[playerid] = 0;
		return 1;
	}
	if (DrugFarmerVar[playerid] == 1)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			new cash = (random(250 - 100) + 100);
			if (IsADrugHarvest(carid))
			{
				switch (DrugFarmerPickup[playerid][0])
				{
				case 0:
				{
							SetPlayerCheckpoint(playerid, -181.4144, 167.2931, 7.8413, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 1:
				{
							SetPlayerCheckpoint(playerid, -184.1222, -66.2325, 3.1172, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 2:
				{
							SetPlayerCheckpoint(playerid, -39.6705, -102.2681, 3.1172, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 3:
				{
							SetPlayerCheckpoint(playerid, 35.3907, -74.2866, 0.9706, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 4:
				{
							SetPlayerCheckpoint(playerid, 58.6579, -3.7121, 1.6909, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 5:
				{
							SetPlayerCheckpoint(playerid, 19.7974, 43.5431, 3.1172, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 6:
				{
							SetPlayerCheckpoint(playerid, -34.1614, 73.9170, 3.1096, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 7:
				{//drop-off
							if (JustStarted[playerid] != 1)
							{
								PlayerInfo[playerid][pPayCheck] += cash * 5;
								drugsys[DrugAmmount]++;
								format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~b~$%d", cash);
								GameTextForPlayer(playerid, string, 5000, 1);
								SaveDrugSystem();
							}
							else
							{
								JustStarted[playerid] = 0;
							}
							SetPlayerCheckpoint(playerid, 30.2059, 20.1222, 3.1172, 5.0);
				}
				case 8:
				{
							SetPlayerCheckpoint(playerid, -21.3052, -60.9220, 3.1172, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 9:
				{
							SetPlayerCheckpoint(playerid, -191.6069, -70.8331, 3.1172, 5.0);
							if (JustStarted[playerid] != 0)
							{
								JustStarted[playerid] = 0;
							}
				}
				case 10:
				{
							 SetPlayerCheckpoint(playerid, -253.8518, -3.7909, 2.5041, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 11:
				{
							 SetPlayerCheckpoint(playerid, -178.0497, 128.4783, 3.8665, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 12:
				{
							 SetPlayerCheckpoint(playerid, -110.8844, 143.1536, 3.1144, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 13:
				{
							 SetPlayerCheckpoint(playerid, -34.1614, 73.9170, 3.1096, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 14:
				{//drop-off
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 drugsys[DrugAmmount]++;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~b~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
								 SaveDrugSystem();
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -164.3909, 28.9677, 3.1172, 5.0);
				}
				case 15:
				{
							 SetPlayerCheckpoint(playerid, -213.1695, -26.4404, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 16:
				{
							 SetPlayerCheckpoint(playerid, -11.7208, -10.7312, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 17:
				{
							 SetPlayerCheckpoint(playerid, 11.4609, -90.3436, 2.0164, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 18:
				{
							 SetPlayerCheckpoint(playerid, 63.1697, -22.5562, 1.2136, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 19:
				{
							 SetPlayerCheckpoint(playerid, 23.2130, 30.9418, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 20:
				{
							 SetPlayerCheckpoint(playerid, -134.6788, 151.1453, 3.9566, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 21:
				{
							 SetPlayerCheckpoint(playerid, -34.1614, 73.9170, 3.1096, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 22:
				{//drop-off
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 drugsys[DrugAmmount]++;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~b~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
								 SaveDrugSystem();
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, 45.6651, 35.6647, 2.1518, 5.0);
				}
				case 23:
				{
							 SetPlayerCheckpoint(playerid, 65.9438, -13.9811, 1.3468, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 24:
				{
							 SetPlayerCheckpoint(playerid, 17.1980, -86.7067, 1.7758, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 25:
				{
							 SetPlayerCheckpoint(playerid, -7.0889, -19.7445, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 26:
				{
							 SetPlayerCheckpoint(playerid, -185.1862, 155.1479, 6.5185, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 27:
				{
							 SetPlayerCheckpoint(playerid, -184.7949, -57.7402, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 28:
				{
							 SetPlayerCheckpoint(playerid, -263.0331, -45.5427, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 29:
				{
							 SetPlayerCheckpoint(playerid, -34.1614, 73.9170, 3.1096, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 30:
				{//drop-off
							 if (JustStarted[playerid] != 1)
							 {
								 PlayerInfo[playerid][pPayCheck] += cash * 5;
								 drugsys[DrugAmmount]++;
								 format(string, sizeof(string), "~w~Da them vao tien luong cua ban~n~~b~$%d", cash);
								 GameTextForPlayer(playerid, string, 5000, 1);
								 SaveDrugSystem();
							 }
							 else
							 {
								 JustStarted[playerid] = 0;
							 }
							 SetPlayerCheckpoint(playerid, -255.7015, -3.0833, 2.4276, 5.0);
				}
				case 31:
				{
							 SetPlayerCheckpoint(playerid, -171.7835, -59.3110, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 32:
				{
							 SetPlayerCheckpoint(playerid, -153.4347, 143.9473, 4.1833, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 33:
				{
							 SetPlayerCheckpoint(playerid, 49.4775, 24.9682, 1.8078, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 34:
				{
							 SetPlayerCheckpoint(playerid, -9.5707, -36.4109, 3.1172, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 35:
				{
							 SetPlayerCheckpoint(playerid, 35.6805, -95.6367, 0.6169, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 36:
				{
							 SetPlayerCheckpoint(playerid, -34.1614, 73.9170, 3.1096, 5.0);
							 if (JustStarted[playerid] != 0)
							 {
								 JustStarted[playerid] = 0;
							 }
				}
				case 37:
				{//last drop-off
							 PlayerInfo[playerid][pPayCheck] += cash * 5;
							 drugsys[DrugAmmount]++;
							 SaveDrugSystem();
							 DisableCheckpoint(playerid);
							 TogglePlayerControllable(playerid, 0);
							 GameTextForPlayer(playerid, "~w~Use /exit de ket thuc thu hoach~n~~b~Nhieu do la du", 5000, 1);
				}
				}
				DrugFarmerPickup[playerid][0]++;
				PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			}
		}
		return 1;
	}
	if (SmugglerWork[playerid] == 1)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			if (IsASmuggleCar(carid))
			{
				switch (SmugglerWork[playerid])
				{
				case 1:
				{
							TogglePlayerControllable(playerid, 0);
							SendClientMessage(playerid, COLOR_WHITE, "Drugs da duoc them, /exit de roi khoi xe.");
							PlayerInfo[playerid][pDrugs] += SmuggledDrugs[playerid];
							format(string, sizeof(string), "~b~%d ~w~grams drugs da them", SmuggledDrugs[playerid]);
							GameTextForPlayer(playerid, string, 5000, 1);
							DisableCheckpoint(playerid);
							SmuggledDrugs[playerid] = 0;
							SmugglerWork[playerid] = 0;
							SavePlayer(playerid);
				}
				}

			}
		}
		return 1;
	}
	if (PlayerIsSweeping[playerid] == 1)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			if (IsASweeper(carid))
			{
				new cashes = (random(35 - 10) + 10);
				PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~g~%d$ ~w~Da them vao tien luong cua ban", cashes);
				GameTextForPlayer(playerid, string, 5000, 1);
				DisableCheckpoint(playerid);
				PlayerInfo[playerid][pPayCheck] += cashes * 5;
				new randomss;
				randomss = random(sizeof(gSweeperPoints));
				SetPlayerCheckpoint(playerid, gSweeperPoints[randomss][0], gSweeperPoints[randomss][1], gSweeperPoints[randomss][2], 5.0);
			}
		}
		return 1;
	}
	if (InAFoodPlace[playerid] != 0)
	{
		TogglePlayerControllable(playerid, 0);
		switch (InAFoodPlace[playerid])
		{
		case 1: // chicken
		{
			ShowMenuForPlayer(chickenmenu, playerid);
			SetPlayerPos(playerid, 368.9714, -6.2486, 1001.8516);
			SetPlayerFacingAngle(playerid, 357.0132);
		}
		case 2: // burger
		{
			ShowMenuForPlayer(burgermenu, playerid);
			SetPlayerPos(playerid, 376.8571, -67.6620, 1001.5151);
			SetPlayerFacingAngle(playerid, 357.0132);
		}
		case 3: // pizza
		{
			ShowMenuForPlayer(pizzamenu, playerid);
			SetPlayerPos(playerid, 375.6895, -118.9683, 1001.4995);
			SetPlayerFacingAngle(playerid, 357.0132);
		}
		case 4: // donut
		{
			ShowMenuForPlayer(donutshop, playerid);
			SetPlayerPos(playerid, 379.0611, -186.6032, 1000.6328);
			SetPlayerFacingAngle(playerid, 280);
		}
		}
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid, 4, -1102.0814, -1636.1648, 76.3672))
	{
		if (IsPlayerAttachedObjectSlotUsed(playerid, 9) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CARRY)
		{
			new str[255];
			SafeGivePlayerMoney(playerid, PLANTMONEY);
			PlayerInfo[playerid][pDrugs] += PLANTDRUG;
			format(str, sizeof(str), "Ban da nhan duoc $%d va %d grams thuoc.", PLANTMONEY, PLANTDRUG);
			SendClientMessage(playerid, COLOR_WHITE, str);
			ApplyAnimation(playerid, "CARRY", "putdwn105", 4.0, 0, 1, 1, 1, 1);
			SetPlayerSpecialAction(playerid, 0);
			RemovePlayerAttachedObject(playerid, 9);
			SetPVarInt(playerid, "CantUseAnim", 0);
			new lv = GetLevelSkill(playerid, PLANT);
			if (lv != 0) TangSkill(playerid, PLANT, 1);
		}
		else {
			RemovePlayerAttachedObject(playerid, 9);
			SetPlayerSpecialAction(playerid, 0);
		}
	}
	DMVOnPlayerEnterCP(playerid);
	DisableCheckpoint(playerid);
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	DMVOnPlayerEnterRaceCP(playerid);
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}
public OnRconCommand(cmd[])
{
	return 1;
}
public OnObjectMoved(objectid)
{
	return 1;
}
public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}
//OnPlayerPickUpPickup(playerid, pickupid)
/* public OnPlayerPickUpPickup(playerid, pickupid)
{
if ( pickupid == license_pu )
{
GameTextForPlayer(playerid, "~y~You can get a ~r~Driving license ~n~~w~Type /buydriving to get a license ~n~~r~(Costs: 1 000 $)", 5000, 3);
}
if ( pickupid == license_pu2 )
{
GameTextForPlayer(playerid, "~y~You can get a ~r~Flying license ~n~~w~Type /buyflying to get a license ~n~~r~(Costs: 65 000 $)", 5000, 3);
}
if ( pickupid == license_pu3 )
{
GameTextForPlayer(playerid, "~y~You can get a ~r~Sailing license ~n~~w~Type /buysailing to get a license ~n~~r~(Costs: 15 000 $)", 5000, 3);
}
if ( pickupid == license_pu4 )
{
GameTextForPlayer(playerid, "~y~You can get a ~r~Gun license ~n~~w~Type /buygunlic to get a license ~n~~r~(Costs: 35 000 $)", 5000, 3);
}
if ( pickupid == license_pu5 )
{
GameTextForPlayer(playerid, "~y~You can get a ~r~Fishing license ~n~~w~Type /buyfishing to get a license ~n~~r~ (Costs: 5 000 $)", 5000, 3);
}
return 1;
}*/
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	new Float:PlayerHealth;
	GetPlayerHealth(playerid, PlayerHealth);
	if (Current == BurgerShot)
	{
		switch (row)
		{
		case 0:
		{
					GivePlayerMoney(playerid, -3);
					if (PlayerHealth <= 74.9)
					{
						SetPlayerHealth(playerid, PlayerHealth + 25);
					}
					else
					{
						SetPlayerHealth(playerid, 100.0);
					}
					SendClientMessage(playerid, 0xFFC801C8, "Burger Shot: Cam on ban da mua Baby Burger, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 1:
		{
					GivePlayerMoney(playerid, -6);
					if (PlayerHealth <= 49.9)
					{
						SetPlayerHealth(playerid, PlayerHealth + 50);
					}
					else
					{
						SetPlayerHealth(playerid, 100.0);
					}
					SendClientMessage(playerid, 0xFFC801C8, "Burger Shot: Cam on ban da mua Double Cheese, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 2:
		{
					GivePlayerMoney(playerid, -9);
					SetPlayerHealth(playerid, 100);
					SendClientMessage(playerid, 0xFFC801C8, "Burger Shot: Cam on ban da mua Tripple Whopper, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 3:
		{
					if (PlayerTied[playerid] != 1 || PlayerCuffed[playerid] != 1)
					{
						TogglePlayerControllable(playerid, 1);

					}
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		}
	}
	if (Current == CluckinBell)
	{
		switch (row)
		{
		case 0:
		{
					GivePlayerMoney(playerid, -3);
					if (PlayerHealth <= 74.9)
					{
						SetPlayerHealth(playerid, PlayerHealth + 25);
					}
					else
					{
						SetPlayerHealth(playerid, 100.0);
					}
					SendClientMessage(playerid, 0xFFC801C8, "Cluckin' Bell: Cam on ban da mua hang cua chung toi, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 1:
		{
					GivePlayerMoney(playerid, -6);
					if (PlayerHealth <= 49.9)
					{
						SetPlayerHealth(playerid, PlayerHealth + 50);
					}
					else
					{
						SetPlayerHealth(playerid, 100.0);
					}
					SendClientMessage(playerid, 0xFFC801C8, "Cluckin' Bell: cam on ban da mua Chicken Wing, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 2:
		{
					GivePlayerMoney(playerid, -9);
					SetPlayerHealth(playerid, 100);
					SendClientMessage(playerid, 0xFFC801C8, "Cluckin' Bell: Cam on ban da mua hang cua chung toi, chuc ngon mieng!");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		case 3:
		{
					if (PlayerTied[playerid] != 1 || PlayerCuffed[playerid] != 1)
					{
						TogglePlayerControllable(playerid, 1);

					}
					SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
					return 1;
		}
		}
	}
	if (Current == burgermenu || Current == chickenmenu || Current == pizzamenu || Current == donutshop)
	{
		TogglePlayerControllable(playerid, 1);
		if (row != 10) // 10 = Leave
		{
			if (GetPlayerMoney(playerid) <= 0)
			{
				GameTextForPlayer(playerid, "~r~Not Enough Cash", 5000, 1);
				return 1;
			}
			new actstring[128];
			new Float:health;
			GetPlayerHealth(playerid, health);
			if (row == 7 || row == 8) // Drink
			{
				format(actstring, sizeof(actstring), "* %s drinks from their cup.", GN(playerid));
				SafeGivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid, "VENDING", "VEND_Drink_P", 4.1, 0, 1, 1, 0, 1);
			}
			else // Meal
			{
				switch (row)
				{
				case 1:
				{
							if (Current == donutshop) format(actstring, sizeof(actstring), "* %s eats a little donut and plays with the little toy that came with it.", GN(playerid));
							else format(actstring, sizeof(actstring), "* %s eats their kids meal and plays with the little toy that came with it.", GN(playerid));
							SafeGivePlayerMoney(playerid, -2);
							SetPlayerHealth(playerid, health + 20);
				}
				case 2:
				{
							if (Current == chickenmenu) format(actstring, sizeof(actstring), "* %s eats the nuggets from their cup.", GN(playerid));
							else if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s eats their personal pan pizza.", GN(playerid));
							else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s eats their regular size donut.", GN(playerid));
							else format(actstring, sizeof(actstring), "* %s eats their cheeseburger.", GN(playerid));
							SafeGivePlayerMoney(playerid, -4);
							SetPlayerHealth(playerid, health + 50);
				}
				case 3:
				{
							if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s eats their greasy sheet pizza.", GN(playerid));
							else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s eats their extra large chief donut.", GN(playerid));
							else format(actstring, sizeof(actstring), "* %s eats their greasy sandwich.", GN(playerid));
							SafeGivePlayerMoney(playerid, -5);
							SetPlayerHealth(playerid, health + 80);
				}
				case 4:
				{
							if (Current == donutshop) format(actstring, sizeof(actstring), "* %s eats their extra large donut.", GN(playerid));
							else format(actstring, sizeof(actstring), "* %s eats the freshly tossed salad from the bowl (with a fork of course).", GN(playerid));
							SafeGivePlayerMoney(playerid, -3);
							SetPlayerHealth(playerid, health + 35);
				}
				}
				if (Current == burgermenu) ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 1);
				else if (Current == chickenmenu) ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 0, 1);
				else if (Current == pizzamenu) ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 0, 1);
				else if (Current == donutshop) ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 0, 1);
				if (GetPlayerMoney(playerid) > 100) SetPlayerHealth(playerid, 100);
			}
			ProxDetector(30.0, playerid, actstring, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
	}
	if (Current == Guide)
	{
		switch (row)
		{
		case 0:
		{
					SendClientMessage(playerid, COLOR_GREEN, "______________Luat Roleplay_______________");
					SendClientMessage(playerid, COLOR_GRAD5, "* Luon luon RP");
					SendClientMessage(playerid, COLOR_GRAD5, "* Nghiem cam DM");
					SendClientMessage(playerid, COLOR_GRAD5, "* Tu do ngon luan");
					SendClientMessage(playerid, COLOR_GRAD5, "* Khong Hack hoac lam dung bug (/report)");
					SendClientMessage(playerid, COLOR_GRAD5, "* Cam Driver-By (Ngoai tru cops)");
					SendClientMessage(playerid, COLOR_GRAD5, "* Khong dung ky hieu,bieu cam trong IC");
					SendClientMessage(playerid, COLOR_GRAD5, "* Cam bunnyhop");
					SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
					TogglePlayerControllable(playerid, 1);
		}
		case 1:
		{
					HideMenuForPlayer(Guide, playerid);
					ShowMenuForPlayer(JobLocations, playerid);
		}
		case 2:
		{
					HideMenuForPlayer(Guide, playerid);
					ShowMenuForPlayer(Place, playerid);
		}
		case 3:
		{
					HideMenuForPlayer(Guide, playerid);
					TogglePlayerControllable(playerid, 1);
		}
		}
	}
	if (Current == JobLocations)
	{
		switch (row)
		{
		case 0:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe luat su duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 1481.0206, -1771.1138, 18.7958, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 1:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe mai dam duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2421.4998, -1219.2438, 25.5617, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 2:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe tho sua xe duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2077.52, -2013.56, 13.54, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 3:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe ve si duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2226.1716, -1718.1792, 13.5165, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 4:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe vo si duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2229.9011, -1721.2582, 13.5613, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 5:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe lai xe buyt duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 1154.2208, -1770.8203, 16.5992, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 6:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe nguoi van chuyen duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2439.7710, -2120.9285, 13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 7:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe pizza duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 2101.7620, -1812.5922, 13.5547, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 8:
		{
					HideMenuForPlayer(JobLocations, playerid);
					ShowMenuForPlayer(JobLocations2, playerid);
		}
		case 9:
		{
					HideMenuForPlayer(JobLocations, playerid);
					ShowMenuForPlayer(Guide, playerid);
		}
		}
	}
	if (Current == JobLocations2)
	{
		switch (row)
		{
		case 0:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe nong dan duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, -382.6660, -1426.5121, 26.2410, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 1:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe quet duong duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 1611.5129, -1893.6997, 13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 2:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe tho che vu khi da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 1365.0469, -1284.1049, 13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 3:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe buon thuoc duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 1611.5129, -1893.6997, 13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 4:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nghe trong trot duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, -1109.5745, -1637.6207, 76.3672, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 5:
		{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Dia diem de buon lau duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, -1111.4635, -1681.5151, 76.3739, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 6:
		{
					HideMenuForPlayer(JobLocations2, playerid);
					ShowMenuForPlayer(JobLocations, playerid);
		}
		case 7:
		{
					HideMenuForPlayer(JobLocations2, playerid);
					//ShowMenuForPlayer(Guide, playerid);
					TogglePlayerControllable(playerid, 1);
		}
		}
	}
	if (Current == Place)
	{
		switch (row)
		{
		case 0:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Noi thi bang lai duoc danh dau do tren ban do.");
					SendClientMessage(playerid, COLOR_WHITE, "TIP: Su dung /thibanglai Khi o trong noi cap bang lai");
					SetPlayerCheckpoint(playerid, 2063.0376,-1914.9541,13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 1:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Diem thue xe duoc danh dau do tren ban do.");
					SetPlayerCheckpoint(playerid, 1696.5543, -1053.4685, 23.9063, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 2:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Cua hang quan ao duoc danh dau do tren ban do.");
					SendClientMessage(playerid, COLOR_WHITE, "TIP: Su dung /muaquanao khi ban o trong cua hang.");
					SetPlayerCheckpoint(playerid, 2244.3423, -1665.5542, 15.4766, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 3:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Noi lay vat lieu da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 2660.3398, -1590.6552, 13.8936, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 4:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Noi lay hat giong da duoc danh dau tren ban do.");
					//SetPlayerCheckpoint(playerid, 1696.5543, -1053.4685, 23.9063, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 5:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Noi che tao vu khi da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 1365.0469, -1284.1049, 13.5469, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 6:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Tru so LSPD da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 1552.5354, -1675.3979, 16.1953, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 7:
		{
					SendClientMessage(playerid, COLOR_GREEN, "City hall da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 1480.8595, -1769.2534, 18.7958, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 8:
		{
					SendClientMessage(playerid, COLOR_GREEN, "Cho Den (Black Market) da duoc danh dau tren ban do.");
					SetPlayerCheckpoint(playerid, 1488.6949, -1721.7136, 8.2067, 5.0);
					TogglePlayerControllable(playerid, 1);
		}
		case 9:
		{
					HideMenuForPlayer(Place, playerid);
					ShowMenuForPlayer(Guide, playerid);
		}
		case 10:
		{
					HideMenuForPlayer(Place, playerid);
					TogglePlayerControllable(playerid, 1);
		}
		}
	}
	return 1;
}
public OnPlayerExitedMenu(playerid)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if (!IsValidMenu(Current)) return 1;
	ShowMenuForPlayer(Current, playerid);
	TogglePlayerControllable(playerid, 1);
	SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if (Spectated[playerid] > 0)
	{
		foreach(new i : Player)
		{
			if (Spectating[i] == 1 && SpecPlayer[i] == playerid)
			{
				PlayerSpectatePlayer(i, playerid, 1);
			}
		}
	}
	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	/*if(IsAnOwnableCar(vehicleid))
	{
	new Float:x,Float:y,Float:z;
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	CarInfo[vehicleid][cLocationx] = x;
	CarInfo[vehicleid][cLocationy] = y;
	CarInfo[vehicleid][cLocationz] = z;
	CarInfo[vehicleid][cAngle] = a;
	OnPropUpdate();
	}
	if(CarAutolock[vehicleid] == 1)
	{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if (IsLogOn(i))
	{
	SetVehicleParamsForPlayer(vehicleid,i,0,1);
	GameTextForPlayer(playerid,"~w~Car~n~~r~Autolocked",2500,3);
	return 1;
	}
	}
	}*/
	/*	new keycar = PlayerInfo[playerid][pPcarkey][0];
	new keycar2 = PlayerInfo[playerid][pPcarkey][1];
	new keycar3 = PlayerInfo[playerid][pPcarkey][2];
	new vehicle = GetPlayerVehicleID(playerid);
	if(IsAnOwnableCar(vehicleid))
	{
	if(keycar == vehicleid)
	{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if (IsLogOn(i))
	{
	SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
	GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
	CarInfo[keycar][cLock] = 1;
	}
	}
	else if(keycar2 == vehicleid)
	{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if (IsLogOn(i))
	{
	SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
	GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
	CarInfo[keycar2][cLock] = 1;
	}
	}
	else if(keycar3 == vehicleid)
	{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if (IsLogOn(i))
	{
	SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
	GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
	CarInfo[keycar3][cLock] = 1;
	}
	}
	}*/
	if (IsAHarvest(vehicleid))
	{
		if (FarmerVar[playerid] == 1)
		{
			SetTimer("FarmerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~r~7~w~ seconds~n~to get back on a harvest", 5000, 3);
		}
	}
	if (IsADrugHarvest(vehicleid))
	{
		if (DrugFarmerVar[playerid] == 1)
		{
			SetTimer("DrugFarmerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~b~7~w~ seconds~n~to get back on a harvest", 5000, 3);
		}
	}
	if (IsASmuggleCar(vehicleid))
	{
		if (SmugglerWork[playerid] == 1)
		{
			SetTimer("SmugglerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~r~7~w~ seconds~n~to get back in car", 5000, 3);
		}
	}
	if (gGas[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
	}
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		BusrouteEnd(playerid, vehicleid);
	}
	if (IsABus(vehicleid))
	{
		for (new i = 0; i <= MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (BusrouteEast[i][0] != 0 && BusrouteEast[i][1] == vehicleid)
				{
					//BusrouteEast[i][2] --;
					GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~g~Passenger Left The Bus", 5000, 3);
				}
				else if (BusrouteWest[i][0] != 0 && BusrouteWest[i][1] == vehicleid)
				{
					//BusrouteWest[i][2] --;
					GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~g~Passenger Left The Bus", 5000, 3);
				}
			}
		}
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if (newstate == PLAYER_STATE_DRIVER && IsAdminVehicle(GetPlayerVehicleID(playerid)) != -1)
	{
		VehicleEngine(GetPlayerVehicleID(playerid), true);
		return 1;
	}
	if (newstate == PLAYER_STATE_ONFOOT)
	{

	}
	if (newstate == PLAYER_STATE_DRIVER)
	{
		new vidzz = GetPlayerVehicleID(playerid);
		if (IsAPlane(vidzz) || IsAHarvest(vidzz) || IsADrugHarvest(vidzz) || IsASweeper(vidzz))
		{
			VehicleEngine(vidzz, true);
		}
		if (GetPVarInt(playerid, "FPS") == 1)
		{
			new p = GetPlayerVehicleID(playerid);
			fpsObj[playerid] = CreatePlayerObject(playerid, 19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
			if (IsABike(p))
			{
				AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.000000, 0.164999, 0.800000, 0.000000, 0.000000, 0.000000);
				AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
			}
			else
			{
				new seat = GetPlayerVehicleSeat(playerid);
				switch (seat)
				{
					case 1:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, -0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
								//AttachObjectToVehicle(objectid, vehicleid, 0.314999, -0.100000, -0.429999, 0.000000, 0.000000, 0.000000); //Object Model: 19300 |  0
					}
					case 2:
					{														//-0.314999, -0.195000, 0.510000
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
					case 3:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.314999, -0.795, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
					case 4:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, -0.314999, -0.795, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
				}
			}
		}
	}
	else if (GetPVarInt(playerid, "FPS") == 0)
	{
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, fpsObj[playerid]);
	}
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		if (GetPVarInt(playerid, "FPS") == 1)
		{
			fpsObj[playerid] = CreateObject(19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
			AttachObjectToPlayer(fpsObj[playerid], playerid, 0, 0.13900, 0.760000, 0.000000, 0.000000, 0.000000);
			AttachCameraToObject(playerid, fpsObj[playerid]);
		}
	}
	if ((newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) && Spectated[playerid] > 0)
	{
		foreach(new i : Player)
		{
			if (Spectating[i] == 1 && SpecPlayer[i] == playerid)
			{
				new vid = GetPlayerVehicleID(playerid);
				PlayerSpectateVehicle(i, vid);
			}
		}
		return 1;
	}
	if (newstate == PLAYER_STATE_PASSENGER && DrugDealing[playerid] == 1)
	{
		new vid = GetPlayerVehicleID(playerid);
		new drid = GetDriverVehicle(vid);
		if (DrugDealing[drid] == 1)
		{
			new rand = OldDD[drid];
			new str[128];
			format(str, sizeof(str), "%s hien tai dang buon lau, ban va han se hop tac buon lau cung nhau.", GN(drid));
			SCM(playerid, COLOR_GREEN, str);
			SCM(playerid, COLOR_GREEN, "Checkpoint nhan buon lau se duoc set cung voi nguoi lai xe.");
			SetPlayerCheckpoint(playerid, BuonLauTakeCP[rand][0], BuonLauTakeCP[rand][1], BuonLauTakeCP[rand][2], 5);
			OldDD[playerid] = rand;
		}
	}
	if (newstate == PLAYER_STATE_DRIVER && DrugDealing[playerid] == 1)
	{
		new vid = GetPlayerVehicleID(playerid);
		new count = 0;
		foreach(new psid : Player)
		{
			if (IsPlayerInVehicle(psid, vid) && psid != playerid && DrugDealing[psid] == 1)
			{
				new rand = OldDD[playerid];
				new str[128];
				format(str, sizeof(str), "%s hien tai dang buon lau, ban va han se hop tac buon lau cung nhau.", GN(psid));
				SCM(psid, COLOR_GREEN, str);
				SCM(psid, COLOR_GREEN, "Checkpoint nhan buon lau se duoc set cung voi nguoi lai xe.");
				SetPlayerCheckpoint(psid, BuonLauTakeCP[rand][0], BuonLauTakeCP[rand][1], BuonLauTakeCP[rand][2], 5);
				OldDD[psid] = rand;
				count++;
			}
		}
		if (count > 0) SCM(playerid, COLOR_GREEN, "Ban va nhung nguoi trong xe se cung hop tac giao hang cung nhau!");
	}
	new string[256];
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new vehicle = GetPlayerVehicleID(playerid);
	if (newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAPlane(vehicle) && !IsAHarvest(vehicle) && !IsADrugHarvest(vehicle) && !IsASweeper(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "ii", playerid);
	}
	else if (newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAPlane(vehicle) && !IsAHarvest(vehicle) && !IsADrugHarvest(vehicle) && !IsASweeper(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "ii", playerid);
	}
	if(DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && newstate != PLAYER_STATE_DRIVER && oldstate == PLAYER_STATE_DRIVER) {
		stop DriverLicenseLoop[playerid];
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerCheckpoint(playerid);
		SetVehicleVirtualWorld(DriverLicenseCar[playerid], 0);
		SetVirtualWorld(playerid, 0);
		SetVehicleToRespawn2(DriverLicenseCar[playerid]);
		DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
		SendClientMessage(playerid, COLOR_GRAD1, "Bai sat hach lai xe cua ban da bi huy");
		SafeGivePlayerMoney(playerid, DMVFEE/2);
		new str[255];
		format(str, sizeof(str), "Ban duoc nhan lai $%d do huy bai thi sat hach lai xe", DMVFEE/2);
		SendClientMessage(playerid, COLOR_GRAD1, str);
		HideDriverLicenseTD(playerid);
	}
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		if (PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
		{
			PlayerInKart[playerid] = 0;
			KartingPlayers--;
		}
		if (TransportDuty[playerid] > 0)
		{
			if (TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			else if (TransportDuty[playerid] == 2)
			{
				BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Ban da off Duty va kiem duoc $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
			/*ConsumingMoney[playerid] = 1;*/ TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if (TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
			if (IsLogOn(TransportDriver[playerid]))
			{
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "~w~Chuyen di ton~n~~r~$%d", TransportCost[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "~w~Hanh khac da roi khoi taxi~n~~g~Nhan duoc $%d", TransportCost[playerid]);
				GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				SafeGivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
				{
					if (GetPlayerMoney(playerid) < TransportValue[i])
					{
						format(string, sizeof(string), "* Ban can $%d de co the di.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						if (TransportDuty[i] == 1)
						{
							format(string, sizeof(string), "* Ban da tra $%d cho Taxi Driver.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Hang khach %s da len Taxi cua ban.", name);
							SendClientMessage(i, COLOR_WHITE, string);
							TransportTime[i] = 1;
							TransportTime[playerid] = 1;
							TransportCost[playerid] = TransportValue[i];
							TransportCost[i] = TransportValue[i];
							TransportDriver[playerid] = i;
						}
						else if (TransportDuty[i] == 2)
						{
							format(string, sizeof(string), "* Ban da tra $%d cho Bus Driver.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Hanh khac %s da len Bus cua ban.", name);
							SendClientMessage(i, COLOR_WHITE, string);
						}
						SafeGivePlayerMoney(playerid, -TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
					}
				}
			}
		}
	}
	if (newstate == PLAYER_STATE_WASTED)
	{
		if (WantedLevel[playerid] > 0)
		{
			new price = WantedLevel[playerid] * 10000;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (gTeam[i] == TEAMGOV && CrimInRange(30.0, playerid, i))
					{
						//count = 1;
						format(string, sizeof(string), "~w~Doi tuong da bi ha guc~r~Tien~n~Thuong~g~$%d", price);
						GameTextForPlayer(i, string, 5000, 1);
						//ConsumingMoney[i] = 1;
						SafeGivePlayerMoney(i, price / 2);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			//if (count == 1)
			//{
			//	/*SafeGivePlayerMoney(playerid, -price);
			//	PlayerInfo[playerid][pWantedDeaths] += 1;
			//	PlayerInfo[playerid][pJailed] = 1;
			//	PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(600);
			//	format(string, sizeof(string), "* Ban da vao tu trong %ds va nop phat $%d boi vi ban da chay tron canh sat va bi ban chet.", PlayerInfo[playerid][pJailTime], price);
			//	SendClientMessage(playerid, COLOR_LIGHTRED, string);
			//	WantedPoints[playerid] = 0;
			//	WantedLevel[playerid] = 0;*/
			//}
		}
	}

	if (newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new housecar = PlayerInfo[playerid][pPhousekey] + 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if (IsABoat(newcar))
		{
			if (PlayerInfo[playerid][pBoatLic] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co giay phep lai tau, ban can di mua giay phep !");
				RemovePlayerFromVehicle(playerid);
				//TogglePlayerControllable(playerid, 1);
			}
		}
		else if (IsAPlane(newcar))
		{
			if (PlayerInfo[playerid][pFlyLic] < 1)
			{
				if (TakingLesson[playerid] == 1) {}
				else {
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong co giay phep lai may bay, ban can di mua giay phep !");
					RemovePlayerFromVehicle(playerid);
					//TogglePlayerControllable(playerid, 1);
				}
			}
		}
		else
		{
			if (PlayerInfo[playerid][pCarLic] < 0)
			{
				if (PlayerDrunk[playerid] >= 5)
				{
					WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid, 255, "Drunk Driving");
				}

			}
			else if (PlayerDrunk[playerid] >= 5)
			{
				WantedPoints[playerid] += 1;
				SetPlayerCriminal(playerid, 255, "Drunk Driving");
			}

			if (PlayerInfo[playerid][pCarLic] < 1)
			{
				//if (IsABike(newcar) || IsAOBike(newcar)) {}
				if (IsABike(newcar)) {}
				else
				{
					/*if(PlayerInfo[playerid][pCarLic] < 1)
					{
					WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "Driving without License");
					}*/
					if ( DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && newcar == DriverLicenseCar[playerid]) {}
					else {
						SendClientMessage(playerid, COLOR_YELLOW, "   Ban khong co giay phep lai xe, hay lai xe can than neu khong muon bi cops chu y.");
					}
				}
			}
		}//Done with car check
		if (IsACopCar(newcar))
		{
			if (IsACop(playerid)) {}
			else { RemovePlayerFromVehicle(playerid); }
		}
		if (IsATank(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 3) {}
			else { RemovePlayerFromVehicle(playerid); }
		}
		if (IsAnFbiCar(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe nay.");
			}
		}
		if (IsNgCar(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe nay.");
			}
		}
		if (IsADoCCar(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe nay.");
			}
		}
		if (IsAGovernmentCar(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe nay.");
			}
		}
		if (IsAHspdCar(newcar))
		{
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] > 2) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe nay.");
			}
		}
		else if (IsAnAmbulance(newcar))
		{
			if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {}
			else { RemovePlayerFromVehicle(playerid); }
		}
		/*if(IsAGangCar(newcar))
		{
		if(PlayerInfo[playerid][pLeader] == 5||PlayerInfo[playerid][pMember] == 5) { }
		else {
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid, COLOR_GREY,"You don't have keys of this vehicle.");}
		}
		if(IsAGangCar2(newcar))
		{
		if(PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 6) { }
		else {
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid, COLOR_GREY,"You don't have keys of this vehicle.");}
		}
		if(IsAGangCar3(newcar))
		{
		if(PlayerInfo[playerid][pLeader] == 14||PlayerInfo[playerid][pMember] == 14) { }
		else {
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid, COLOR_GREY,"You don't have keys of this vehicle.");}
		}
		if(IsAGangCar4(newcar))
		{
		if(PlayerInfo[playerid][pLeader] == 15||PlayerInfo[playerid][pMember] == 15) { }
		else {
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid, COLOR_GREY,"You don't have keys of this vehicle.");}
		}
		if(IsAGangCar5(newcar))
		{
		if(PlayerInfo[playerid][pLeader] == 16||PlayerInfo[playerid][pMember] == 16) { }
		else {
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid, COLOR_GREY,"You don't have keys of this vehicle.");}
		}*/
		if (IsAPizzabike(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 17) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa cho chiec xe nay");
			}
		}
		if (IsABus(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 14)
			{
				GameTextForPlayer(playerid, "~w~Su dung lenh /starteast hoac /startwest de bat dau chuyen di", 5000, 3);
				SendClientMessage(playerid, COLOR_YELLOW2, "Ban da len xe buyt, An /exit de huy chuyen di.");
				//GangZoneShowForPlayer(playerid, buszonewest, COLOR_RED);
				//GangZoneShowForPlayer(playerid, buszoneeast, COLOR_BLUE);
				SendClientMessage(playerid, COLOR_YELLOW2, "De di tuyen xe WEST, dung /startwest. de di tuyen xe EAST, dung /starteast.");
				new routezonecheck = IsInBusrouteZone(playerid);
				if (routezonecheck == 0) SendClientMessage(playerid, COLOR_YELLOW, "Note: Tuyen duong gan nhat cua ban la Dong.");
				else if (routezonecheck == 1) SendClientMessage(playerid, COLOR_YELLOW, "Note: Tuyen duong gan nhat cua ban la Tay.");
				TogglePlayerControllable(playerid, 0);
			}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa xe buyt.");
			}
		}
		if (IsATowcar(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 7) {}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa phuong tien nay.");
			}
		}
		if (IsATruck(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 16)
			{
				/*format(string, sizeof(string), "Products: %d/%d", PlayerHaul[newcar][pLoad], PlayerHaul[newcar][pCapasity]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);*/
				if (Trucking[newcar] != 0)
					SCM(playerid, COLOR_GREEN, "Xe nay hien tai co hang, ban co the tiep tuc giao (/timgiaohang)");
				SendClientMessage(playerid, COLOR_WHITE, "Ban co the cung cap san phan cho cua hang .");
				SendClientMessage(playerid, COLOR_WHITE, "Lenh co the dung /layhang /timgiaohang");
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa cho xe nay.");
			}
		}
		if (IsASweeper(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 7)
			{
				GameTextForPlayer(playerid, "~g~/radinh ~w~De bat dau ra dinh trong thanh pho~n~Dung lenh ~r~/dungradinh ~w~De ket thuc", 5000, 3);
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa phuong tien nay.");
			}
		}
		if (PlayerKarting[playerid] != 0)
		{
			new kart = GetPlayerVehicleID(playerid);
			if (IsAKartCar(kart))
			{
				PlayerInKart[playerid] = 1;
				KartingPlayers++;
			}
		}
		if (IsASchoolCar(newcar))
		{
			if(GetPVarInt(playerid, "DriverLicenseTest") == 1) {
				SetPVarInt(playerid,"DriverLicenseTest", 0);
				DriverLicenseCar[playerid] = newcar;
				for(new i=0; i < MAX_PLAYERS; i++) {
					if(i == playerid) continue;
					SetVehicleParamsForPlayer(DriverLicenseCar[playerid],i,0,1);
				}

				SetPlayerRaceCheckpoint(playerid, 0, DriverLicensePos[0][0], DriverLicensePos[0][1], DriverLicensePos[0][2], DriverLicensePos[1][0], DriverLicensePos[1][1], DriverLicensePos[2][2], 5);

				SendClientMessage(playerid, COLOR_WHITE, "Bat dau bai thi sat hach lai xe.");
				SendClientMessage(playerid, COLOR_WHITE, "Chu y: Khong duoc roi khoi xe khi bai thi dang dien ra.");
			}
			else {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa phuong tien nay.");
			}
			
		}
		/*if (newcar == 166)
		{
			if (PlayerInfo[playerid][pMember] == 4) {}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa xe truck !");
				RemovePlayerFromVehicle(playerid);
			}
		}*/
		/*if (newcar == 38)
		{
			if (PlayerInfo[playerid][pRank] >= 3) {}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban phai rank 3 de su dung may bay nay !");
				RemovePlayerFromVehicle(playerid);
			}
		}*/
		/*if (newcar >= 96 && newcar <= 98)
		{
			if (PlayerInfo[playerid][pJob] != 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa xe truck !");
				RemovePlayerFromVehicle(playerid);
			}
		}*/
		if (IsATaxiCar(newcar))
		{
			if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay !");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (IsANewsCar(newcar))
		{
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9){}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "    Ban khong co chia khoa phuong tien nay !");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (IsAKartCar(newcar))
		{
			if (PlayerKarting[playerid] != 1)
			{
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (IsARentCar(newcar))
		{
			if (HireCar[playerid] != newcar)
			{
				if (IsABike(newcar))
					format(string, sizeof(string), "~w~Ban co thue chiec xe may nay~n~Cost:~g~$%d~n~~w~De thue an lenh~g~/rentbike~w~~n~to Thoat ra an lenh ~r~/exit", SBizzInfo[0][sbEntranceCost]);
				else format(string, sizeof(string), "~w~Ban co the thue xe nay~n~Cost:~g~$%d~n~~w~De thue an lenh~g~/rentcar~w~~n~De Thoat ra an lenh ~r~/exit", SBizzInfo[1][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		/*if (newcar >= 112 && newcar <= 130)
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~Ban co thue xe dap nay~n~Cost:~g~$%d~n~~w~De thue an lenh~g~/rentbike~w~~n~to Thoat ra an lenh ~r~/exit", SBizzInfo[0][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}*/
		if (IsAHitmanCar(newcar))
		{
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay !");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (IsAHarvest(newcar))
		{
			if (PlayerInfo[playerid][pJob] == 18)
			{
				if (FarmerVar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "___________Huong dan Farmer___________");
					SendClientMessage(playerid, COLOR_WHITE, "** Farmer ** /startharvest, /stopharvest or /exit");
					SendClientMessage(playerid, COLOR_RED, "__________________________________");
					TogglePlayerControllable(playerid, 0);
				}
				else {}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay !");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (IsADrugHarvest(newcar))
		{
			/*if (PlayerInfo[playerid][pJob] == 19)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "____________Huong dan Drug farmer____________");
				SendClientMessage(playerid, COLOR_WHITE, "** Drug farmer ** /startdrugharvest, /stopdrugharvest or /exit");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "_________________________________________");
				TogglePlayerControllable(playerid, 0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay !");
				RemovePlayerFromVehicle(playerid);
			}*/
		}
		if (IsASmuggleCar(newcar))
		{
			/*if (PlayerInfo[playerid][pJob] == 20)
			{
				if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Meo: Bay gio ban co the buon lau !");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay !");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{*/
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co chia khoa phuong tien nay  !");
				RemovePlayerFromVehicle(playerid);
			//}
		}
		/*if (oldcar != 301)
		{
			
		}*/
		if ((housecar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != housecar))
		{
			if (gLastDriver[oldcar] == playerid && oldcar != newcar)
			{
				gLastDriver[oldcar] = 300;
				gCarLock[oldcar] = 0;
				UnLockCar(oldcar);
			}
		}
		if (IsAnOwnableCar(newcar))
		{
			if (CarInfo[newcar][cOwned] == 0)
			{
				TogglePlayerControllable(playerid, 0);
				format(string, sizeof(string), "~w~Phuong tien: %s~n~Gia: ~g~%d$~n~~w~/v buy de mua phuong tien nay~n~~r~/exit ~w~to de roi khoi", CarInfo[newcar][cDescription], CarInfo[newcar][cValue]);
				GameTextForPlayer(playerid, string, 5000, 5);
			}
			if (CarInfo[newcar][cOwned] == 1)
			{
				format(string, sizeof(string), "Phuong tien nay thuoc ve %s", CarInfo[newcar][cOwner]);
				SendClientMessage(playerid, COLOR_BLUE, string);
				/*if(keycar != vehicle)
				{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GREY, "You don't have a key of this vehicle");
				}*/
				if (PlayerInfo[playerid][pAdmin] >= 1337 && AdminDuty[playerid] == 1)
					SendClientMessage(playerid, COLOR_GREY, "  Ban co the chay xe nay do ban la admin !");
				else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) != vehicle
					&& GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) != vehicle
					&& GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) != vehicle)
				{
					RemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_GREY, "Ban khong co chia khoa phuong tien nay");
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if (newstate == PLAYER_STATE_SPAWNED)
	{
		//new Float: lwx, Float:lwy, Float:lwz;
		//GetPlayerPos(playerid, lwx, lwy, lwz);
		//if ((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9, -1868.4, 79.1)) //the highest land point in sa = 526.8
		//	SetPlayerSpawn(playerid);
		//if (WantedPoints[playerid] > 0)
		//{
		//	new dstring[128];
		//	new wanted = WantedPoints[playerid];
		//	new diecash = 0;
		//	while (WantedPoints[playerid] > 0)
		//	{
		//		diecash += 500;
		//		WantedPoints[playerid] --;
		//	}
		//	format(dstring, sizeof(dstring), "Ban bi phat $%d vi hien dang bi truy na cap do %d .", diecash, wanted);
		//	SendClientMessage(playerid, COLOR_YELLOW, dstring);
		//	SafeGivePlayerMoney(playerid, -diecash);
		//	PlayerInfo[playerid][pWantedDeaths] += 1;
		//}
		if (PlayerOnMission[playerid] > 0)
		{
			GameTextForPlayer(playerid, "~r~Mission failed", 5000, 3);
			PlayerOnMission[playerid] = 0;
			PlayerInfo[playerid][pMissionNr] = 0;
		}
		//WantedPoints[playerid] = 0;
		//WantedLevel[playerid] = 0;
		if (PlayerInfo[playerid][pDonateRank] > 0) { SetPlayerHealth(playerid, 100.0); }
		else { SetPlayerHealth(playerid, 50.0 + PlayerInfo[playerid][pSHealth]); }
		//PlayerInfo[playerid][pHospital] = 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}
forward CameraDelay(playerid);
public CameraDelay(playerid)
{
	SetPlayerPos(playerid, 369.950805, -1788.111450, 8.951775);

	InterpolateCameraPos(playerid, 369.950805, -1788.111450, 8.951775, 369.644744, -1985.193359, 7.471849, 15000);
	InterpolateCameraLookAt(playerid, 372.290924, -1792.513671, 8.572257, 370.491302, -1990.051025, 8.300358, 14500);
	return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
	if (gPlayerLogged[playerid] == 0 && FirstSpawn[playerid] == 1)
	{
		TogglePlayerSpectating(playerid, true);
		if (RegistrationStep[playerid] == 0)
		{
			SetTimerEx("CameraDelay", 50, 0, "i", playerid);
			new string[256];
			ClearChatbox(playerid, 10);
			format(string, sizeof(string), "Chao mung den voi server Los Angeles Roleplay! Phien ban: %s", SCRIPT_VERSION);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW2, " ");

			if (gPlayerAccount[playerid] != 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban se bi kick ra khoi sever trong 30 giay neu ban khong dang nhap !");
				ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "DANG NHAP", "\n--------------------------LA-Roleplay--------------------------\nChao mung ban den voi server!\n\nVui long nhap password de dang nhap: ", "Dang Nhap", "Thoat");
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "LA Immigation Department: Xin vui long cung cap cac thong tin can thiet de nhap cu.");
				ShowPlayerDialog(playerid, DIALOG_REG, DIALOG_STYLE_PASSWORD, "DANG KY", "\n--------------------------LA-Roleplay--------------------------\nChao mung ban den voi server!\n\nNhap password de dang ki: ", "Dang Ky", "Thoat");
			}
		}
	}
	else SpawnPlayer(playerid);
	return 0;
}
public OnPlayerRegister(playerid, password[])
{
	new playername3[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername3, sizeof(playername3));
	format(PlayerInfo[playerid][pKey], 128, password);

	//Save Befor Update
	PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
	GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
	if ((PlayerInfo[playerid][pPos_x] == 0.0 && PlayerInfo[playerid][pPos_y] == 0.0 && PlayerInfo[playerid][pPos_z] == 0.0))
	{
		PlayerInfo[playerid][pPos_x] = 1684.9;
		PlayerInfo[playerid][pPos_y] = -2244.5;
		PlayerInfo[playerid][pPos_z] = 13.5;
	}
	if (Spectate[playerid] != 255)
	{
		PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
		PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
		PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
		PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
		PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
	}
	//Query
	new sql[256];
	format(sql, sizeof(sql), "INSERT INTO `user` (`Name`, `Password`, `Pos_x`, `Pos_y`, `Pos_z`, `RegisteredTime`) VALUES ('%s', '%s', %f, %f, %f, NOW())",
		playername3, PlayerInfo[playerid][pKey], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
	mysql_query(conn, sql);
	SendClientMessage(playerid, COLOR_YELLOW, "Dang ky thanh cong, ban co the dang nhap ngay bay gio!.");
	new str[128];
	format(str, sizeof(str), "[Tai Khoan Moi] Ten: %s (%d) | IP: %s", GN(playerid), playerid, GetIp(playerid));
	SendAdminMessage(COLOR_LIGHTRED, str);
	ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Dang Nhap", "\n--------------LA-Roleplay--------------\nChao mung ban den voi server!\n\nVui long nhap password de dang nhap: ", "Dang Nhap", "Thoat");
	return 1;
}
stock CheckLastLogin(playerid, lastlog[])
{
	new timestamp = GetSubTimeStampFromNow(lastlog);
	if (timestamp < 1800)
		SetPVarInt(playerid, "LoginBack", 1);
	return 1;
}
public OnPlayerLogin(playerid)
{
	new sql[200];
	format(sql, sizeof(sql), "SELECT * FROM user WHERE Name = '%s'", GLN(playerid));
	mysql_query(conn, sql);

	new str[128];
	new tempstr[128];
	new temp;
	new Float:tempf;
	cache_get_value_name_int(0, "Level", temp); PlayerInfo[playerid][pLevel] = temp;
	cache_get_value_name_int(0, "AdminLevel", temp); PlayerInfo[playerid][pAdmin] = temp;
	cache_get_value_name_int(0, "HelperLevel", temp); PlayerInfo[playerid][pHelper] = temp;
	cache_get_value_name_int(0, "DonateRank", temp); PlayerInfo[playerid][pDonateRank] = temp;
	cache_get_value_name_int(0, "UpgradePoints", temp); PlayerInfo[playerid][gPupgrade] = temp;
	cache_get_value_name_int(0, "ConnectedTime", temp); PlayerInfo[playerid][pConnectTime] = temp;
	cache_get_value_name_int(0, "Registered", temp); PlayerInfo[playerid][pReg] = temp;
	cache_get_value_name_int(0, "Sex", temp); PlayerInfo[playerid][pSex] = temp;
	cache_get_value_name_int(0, "Age", temp); PlayerInfo[playerid][pAge] = temp;
	cache_get_value_name_int(0, "Origin", temp); PlayerInfo[playerid][pOrigin] = temp;
	cache_get_value_name_int(0, "CK", temp); PlayerInfo[playerid][pCK] = temp;
	cache_get_value_name_int(0, "Muted", temp); PlayerInfo[playerid][pMuted] = temp;
	cache_get_value_name_int(0, "Respect", temp); PlayerInfo[playerid][pExp] = temp;
	cache_get_value_name_int(0, "Money", temp);	PlayerInfo[playerid][pCash] = temp;
	cache_get_value_name_int(0, "Bank", temp); PlayerInfo[playerid][pAccount] = temp;
	cache_get_value_name_int(0, "Crimes", temp); PlayerInfo[playerid][pCrimes] = temp;
	cache_get_value_name_int(0, "Kills", temp); PlayerInfo[playerid][pKills] = temp;
	cache_get_value_name_int(0, "Deaths", temp); PlayerInfo[playerid][pDeaths] = temp;
	cache_get_value_name_int(0, "Arrested", temp); PlayerInfo[playerid][pArrested] = temp;
	cache_get_value_name_int(0, "WantedDeaths", temp); PlayerInfo[playerid][pWantedDeaths] = temp;
	cache_get_value_name_int(0, "WantedPoints", temp); WantedPoints[playerid] = temp;
	UpdateWantedLevel(playerid);
	cache_get_value_name_int(0, "Phonebook", temp); PlayerInfo[playerid][pPhoneBook] = temp;
	cache_get_value_name_int(0, "LottoNr", temp); PlayerInfo[playerid][pLottoNr] = temp;
	cache_get_value_name_int(0, "Fishes", temp); PlayerInfo[playerid][pFishes] = temp;
	cache_get_value_name_int(0, "BiggestFish", temp); PlayerInfo[playerid][pBiggestFish] = temp;
	cache_get_value_name_int(0, "Job", temp); PlayerInfo[playerid][pJob] = temp;
	cache_get_value_name_int(0, "Paycheck", temp); PlayerInfo[playerid][pPayCheck] = temp;
	cache_get_value_name_int(0, "HeadValue", temp); PlayerInfo[playerid][pHeadValue] = temp;
	cache_get_value_name_int(0, "Jailed", temp); PlayerInfo[playerid][pJailed] = temp;
	cache_get_value_name_int(0, "JailRoom", temp); PlayerInfo[playerid][pJailRoom] = temp;
	cache_get_value_name_int(0, "JailTime", temp); PlayerInfo[playerid][pJailTime] = temp;
	cache_get_value_name_int(0, "Materials", temp); PlayerInfo[playerid][pMats] = temp;
	cache_get_value_name_int(0, "Drugs", temp); PlayerInfo[playerid][pDrugs] = temp;
	cache_get_value_name_int(0, "Leader", temp); PlayerInfo[playerid][pLeader] = temp;
	cache_get_value_name_int(0, "Member", temp); PlayerInfo[playerid][pMember] = temp;
	cache_get_value_name_int(0, "FMember", temp); PlayerInfo[playerid][pFMember] = temp;
	cache_get_value_name_int(0, "Rank", temp); PlayerInfo[playerid][pRank] = temp;
	cache_get_value_name_int(0, "Char", temp); PlayerInfo[playerid][pChar] = temp;
	/*cache_get_value_name_int(0, "ContractTime", temp);
	PlayerInfo[playerid][pContractTime] = temp; */
	cache_get_value_name_int(0, "DetSkill", temp); PlayerInfo[playerid][pDetSkill] = temp;
	cache_get_value_name_int(0, "SexSkill", temp); PlayerInfo[playerid][pSexSkill] = temp;
	cache_get_value_name_int(0, "BoxSkill", temp); PlayerInfo[playerid][pBoxSkill] = temp;
	cache_get_value_name_int(0, "LawSkill", temp); PlayerInfo[playerid][pLawSkill] = temp;
	cache_get_value_name_int(0, "MechSkill", temp); PlayerInfo[playerid][pMechSkill] = temp;
	cache_get_value_name_int(0, "JackSkill", temp); PlayerInfo[playerid][pJackSkill] = temp;
	cache_get_value_name_int(0, "CarSkill", temp); PlayerInfo[playerid][pCarSkill] = temp;
	cache_get_value_name_int(0, "NewsSkill", temp); PlayerInfo[playerid][pNewsSkill] = temp;
	cache_get_value_name_int(0, "DrugsSkill", temp); PlayerInfo[playerid][pDrugsSkill] = temp;
	cache_get_value_name_int(0, "CookSkill", temp); PlayerInfo[playerid][pCookSkill] = temp;
	cache_get_value_name_int(0, "FishSkill", temp); PlayerInfo[playerid][pFishSkill] = temp;
	cache_get_value_name_int(0, "PlantSkill", temp); PlayerInfo[playerid][pPlantSkill] = temp;
	cache_get_value_name_int(0, "TruckSkill", temp); PlayerInfo[playerid][pTruckSkill] = temp;
	cache_get_value_name_float(0, "SHealth", tempf); PlayerInfo[playerid][pSHealth] = tempf;
	cache_get_value_name_float(0, "Health", tempf); PlayerInfo[playerid][pHealth] = tempf;
	cache_get_value_name_int(0, "Int", temp); PlayerInfo[playerid][pInt] = temp;
	cache_get_value_name_int(0, "Local", temp); PlayerInfo[playerid][pLocal] = temp;
	cache_get_value_name_int(0, "Team", temp); PlayerInfo[playerid][pTeam] = temp;
	cache_get_value_name_int(0, "Model", temp); PlayerInfo[playerid][pModel] = temp;
	cache_get_value_name_int(0, "PhoneNr", temp); PlayerInfo[playerid][pPnumber] = temp;
	cache_get_value_name_int(0, "House", temp); PlayerInfo[playerid][pPhousekey] = temp;
	cache_get_value_name_int(0, "Biz", temp); PlayerInfo[playerid][pPbiskey] = temp;
	cache_get_value_name_float(0, "Pos_x", tempf); PlayerInfo[playerid][pPos_x] = tempf;
	cache_get_value_name_float(0, "Pos_y", tempf); PlayerInfo[playerid][pPos_y] = tempf;
	cache_get_value_name_float(0, "Pos_z", tempf); PlayerInfo[playerid][pPos_z] = tempf;
	cache_get_value_name_int(0, "CarLic", temp); PlayerInfo[playerid][pCarLic] = temp;
	cache_get_value_name_int(0, "FlyLic", temp); PlayerInfo[playerid][pFlyLic] = temp;
	cache_get_value_name_int(0, "BoatLic", temp); PlayerInfo[playerid][pBoatLic] = temp;
	cache_get_value_name_int(0, "FishLic", temp); PlayerInfo[playerid][pFishLic] = temp;
	cache_get_value_name_int(0, "GunLic", temp); PlayerInfo[playerid][pGunLic] = temp;
	cache_get_value_name_int(0, "CarTime", temp); PlayerInfo[playerid][pCarTime] = temp;
	cache_get_value_name_int(0, "PayDay", temp); PlayerInfo[playerid][pPayDay] = temp;
	cache_get_value_name_int(0, "PayDayHad", temp); PlayerInfo[playerid][pPayDayHad] = temp;
	cache_get_value_name_int(0, "Watch", temp); PlayerInfo[playerid][pWatch] = temp;
	cache_get_value_name_int(0, "Crashed", temp); PlayerInfo[playerid][pCrashed] = temp;
	cache_get_value_name_int(0, "Hospital", temp); PlayerInfo[playerid][pHospital] = temp;
	cache_get_value_name_int(0, "Wins", temp); PlayerInfo[playerid][pWins] = temp;
	cache_get_value_name_int(0, "Loses", temp); PlayerInfo[playerid][pLoses] = temp;
	cache_get_value_name_int(0, "AlcoholPerk", temp); PlayerInfo[playerid][pAlcoholPerk] = temp;
	cache_get_value_name_int(0, "DrugPerk", temp); PlayerInfo[playerid][pDrugPerk] = temp;
	cache_get_value_name_int(0, "MiserPerk", temp); PlayerInfo[playerid][pMiserPerk] = temp;
	cache_get_value_name_int(0, "PainPerk", temp); PlayerInfo[playerid][pPainPerk] = temp;
	cache_get_value_name_int(0, "TraderPerk", temp); PlayerInfo[playerid][pTraderPerk] = temp;
	cache_get_value_name_int(0, "Tutorial", temp); PlayerInfo[playerid][pTut] = temp;
	cache_get_value_name_int(0, "Mission", temp); PlayerInfo[playerid][pMissionNr] = temp;
	cache_get_value_name_int(0, "Warnings", temp); PlayerInfo[playerid][pWarns] = temp;
	cache_get_value_name_int(0, "VirWorld", temp); PlayerInfo[playerid][pVirWorld] = temp;
	cache_get_value_name_int(0, "Fuel", temp); PlayerInfo[playerid][pFuel] = temp;
	cache_get_value_name_int(0, "Married", temp); PlayerInfo[playerid][pMarried] = temp;
	cache_get_value_name(0, "MarriedTo", tempstr); format(PlayerInfo[playerid][pMarriedTo], 128, tempstr);
	cache_get_value_name_int(0, "FishTool", temp); PlayerInfo[playerid][pFishTool] = temp;
	cache_get_value_name_int(0, "InvWeapon", temp); PlayerInfo[playerid][pInvWeapon] = temp;
	cache_get_value_name_int(0, "InvAmmo", temp); PlayerInfo[playerid][pInvAmmo] = temp;
	cache_get_value_name_int(0, "Lighter", temp); PlayerInfo[playerid][pLighter] = temp;
	cache_get_value_name_int(0, "Cigarettes", temp); PlayerInfo[playerid][pCigarettes] = temp;
	cache_get_value_name_int(0, "Locked", temp); PlayerInfo[playerid][pLocked] = temp;
	cache_get_value_name_int(0, "Car", temp); PlayerInfo[playerid][pPcarkey][0] = temp;
	cache_get_value_name_int(0, "Car2", temp); PlayerInfo[playerid][pPcarkey][1] = temp;
	cache_get_value_name_int(0, "Car3", temp); PlayerInfo[playerid][pPcarkey][2] = temp;
	cache_get_value_name_int(0, "Bleeding", temp); PlayerInfo[playerid][pBleeding] = temp;
	cache_get_value_name_int(0, "HouseEntered", temp); PlayerInfo2[HouseEntered][playerid] = temp;
	for (new i = 0; i < 5; i++)
	{
		if (i < 4)
		{
			format(str, sizeof(str), "Gun%d", i + 1);
			cache_get_value_name_int(0, str, temp); PlayerInfo[playerid][pGun][i] = temp;
			format(str, sizeof(str), "Ammo%d", i + 1);
			cache_get_value_name_int(0, str, temp); PlayerInfo[playerid][pAmmo][i] = temp;
		}
		format(str, sizeof(str), "Note%d", i + 1);
		cache_get_value_name(0, str, tempstr); format(PlayerNote[playerid][i], 128, tempstr);

		format(str, sizeof(str), "Note%ds", i + 1);
		cache_get_value_name_int(0, str, temp); PlayerInfo[playerid][pNotes][i] = temp;
	}
	cache_get_value_name(0, "LastConnectedTime", tempstr);
	CheckLastLogin(playerid, tempstr);

	SetSpawnInfo(playerid, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	TogglePlayerSpectating(playerid, 0);
	SetCameraBehindPlayer(playerid);

	new LoadLevel = PlayerInfo[playerid][pLevel]; // Brian_Furious aka Anthony_Prince
	SetPlayerScore(playerid, LoadLevel); // Fixable Instant Show Level

	if (PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = 1612.3240;
		PlayerInfo[playerid][pPos_y] = -2330.1670;
		PlayerInfo[playerid][pPos_z] = 13.5469;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = TEAMCIVILLAIN;
		PlayerInfo[playerid][pModel] = 135;
		new randphone = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
		PlayerInfo[playerid][pPnumber] = randphone;
		PlayerInfo[playerid][pPhousekey] = 255;
		PlayerInfo[playerid][pPcarkey][0] = -1;
		PlayerInfo[playerid][pPcarkey][1] = -1;
		PlayerInfo[playerid][pPcarkey][2] = -1;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pFMember] = 255;
		PlayerInfo[playerid][pAccount] = 0;
		PlayerInfo[playerid][pReg] = 1;
		SafeGivePlayerMoney(playerid, 300);
	}
	if (PlayerInfo[playerid][pLocked] == 1) // Auto-kick
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Tai khoan cua ban da bi khoa;");
		KickEx(playerid);
	}
	if (PlayerInfo[playerid][pLevel] == -999) //autoban
		Ban(playerid);
	else if (PlayerInfo[playerid][pCK] > 0)
		KickEx(playerid);

	FirstSpawn[playerid] = 0;
	gPlayerLogged[playerid] = 1;

	TogglePlayerSpawn(playerid, true);
	TextDrawShowForPlayer(playerid, TDLoading);

	//PlayerInfo[playerid][pAdjustable] = 0;
	SafeResetPlayerMoney(playerid);
	//ConsumingMoney[playerid] = 1;
	SafeGivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];

	ClearChatbox(playerid, 8);
	SendClientMessage(playerid, COLOR_GREEN, "=============================================");
	format(str, sizeof(str), "Chao mung ban tham gia server Los Angeles Roleplay, %s.", GN(playerid));
	SendClientMessage(playerid, COLOR_WHITE, str);
	SendClientMessage(playerid, COLOR_GREEN, "=============================================");
	/*SendClientMessage(playerid, COLOR_WHITE, "Server Owned by Hoodstar");
	SendClientMessage(playerid, COLOR_WHITE, "Server Scripted by Hoodstar");
	SendClientMessage(playerid, COLOR_WHITE, "Official Ventrilo Server IP:");
	SendClientMessage(playerid, COLOR_WHITE, "Forums:");*/
	format(str, sizeof(str), "Phien ban: %s.", SCRIPT_VERSION);
	SendClientMessage(playerid, COLOR_WHITE, str);
	if (PlayerInfo[playerid][pDonateRank] > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Ban da dang nhap voi tai khoan VIP!");
	}
	if (PlayerInfo[playerid][pAdmin] > 0)
	{
		format(str, sizeof(str), "SERVER: Ban dang nhap voi tu cach la Admin Level %d Admin.", PlayerInfo[playerid][pAdmin]);
		SendClientMessage(playerid, COLOR_WHITE, str);
	}
	if (PlayerInfo[playerid][pHelper] > 0)
		CountAdvisor++;

	if (PlayerInfo[playerid][pBleeding] == 1)
		SCM(playerid, COLOR_LIGHTRED, "Ban hien tai dang bi thuong, hay den benh vien de chua tri.");

	SendClientMessage(playerid, COLOR_GREEN, "=============================================");
	SendClientMessage(playerid, COLOR_WHITE, " ");
	printf("%s da dang nhap.", GLN(playerid));

	if (PlayerInfo[playerid][pCrashed] == 0)
		format(str, sizeof(str), "~w~Welcome ~n~~y~   %s", GN(playerid));
	else
		format(str, sizeof(str), "~p~Crashed...~n~~w~Tro ve vi tri cu");
	DateProp(playerid);
	GameTextForPlayer(playerid, str, 5000, 1);

	//SendClientMessage(playerid, COLOR_YELLOW, motd);
	if(PlayerInfo[playerid][pFMember] < 255)
	{
		format(str, sizeof(str), "Family MOTD: %s.", FamilyInfo[PlayerInfo[playerid][pFMember]][fMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, str);
	}

	// Reset the FirstSpawn variable
	//SetTimerEx("UnsetFirstSpawn", 5000, false, "i", playerid);

	// Unset Crash
	//SetTimerEx("UnsetCrash", 5000, false, "i", playerid);
	//TogglePlayerControllable(playerid, 1);

	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (PlayerInfo[i][pMaskuse] == 1)
			{
				ShowPlayerNameTagForPlayer(playerid, i, 0);
			}
		}
	}

	DriverLicenseCar[playerid] = INVALID_VEHICLE_ID;
	return 1;
}
public OnPlayerEnterFood(playerid, foodid)
{
	switch (foodid)
	{
	case 1: // chicken
	{
				  SetPlayerInterior(playerid, 9);
				  PlayerInfo[playerid][pInt] = 9;
				  SetPlayerPos(playerid, 365.7793, -9.1699, 1001.8516);
				  SetPlayerCheckpoint(playerid, 368.9714, -6.2486, 1001.8516, 1.5);
				  GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
				  InAFoodPlace[playerid] = 1;
	}
	case 2: // burger
	{
				  SetPlayerInterior(playerid, 10);
				  PlayerInfo[playerid][pInt] = 10;
				  SetPlayerPos(playerid, 366.0324, -72.6400, 1001.5078);
				  SetPlayerCheckpoint(playerid, 376.8571, -67.6620, 1001.5151, 1.5);
				  GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
				  InAFoodPlace[playerid] = 2;
	}
	case 3: // pizza
	{
				  SetPlayerInterior(playerid, 5);
				  PlayerInfo[playerid][pInt] = 5;
				  SetPlayerPos(playerid, 372.4117, -130.4577, 1001.4922);
				  SetPlayerCheckpoint(playerid, 375.6895, -118.9683, 1001.4995, 1.5);
				  GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
				  InAFoodPlace[playerid] = 3;
	}
	case 4: // donuts
	{
				  SetPlayerInterior(playerid, 17);
				  PlayerInfo[playerid][pInt] = 17;
				  SetPlayerPos(playerid, 377.5237, -191.6597, 1000.6328);
				  SetPlayerCheckpoint(playerid, 379.0611, -186.6032, 1000.6328, 0.8);
				  GameTextForPlayer(playerid, "~w~Jim's sticky ring", 5000, 1);
				  InAFoodPlace[playerid] = 4;
	}
	}
	return 1;
}
public OnPlayerExitFood(playerid)
{
	DisableCheckpoint(playerid);
	InAFoodPlace[playerid] = 0;
	return 1;
}
forward OnPlayerHitGate(playerid, weaponid, gateid);
public OnPlayerHitGate(playerid, weaponid, gateid)
{
	if (gateid != -1 && GateInfo[gateid][gHealth] != -1)
	{
		new str[128];
		new rand = 5 + random(10);
		format(str, sizeof(str), "-%d", rand);
		SetPlayerChatBubble(playerid, str, COLOR_RED, 100.0, 20000);
		PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
		LastHitGate[playerid] = gateid;
		SetPVarInt(playerid, "LastHitTime", 60);
		HitGate(playerid, gateid, float(rand));
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	TazerKeyStateChange(playerid, newkeys, oldkeys);
	PlantKeyStateChange(playerid, newkeys, oldkeys);
	new newcar = GetPlayerVehicleID(playerid);
	if (PRESSED(KEY_WALK) && PlayerInfo[playerid][pFMember] < 255 &&
			FamilyInfo[PlayerInfo[playerid][pFMember]][fLevel] >= 2)
	{
		new pprison = GetClosestBehindPrisoner(playerid);
		if (pprison != -1 && GetPlayerSpecialAction(playerid) == 1)
		{
			ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_loop", 4.1, 1, 0, 0, 0, 0, 1);
			SetPVarInt(playerid, "TimeReleaseCuffed", 60);
			SetPVarInt(playerid, "RCPID", pprison);
		}
	}
	else if (RELEASED(KEY_WALK) && GetPVarInt(playerid, "TimeReleaseCuffed") != -1)
	{
		ClearAnimations(playerid);
		SetPVarInt(playerid, "TimeReleaseCuffed", -1);
		SetPVarInt(playerid, "RCPID", -1);
	}
	if (newkeys == KEY_FIRE && GetPVarInt(playerid, "DelayHitAnim") == 0)
	{
		SetPVarInt(playerid, "DelayHitAnim", 1);
		defer CheckHitGate(playerid);
	}
	if (newkeys == KEY_NO && IsPlayerInAnyVehicle(playerid) && IsAdminVehicle(newcar) == -1)
		return cmd_engine(playerid, "");
	//new string[256];
	//new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	/*else if (newkeys == KEY_SECONDARY_ATTACK)
	{
		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if (gEngine[playerid] == 0 && engineOn[newcar] == 0)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if (NoFuel[playerid] == 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
				return 1;
			}
		}
	}*/
	AnimOnPlayerKeyStateChange(playerid, newkeys, oldkeys);
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
	new giveplayerid;
	if (PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "Ban khong the noi, Ban da bi cam noi");
		return 0;
	}
	if (RegistrationStep[playerid] > 0)
	{
		if (RegistrationStep[playerid] == 1)
		{
			new idx;
			tmp = strtok(text, idx);
			if ((strcmp("nam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nam")))
			{
				PlayerInfo[playerid][pSex] = 1;
				SendClientMessage(playerid, COLOR_YELLOW2, "Gioi tinh cua ban la nam.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban sinh ngay may? (Tra loi dang: dd/mm/yyyy)");
				new maleskin;
				maleskin = random(sizeof(CivMalePeds));
				SetPlayerSkin(playerid, maleskin);
				PlayerInfo[playerid][pModel] = maleskin;
				PlayerInfo[playerid][pChar] = maleskin;
				RegistrationStep[playerid] = 2;
				return 0;
			}
			else if ((strcmp("nu", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nu")))
			{
				PlayerInfo[playerid][pSex] = 2;
				SendClientMessage(playerid, COLOR_YELLOW2, "Gioi tinh cua ban la nu.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban sinh ngay may? (Tra loi dang: dd/mm/yyyy)");
				new femaleskin;
				femaleskin = random(sizeof(CivFemalePeds));
				SetPlayerSkin(playerid, femaleskin);
				PlayerInfo[playerid][pModel] = femaleskin;
				PlayerInfo[playerid][pChar] = femaleskin;
				RegistrationStep[playerid] = 2;
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban la 'Nam' hay 'Nu'? (Go cau tra loi).");
			}
			return 0;
		}
		else if (RegistrationStep[playerid] == 2)
		{
			new year, month, day;
			getdate(year, month, day);
			new DateInfo[3][20];
			split(text, DateInfo, '/');
			if (year - strvalEx(DateInfo[2]) > 100 || strvalEx(DateInfo[2]) < 1 || strvalEx(DateInfo[2]) >= year)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban sinh ngay may? (Tra loi dang: dd/mm/yyyy)");
				return 0;
			}
			new check = year - strvalEx(DateInfo[2]);
			if (check == year)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban sinh ngay may? (Tra loi dang: dd/mm/yyyy)");
				return 0;
			}
			if (strvalEx(DateInfo[1]) > month)
			{
				check -= 1;
			}
			else if (strvalEx(DateInfo[1]) == month && strval(DateInfo[0]) > day)
			{
				check -= 1;
			}
			PlayerInfo[playerid][pAge] = check;
			format(string, sizeof(string), "Ban hien nay %d tuoi.", PlayerInfo[playerid][pAge]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			RegistrationStep[playerid] = 3;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Ban hien dang sinh song o? (Go: bac, trung hoac nam)");
			return 0;
		}
		else if (RegistrationStep[playerid] == 3)
		{
			new idx;
			tmp = strtok(text, idx);
			if ((strcmp("usa", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("bac")))
			{
				PlayerInfo[playerid][pOrigin] = 1;
				SendClientMessage(playerid, COLOR_YELLOW2, "Ban da khai bao minh den tu Mien Bac.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Cam on ban da tra loi cau hoi cua chung toi, chung ta se bat dau phan huong dan.");
				RegistrationStep[playerid] = 0;
				TutTime[playerid] = 1;
				return 0;
			}
			else if ((strcmp("trung", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("trung")))
			{
				PlayerInfo[playerid][pOrigin] = 2;
				SendClientMessage(playerid, COLOR_YELLOW2, "Ban da khai bao minh den tu Mien Trung.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Cam on ban da tra loi cau hoi cua chung toi, chung ta se bat dau phan huong dan.");
				RegistrationStep[playerid] = 0;
				TutTime[playerid] = 1;
				return 0;
			}
			else if ((strcmp("nam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nam")))
			{
				PlayerInfo[playerid][pOrigin] = 3;
				SendClientMessage(playerid, COLOR_YELLOW2, "Ban da khai bao minh den tu Mien Nam.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Cam on ban da tra loi cau hoi cua chung toi, chung ta se bat dau phan huong dan.");
				RegistrationStep[playerid] = 0;
				TutTime[playerid] = 1;
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ban hien dang sinh song o? (Go: bac, trung hoac nam)");
			}
			return 0;
		}
		return 0;
	}
	if (MarriageCeremoney[playerid] > 0)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			if (GotProposedBy[playerid] < 999)
			{
				if (IsLogOn(GotProposedBy[playerid]))
				{
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Priest: %s do you take %s as your lovely Wife? (type 'yes', anything else will reject the Marriage).", giveplayer, GN(playerid));
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if (ProposedTo[playerid] < 999)
			{
				if (IsLogOn(ProposedTo[playerid]))
				{
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if (PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Bride.", GN(playerid), giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Groom.", giveplayer, GN(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new lovely couple, %s & %s have been married.", GN(playerid), giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if (PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Bride.", GN(playerid), giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Groom.", giveplayer, GN(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new Gay couple, %s & %s have been married.", GN(playerid), giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if (PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Bride.", GN(playerid), giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Groom.", giveplayer, GN(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new Lesbian couple, %s & %s have been married.", GN(playerid), giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", GN(playerid));
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					SafeGivePlayerMoney(playerid, -20000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		else
		{
			if (GotProposedBy[playerid] < 999)
			{
				if (IsLogOn(GotProposedBy[playerid]))
				{
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.", giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.", GN(playerid));
					SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if (ProposedTo[playerid] < 999)
			{
				if (IsLogOn(ProposedTo[playerid]))
				{
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.", giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.", GN(playerid));
					SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		return 0;
	}
	if (WritingPaper[playerid] > 0)
	{
		new line;
		new nstring[256];
		new idx;
		new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result)-1)))
		{
			result[idx - offset] = text[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			if (WritingLine[playerid] == 1) { SendClientMessage(playerid, COLOR_GRAD2, "* Please type in the Title of your Newspaper."); }
			else { SendClientMessage(playerid, COLOR_LIGHTRED, "* Please type in a Text Line of your Newspaper."); }
			return 0;
		}
		format(nstring, sizeof(nstring), "%s", text);
		switch (WritingLine[playerid])
		{
		case 1:
		{
					new fstring[MAX_PLAYER_NAME];
					format(fstring, sizeof(fstring), "%s", GN(playerid));
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperMaker], fstring, 0, strlen(fstring), 255);
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperTitle], nstring, 0, strlen(nstring), 255);
					line = 0; WritingLine[playerid] = 2;
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Now you can write down the News Lines, 7 remaining.");
		}
		case 2:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText1], nstring, 0, strlen(nstring), 255);
					line = 1; WritingLine[playerid] = 3;
		}
		case 3:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText2], nstring, 0, strlen(nstring), 255);
					line = 2; WritingLine[playerid] = 4;
		}
		case 4:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText3], nstring, 0, strlen(nstring), 255);
					line = 3; WritingLine[playerid] = 5;
		}
		case 5:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText4], nstring, 0, strlen(nstring), 255);
					line = 4; WritingLine[playerid] = 6;
		}
		case 6:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText5], nstring, 0, strlen(nstring), 255);
					line = 5; WritingLine[playerid] = 7;
		}
		case 7:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText6], nstring, 0, strlen(nstring), 255);
					line = 6; WritingLine[playerid] = 8;
		}
		case 8:
		{
					strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText7], nstring, 0, strlen(nstring), 255);
					PaperInfo[WritingPaperNumber[playerid]][PaperUsed] = 1;
					SavePapers();
					line = 7; WritingLine[playerid] = 0; WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999;
		}
		}
		if (line > 0)
		{
			format(string, sizeof(string), "* You wrote Line %d of the Newspaper.", line);
			SendClientMessage(playerid, COLOR_WHITE, string);
			if (line == 7)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Your Newspaper has been added to the News List (for Paper Boys).");
			}
		}
		return 0;
	}
	if (ConnectedToPC[playerid] == 255)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("Contracts", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contracts")))
		{
			if (PlayerInfo[playerid][pRank] < 4)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Only Hitman with Rank 4 or above can search and assign Contracts !");
				return 0;
			}
			SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("News", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("News")))
		{
			new x_nr[256];
			x_nr = strtok(text, idx);

			if (!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Hitman Agency News __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: News [number] or News delete [number] or News delete all");
				format(string, sizeof(string), "1: %s :: Hitman: %s", News[hAdd1], News[hContact1]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "2: %s :: Hitman: %s", News[hAdd2], News[hContact2]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "3: %s :: Hitman: %s", News[hAdd3], News[hContact3]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "4: %s :: Hitman: %s", News[hAdd4], News[hContact4]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "5: %s :: Hitman: %s", News[hAdd5], News[hContact5]);
				SendClientMessage(playerid, COLOR_GREY, string);
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
				return 0;
			}//lets start
			if (strcmp(x_nr, "1", true) == 0)
			{
				if (PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				if (News[hTaken1] == 0)
				{
					if (strlen(text) - (strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
					format(string, sizeof(string), "%s", right(text, strlen(text) - 7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", GN(playerid)); strmid(News[hContact1], string, 0, strlen(string), 255);
					News[hTaken1] = 1; PlacedNews[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Spot 1 is already Taken !");
					return 0;
				}
			}
			else if (strcmp(x_nr, "2", true) == 0)
			{
				if (PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				if (News[hTaken2] == 0)
				{
					if (strlen(text) - (strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
					format(string, sizeof(string), "%s", right(text, strlen(text) - 7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", GN(playerid)); strmid(News[hContact2], string, 0, strlen(string), 255);
					News[hTaken2] = 1; PlacedNews[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Spot 2 is already Taken !");
					return 0;
				}
			}
			else if (strcmp(x_nr, "3", true) == 0)
			{
				if (PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				if (News[hTaken3] == 0)
				{
					if (strlen(text) - (strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
					format(string, sizeof(string), "%s", right(text, strlen(text) - 7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", GN(playerid)); strmid(News[hContact3], string, 0, strlen(string), 255);
					News[hTaken3] = 1; PlacedNews[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Spot 3 is already Taken !");
					return 0;
				}
			}
			else if (strcmp(x_nr, "4", true) == 0)
			{
				if (PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				if (News[hTaken4] == 0)
				{
					if (strlen(text) - (strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
					format(string, sizeof(string), "%s", right(text, strlen(text) - 7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", GN(playerid)); strmid(News[hContact4], string, 0, strlen(string), 255);
					News[hTaken4] = 1; PlacedNews[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Spot 4 is already Taken !");
					return 0;
				}
			}
			else if (strcmp(x_nr, "5", true) == 0)
			{
				if (PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				if (News[hTaken5] == 0)
				{
					if (strlen(text) - (strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
					format(string, sizeof(string), "%s", right(text, strlen(text) - 7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", GN(playerid)); strmid(News[hContact5], string, 0, strlen(string), 255);
					News[hTaken5] = 1; PlacedNews[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Spot 5 is already Taken !");
					return 0;
				}
			}
			else if (strcmp(x_nr, "delete", true) == 0)
			{
				if (PlayerInfo[playerid][pRank] < 4)
				{
					SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 4 to delete messages from the News Channel !");
					return 0;
				}
				new string1[MAX_PLAYER_NAME];
				new x_tel[256];
				x_tel = strtok(text, idx);
				if (!strlen(x_tel)) {
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: News delete [number] or News delete all.");
					return 0;
				}
				if (strcmp(x_tel, "1", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
					News[hTaken1] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (1) from the Hitman Agency's News Channel.");
					return 0;
				}
				else if (strcmp(x_tel, "2", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
					News[hTaken2] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (2) from the Hitman Agency's News Channel.");
					return 0;
				}
				else if (strcmp(x_tel, "3", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
					News[hTaken3] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (3) from the Hitman Agency's News Channel.");
					return 0;
				}
				else if (strcmp(x_tel, "4", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
					News[hTaken4] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (4) from the Hitman Agency's News Channel.");
					return 0;
				}
				else if (strcmp(x_tel, "5", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
					News[hTaken5] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (5) from the Hitman Agency's News Channel.");
					return 0;
				}
				else if (strcmp(x_tel, "all", true) == 0)
				{
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
					News[hTaken1] = 0;
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
					News[hTaken2] = 0;
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
					News[hTaken3] = 0;
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
					News[hTaken4] = 0;
					format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
					format(string1, sizeof(string1), "No-one");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
					News[hTaken5] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You deleted all the News Message from the Hitman Agency's News Channel.");
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: News delete [number] or News delete all.");
					return 0;
				}
			}
			else { return 0; }
		}
		else if ((strcmp("Givehit", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Givehit")))
		{
			if (PlayerInfo[playerid][pRank] < 4)
			{
				SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 to Give Contracts to Hitmans !");
				return 0;
			}
			if (hitfound == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong co Hit, su dung Contract trong Portable !");
				return 0;
			}
			tmp = strtok(text, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: Givehit [playerid/PartOfName]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pMember] == 8 || PlayerInfo[giveplayerid][pLeader] == 8)
					{
						if (GoChase[giveplayerid] < 999)
						{
							SendClientMessage(playerid, COLOR_GREY, "   That Hitman is already busy with a Contract !");
							return 0;
						}
						if (IsLogOn(hitidz))
						{
							GetPlayerName(giveplayerid, giver, sizeof(giver));
							GetPlayerName(hitidz, giveplayer, sizeof(giveplayer));
							//format(string, sizeof(string), "* You assigned%s to kill: %s(ID:%d), for $%d.", giver, giveplayer, hitidz, PlayerInfo[hitidz][pValue]);
							//SendClientMessage(playerid, COLOR_YELLOW, string);
							//format(string, sizeof(string), "* Hitman %s has assigned you to kill: %s(ID:%d), for $%d.", GN(playerid), giveplayer, hitidz, PlayerInfo[hitidz][pValue]);
							//SendClientMessage(giveplayerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "* Hitman %s, assigned Hitman %s to kill: %s(ID:%d), for $%d.", GN(playerid), giver, giveplayer, hitidz, PlayerInfo[hitidz][pHeadValue]);
							SendFamilyMessage(8, COLOR_YELLOW, string);
							GoChase[giveplayerid] = hitidz;
							GetChased[hitidz] = giveplayerid;
							GotHit[hitidz] = 1;
							hitidz = 0;
							hitfound = 0;
							return 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   The Contracted Person is offline, use Contracts in the Portable again !");
							return 0;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That player is not a Hitman !");
						return 0;
					}
				}
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   That Hitman is not Online, or ain't a Hitman !");
				return 0;
			}
		}
		else if ((strcmp("Ranks", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Ranks")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Agency's Ranks __________________|");
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pLeader] == 8)
					{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s: Rank %d", giveplayer, PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("Order", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Order")))
		{
			if (OrderReady[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   You already Ordered a Package, pick it up at your Head Quarter's Front Door first !");
				return 0;
			}
			tmp = strtok(text, idx);
			if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
				if (PlayerInfo[playerid][pRank] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 4999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 1 ($5000), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 1;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
				if (PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 5999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 2 ($6000), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 2;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
				if (PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 5999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 3 ($6000), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 3;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 7999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 4 ($8000), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 4;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
				if (PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 7999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 5 ($8000), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 5;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
				if (PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 8499)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 6 ($8500), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 6;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
				if (PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
				if (GetPlayerMoney(playerid) > 8499)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 7 ($8500), it will be delivered at your Head Quarter's Front Door.");
					OrderReady[playerid] = 7;
					return 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that Package !");
					return 0;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Available Packages __________________|");
				if (PlayerInfo[playerid][pRank] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) ($5000 ) Rank 1 - 5: Knife, Desert Eagle, MP5, Shotgun"); }
				if (PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, M4, MP5, Shotgun"); }
				if (PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun"); }
				if (PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) ($8000) Rank 3 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
				if (PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) ($8000) Rank 3 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
				if (PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) ($8500) Rank 4 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
				if (PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) ($8500) Rank 4 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
				return 0;
			}
		}
		else if ((strcmp("Logout", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Logout")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Ban da tat laptop, va ngat ket noi voi he thong to chuc.");
			ConnectedToPC[playerid] = 0;
			return 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "|___ Hitman Agency ___|");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Backup");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
			SendClientMessage(playerid, COLOR_YELLOW2, "|");
			SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
			return 0;
		}
		return 0;
	}
	if (CallLawyer[playerid] == 111)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			format(string, sizeof(string), "** %s dang trong thoi gian cai tao, va can mot luat su. Hay den don canh sat.", GN(playerid));
			SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
			SendJobMessage(2, TEAM_AZTECAS_COLOR, "* Khi ban dang o don canh sat, yeu cau si quan cho phep ban goi luat su cua minh /accept lawyer.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Tin nhan da duoc gui den cac luat su dang lam viec, xin cho.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Khong co luat su nao bien ho cho ban, Thoi gian cai tao bat dau.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
	}
	if (TalkingLive[playerid] != 255)
	{
		if (PlayerInfo[playerid][pJob] == 6)
		{
			format(string, sizeof(string), "LiveNR %s: %s", GN(playerid), text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
			format(string, sizeof(string), "Live interview %s: %s", GN(playerid), text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if (Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		if (UnidentifedCall[playerid] == 1)
		{
			format(string, sizeof(string), "Stranger Noi (cellphone): %s", text);
		}
		else
		{
			format(string, sizeof(string), "%s Noi (cellphone): %s", GN(playerid), text);
		}
		ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if (Mobile[playerid] == 914)
		{
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: Xin loi toi khong hieu ?");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: Chung toi da thong bao den cac don vi trong khu vuc.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Cam on ban da bao cao ve su co");
			format(wanted, sizeof(wanted), "Dispatch: All Units IA: Nguoi goi: %s", turner);
			SendTeamBeepMessage(1, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "Dispatch: Su co: %s", text);
			SendTeamMessage(1, TEAM_CYAN_COLOR, wanted);
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
			SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
			Mobile[playerid] = 255;
			return 0;
		}
		if (Mobile[playerid] == 913)
		{
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Xin loi  toi khong hieu ?");
				return 0;
			}
			if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "Police Dispatch: Cac don vi da duoc giao nhiem vu cho truong hop tren.");
				SendClientMessage(playerid, COLOR_DBLUE, "Cam on ban da bao cao ve vu an");
				format(wanted, sizeof(wanted), "HQ: All Units APB: Nguoi bao cao: %s", turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "HQ: Crime: %s, Nghi ngo: Khong ro", PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				new Float:trace_x, Float:trace_y, Float:trace_z;
				GetPlayerPos(playerid, trace_x, trace_y, trace_z);
				pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
				SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsLogOn(badguy))
			{
				if (badguy != INVALID_PLAYER_ID)
				{
					if (gTeam[badguy] == TEAMGOV)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police Dispatch: Ban se phai lien he voi ben noi bo. Day la duong day nong");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police Dispatch: Cac don vi da duoc giao nhiem vu cho truong hop tren");
						SendClientMessage(playerid, COLOR_DBLUE, "Cam on ban da bao cao ve vu an");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police Dispatch: Dung lam gi dai dot xung quanh, Day la duong day nong.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Police Dispatch: Chung toi da thong bao den cac don vi trong khu vuc.");
					SendClientMessage(playerid, COLOR_DBLUE, "Cam on ban da bao cao ve vu an");
					new Float:trace_x, Float:trace_y, Float:trace_z;
					GetPlayerPos(playerid, trace_x, trace_y, trace_z);
					pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
					SetPlayerCriminal(badguy, playerid, PlayerCrime[playerid][pAccusing]);
					if (WantedPoints[badguy] > 0) {}
					else { WantedPoints[badguy] += 2; }
					SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "Police Dispatch: Toi khong co thong tin tren %s, ban co chac da khai dung ten ?", tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if (Mobile[playerid] == 912)
		{
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Xin loi toi khong hieu ?");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Neu ban biet ten cua ke gay an hay chut it thi hay noi neu khong thi hay noi khong.");
			Mobile[playerid] = 913;
			return 0;
		}
		if (Mobile[playerid] == 911)
		{
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Xin loi toi khong hieu, canhsat hay cuuthuong ?");
				return 0;
			}
			else if ((strcmp("canhsat", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("canhsat")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Toi dang lien ket cuoc goi voi trung tam canh sat, xin giu may.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "HQ: Xin hay cho toi biet mot vai mo ta ve vu an va vi tri.");
				return 0;
			}
			else if ((strcmp("cuuthuong", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("cuuthuong")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Toi dang lien ket cuoc goi voi benh vien trung tam, xin giu may.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: Xin hay cho toi biet mot vai mo ta ve su co.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Xin loi toi khong hieu, canhsat hay cuuthuong?");
				return 0;
			}
		}
		if (Mobile[playerid] == 3900)
		{
			SendFamilyMessage(9, COLOR_GREEN, "Chung toi co mot tin nhan moi:");
			format(string, sizeof(string), "[ID:%d] %s noi: %s", playerid, GN(playerid), text);
			SendFamilyMessage(9, COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_GREEN, "ABC Studio: Cam on ban da cung cap thong tin !");
			SendClientMessage(playerid, COLOR_GRAD2, "   Ho da cup may...");
			Mobile[playerid] = 255;
			return 0;
		}
		/*if(Mobile[playerid] == 1180)
		{
		if(!strlen(tmp))
		{
		SendClientMessage(playerid, COLOR_GREEN, "Advertisement business: What would you like to advertise?");
		return 0;
		}
		
		new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' '))
		{
		idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
		result[idx - offset] = text[idx];
		idx++;
		}
		result[idx - offset] = EOS;
		if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
		{
		format(string, sizeof(string), "   Please try again later %d seconds between Advertisements !",  (addtimer/1000));
		SendClientMessage(playerid, COLOR_GRAD2, string);
		return 1;

		}
		new payout = idx * 10;
		if(GetPlayerMoney(playerid) < payout + 200)
		{
		format(string, sizeof(string), "* You used %d characters which cost $%d, you don't have enough.", offset, payout);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		return 1;
		}
		SafeGivePlayerMoney(playerid, - payout);
		SafeGivePlayerMoney(playerid, - 200);
		SBizzInfo[7][sbTill] += payout + 200;
		ExtortionSBiz(7, payout + 200);
		format(string, sizeof(string), "[Advert] %s, So dien thoai: %d",  result, PlayerInfo[playerid][pPnumber]);
		OOCNews(TEAM_GROVE_COLOR,string);
		format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters~n~~w~Plus ~g~200$~w~ for ad through phone", payout, idx);
		GameTextForPlayer(playerid, string, 5000, 1);
		if (PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0);adds = 0;}
		}*/
		if (IsLogOn(Mobile[playerid]))
		{
			if (Mobile[Mobile[playerid]] == playerid)
			{
				if (PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
				{
					ProxDetector(20.0, Mobile[playerid], string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				}
				else
				{
					SendClientMessage(Mobile[playerid], COLOR_YELLOW, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Khong co ai o do");
		}
		return 0;
	}
	if (BusShowLocation[playerid][0] == 1)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			SetPlayerCheckpoint(playerid, BusShowLocation[playerid][1], BusShowLocation[playerid][2], BusShowLocation[playerid][3], 3.0);
			SendClientMessage(playerid, COLOR_YELLOW, "Co mot dia diem (red checkpoint), Tot nhat la ban nen nhanh len!");
			BusShowLocation[playerid][0] = 0;
			BusShowLocationC[playerid] = 1;
			return 0;
		}
		else
		{
			BusShowLocation[playerid][0] = 0;
			return 0;
		}
	}
	if (realchat)
	{
		if (gPlayerLogged[playerid] == 0)
		{
			return 0;
		}
		if (!IsPlayerInAnyVehicle(playerid))
		{
			if (PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "Stranger noi: %s", text);
				ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			}
			else
			{
				format(string, sizeof(string), "%s noi: %s", GN(playerid), text);
				ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			}
		}
		else
		{
			new carid = GetPlayerVehicleID(playerid);
			new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsABike(carid) || IsAPizzabike(carid) || IsAPlane(carid) || IsABoat(carid) || IsASweeper(carid) || IsAHarvest(carid) || IsADrugHarvest(carid) || IsATank(carid) || pveh == 523 || pveh == 480 || pveh == 567 || pveh == 533 || pveh == 555 || pveh == 539 || pveh == 572 || pveh == 571 || pveh == 530 || pveh == 457 || pveh == 575 || pveh == 536 || pveh == 424)
			{
				if (PlayerInfo[playerid][pMaskuse] == 1)
				{
					format(string, sizeof(string), "Stranger noi: %s", text);
					ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				}
				else
				{
					format(string, sizeof(string), "%s noi: %s", GN(playerid), text);
					ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				}
			}
			else
			{
				if (VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
				{
					if (PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Cua so dong) Stranger noi: %s", text);
						ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
					else
					{
						format(string, sizeof(string), "(Cua so dong) %s noi: %s", GN(playerid), text);
						ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
				}
				else
				{
					if (PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Cua so mo) Stranger noi: %s", text);
						ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
					else
					{
						format(string, sizeof(string), "(Cua so mo) %s noi: %s", GN(playerid), text);
						ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
				}
			}
		}
		return 0;
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if (dialogid == DIALOG_REG)
	{
		if (response)
		{
			OnPlayerRegister(playerid, inputtext);
		}
		else KickEx(playerid);
		return 1;
	}
	if (dialogid == DIALOG_LOGIN)
	{
		if (response)
		{
			if (isnull(inputtext))
			{
				ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "DANG NHAP", "\n--------------LA-Roleplay--------------\nChao mung ban den voi server!\n\nXin vui long nhap mat khau: ", "Dang Nhap", "Thoat");
				return 1;
			}
			if (!strcmp(PlayerInfo[playerid][pKey], inputtext, false))
				OnPlayerLogin(playerid);
			else
			{
				new str[128];
				format(str, sizeof(str), "\n--------------------------LA-Roleplay--------------------------\nChao mung ban den voi server!\n\nMat khau sai, ban con %d lan de thu lai: ", 4 - gPlayerLogTries[playerid]);
				ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "DANG NHAP", str, "Dang Nhap", "Thoat");
				gPlayerLogTries[playerid] += 1;
				if (gPlayerLogTries[playerid] == 4) { KickEx(playerid); }
			}
			return 1;
		}
		else KickEx(playerid);
	}

	if (dialogid == DIALOG_FINDTRUCK)
	{
		if (!response) return 1;
		if (listitem == 0)
		{
			if (!CheckAllBizTruck()) return SCM(playerid, COLOR_GREY, "Khong co cua hang nao hien tai co the giao hang");
			new bizid = GetRandomBiz();
			new str[128];
			new title[300];
			format(title, sizeof(title), BizzInfo[bizid][bMessage]);
			DeleteTextLetter(title);
			format(str, sizeof(str), "Tu dong tim cua hang %s. Chu so huu: %s", title, BizzInfo[bizid][bOwner]);
			SCM(playerid, COLOR_LIGHTGREEN, str);
			SetCheckpoint(playerid, BizzInfo[bizid][bEntranceX], BizzInfo[bizid][bEntranceY], BizzInfo[bizid][bEntranceZ], 5);
			SCM(playerid, COLOR_LIGHTBLUE, "Checkpoint chi co cong dung chi duong! Ban co the dung /timgiaohang de tim cua hang khac!");
		}
		else if (listitem == 1)
		{
			new string[500];
			format(string, sizeof(string), "%s", GetBizLoadTruck());
			ShowPlayerDialog(playerid, DIALOG_SELECTTRUCK, DIALOG_STYLE_TABLIST_HEADERS, "Chon cua hang", string, "Chon", "Thoat");
		}
		return 1;
	}
	if (dialogid == DIALOG_SELECTTRUCK)
	{
		if (!response) return 1;
		//LoadTruck(playerid, listitem);
		SetCheckpoint(playerid, BizzInfo[listitem][bEntranceX], BizzInfo[listitem][bEntranceY], BizzInfo[listitem][bEntranceZ], 5);
		return 1;
	}
	if(dialogid == DIALOG_DRIVERLICENSE_RULE)
	{
		DriverLicenseLoop[playerid] = repeat DriverLicenseTimer(playerid);
		return 1;
	}
	if (dialogid == DIALOG_FAMILYSAFE)
	{
		if (!response) return 1;
		SetPVarInt(playerid, "SafeType", listitem + 1);
		new fid = PlayerInfo[playerid][pFMember];
		new money = FamilyInfo[fid][fMoney];
		new mats = FamilyInfo[fid][fMats];
		new drugs = FamilyInfo[fid][fDrugs];
		new weapontotal = CountFamilySafeWeapon(fid);
		new str[128];
		format(str, sizeof(str), "Vat Pham\tSo Luong\n\
											Tien\t%s$\n\
											Vat Lieu\t%d\n\
											Thuoc\t%d\n\
											Vu Khi\t%d", AddCommas(money), mats, drugs, weapontotal);
		ShowPlayerDialog(playerid, DIALOG_LISTSAFE, DIALOG_STYLE_TABLIST_HEADERS, "FAMILY SAFE", str, "Chon", "Thoat");
	}
	if (dialogid == DIALOG_LISTSAFE)
	{
		if (!response) return 1;
		new type = GetPVarInt(playerid, "SafeType");
		if (listitem == 3)
		{
			new fid = PlayerInfo[playerid][pFMember];
			if (type == 1)
			{
				if (CountFamilySafeWeapon(fid) == 0) return SCM(playerid, COLOR_GREY, "Family Safe khong co vu khi.");
				new str[300];
				format(str, sizeof(str), "Vu Khi\tSo Luong\n");
				GetListSafeWeapon(fid, str, 128);
				ShowPlayerDialog(playerid, DIALOG_TWEAPONSAFE, DIALOG_STYLE_TABLIST_HEADERS, "FAMILY SAFE", str, "Chon", "Thoat");
			}
			else
			{
				new str[300], wname[50], count = 0;
				for (new i = 0; i < 13; i++)
				{
					if (ScriptWeapons[playerid][i] != 0)
					{
						GetWeaponName(ScriptWeapons[playerid][i], wname, sizeof(wname));
						format(str, sizeof(str), "%s%s\n", str, wname);
						count++;
					}
				}
				if (count == 0) return SCM(playerid, COLOR_GREY, "Ban khong co vu khi de bo vao Family Safe.");
				ShowPlayerDialog(playerid, DIALOG_PWEAPONSAFE, DIALOG_STYLE_LIST, "FAMILY SAFE", str, "Chon", "Thoat");
			}
			return 1;
		}
		new str[128];
		FormatAmountInput(str, sizeof(str), type, listitem+1);
		ShowPlayerDialog(playerid, DIALOG_AMOUNTSAFE, DIALOG_STYLE_INPUT, "FAMILY SAFE", str, "Chon", "Thoat");
		SetPVarInt(playerid, "ListSafe", listitem + 1);
	}
	if (dialogid == DIALOG_AMOUNTSAFE)
	{
		if (!response) return 1;
		new str[128];
		new type = GetPVarInt(playerid, "SafeType");
		new safeitem = GetPVarInt(playerid, "ListSafe");
		if (!IsNumeric(inputtext))
		{
			FormatAmountInput(str, sizeof(str), type, listitem + 1);
			format(str, sizeof(str), "Vui long nhap so luong bang so\n%s", str);
			ShowPlayerDialog(playerid, DIALOG_AMOUNTSAFE, DIALOG_STYLE_INPUT, "FAMILY SAFE", str, "Chon", "Thoat");
			return 1;
		}
		new amount = strval(inputtext), fid = PlayerInfo[playerid][pFMember];
		if (amount <= 0)
		{
			FormatAmountInput(str, sizeof(str), type, listitem + 1);
			format(str, sizeof(str), "So luong phai lon hon 0!\n%s", str);
			ShowPlayerDialog(playerid, DIALOG_AMOUNTSAFE, DIALOG_STYLE_INPUT, "FAMILY SAFE", str, "Chon", "Thoat");
		}
		if (type == 1)
		{
			if (safeitem == 1)
			{
				new leaderid = GetFamilyIDLeader(playerid);
				if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nen khong the lay.");
				if (FamilyInfo[fid][fMoney] < amount) SCM(playerid, COLOR_GREY, "Safe khong du tien de lay.");
				SafeGivePlayerMoney(playerid, amount);
				FamilyInfo[fid][fMoney] -= amount;
				format(str, sizeof(str), "[Family] Leader %s da rut %s$ tu Safe.", GN(playerid), AddCommas(amount));
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
			if (safeitem == 2)
			{
				if (PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "Ban phai rank 3 tro len moi co the lay.");
				if (FamilyInfo[fid][fMats] < amount) return SCM(playerid, COLOR_GREY, "Khong du vat lieu de bo vao.");
				PlayerInfo[playerid][pMats] += amount;
				FamilyInfo[fid][fMats] -= amount;
				format(str, sizeof(str), "[Family] %s da rut %d vat lieu tu Safe.", GN(playerid), amount);
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
			if (safeitem == 3)
			{
				if (PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "Ban phai rank 3 tro len moi co the lay.");
				if (FamilyInfo[fid][fDrugs] < amount) return SCM(playerid, COLOR_GREY, "Khong du vat lieu de bo vao.");
				PlayerInfo[playerid][pDrugs] += amount;
				FamilyInfo[fid][fDrugs] -= amount;
				format(str, sizeof(str), "[Family] %s da rut %d thuoc tu Safe.", GN(playerid), amount);
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
		}
		else if (type == 2)
		{
			if (safeitem == 1)
			{
				if (GetPlayerMoney(playerid) < amount) return SCM(playerid, COLOR_GREY, "Tien mat tren nguoi ban khong du de bo vao.");
				SafeGivePlayerMoney(playerid, -amount);
				FamilyInfo[fid][fMoney] += amount;
				format(str, sizeof(str), "[Family] %s da dong gop %s$ cho Family.", GN(playerid), AddCommas(amount));
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
			if (safeitem == 2)
			{
				if (PlayerInfo[playerid][pMats] < amount) return SCM(playerid, COLOR_GREY, "Khong du vat lieu de bo vao.");
				PlayerInfo[playerid][pMats] -= amount;
				FamilyInfo[fid][fMats] += amount;
				format(str, sizeof(str), "[Family] %s da dong gop %d vat lieu cho Family.", GN(playerid), amount);
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
			if (safeitem == 3)
			{
				if (PlayerInfo[playerid][pDrugs] < amount) return SCM(playerid, COLOR_GREY, "Khong du thuoc de bo vao.");
				PlayerInfo[playerid][pDrugs] -= amount;
				FamilyInfo[fid][fDrugs] += amount;
				format(str, sizeof(str), "[Family] %s da dong gop %d thuoc cho Family.", GN(playerid), amount);
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
			}
		}
		SaveFamilies();
	}
	if (dialogid == DIALOG_PWEAPONSAFE)
	{
		if (!response) return 1;
		InteractSafeWeapon(playerid, PlayerInfo[playerid][pFMember], listitem + 1, 1);
		SaveFamilies();
		return 1;
	}
	if (dialogid == DIALOG_TWEAPONSAFE)
	{
		if (!response) return 1;
		InteractSafeWeapon(playerid, PlayerInfo[playerid][pFMember], listitem + 1, 2);
		SaveFamilies();
		return 1;
	}
	return 0;
}
stock FormatAmountInput(str[], sizestr, type, item)
{
	new typestr[128];
	if (type == 1)
		format(typestr, sizeof(typestr), "bo vao:");
	else format(typestr, sizeof(typestr), "lay:");
	switch (item)
	{
		case 1: format(str, sizestr, "Nhap so luong tien can %s", typestr);
		case 2: format(str, sizestr, "Nhap so luong vat lieu can %s", typestr);
		case 3: format(str, sizestr, "Nhap so luong thuoc can %s", typestr);
	}
	return 1;
}
stock ClearDot(fid)
{
	for (new i = 0; i < strlen(FamilyInfo[fid][fWeapons]); i++)
	{
		if (FamilyInfo[fid][fWeapons][i] == ',' && (FamilyInfo[fid][fWeapons][i + 1] == ','
			|| i == (strlen(FamilyInfo[fid][fWeapons]) - 1)))
			strdel(FamilyInfo[fid][fWeapons], i, i+1);
	}
	return 1;
}
stock GWN(weaponid)
{
	new wname[50];
	GetWeaponName(weaponid, wname, sizeof(wname));
	return wname;
}
stock CountFamilySafeWeapon(fid)
{
	ClearDot(fid);
	new winfo[2];
	new amount;
	new count = 0;
	for (new i = 0; i < strlen(FamilyInfo[fid][fWeapons]); i++)
	{
		for (new z = 0; z < 2; z++)
		{
			if (winfo[z] == EOS)
			{
				winfo[z] = FamilyInfo[fid][fWeapons][i];
				break;
			}
		}
		if (FamilyInfo[fid][fWeapons][i] == '-')
		{
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
		}
		else if (FamilyInfo[fid][fWeapons][i] == ',' || i == (strlen(FamilyInfo[fid][fWeapons]) - 1))
		{
			amount = strval(winfo);
			count += amount;

			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
		}
	}
	return count;
}
stock AddListSafeWeapon(fid, wid, type = 1)
{
	//TYPE 1: Add - TYPE 2: Sub
	new winfo[2];
	new amount;
	new weaponid;
	for (new i = 0; i < strlen(FamilyInfo[fid][fWeapons]); i++)
	{
		for (new z = 0; z < 2; z++)
		{
			if (winfo[z] == EOS)
			{
				winfo[z] = FamilyInfo[fid][fWeapons][i];
				break;
			}
		}
		if (FamilyInfo[fid][fWeapons][i] == '-')
		{
			weaponid = strval(winfo);
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
		}
		else if (FamilyInfo[fid][fWeapons][i] == ',' || i == (strlen(FamilyInfo[fid][fWeapons]) - 1))
		{
			amount = strval(winfo);
			if (weaponid == wid)
			{
				new repstr[128];
				format(repstr, sizeof(repstr), "%d-%d", weaponid, amount);

				new repastr[128];
				if (type == 1)
					format(repastr, sizeof(repastr), "%d-%d", weaponid, amount + 1);
				else
				{
					if ((amount - 1) == 0)
					{
						format(FamilyInfo[fid][fWeapons], 128, "%s",
							Replace(FamilyInfo[fid][fWeapons], repstr, ""));
						ClearDot(fid);
						return 1;
					}
					else format(repastr, sizeof(repastr), "%d-%d", weaponid, amount - 1);
				}
				format(FamilyInfo[fid][fWeapons], 128, "%s",
					Replace(FamilyInfo[fid][fWeapons], repstr, repastr));
				ClearDot(fid);
				return 1;
			}
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
			weaponid = 0;
			amount = 0;
		}
	}
	new repstr[128];
	format(repstr, sizeof(repstr), "%d-1,", wid);
	format(FamilyInfo[fid][fWeapons], 128, "%s%s", repstr, FamilyInfo[fid][fWeapons]);
	ClearDot(fid);
	return 1;
}
stock InteractSafeWeapon(playerid, fid, slot, type = 1)
{
	//TYPE 1: Put - TYPE 2: Take
	new idx = 1, str[128];
	if (type == 1)
	{
		for (new i = 0; i < 13; i++)
		{
			if (ScriptWeapons[playerid][i] != 0)
			{
				if (idx == slot)
				{
					AddListSafeWeapon(fid, ScriptWeapons[playerid][i], 1);
					format(str, sizeof(str), "[Family] %s bo vao Safe mot %s.", GN(playerid), GWN(ScriptWeapons[playerid][i]));
					SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
					SafeGivePlayerWeapon(playerid, ScriptWeapons[playerid][i], 0);
				}
				else idx++;
			}
		}
	}
	new winfo[2];
	new weaponid;
	for (new i = 0; i < strlen(FamilyInfo[fid][fWeapons]); i++)
	{
		for (new z = 0; z < 2; z++)
		{
			if (winfo[z] == EOS)
			{
				winfo[z] = FamilyInfo[fid][fWeapons][i];
				break;
			}
		}
		if (FamilyInfo[fid][fWeapons][i] == '-')
		{
			weaponid = strval(winfo);
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
		}
		else if (FamilyInfo[fid][fWeapons][i] == ',' || i == (strlen(FamilyInfo[fid][fWeapons]) - 1))
		{
			if (slot == idx && type == 2)
			{
				for (new z = 0; z < 12; z++)
				{
					if (ScriptWeapons[playerid][z] == weaponid)
						return SCM(playerid, COLOR_GREY, "Khong the lay vu khi nay vi ban da co roi.");
				}
				SafeGivePlayerWeapon(playerid, weaponid, 1);
				AddListSafeWeapon(fid, weaponid, 2);
				format(str, sizeof(str), "[Family] %s lay mot %s tu Safe.", GN(playerid), GWN(weaponid));
				SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
				return 1;
			}

			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;

			weaponid = 0;
			idx++;
		}
	}
	return 1;
}
stock GetListSafeWeapon(fid, str[], size)
{
	new winfo[2];
	new amount;
	new weaponid;
	for (new i = 0; i < strlen(FamilyInfo[fid][fWeapons]); i++)
	{
		for (new z = 0; z < 2; z++)
		{
			if (winfo[z] == EOS)
			{
				winfo[z] = FamilyInfo[fid][fWeapons][i];
				break;
			}
		}
		if (FamilyInfo[fid][fWeapons][i] == '-')
		{
			weaponid = strval(winfo);
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;
		}
		else if (FamilyInfo[fid][fWeapons][i] == ',' || i == (strlen(FamilyInfo[fid][fWeapons]) - 1))
		{
			amount = strval(winfo);
			for (new z = 0; z < 2; z++)
				winfo[z] = EOS;

			new wname[30];
			GetWeaponName(weaponid, wname, sizeof(wname));
			format(str, size, "%s%s\t%d\n", str, wname, amount);
			weaponid = 0;
			amount = 0;
		}
	}
	return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if (IsPlayerInBike(playerid))
	{
		HitTimes[playerid]++;
	}
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if (weaponid == 0)
	{
		new knockpercantage = random(20);
		if (knockpercantage == 1 && KnockedDown[damagedid] != 1 && PlayerCuffed[playerid] == 0
			&& Escorted[playerid] == 0)
		{
			new str[128];
			TogglePlayerControllable(damagedid, 0);
			ApplyAnimation(damagedid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
			SetTimerEx("ClearKnock", 20000, false, "i", damagedid);
			KnockedDown[damagedid] = 1;
			format(str, sizeof(str), "* %s tung mot cu dam vao mat %s, khien han ta bat tinh tai cho.", GN(playerid), GN(damagedid));
			ProxDetector(30.0, playerid, str, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
	}
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if (areaid == DOCArea)
	{
		//printf("Check");
		new Float:flypos[3];
		GetPlayerPos(playerid, flypos[0], flypos[1], flypos[2]);
		new docerid = GetClosestDoCPlayer(playerid);
		//printf("Z: %f, SC: %d, IsACop: %d, NearDoc: %d, Member: %d, Leader: %d",
		//flypos[2], GetPVarInt(playerid, "SpecialCase"), IsACop(playerid), IsPlayerNearDoCPlayer(playerid), PlayerInfo[playerid][pMember], PlayerInfo[playerid][pLeader]);
		if (DOCDelay[playerid] == 0 && GetPVarInt(playerid, "SpecialCase") == 0 && !IsACop(playerid) && PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4 && docerid == -1)
		{
			DOCDelay[playerid] = 30;
			if (flypos[2] >= DOCAIR)
			{
				if (DOCCheck[playerid] == 0)
				{
					new str[128];
					format(str, sizeof(str), "[DoC Camera] Co mot vat the xuat hien tren khong cua DoC, hay chu y.");
					SendRadioMessage(17, COLOR_LIGHTRED, str);
					DOCCheck[playerid] = 1;
					if (IsPlayerInAnyVehicle(playerid))
					{
						new vid = GetPlayerVehicleID(playerid);
						foreach(new pid : Player)
						{
							if (pid != playerid && IsPlayerInVehicle(pid, vid))
								DOCCheck[pid] = 1;
						}
					}
				}
			}
			else
			{
				new str[128];
				format(str, sizeof(str), "[DoC Camera] Doi tuong %s vua dot nhap vao DoC, cac nhan vien hay mau bat giu doi tuong.", GN(playerid));
				SendRadioMessage(17, COLOR_LIGHTRED, str);
				if (WantedPoints[playerid] == 0) { WantedPoints[playerid] = 3; }
				else { WantedPoints[playerid] += 2; }
				SetPlayerCriminalEx(playerid, 255, "Dot Nhap DoC.");
				DOCAlarm = 30;
			}
		}
		else if (docerid != -1)
		{
			new str[128];
			format(str, sizeof(str), "[DoC Camera] Doi tuong %s di cung nhan vien %s tien vao trai giam, xin hay chu y hanh dong cua han ta.", GN(playerid), GN(docerid));
			SendRadioMessage(17, COLOR_LIGHTRED, str);
		}
		SetPVarInt(playerid, "SpecialCase", 0);
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if (areaid == DOCArea)
	{
		if (DOCCheck[playerid] == 1)
			DOCCheck[playerid] = 0;
	}
	return 1;
}
//public OnVehicleGetHealth(vehicleid, Float:health)
//{
//	new Float:newhealth;
//	GetVehicleHealth(vehicleid, newhealth);
//	if (newhealth < CarHealthCheat[vehicleid])
//		GetVehicleDamageStatus(vehicleid, CarRepairCheat[vehicleid][0], CarRepairCheat[vehicleid][1], CarRepairCheat[vehicleid][2], CarRepairCheat[vehicleid][3]);
//	return 1;
//}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new Float:newhealth;
	GetVehicleHealth(vehicleid, newhealth);
	SetVehicleHealth(vehicleid, newhealth - 1);

	new carrcheat[4];
	GetVehicleDamageStatus(vehicleid, carrcheat[0], carrcheat[1], carrcheat[2], carrcheat[3]);
	if (CarRepairCheat[vehicleid][3] != 0 && carrcheat[3] == 0)
		CheckHackRepairCar(vehicleid);
	else if (CarRepairCheat[vehicleid][3] != 0 && carrcheat[3] != 0)
		GetVehicleDamageStatus(vehicleid, CarRepairCheat[vehicleid][0], CarRepairCheat[vehicleid][1], CarRepairCheat[vehicleid][2], CarRepairCheat[vehicleid][3]);

	return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	SetVehicleHealthEx(vehicleid, 1000);
	FixVehicle(vehicleid);
	return 0;
}
stock FixVehicle(vehicleid, type = 0)
{
	if (type == 1)
	{
		UpdateVehicleDamageStatus(vehicleid, CarRepairCheat[vehicleid][0], CarRepairCheat[vehicleid][1], CarRepairCheat[vehicleid][2], 0);
		CarRepairCheat[vehicleid][3] = 0;
		return 1;
	}
	UpdateVehicleDamageStatus(vehicleid, 0, 0, 0, 0);
	CarRepairCheat[vehicleid][0] = 0;
	CarRepairCheat[vehicleid][1] = 0;
	CarRepairCheat[vehicleid][2] = 0;
	CarRepairCheat[vehicleid][3] = 0;
	return 1;
}
stock SetVehicleHealthEx(vehicleid, Float:health)
{
	CarHealthCheat[vehicleid] = health;
	SetVehicleHealth(vehicleid, health);
	return 1;
}
stock CheckHackRepairCar(vehicleid, bool:nouse = false)
{
	new carrcheat[4];
	GetVehicleDamageStatus(vehicleid, carrcheat[0], carrcheat[1], carrcheat[2], carrcheat[3]);
	if (carrcheat[0] != CarRepairCheat[vehicleid][0]
		|| carrcheat[1] != CarRepairCheat[vehicleid][1]
		|| carrcheat[2] != CarRepairCheat[vehicleid][2]
		|| carrcheat[3] != CarRepairCheat[vehicleid][3])
	{
		if(nouse == false) 
			UpdateVehicleDamageStatus(vehicleid, CarRepairCheat[vehicleid][0], CarRepairCheat[vehicleid][1], CarRepairCheat[vehicleid][2], CarRepairCheat[vehicleid][3]);
		
		new playerid = GetVehicleDriverID(vehicleid);
		if(playerid != -1)
			CarCheatAttemping[playerid]++;
		return 1;
	}
	return 0;
}
CMD:fpsmod(playerid, params[])
{
	if (GetPVarInt(playerid, "FPS") == 0)
	{
		SetPVarInt(playerid, "FPS", 1);
		if (IsPlayerInAnyVehicle(playerid))
		{
			new p = GetPlayerVehicleID(playerid);
			fpsObj[playerid] = CreatePlayerObject(playerid, 19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
			if (IsABike(p))
			{
				AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.000000, 0.164999, 0.800000, 0.000000, 0.000000, 0.000000);
				AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
			}
			else
			{
				new seat = GetPlayerVehicleSeat(playerid);
				switch (seat)
				{
					case 1:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, -0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
								//AttachObjectToVehicle(objectid, vehicleid, 0.314999, -0.100000, -0.429999, 0.000000, 0.000000, 0.000000); //Object Model: 19300 |  0
					}
					case 2:
					{														//-0.314999, -0.195000, 0.510000
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
					case 3:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, 0.314999, -0.795, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
					case 4:
					{
								AttachPlayerObjectToVehicle(playerid, fpsObj[playerid], p, -0.314999, -0.795, 0.510000, 0.000000, 0.000000, 0.000000);
								AttachCameraToPlayerObject(playerid, fpsObj[playerid]);
					}
				}
			}
		}
		else
		{
			fpsObj[playerid] = CreateObject(19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
			AttachObjectToPlayer(fpsObj[playerid], playerid, 0, 0.13900, 0.760000, 0.000000, 0.000000, 0.000000);
			AttachCameraToObject(playerid, fpsObj[playerid]);
		}
		SCM(playerid, -1, "Ban dang o Che do goc nhin 1st.");
	}
	else
	{
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, fpsObj[playerid]);
		SetPVarInt(playerid, "FPS", 0);
		SCM(playerid, -1, "Ban da tat Che do goc nhin 1st.");
	}
	return 1;
}
CMD:radinh(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho sua xe!");
	new vid = GetPlayerVehicleID(playerid);
	if (!IsPlayerInAnyVehicle(playerid) || !IsASweeper(vid)) return SCM(playerid, COLOR_GREY, "Ban phai ngoi tren xe ra dinh.");
	GameTextForPlayer(playerid, "~g~Che do ra dinh bat dau~n~~y~/dungradinh~w~ de dung tim kiem", 5000, 4);
	SearchNails[playerid] = 1;
	return 1;
}
CMD:dungradinh(playerid, params[])
 {
	if (PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho sua xe!");
	new vid = GetPlayerVehicleID(playerid);
	if (!IsPlayerInAnyVehicle(playerid) || !IsASweeper(vid)) return SCM(playerid, COLOR_GREY, "Ban phai ngoi tren xe ra dinh.");
	GameTextForPlayer(playerid, "~r~Che do ra dinh ket thuc", 5000, 4);
	SearchNails[playerid] = 0;
	return 1;
 }
CMD:gotoobj(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		new idobject;
		if (sscanf(params, "i", idobject)) return SCM(playerid, COLOR_GRAD2, "Su dung: /gotoobj [Object ID]");
		new Float:pos[3];
		GetDynamicObjectPos(idobject, pos[0], pos[1], pos[2]);
		SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		return 1;
	}
	return 1;
}
CMD:baocao(playerid, params[]) { return cmd_report(playerid, params); }
CMD:report(playerid, params[])
{
	new string[128];
	if (IsLogOn(playerid))
	{
		if (JustReported[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Doi 2 phut cho lan bao cao tiep theo ! ");
			return 1;
		}
		new giveplayerid, resultz[128];
		if (sscanf(params, "us[128]", giveplayerid, resultz))
			return SCM(playerid, COLOR_GRAD2, "Su dung: (/re)port [playerid/PartOfName] [text]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "Bao cao tu : [ID:%d]%s, Nguoi choi bi bao cao: [ID:%d]%s", playerid, GN(playerid), giveplayerid, GN(giveplayerid));
				ABroadCast(0xE19898AA, string, 1);
				format(string, sizeof(string), "Noi dung bao cao: %s", (resultz));
				ABroadCast(0xE19898AA, string, 1);
				ABroadCast(0xA04C4CAA, "Go '/acceptreport [reporter id]' hoac '/trashreport [reporter id]'", 1);
				SendClientMessage(playerid, 0x96C184AA, "  Bao cao cua ban da duoc gui va xem xet boi nhung Admins dang online.");
				JustReported[playerid] = 1;
				PlayerNeedsHelp[playerid] = 1;
				SetTimerEx("ReportReset", 120000, false, "i", playerid);
			}
		}
	}
	return 1;
}
CMD:hoiadmin(playerid, params[]) { return cmd_askq(playerid, params); }
CMD:askq(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[128];
		new result[128];
		if (sscanf(params, "s[128]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /askq [text]");
		format(string, sizeof(string), "Cau hoi tu %s: %s", GN(playerid), (result));
		ABroadCast(COLOR_ASKQ, string, 1);
		SendClientMessage(playerid, COLOR_ASKQ, "Cau hoi cua ban da duoc gui den Admins.");
	}
	return 1;
}
CMD:engine(playerid, params[])
{
	new idcar;
	idcar = GetPlayerVehicleID(playerid);
	//new pveh;
	//pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (IsLogOn(playerid))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
				return 1;

			if (IsAnOwnableCar(idcar))
			{
				if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == idcar) {}
				else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == idcar) {}
				else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == idcar) {}
				else { return 1; }
			}
			if (IsAPlane(idcar) || IsAHarvest(idcar) || IsADrugHarvest(idcar) || IsASweeper(idcar))
			{
				return 1;
			}
			if (gEngine[playerid] == 1) { return 1; }

			new playerveh = GetPlayerVehicleID(playerid);
			new string[128];
			if (engineOn[playerveh] == 0)
			{
				//PutPlayerInVehicle(playerid, playerveh, 0);
				format(string, sizeof(string), "* %s van chi khoa khoi dong dong co.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SetTimerEx("StartingTheVehicle", 3500, 0, "i", playerid);
				GameTextForPlayer(playerid, "~w~Dong co dang khoi dong...", 3500, 3);
				gEngine[playerid] = 1;
			}
			else
			{
				VehicleEngine(playerveh, false);
				engineOn[playerveh] = 0;
				//TogglePlayerControllable(playerid, true);
				format(string, sizeof(string), "* %s xoay chia khoa va tat dong co cua phuong tien.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
			return 1;
		}
	}
	return 1;
}
/*	if(!strcmp(cmd, "/startup", true))
{
if(engineOn[GetPlayerVehicleID(playerid)]) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Engine already started!");
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Do you think that you can start an engine which you don't have?");
if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Only the driver can do this!");
if(IsAtDealership(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Do you think you can steal a car?");
if(pveh == 510) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "You don't need to start a bike!");
if(pveh == 462) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "You don't need to start a bike!");
if(idcar == 59 || idcar == 60) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Access denied!");
if(IsAtCarrental(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Do you think you can steal a car?");

engineOn[GetPlayerVehicleID(playerid)] = true;
TogglePlayerControllable(playerid, true);
new playerveh = GetPlayerVehicleID(playerid);
PutPlayerInVehicle(playerid, playerveh, 0);

format(string, sizeof(string), "* %s spins a key and starts the engine.", GN(playerid));
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
return true;
}
if(!strcmp(cmd, "/turnoff", true))
{
if(!engineOn[GetPlayerVehicleID(playerid)]) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Engine not started!");
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Do you think that you can start an engine which you don't have?");
if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Only the driver can do this!");
if(IsAtDealership(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Unknown command");
if(pveh == 510) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Bike doesn't have an engine");
if(pveh == 462) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "You don't need to do that");
if(idcar == 59 || idcar == 60) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Access denied!");

engineOn[GetPlayerVehicleID(playerid)] = false;
RemovePlayerFromVehicle(playerid);

format(string, sizeof(string), "* %s turns off the engine.", GN(playerid));
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
return true;
}*/
CMD:getip(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 2)
	{
		new string[128];
		new playersip[256];
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /getip [Players ID]");
		GetPlayerIp(giveplayerid, playersip, sizeof(playersip));
		format(string, sizeof(string), "Player: %s IP: %s", GN(giveplayerid), playersip);
		SendClientMessage(playerid, COLOR_GRAD2, string);
	}
	return 1;
}
//CMD:unbanip(playerid, params[])
//{
//	if (PlayerInfo[playerid][pAdmin] >= 5)
//	{
//		new ip[20];
//		if (sscanf(params, "s", ip)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /unbanip [players ip]");
//		format(string, sizeof(string), "unbanip %s", ip);
//		SendRconCommand(string);
//		SendRconCommand("reloadbans");
//		format(string, 256, "AdmWarning: %s has unbanned IP %s", GN(playerid), ip);
//		ABroadCast(COLOR_YELLOW, string, 1);
//	}
//	return 1;
//}
CMD:givemats(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		if (IsLogOn(playerid))
		{
			new giveplayerid, money, string[256];
			if (sscanf(params, "ui", giveplayerid, money)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /givemats [playerid/PartOfName] [amount]");
			PlayerInfo[giveplayerid][pMats] += money;
			format(string, 256, "AdmWarning: %s has given %s %d materials.", GN(playerid), GN(giveplayerid), money);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
	}
	return 1;
}
CMD:crash(playerid, params[])
{
	new string[256], giveplayerid;
	new Float:x, Float:y, Float:z;
	if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /crash [playerid/PartOfName]");
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerPos(giveplayerid, x, y, z);
					new objectcrash = CreatePlayerObject(giveplayerid, 11111111, x, y, z, 0, 0, 0);
					DestroyObject(objectcrash);
					format(string, sizeof(string), "Ban da lam %s crash game", GN(giveplayerid));
					SendClientMessage(playerid, COLOR_DBLUE, string);
					return 1;
				}
			}
		}
		else SCM(playerid, COLOR_GRAD1, "Ban khong co quyen su dung lenh nay.");
	}
	else
	{
		format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	return 1;
}
CMD:explode(playerid, params[])
{
	new giveplayerid, string[256];
	if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "/explode [Playerid]");
	if (IsLogOn(giveplayerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if (IsLogOn(giveplayerid))
			{
				format(string, sizeof(string), "AdmCMD: %s da bi cho no tung boi %s", GN(giveplayerid), GN(playerid));
				ABroadCast(COLOR_LIGHTRED, string, 1);
				SetPlayerHealth(giveplayerid, 10);
				new Float:boomx, Float:boomy, Float:boomz;
				GetPlayerPos(giveplayerid, boomx, boomy, boomz);
				CreateExplosion(boomx, boomy, boomz, 7, 10);
				printf("[Command] %s has used /explode to explode %s", GN(playerid), GN(giveplayerid));
			}
			else
			{
				format(string, sizeof(string), "%d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "Ban khong co quyen su dung lenh!");
	}
	else SendClientMessage(playerid, COLOR_RED, "Ban phai dang nhap de su dung lenh nay!");
	return 1;
}
CMD:givedrugs(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		if (IsLogOn(playerid))
		{
			new giveplayerid, money;
			new string[256];
			if (sscanf(params, "ui", giveplayerid, money)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /givedrugs [playerid/PartOfName] [amount]");
			PlayerInfo[giveplayerid][pDrugs] += money;
			format(string, 256, "AdmWarning: %s has given %s %d drugs.", GN(playerid), GN(giveplayerid), money);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
	}
	return 1;
}
CMD:huongdan(playerid, params[]) { return cmd_guide(playerid, params); }
CMD:guide(playerid, params[])
{
	TogglePlayerControllable(playerid, 0);
	ShowMenuForPlayer(Guide, playerid);
	return 1;
}
CMD:respawnthiscar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			return 1;
		}
		if (IsPlayerInAnyVehicle(playerid))
		{
			new string[256];
			format(string, 256, "AdmWarning: %s has just respawned vehicle id %d.", GN(playerid), GetPlayerVehicleID(playerid));
			ABroadCast(COLOR_YELLOW, string, 1);
			SetVehicleToRespawn2(GetPlayerVehicleID(playerid));
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid, COLOR_GREY, "   Vehicle Respawned !");
		}
	}
	return 1;
}
CMD:respawnallcars(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co quyen su dung lenh nay!");
			return 1;
		}
		new bool:unwanted[CAR_AMOUNT];
		new string[256];
		for (new player = 0; player<MAX_PLAYERS; player++)
		{
			if (IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)] = true; }
		}
		for (new car = 1; car <= 268; car++)
		{
			if (!unwanted[car]) SetVehicleToRespawn2(car);
		}
		format(string, sizeof(string), "SERVER: Tat ca cac xe khong su dung duoc respawn boi %s", GN(playerid));
		BroadCast(COLOR_WHITE, string);
	}
	return 1;
}
CMD:respawnrentcars(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban khong co quyen su dung lenh nay!");
			return 1;
		}
		new bool:unwanted[CAR_AMOUNT];
		new string[256];
		for (new player = 0; player<MAX_PLAYERS; player++)
		{
			if (IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)] = true; }
		}
		for (new v = 135; v <= 154; v++)
		{
			if (!unwanted[v]) SetVehicleToRespawn2(v);
		}
		format(string, sizeof(string), "SERVER: Tat ca xe o to thue da duoc respawn boi %s", GN(playerid));
		BroadCast(COLOR_WHITE, string);
	}
	return 1;
}
CMD:respawnrentbikes(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co quyen su dung lenh nay!");
			return 1;
		}
		new bool:unwanted[CAR_AMOUNT];
		new string[256];
		for (new player = 0; player<MAX_PLAYERS; player++)
		{
			if (IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)] = true; }
		}
		for (new v = 112; v <= 130; v++)
		{
			if (!unwanted[v]) SetVehicleToRespawn2(v);
		}
		format(string, sizeof(string), "SERVER: Tat ca xe thue ( 2 banh ) da duoc respawn boi %s", GN(playerid));
		BroadCast(COLOR_WHITE, string);
	}
	return 1;
}
CMD:dualenxe(playerid, params[]) { return cmd_drag(playerid, params); }
CMD:drag(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!IsACop(playerid) && !IsFD(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ban khong phai la canh sat!");
			return 1;
		}
		new giveplayerid, string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /drag [playerid/PartOfName]");

		new newcar = GetPlayerVehicleID(playerid);
		if (IsACopCar(newcar) || IsNgCar(newcar) || IsAnFbiCar(newcar) || !IsADoCCar(playerid))
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerCuffed[giveplayerid] == 0) return SCM(playerid, COLOR_GREY, "Nguoi choi nay khong bi cong tay.");
					new Float:x, Float:y, Float:z; 
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(5, playerid, x, y, z))
					{
						PutPlayerInVehicle(giveplayerid, newcar, 1);
						format(string, sizeof(string), "* %s keo %s len xe.", GN(playerid), GN(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else SendClientMessage(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
				}
			}
		}
		else if (IsAnAmbulance(newcar))
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (Dying[giveplayerid] == 0) return SCM(playerid, COLOR_GREY, "Nguoi cho nay khong bi thuong.");
					new vehicleseat = GetFreeSeatAmbulance(newcar);
					if (vehicleseat == -1) return SCM(playerid, COLOR_GREY, "Vi tri cuu thuong tren xe da co nguoi ngoi.");
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(5, playerid, x, y, z))
					{
						PutPlayerInVehicle(giveplayerid, newcar, vehicleseat);
						format(string, sizeof(string), "* %s keo %s len xe.", GN(playerid), GN(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else SendClientMessage(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Ban khong dang o trong xe canh sat!");
	}
	return 1;
}
CMD:vehslap(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /vehslap [playerid/PartOfName]");

		new string[256];
		new Float:shealth;
		new Float:slx, Float:sly, Float:slz;
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerHealth(giveplayerid, shealth);
					SetPlayerHealth(giveplayerid, shealth - 0);
					GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
					SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz + 550);
					PlayerPlaySound(giveplayerid, 1130, slx, sly, slz + 5);
					printf("AdmCMD: %s vehicle slapped %s", GN(playerid), GN(giveplayerid));
					format(string, sizeof(string), "AdmCMD: %s bi vehicle slapped boi %s", GN(giveplayerid), GN(playerid));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "**Ban khong co quyen su dung lenh nay.");
		}
	}
	return 1;
}
CMD:supervehslap(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /supervehslap [playerid/PartOfName]");

		new Float:shealth;
		new Float:slx, Float:sly, Float:slz;
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerHealth(giveplayerid, shealth);
					SetPlayerHealth(giveplayerid, shealth - 0);
					GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
					SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz + 1000);
					PlayerPlaySound(giveplayerid, 1130, slx, sly, slz + 5);
					printf("AdmCMD: %s vehicle slapped %s", GN(playerid), GN(giveplayerid));
					format(string, sizeof(string), "AdmCMD: %s was vehicle slapped slapped by %s", GN(giveplayerid), GN(playerid));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "** Ban khong co quyen su dung lenh nay.");
		}
	}
	return 1;
}
CMD:deomatna(playerid, params[]) { return cmd_maskon(playerid, params); }
CMD:maskon(playerid, params[])
{
	new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMask] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co mat na");
			return 1;
		}
		if (PlayerInfo[playerid][pLevel] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban khong the su dung no.");
			return 1;
		}
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				ShowPlayerNameTagForPlayer(i, playerid, 0);
			}
		}
		PlayerInfo[playerid][pMaskuse] = 1;
		SendClientMessage(playerid, COLOR_WHITE, "  Ban dang deo mat na [/maskoff de cat mat na].");
		format(string, sizeof(string), "* %s puts a mask on.", GN(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
 CMD:test(playerid, params[])
 {
	new str[128];
	format(str, sizeof(str), "Team: %d", gTeam[playerid]);
	SCM(playerid, -1, str);
	format(str, sizeof(str), "Team Data: %d", PlayerInfo[playerid][pTeam]);
	SCM(playerid, -1, str);
	printf("Team: %d | Team Data: %d", gTeam[playerid], PlayerInfo[playerid][pTeam]);
	return 1;
 }
//CMD:test(playerid, params[])
//{
//	new vehicleid = GetPlayerVehicleID(playerid);
//	new model = GetVehicleModel(vehicleid);
//
//	// Get vehicle position
//	new Float:x, Float:y, Float:z;
//	GetVehiclePos(vehicleid, x, y, z);
//
//	new Float:vehAngle;
//	GetVehicleZAngle(vehicleid, vehAngle);
//
//	new Float:size[3];
//	GetVehicleModelInfo(model, VEHICLE_MODEL_INFO_SIZE, size[0], size[1], size[2]);
//
//	new Float:wheelOffset[3];
//	GetVehicleModelInfo(model, VEHICLE_MODEL_INFO_WHEELSFRONT, wheelOffset[0], wheelOffset[1], wheelOffset[2]);
//
//	new Float:k;
//	new Float:tirepos[2];
//
//	k = wheelOffset[0];
//	tirepos[0] = x + (floatcos(vehAngle, degrees) * k) - (floatsin(vehAngle, degrees) * wheelOffset[1]);
//	tirepos[1] = y + (floatsin(vehAngle, degrees) * k) + (floatcos(vehAngle, degrees) * wheelOffset[1]);
//	CreateDynamicObject(1238, tirepos[0], tirepos[1], z, 0, 0, 0);
//
//	k = wheelOffset[0] - size[0];
//	tirepos[0] = x + (floatcos(vehAngle, degrees) * k) - (floatsin(vehAngle, degrees) * wheelOffset[1]);
//	tirepos[1] = y + (floatsin(vehAngle, degrees) * k) + (floatcos(vehAngle, degrees) * wheelOffset[1]);
//	CreateDynamicObject(1238, tirepos[0], tirepos[1], z, 0, 0, 0);
//
//	GetVehicleModelInfo(model, VEHICLE_MODEL_INFO_WHEELSREAR, wheelOffset[0], wheelOffset[1], wheelOffset[2]);
//
//	k = wheelOffset[0];
//	tirepos[0] = x + (floatcos(vehAngle, degrees) * k) - (floatsin(vehAngle, degrees) * wheelOffset[1]);
//	tirepos[1] = y + (floatsin(vehAngle, degrees) * k) + (floatcos(vehAngle, degrees) * wheelOffset[1]);
//	CreateDynamicObject(1238, tirepos[0], tirepos[1], z, 0, 0, 0);
//
//	k = wheelOffset[0] - size[0];
//	tirepos[0] = x + (floatcos(vehAngle, degrees) * k) - (floatsin(vehAngle, degrees) * wheelOffset[1]);
//	tirepos[1] = y + (floatsin(vehAngle, degrees) * k) + (floatcos(vehAngle, degrees) * wheelOffset[1]);
//	CreateDynamicObject(1238, tirepos[0], tirepos[1], z, 0, 0, 0);
//	return 1;
//}
CMD:thaomatna(playerid, params[]) { return cmd_maskoff(playerid, params); }
CMD:maskoff(playerid, params[])
{
	new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMask] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban khong co mat na");
			return 1;
		}
		if (PlayerInfo[playerid][pLevel] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung no.");
			return 1;
		}
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				ShowPlayerNameTagForPlayer(i, playerid, 1);
			}
		}
		PlayerInfo[playerid][pMaskuse] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "Ban da cat mat na cua minh[/maskon De deo mat na vao].");
		format(string, sizeof(string), "* %s puts a mask away.", GN(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
CMD:hidenumber(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You don't have phone number to hide.");
			return 1;
		}
		if (PlayerInfo[playerid][pDonateRank] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You need to donate atleast bronze to get this feature.");
			return 1;
		}
		if (PlayerInfo[playerid][pHideNumber] == 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "   Your number is hidden now.");
			PlayerInfo[playerid][pHideNumber] = 1;
			return 1;
		}
		if (PlayerInfo[playerid][pHideNumber] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "   Your number is public now.");
			PlayerInfo[playerid][pHideNumber] = 0;
			return 1;
		}
	}
	return 1;
}
CMD:speaker(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You do not have a phone.");
			return 1;
		}
		if (Mobile[playerid] == 255)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not in a phone call.");
			return 1;
		}
		if (PlayerInfo[playerid][pSpeaker] == 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW2, "* Beep * Speaker is on.");
			PlayerInfo[playerid][pSpeaker] = 1;
			return 1;
		}
		if (PlayerInfo[playerid][pSpeaker] == 1)
		{
			SendClientMessage(playerid, COLOR_YELLOW2, "* Beep * Speaker is off.");
			PlayerInfo[playerid][pSpeaker] = 0;
			return 1;
		}
	}
	return 1;
}
CMD:houseentrance(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] != 1337)
		{
			return 1;
		}
		new proplev, string[256];
		if (sscanf(params, "i", proplev)) 
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /houseentrance [houseid] - Moves a house to you");
		
		if (proplev > MAX_HOUSES || proplev < 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "House ID must be above 0 and below 33");
			return 1;
		}
		else
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			format(string, sizeof(string), "Entrance of House %d to %f - %f - %f", proplev, x, y, z);
			ABroadCast(COLOR_YELLOW, string, 5);
			HouseInfo[proplev][hEntrancex] = x;
			HouseInfo[proplev][hEntrancey] = y;
			HouseInfo[proplev][hEntrancez] = z;
			OnPropUpdate();
			return 1;
		}
	}
	return 1;
}
CMD:houseexit(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (PlayerInfo[playerid][pAdmin] != 1337)
		{
			return 1;
		}
		new proplev;
		if (sscanf(params, "i", proplev))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /houseexit [houseid] - Moves a house to you");

		if (proplev > MAX_HOUSES || proplev < 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "House ID must be above 0 and below 33");
			return 1;
		}
		else
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			format(string, sizeof(string), "Exit of House %d to %f - %f - %f", proplev, x, y, z);
			ABroadCast(COLOR_YELLOW, string, 5);
			HouseInfo[proplev][hExitx] = x;
			HouseInfo[proplev][hExity] = y;
			HouseInfo[proplev][hExitz] = z;
			HouseInfo[proplev][hInt] = GetPlayerInterior(playerid);
			OnPropUpdate();
			return 1;
		}
	}
	return 1;
}
CMD:bizentrance(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
			return 1;
		}
		new proplev, string[256];
		if (sscanf(params, "i", proplev))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /bizentrance [bizid] - Moves a biz to you");

		if (proplev > sizeof(BizzInfo) || proplev < 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Business ID must be above 0 and below 5");
			return 1;
		}
		else
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			format(string, sizeof(string), "Entrance of Biz %d to %f - %f - %f", proplev, x, y, z);
			ABroadCast(COLOR_YELLOW, string, 1);
			BizzInfo[proplev][bEntranceX] = x;
			BizzInfo[proplev][bEntranceY] = y;
			BizzInfo[proplev][bEntranceZ] = z;
			OnPropUpdate();
			return 1;
		}
	}
	return 1;
}
CMD:sbizentrance(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
			return 1;
		}
		new proplev, string[256];
		if (sscanf(params, "i", proplev))
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /sbizentrance [sbizid] - Moves an sbiz to you");

		if (proplev > 11 || proplev < 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SBusiness ID must be above 0 and below 12");
			return 1;
		}
		else
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			format(string, sizeof(string), "Entrance of SBiz %d to %f - %f - %f", proplev, x, y, z);
			ABroadCast(COLOR_YELLOW, string, 1);
			SBizzInfo[proplev][sbEntranceX] = x;
			SBizzInfo[proplev][sbEntranceY] = y;
			SBizzInfo[proplev][sbEntranceZ] = z;
			OnPropUpdate();
			return 1;
		}
	}
	return 1;
}
CMD:startharvest(playerid, params[])
{
	new idcar;
	idcar = GetPlayerVehicleID(playerid);
	if (IsLogOn(playerid))
	{
		if (!IsAHarvest(idcar))
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not at the farm.");
			return 1;
		}
		if (FarmerVar[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are already on your job.");
			return 1;
		}
		if (FarmerPickup[playerid][0] >= 22)
		{
			SendClientMessage(playerid, COLOR_WHITE, "This is enough for today(come back next payday).");
			return 1;
		}
		if (PlayerInfo[playerid][pJob] == 18)
		{
			JustStarted[playerid] = 1;
			FarmerVar[playerid] = 1;
			TogglePlayerControllable(playerid, 1);
			OnPlayerEnterCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_YELLOW, "Farm owner: Your working hours is up, go to red marker.");
		}
	}
	return 1;
}
CMD:stopharvest(playerid, params[])
{
	new idcar;
	idcar = GetPlayerVehicleID(playerid);
	if (IsLogOn(playerid))
	{
		if (FarmerVar[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You haven't started your work.");
			return 1;
		}
		if (PlayerInfo[playerid][pJob] == 18)
		{
			if (IsAHarvest(idcar))
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			if (FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
			{
				FarmerPickup[playerid][0]--;
			}
			JustStarted[playerid] = 0;
			FarmerVar[playerid] = 0;
			DisableCheckpoint(playerid);
		}
	}
	return 1;
}
//CMD:startdrugharvest(playerid, params[])
//{
//	new idcar;
//	idcar = GetPlayerVehicleID(playerid);
//	if (IsLogOn(playerid))
//	{
//		if (!IsADrugHarvest(idcar))
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You are not in a drug harvester.");
//			return 1;
//		}
//		if (DrugFarmerVar[playerid] == 1)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Your are already on your job.");
//			return 1;
//		}
//		if (DrugFarmerPickup[playerid][0] >= 37)
//		{
//			SendClientMessage(playerid, COLOR_WHITE, "This is enough for today (come back next payday).");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pJob] == 19)
//		{
//			JustStarted[playerid] = 1;
//			TogglePlayerControllable(playerid, 1);
//			DrugFarmerVar[playerid] = 1;
//			OnPlayerEnterCheckpoint(playerid);
//			SendClientMessage(playerid, COLOR_YELLOW, "Farm owner: Your working hours is up, go to red marker.");
//		}
//	}
//	return 1;
//}
//CMD:stopdrugharvest(playerid, params[])
//{
//		 new idcar;
//		 idcar = GetPlayerVehicleID(playerid);
//	if (IsLogOn(playerid))
//	{
//		if (DrugFarmerVar[playerid] == 0)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You haven't started your work.");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pJob] == 19)
//		{
//			if (IsADrugHarvest(idcar))
//			{
//				TogglePlayerControllable(playerid, 1);
//				RemovePlayerFromVehicle(playerid);
//			}
//			if (DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
//			{
//				DrugFarmerPickup[playerid][0]--;
//			}
//			JustStarted[playerid] = 0;
//			DrugFarmerVar[playerid] = 0;
//			DisableCheckpoint(playerid);
//		}
//	}
//	return 1;
//}
//CMD:smuggledrugs(playerid, params[])
//{
//	new idcar;
//	idcar = GetPlayerVehicleID(playerid);
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pJob] != 20)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You are not a drugs smuggler.");
//			return 1;
//		}
//		if (SmugglerWork[playerid] != 0)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You are smuggling drugs already.");
//			return 1;
//		}
//		if (GetPlayerMoney(playerid) < 299)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Bring atleast 300$ when you are smuggling drugs.");
//			return 1;
//		}
//		if (PayDaySecure[playerid] == 1)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Are you sure that you want to smuggle drugs again, today?");
//			return 1;
//		}
//		if (!PlayerToPoint(5.0, playerid, -38.8664, 56.3031, 3.1172))
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You are not at a drugs farm.");
//			return 1;
//		}
//		if (IsASmuggleCar(idcar) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
//		{
//			TogglePlayerControllable(playerid, 0);
//			SmugglerWork[playerid] = 1;
//			PayDaySecure[playerid] = 1;
//			GameTextForPlayer(playerid, "~w~Loading car with drugs...", 5000, 1);
//			SetTimerEx("LoadingDrugsForSmugglers", 5000, false, "i", playerid);
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   You are not in drugs smugglers' car.");
//			return 1;
//		}
//	}
//	return 1;
//}
//CMD:doimatkhau(playerid, params[]) { return cmd_changepass(playerid, params); }
//CMD:changepass(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (gPlayerLogged[playerid] == 0)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap.");
//			return 1;
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Thay doi nay se duoc cap nhat trong lan dang nhap tiep theo.");
//		}
//		new tmp[256];
//		if (sscanf(params, "s[256]", tmp))
//			return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /changepass [password]");
//
//		format(PlayerInfo[playerid][pKey], 128, tmp);
//		SavePlayer(playerid);
//		SendClientMessage(playerid, COLOR_YELLOW, "   Mat khau da duoc thay doi thanh cong!");
//	}
//	return 1;
//}
CMD:lockhq(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban chua dang nhap.");
			return 1;
		}
		else
		{
			if (PlayerInfo[playerid][pLeader] == 5)
			{
				if (hqlock[surlock] == 0)
				{
					hqlock[surlock] = 1;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "Surenos HQ locked.");
				}
				else if (hqlock[surlock] == 1)
				{
					hqlock[surlock] = 0;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "Surenos HQ unlocked.");
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 6)
			{
				if (hqlock[luclock] == 0)
				{
					hqlock[luclock] = 1;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "La Famiglia Sinatra HQ locked.");
				}
				else if (hqlock[luclock] == 1)
				{
					hqlock[luclock] = 0;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "La Famiglia Sinatra HQ unlocked.");
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 15)
			{
				if (hqlock[stlock] == 0)
				{
					hqlock[stlock] = 1;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "47th Street Saints Families gang HQ locked.");
				}
				else if (hqlock[stlock] == 1)
				{
					hqlock[stlock] = 0;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "47th Street Saints Families gang HQ unlocked.");
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 16)
			{
				if (hqlock[stlock] == 0)
				{
					hqlock[stlock] = 1;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "East Side Bloods Families gang HQ locked.");
				}
				else if (hqlock[stlock] == 1)
				{
					hqlock[stlock] = 0;
					SaveHQLocks();
					SendClientMessage(playerid, COLOR_GREY, "East Side Bloods Families gang HQ unlocked.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "You don't have keys of any HQ.");
				return 1;
			}
		}
	}
	return 1;
}
//CMD:knockout(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (gPlayerLogged[playerid] == 0)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Ban can phai dang nhap truoc.");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pLevel] < 3)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Ban can lv3 de su dung lenh nay.");
//			return 1;
//		}
//		if (KnockedDown[playerid] == 1)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Ban khong the xoay khi ban dang nga xuong .");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pSex] == 2)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Ban qua yeu de ha guc mot nguoi nao do");
//			return 1;
//		}
//		if (PlayerBoxing[playerid] != 0)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Khong su dung lenh khi dang danh boxing");
//			return 1;
//		}
//		new giveplayerid, string[256];
//		if (sscanf(params, "u", giveplayerid))
//			return SendClientMessage(playerid, COLOR_WHITE, "Su dung lenh: /knockout [Playerid/PartOfName]");
//
//		if (IsLogOn(giveplayerid))
//		{
//			if (giveplayerid != INVALID_PLAYER_ID)
//			{
//				if (ProxDetectorS(1.0, playerid, giveplayerid))
//				{
//					if (KnockedDown[giveplayerid] != 1)
//					{
//						if (giveplayerid == playerid)
//						{
//							SendClientMessage(playerid, COLOR_GREY, "   Ban khong the lam vay voi chinh minh.");
//							return 1;
//						}
//						if (PlayerInfo[giveplayerid][pSex] == 2)
//						{
//							SendClientMessage(playerid, COLOR_GREY, "Ban co chac chan ha guc mot nguoi phu nu?");
//							return 1;
//						}
//						if (IsPlayerInAnyVehicle(giveplayerid))
//						{
//							return 1;
//						}
//						new giveplayername[MAX_PLAYER_NAME];
//						GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
//						new rands = random(2) + 1;
//						format(string, sizeof(string), "* %s danh manh vao %s va co gang knock out anh ay.", GN(playerid), giveplayername);
//						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
//						ApplyAnimation(playerid, "FIGHT_D", "FightD_3", 4.0, 0, 1, 1, 0, 0);
//						if (rands == 1)
//						{
//							TogglePlayerControllable(giveplayerid, 0);
//							ApplyAnimation(giveplayerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
//							SetTimerEx("ClearKnock", 20000, false, "i", giveplayerid);
//							KnockedDown[giveplayerid] = 1;
//							format(string, sizeof(string), "* %s Ha guc muc tieu thanh cong.", GN(playerid));
//							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
//						}
//						else
//						{
//							format(string, sizeof(string), "* %s Da truot va khong ha guc duoc muc tieu.", GN(playerid));
//							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
//						}
//						return 1;
//					}
//					else
//					{
//						SendClientMessage(playerid, COLOR_GREY, "Nguoi choi da bi ha guc.");
//					}
//				}
//				else
//				{
//					SendClientMessage(playerid, COLOR_GREY, "Nguoi choi khong gan ban.");
//				}
//			}
//		}
//
//	}
//	return 1;
//}
/*if(strcmp(cmd, "/carcolor", true) == 0) // by Ellis
{
if(IsLogOn(playerid))
{
if(PlayerInfo[playerid][pPcarkey][0] == -1)
{
SendClientMessage(playerid, COLOR_GREY,"   You don't have a car to respray.");
return 1;
}
if(GetPlayerMoney(playerid) < 1000)
{
SendClientMessage(playerid, COLOR_GREY,"   You don't have enough money for car respray.");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /carcolor [ColorOneID] [ColorTwoID]");
return 1;
}
new color1;
color1 = strval(tmp);
if(color1 < 0 && color1 > 126)
{
SendClientMessage(playerid, COLOR_GREY, "   Wrong color id!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /carcolor [ColorOneID] [ColorTwoID]");
return 1;
}
new color2;
color2 = strval(tmp);
if(color2 < 0 && color2 > 126)
{
SendClientMessage(playerid, COLOR_GREY, "   Wrong color id!");
return 1;
}
if(IsPlayerInAnyVehicle(playerid))
{
if(PlayerInfo[playerid][pPcarkey][0] == idcar)
{
CarInfo[idcar][cColorOne] = color1;
CarInfo[idcar][cColorTwo] = color2;
SafeGivePlayerMoney(playerid, -1000);
GameTextForPlayer(playerid, "~w~Bill for a Paint Respray~n~~r~-$1000", 5000, 1);
ChangeVehicleColor(idcar, color1, color2);
OnPropUpdate();
SavePlayer(playerid);
}
else
{
SendClientMessage(playerid, COLOR_GREY,"   This is not your car.");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY,"   You are not in vehicle.");
return 1;
}
}
return 1;
}*/
//Help CMD Give
/*
CMD:give(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if (!strlen(x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /give [name] [playerid/PartOfName] ([ammount])");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: drugs, gun, vehkey(1-3), hirekey, rope");
			return 1;
		}
		if (strcmp(x_nr, "drugs", true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give drugs [playerid/PartOfName] [amount]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (!PlayerToPoint(5, playerid, x, y, z))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Player is not near you!");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give drugs [playerid/PartOfName] [amount]");
						return 1;
					}
					new dammount;
					dammount = strval(tmp);
					if (dammount > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   You don't have so many drugs."); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					PlayerInfo[playerid][pDrugs] -= dammount;
					PlayerInfo[giveplayerid][pDrugs] += dammount;
					if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s takes out his sack with drugs and hands it to %s.", GN(playerid), giveplayer); }
					else { format(string, sizeof(string), "* %s takes out her sack with drugs and hands it to %s.", GN(playerid), giveplayer); }
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Player is Offline!");
				return 1;
			}
		}
		else if (strcmp(x_nr, "gun", true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give gun [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						new gunID = GetPlayerWeapon(playerid);
						new gunAmmo = GetPlayerAmmo(playerid);

						
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						if (gunID != 0 && gunAmmo != 0)
						{
							SafeGivePlayerWeapon(giveplayerid, gunID, gunAmmo);
							RemovePlayerWeapon(playerid, gunID);
							format(string, sizeof(string), "* %s raises a hand and hands a weapon to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "  Ban khong co khau sung do!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi do khong gan ban! ");
						return 1;
					}
				}
			}
		}
		else if (strcmp(x_nr, "vehkey1", true) == 0)
		{
			if (PlayerInfo[playerid][pPcarkey][0] == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co chia khoa de cho!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give vehkey1 [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pPcarkey][0] != 999 && PlayerInfo[giveplayerid][pPcarkey][1] != 999 && PlayerInfo[giveplayerid][pPcarkey][2] != 999)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "  Nguoi choi da co san mot chia khoa!");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(15, playerid, x, y, z))
					{
						if (PlayerInfo[giveplayerid][pPcarkey][0] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][0] = PlayerInfo[playerid][pPcarkey][0];
							PlayerInfo[playerid][pPcarkey][0] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][1] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][1] = PlayerInfo[playerid][pPcarkey][0];
							PlayerInfo[playerid][pPcarkey][0] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][2] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][2] = PlayerInfo[playerid][pPcarkey][0];
							PlayerInfo[playerid][pPcarkey][0] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "  Nguoi choi do khong gan ban!");
						return 1;
					}

				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi da offline!");
				return 1;
			}

		}
		else if (strcmp(x_nr, "vehkey2", true) == 0)
		{
			if (PlayerInfo[playerid][pPcarkey][1] == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co chia khoa de cho!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give vehkey2 [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pPcarkey][0] != 999 && PlayerInfo[giveplayerid][pPcarkey][1] != 999 && PlayerInfo[giveplayerid][pPcarkey][2] != 999)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "  Nguoi choi da co san mot chia khoa!");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(15, playerid, x, y, z))
					{
						if (PlayerInfo[giveplayerid][pPcarkey][0] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][0] = PlayerInfo[playerid][pPcarkey][1];
							PlayerInfo[playerid][pPcarkey][1] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][1] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][1] = PlayerInfo[playerid][pPcarkey][1];
							PlayerInfo[playerid][pPcarkey][1] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][2] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][2] = PlayerInfo[playerid][pPcarkey][1];
							PlayerInfo[playerid][pPcarkey][1] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi do khong gan ban!");
						return 1;
					}

				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi da offline!");
				return 1;
			}

		}
		else if (strcmp(x_nr, "vehkey3", true) == 0)
		{
			if (PlayerInfo[playerid][pPcarkey][2] == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "    Ban khong co chia khoa de cho!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give vehkey3 [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pPcarkey][0] != 999 && PlayerInfo[giveplayerid][pPcarkey][1] != 999 && PlayerInfo[giveplayerid][pPcarkey][2] != 999)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "    Nguoi choi da co san mot chia khoa!");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(15, playerid, x, y, z))
					{
						if (PlayerInfo[giveplayerid][pPcarkey][0] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][0] = PlayerInfo[playerid][pPcarkey][2];
							PlayerInfo[playerid][pPcarkey][2] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][1] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][1] = PlayerInfo[playerid][pPcarkey][2];
							PlayerInfo[playerid][pPcarkey][2] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
						else if (PlayerInfo[giveplayerid][pPcarkey][2] == -1)
						{
							PlayerInfo[giveplayerid][pPcarkey][2] = PlayerInfo[playerid][pPcarkey][2];
							PlayerInfo[playerid][pPcarkey][2] = -1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* %s takes out the vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SavePlayer(playerid);
							SavePlayer(giveplayerid);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi do khong gan ban!");
						return 1;
					}

				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Nguoi choi da offline!");
				return 1;
			}

		}
		else if (strcmp(x_nr, "hirekey", true) == 0)
		{
			if (HireCar[playerid] == 299)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co chia khoa de cho!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give hirekey [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (!PlayerToPoint(15, playerid, x, y, z))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi do khong gan ban!");
						return 1;
					}
					if (HireCar[giveplayerid] != 299)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi do da co san mot chia khoa !");
						return 1;
					}
					HireCar[giveplayerid] = HireCar[playerid];
					HireCar[playerid] = 299;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* %s takes out the rented vehicle keys and tosses them to %s.", GN(playerid), giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
		}
		else if (strcmp(x_nr, "rope", true) == 0)
		{
			if (Rope[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co day thung de cho!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /give rope [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(5, playerid, giveplayerid))
					{
						if (Rope[giveplayerid] > 4)
						{
							SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi do da co qua nhieu day thung!");
							return 1;
						}
						Rope[playerid]--;
						Rope[giveplayerid]++;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* %s hands a rope to %s.", GN(playerid), giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do khong gan ban !");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /give [name] [playerid/PartOfName] ([ammount])");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: drugs, gun, vehkey(1-3), hirekey, rope");
			return 1;
		}

	}
	return 1;
}
*/

/*if(strcmp(cmd, "/ita", true) == 0 || strcmp(cmd, "/italian", true) == 0) // By Ellis
{
if(IsLogOn(playerid))
{
if(gPlayerLogged[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
return 1;
}
if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
{

new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[64];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/ita)lian [chat]");
return 1;
}
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid,x,y,z);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsLogOn(i))
{
if(PlayerToPoint(20, i, x, y, z))
{
if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] == 6)
{
format(string, sizeof(string), "%s noi: [Italian] %s", GN(playerid), result);
SendClientMessage(i, COLOR_FADE3, string);
}
else
{
format(string, sizeof(string), "%s noi: [Unknown language]", GN(playerid));
SendClientMessage(i, COLOR_FADE3, string);
}
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You can't talk italian !");
}
}
return 1;
}*/
CMD:spa(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
		{
			new result[128], string[256];
			if (sscanf(params, "s[128]", result))
				return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/spa)nish [chat]");

			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerToPoint(20, i, x, y, z))
					{
						if (PlayerInfo[i][pMember] == 5 || PlayerInfo[i][pLeader] == 5)
						{
							format(string, sizeof(string), "%s noi: [Spanish] %s", GN(playerid), result);
							SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
							format(string, sizeof(string), "%s noi: [Unknown language]", GN(playerid));
							SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   You can't talk spanish !");
		}
	}
	return 1;
}
CMD:jap(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
		{
			new result[128], string[256];
			if (sscanf(params, "s[128]", result))
				return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/jap)aneese [chat]");
		
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerToPoint(20, i, x, y, z))
					{
						if (PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14)
						{
							format(string, sizeof(string), "%s noi: [Japaneese] %s", GN(playerid), result);
							SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
							format(string, sizeof(string), "%s noi: [Unknown language]", GN(playerid));
							SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   You can't talk spanish !");
		}
	}
	return 1;
}
CMD:bitmat(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[256];
		if (sscanf(params, "u", giveplayerid))
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung lenh: /bitmat [playerid/PartOfName]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (giveplayerid == playerid) { return 1; }
				if (BlindFold[giveplayerid] == 0)
				{
					if (PlayerTied[giveplayerid] == 1)
					{
						if (GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "   Ban phai cung o trong xe voi nguoi muon bit mat !");
							return 1;
						}
						SetPlayerCameraPos(giveplayerid, 2000, -2000, 2000);
						SetPlayerCameraLookAt(giveplayerid, 2000, -2000, 2000);
						BlindFold[giveplayerid] = 1;
						format(string, sizeof(string), "* %s da bit mat %s bang mot chiec khan", GN(playerid), GN(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    Nguoi choi phai duoc gan dau tien !");
						return 1;
					}
				}
				else
				{
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(5, playerid, x, y, z))
					{
						SetCameraBehindPlayer(giveplayerid);
						BlindFold[giveplayerid] = 0;
						format(string, sizeof(string), "* %s da go khan bit mat cho %s", GN(playerid), GN(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);

					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do khong gan ban !");
						return 1;
					}
				}
			}
		}
	}
	return 1;
}
CMD:showbadge(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			new giveplayerid, string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /showbadge [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu thay duoc chinh huy hieu cua minh, Yolo!"); return 1; }
						
						format(string, sizeof(string), "* %s Lay ra Huy Hieu tu trong tui cua minh.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						if (PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Rank/Name: Chief %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Rank/Name: Deputy Chief %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Rank/Name: Captain %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Rank/Name: Lieutenant %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Rank/Name: Sergeant %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Rank/Name: Corporal %s*", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Rank/Name: Police Officer %s", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Rank/Name: Cadet %s", GN(playerid)); }
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s Da show Huy Hieu cho ban.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* Ban da thay Huy Hieu cua%s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do khong gan ban!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi da offline!");
				return 1;
			}
		}
	}
	return 1;
}
CMD:showid(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			new giveplayerid, string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /showid [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu show ID voi chinh minh, YOLO!"); return 1; }
	
						format(string, sizeof(string), "* %s Da lay CMND tu tui quan cua minh.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** || FBI Rank/Name: Director %s ||", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** || FBI Rank/Name: Administrator %s ||", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** || FBI Rank/Name: Spec. Agent %s ||", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** || FBI Rank/Name: Agent %s* ||", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** || FBI Rank/Name: Analyst %s ||", GN(playerid)); }
						else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** || FBI Rank/Name: Agency Intern %s ||", GN(playerid)); }
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s Da show CMND cho ban.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* Ban da dua CMND cua minh cho %s xem.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong gan ban!");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co so CMND!");
			return 1;
		}
	}
	return 1;
}
CMD:pdup(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (GetPlayerState(playerid) == 1)
		{
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if (PlayerToPoint(1.0, playerid, 242.7591, 66.4315, 1003.6406))
				{
					SetPlayerPos(playerid, 1556.1990, -1671.6530, 28.3956);
					GameTextForPlayer(playerid, "~w~Police Departemnt Roof", 5000, 1);
					SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
				}
			}
		}
	}
	return 1;
}
CMD:pddown(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (GetPlayerState(playerid) == 1)
		{
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if (PlayerToPoint(1.0, playerid, 242.7591, 66.4315, 1003.6406))
				{
					SetPlayerPos(playerid, 1526.5972, -1676.0651, 5.8906);
					GameTextForPlayer(playerid, "~w~Police Departemnt Garage", 5000, 1);
					SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
				}
			}
		}
	}
	return 1;
}
CMD:xemnote(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[128];
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "_____________Note Book_____________");
		format(string, sizeof(string), "1| %s", PlayerNote[playerid][0]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "2| %s", PlayerNote[playerid][1]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "3| %s", PlayerNote[playerid][2]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "4| %s", PlayerNote[playerid][3]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "5| %s", PlayerNote[playerid][4]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "___________________________________");
		
		format(string, sizeof(string), "* %s Da nhin so sach tay.", GN(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
CMD:xoanote(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "    Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		new x_nr, string[256];
		if (sscanf(params, "i", x_nr))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /xoanote [slot(1-5)]");

		if (x_nr < 1 && x_nr > 5) return SendClientMessage(playerid, COLOR_GREY, "   Sai slot! ");
		if (PlayerInfo[playerid][pNotes][x_nr-1] == 1)
		{
			strmid(PlayerNote[playerid][x_nr - 1], "None", 0, strlen("None"), 255);
			PlayerInfo[playerid][pNotes][x_nr - 1] = 0;
			format(string, sizeof(string), "Note %d da duoc xoa thanh cong.", x_nr);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co luu y o note 1 ! ");
		}
	}
	return 1;
}
CMD:themnote(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "    Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		
		new result[64];
		if(sscanf(params, "s[64]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung lenh: /themnote [text]");

		for (new i = 0; i < 5; i++)
		{
			if (PlayerInfo[playerid][pNotes][i] == 0)
			{
				strmid(PlayerNote[playerid][i], result, 0, strlen(result), 255);
				PlayerInfo[playerid][pNotes][i] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Them note thanh cong.");
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "    Ban khong con trang trong de them note ! ");
	}
	return 1;
}
CMD:duanote(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "    Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		new x_nr, giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "ui", giveplayerid, x_nr))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /duanote [playerid/PartOfName] [Slot note]");

		if (x_nr <1 || x_nr > 5) return SendClientMessage(playerid, COLOR_GREY, "   Sai id note ! ");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new Float:x, Float:y, Float:z;
				GetPlayerPos(giveplayerid, x, y, z);
				if (!PlayerToPoint(5, playerid, x, y, z))
				{
					SendClientMessage(playerid, COLOR_GREY, "    Nguoi choi do khong gan ban ! ");
					return 1;
				}
				if (PlayerInfo[playerid][pNotes][x_nr-1] == 0)
				{
					format(string, sizeof(string), "   Ban khong co luu y o note %d ! ", x_nr);
					return SendClientMessage(playerid, COLOR_GREY, string);
				}

				for (new i = 0; i < 5; i++)
				{
					if (PlayerInfo[giveplayerid][pNotes][i] == 0)
					{
						strmid(PlayerNote[giveplayerid][i], PlayerNote[playerid][i], 0, strlen(PlayerNote[playerid][i]), 255);
						PlayerInfo[giveplayerid][pNotes][i] = 1;

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "Ban da gui note cho[ID:%d] %s.", giveplayerid, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Ban nhan duoc mot note tu [ID:%d] %s.", playerid, GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessage(playerid, COLOR_GREY, "    Notebook nguoi do da day ! ");
			}
		}
	}
	return 1;
}
CMD:govinvite(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap ! ");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == MAYOR)
		{
			new giveplayerid;
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /govinvite [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pMember] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do da co to chuc ! ");
						return 1;
					}
					if (PlayerInfo[giveplayerid][pLeader] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do da co to chuc ! ");
						return 1;
					}
					PlayerInfo[giveplayerid][pMember] = MAYOR;
					PlayerInfo[giveplayerid][pTeam] = TEAMGOV;
					gTeam[giveplayerid] = TEAMGOV;
					SendClientMessage(playerid, COLOR_WHITE, "  Ban da moi vao to chuc.");
					SendClientMessage(playerid, COLOR_WHITE, "TIP: Dung quen  /setrole .");
					SendClientMessage(giveplayerid, COLOR_WHITE, "  Ban da duoc moi vao boi Leader GOV.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai Leader hoac thi truong ! ");
			return 1;
		}
	}
	return 1;
}
CMD:govuninvite(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 7)
		{
			new giveplayerid;
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung lenh: /govuninvite [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pMember] != MAYOR)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do khong co trong to chuc cua ban ! ");
						return 1;
					}
					PlayerInfo[giveplayerid][pMember] = 0;
					PlayerInfo[giveplayerid][pRank] = 0;
					PlayerInfo[giveplayerid][pTeam] = TEAMCIVILLAIN;
					gTeam[giveplayerid] = TEAMCIVILLAIN;
					new randomskin;
					if (PlayerInfo[giveplayerid][pSex] == 1) { randomskin = random(sizeof(CivMalePeds)); }
					else if (PlayerInfo[giveplayerid][pSex] == 2) { randomskin = random(sizeof(CivFemalePeds)); }
					else { randomskin = random(sizeof(CivMalePeds)); }
					SetPlayerSkin(giveplayerid, randomskin);
					PlayerInfo[giveplayerid][pChar] = randomskin;
					SendClientMessage(giveplayerid, COLOR_WHITE, "  Ban da bi kick ra khoi to chuc boi Leader GOV.");
					SendClientMessage(playerid, COLOR_WHITE, "   Ban da bi kick khoi to chuc GOV.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai Leader GOV ! ");
			return 1;
		}
	}
	return 1;
}
CMD:setrole(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap ! ");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] != 7)
		{
			SendClientMessage(playerid, COLOR_GREY, "  You're not the mayor ! ");
			return 1;
		}
		new giveplayerid, x_nr[64];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /setrole [playerid/PartOfName] [role name]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: driver, bodyguard");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pMember] != 7)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Player is not in your organisation ! ");
					return 1;
				}
				if (strcmp(x_nr, "driver", true) == 0)
				{
					PlayerInfo[giveplayerid][pRank] = 1;
					SendClientMessage(giveplayerid, COLOR_WHITE, "Mayor set your role to Driver");
					SendClientMessage(playerid, COLOR_WHITE, "Role has been set successfuly");
					return 1;
				}
				else if (strcmp(x_nr, "bodyguard", true) == 0)
				{
					PlayerInfo[giveplayerid][pJob] = 8;
					PlayerInfo[giveplayerid][pRank] = 2;
					SendClientMessage(giveplayerid, COLOR_WHITE, "Mayor set your role to Bodyguard");
					SendClientMessage(playerid, COLOR_WHITE, "Role has been set successfuly");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /setrole [playerid/PartOfName] [role name]");
					SendClientMessage(playerid, COLOR_WHITE, "Available names: driver, bodyguard");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:gocua(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		for (new i = 0; i < MAX_HOUSES; i++)
		{
			if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				format(string, sizeof(string), "* %s Go cua nha.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				for (new p = 0; p < MAX_PLAYERS; p++)
				{
					if (PlayerToPoint(60, p, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
						SendClientMessage(p, COLOR_PURPLE, "* Co ai do dang go cua nha.");
					}
				}
			}
		}
	}
	return 1;
}
//CMD:batdauquet(playerid, params[])
//{
//	new idcar;
//	idcar = GetPlayerVehicleID(playerid);
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pJob] != 21)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "  Ban khong phai nguoi quet bui duong pho ! ");
//			return 1;
//		}
//		if (PlayerIsSweeping[playerid] == 1)
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Ban dang quet duong pho ! ");
//			return 1;
//		}
//		if (IsASweeper(idcar))
//
//			PlayerIsSweeping[playerid] = 1;
//		TogglePlayerControllable(playerid, 1);
//		new randomize;
//		randomize = random(sizeof(gSweeperPoints));
//		SetPlayerCheckpoint(playerid, gSweeperPoints[randomize][0], gSweeperPoints[randomize][1], gSweeperPoints[randomize][2], 5.0);
//		SendClientMessage(playerid, COLOR_WHITE, "Quet bui bat dau! Den diem mau do checkpoint tren ban do.");
//	}
//	return 1;
//}
//CMD:dungquet(playerid, params[])
//{
//	new idcar;
//	idcar = GetPlayerVehicleID(playerid);
//	if (IsLogOn(playerid))
//	{
//		if (PlayerIsSweeping[playerid] == 1)
//		{
//			DisableCheckpoint(playerid);
//			PlayerIsSweeping[playerid] = 0;
//			SendClientMessage(playerid, COLOR_WHITE, "Ban da dung quet bui.");
//			if (IsASweeper(idcar))
//			{
//				RemovePlayerFromVehicle(playerid);
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Ban dang khong quet bui! ");
//			return 1;
//		}
//	}
//	return 1;
//}
CMD:inv(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap ! ");
			return 1;
		}
		new gunname[100], string[256];
		GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "__________ Inventory __________");
		if (PlayerInfo[playerid][pInvWeapon] != 0 && PlayerInfo[playerid][pInvAmmo] != 0)
		{
			format(string, sizeof(string), "Vu khi: %s, Dan: %d", gunname, PlayerInfo[playerid][pInvAmmo]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "  Kho trong.");
		}
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "_______________________________");
		SendClientMessage(playerid, COLOR_WHITE, "Meo: /takegun /putgun");
	}
	return 1;
}
CMD:takegun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap ! ");
			return 1;
		}
		if (ReduceTime[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can doi 3 giay de su dung lai cau lenh !");
			return 1;
		}
		if (PlayerInfo[playerid][pInvWeapon] != 0 && PlayerInfo[playerid][pInvAmmo] != 0)
		{
			ReduceTime[playerid] = 1;
			SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			new gunname[100];
			GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
			SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon], PlayerInfo[playerid][pInvAmmo]);
			
			format(string, sizeof(string), "   Ban lay %s tu trong tui.", gunname);
			SendClientMessage(playerid, COLOR_GREY, string);
			PlayerInfo[playerid][pInvWeapon] = 0;
			PlayerInfo[playerid][pInvAmmo] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Tui cua ban khong co vu khi nao !");
			return 1;
		}
	}
	return 1;
}
CMD:putgun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban chua dang nhap !");
			return 1;
		}
		if (ReduceTime[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can doi 3 giay de su dung lai cau lenh !");
			return 1;
		}
		if (PlayerInfo[playerid][pInvWeapon] != 0 || PlayerInfo[playerid][pInvAmmo] != 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Trong tui do da co do, khong the dat !");
			return 1;
		}

		new gunID = GetPlayerWeapon(playerid);
		new gunAmmo = GetPlayerAmmo(playerid);
		new string[256];

		if (gunID != 0 && gunAmmo != 0)
		{
			ReduceTime[playerid] = 1;
			SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			PlayerInfo[playerid][pInvWeapon] = gunID;
			PlayerInfo[playerid][pInvAmmo] = gunAmmo;
			RemovePlayerWeapon(playerid, gunID);
			
			new gunname[100];
			GetWeaponName(gunID, gunname, sizeof(gunname));
			format(string, sizeof(string), "   Ban bo %s vao trong tui do.", gunname);
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong co sung de bo vao tui ! ");
			return 1;
		}
	}
	return 1;
}
CMD:checkweapons(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen nay");
		return 1;
	}
	new giveplayerid, giveplayer[50], string[256];
	if (sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_GREY, "Su dung: /checkweapons [playerid/partOfName]");

	if (giveplayerid == INVALID_PLAYER_ID)
	{
		SendClientMessage(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai");
		return 1;
	}
	new sweapon, sammo;
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "%s hien dang co cac vu khi:", giveplayer);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	for (new i = 0; i<9; i++)
	{
		GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
		if (sweapon != 0)
		{
			format(string, sizeof(string), "%d: %d (%d)", i, sweapon, sammo);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:v(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap ! ");
			return 1;
		}
		new x_nr[64], string[256], giveplayerid, giveplayer[50], playername[50];
		GetFirstParams(params, x_nr, sizeof(x_nr));
		new idcar;
		idcar = GetPlayerVehicleID(playerid);
		if(isnull(x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: (/v)ehicle [noi dung]");
			SendClientMessage(playerid, COLOR_WHITE, "Noi dung: buy, park, lock(1-3), sell, sellto, color");
			return 1;
		}
		if (strcmp(x_nr, "sell", true) == 0)
		{
			if (IsAtDealership(playerid))
			{
				if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) || GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) || GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]))
				{
					new ownvehkey;
					if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]); }
					else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]); }
					else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]); }
					else { return 1; }
					if (strcmp(GLN(playerid), CarInfo[ownvehkey][cOwner], true) == 0)
					{
						new carsellprice = CarInfo[ownvehkey][cValue] / 4 * 3;
						new Float:x, Float:y, Float:z;
						new Float:a;
						CarInfo[ownvehkey][cOwned] = 0;
						format(CarInfo[ownvehkey][cOwner], 128, "Dealership");
						SafeGivePlayerMoney(playerid, carsellprice);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "~w~Ban da ban xe cho dealership, nhan: ~n~~g~$%d", carsellprice);
						GameTextForPlayer(playerid, string, 10000, 3);
						GetVehiclePos(ownvehkey, x, y, z);
						GetVehicleZAngle(ownvehkey, a);
						CarInfo[ownvehkey][cLocationx] = x;
						CarInfo[ownvehkey][cLocationy] = y;
						CarInfo[ownvehkey][cLocationz] = z;
						CarInfo[ownvehkey][cAngle] = a;
						if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0])) { PlayerInfo[playerid][pPcarkey][0] = -1; }
						else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1])) { PlayerInfo[playerid][pPcarkey][1] = -1; }
						else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2])) { PlayerInfo[playerid][pPcarkey][2] = -1; }
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
						if (PlayerInfo[playerid][pLocal] == ownvehkey)
						{
							SetPlayerInterior(playerid, 0);
							SetPlayerPos(playerid, CarInfo[ownvehkey][cLocationx], CarInfo[ownvehkey][cLocationy], CarInfo[ownvehkey][cLocationz]);
							PlayerInfo[playerid][pInt] = 0;
						}
						OnPropUpdate();
						SavePlayer(playerid);
						UpdateCar(ownvehkey);
						RespawnCar(ownvehkey);
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Ban phai ngoi tren xe de tien hanh giao dich! ");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban can toi dealership de thuc hien.");
				return 1;
			}
		}
		else if (strcmp(x_nr, "sellto", true) == 0)
		{
			if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) || GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) || GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]))
			{
				new price;
				new ownvehkey;
				if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]); }
				else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]); }
				else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2])) { ownvehkey = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]); }
				else { return 1; }
				if (strcmp(GLN(playerid), CarInfo[ownvehkey][cOwner], true) == 0)
				{
					if (sscanf(params, "s[256]ui", x_nr, giveplayerid, price))
						return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /v sellto [playerid/PartOfName] [price]");

					if (IsLogOn(giveplayerid))
					{
						if (giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if (PlayerInfo[giveplayerid][pPcarkey][0] == -1)
								{
									if (price < 1 || price > 1500000)
									{
										SendClientMessage(playerid, COLOR_GREY, "  Gia tien khong the nho hon 1 hoac lon hon 1500000. ");
										return 1;
									}
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "* Ban de nghi %s mua xe cua ban voi gia $%d .", giveplayer, price);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Chu xe %s de nghi ban xe cho ban voi gia $%d (go /accept ownablecar) de mua.", playername, price);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									OwnableCarOffer[giveplayerid] = playerid;
									OwnableCarID[giveplayerid] = ownvehkey;
									OwnableCarPrice[giveplayerid] = price;
									return 1;
								}
								else if (PlayerInfo[giveplayerid][pPcarkey][1] == -1)
								{
									if (price < 1 || price > 1500000)
									{
										SendClientMessage(playerid, COLOR_GREY, "  Gia tien khong the nho hon 1 hoac lon hon 1500000. ");
										return 1;
									}
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "* Ban de nghi %s mua xe cua ban voi gia $%d .", giveplayer, price);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Chu xe %s de nghi ban xe cho ban voi gia $%d (go /accept ownablecar) de mua.", playername, price);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									OwnableCarOffer[giveplayerid] = playerid;
									OwnableCarID[giveplayerid] = ownvehkey;
									OwnableCarPrice[giveplayerid] = price;
									return 1;
								}
								else if (PlayerInfo[giveplayerid][pPcarkey][2] == -1)
								{
									if (price < 1 || price > 1500000)
									{
										SendClientMessage(playerid, COLOR_GREY, "  Gia tien khong the nho hon 1 hoac lon hon 1500000. ");
										return 1;
									}
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "* Ban de nghi %s mua xe cua ban voi gia $%d .", giveplayer, price);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Chu xe %s de nghi ban xe cho ban voi gia $%d (go /accept ownablecar) de mua.", playername, price);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									OwnableCarOffer[giveplayerid] = playerid;
									OwnableCarID[giveplayerid] = ownvehkey;
									OwnableCarPrice[giveplayerid] = price;
									return 1;
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi kia da so huu full slot xe (3 slot) ! ");
									return 1;
								}
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi kia khong dung gan ban ! ");
								return 1;
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Day khong phai xe cua ban");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "  Ban phai ngoi tren xe de tien hanh giao dich");
				return 1;
			}
		}
		else if (strcmp(x_nr, "park", true) == 0)
		{
			new Float:x, Float:y, Float:z;
			new Float:a;
			new carid;
			new getcarid;
			if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0])) { carid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]); }
			else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1])) { carid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]); }
			else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2])) { carid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]); }
			else { return 1; }
			getcarid = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
			GetVehiclePos(carid, x, y, z);
			//GetPlayerFacingAngle(playerid, a);
			GetVehicleZAngle(carid, a);
			if (IsPlayerInVehicle(playerid, carid) && CarInfo[carid][cOwned] == 1)
			{
				if (PlayerInfo[playerid][pPcarkey][0] == -1 && PlayerInfo[playerid][pPcarkey][1] == -1 && PlayerInfo[playerid][pPcarkey][2] == -1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong so huu chiec xe nao de dau.");
					return 1;
				}
				if (getcarid == carid)
				{
					CarInfo[carid][cLocationx] = x;
					CarInfo[carid][cLocationy] = y;
					CarInfo[carid][cLocationz] = z;
					CarInfo[carid][cAngle] = a;
					format(string, sizeof(string), "~n~ Ban da dau xe thanh cong tai vi tri nay. ~n~");
					GameTextForPlayer(playerid, "Xe cua ban da duoc dau. Chiec xe nay se respawn o day.", 10000, 3);
					SavePlayer(playerid);
					UpdateCar(carid);
					RespawnCar(carid);
					TogglePlayerControllable(playerid, 1);
					OnPropUpdate();
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong phai chu so huu chiec xe nay.");
					return 1;
				}
			}
			else SCM(playerid, COLOR_GREY, "DM");
		}
		else if (strcmp(x_nr, "lock1", true) == 0)
		{
			new keycar = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]);
			if (keycar != -1)
			{
				if (CarInfo[keycar][cLock] == 1)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 0);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~g~Mo Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 0;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
				else if (CarInfo[keycar][cLock] == 0)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 1);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~r~Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 1;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "  Ban khong so huu chiec xe nao o slot 1");
				return 1;
			}
		}
		else if (strcmp(x_nr, "lock2", true) == 0)
		{
			new keycar = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]);
			if (keycar != -1)
			{
				if (CarInfo[keycar][cLock] == 1)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 0);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~g~Mo Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 0;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
				else if (CarInfo[keycar][cLock] == 0)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 1);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~r~Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 1;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "  Ban khong so huu chiec xe nao o slot 2");
				return 1;
			}
		}
		else if (strcmp(x_nr, "lock3", true) == 0)
		{
			new keycar = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]);
			if (keycar != -1)
			{
				if (CarInfo[keycar][cLock] == 1)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 0);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~g~Mo Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 0;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
				else if (CarInfo[keycar][cLock] == 0)
				{
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsLogOn(i))
						{
							SetVehicleParamsForPlayer(keycar, i, 0, 1);
						}
					}
					format(string, sizeof(string), "~w~Phuong Tien~n~~r~Khoa");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[keycar][cLock] = 1;
					UpdateCar(keycar);
					OnPropUpdate();
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "  Ban khong so huu chiec xe nao o slot 3");
				return 1;
			}
		}
		else if (strcmp(x_nr, "color", true) == 0)
		{
			if (PlayerInfo[playerid][pPcarkey][0] == -1 && PlayerInfo[playerid][pPcarkey][1] == -1 && PlayerInfo[playerid][pPcarkey][2] == -1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co xe de respray.");
				return 1;
			}
			if (GetPlayerMoney(playerid) < 1000)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong du tien de respray.");
				return 1;
			}
			new color1, color2;
			if (sscanf(params, "s[256]ii", x_nr, color1, color2))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /v color [ColorOneID] [ColorTwoID]");

			if (color1 < 0 && color1 > 126)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Sai color id!");
				return 1;
			}
			if (color2 < 0 && color2 > 126)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Sai color id!");
				return 1;
			}
			new vehid;
			if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0])) { vehid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]); }
			else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1])) { vehid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]); }
			else if (GetPlayerVehicleID(playerid) == GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2])) { vehid = GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]); }
			else { return 1; }

			if (IsPlayerInVehicle(playerid, vehid))
			{
				CarInfo[vehid][cColorOne] = color1;
				CarInfo[vehid][cColorTwo] = color2;
				SafeGivePlayerMoney(playerid, -1000);
				GameTextForPlayer(playerid, "~w~Tra tien Respray~n~~r~-$1000", 5000, 1);
				ChangeVehicleColor(vehid, color1, color2);
				OnPropUpdate();
				SavePlayer(playerid);
				UpdateCar(vehid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong tren xe.");
				return 1;
			}
		}
		else if (strcmp(x_nr, "buy", true) == 0)
		{
			if (IsAnOwnableCar(idcar))
			{
				if (PlayerInfo[playerid][pLevel] < 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban can dat level 3 de co the so huu xe!");
					return 1;
				}
				if (PlayerInfo[playerid][pPcarkey][0] != -1 && PlayerInfo[playerid][pPcarkey][1] != -1 && PlayerInfo[playerid][pPcarkey][2] != -1)
					{ SendClientMessage(playerid, COLOR_GREY, "   Ban da so huu 3 chiec xe"); return 1; }
				if (CarInfo[idcar][cOwned] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Chiec xe nay da co nguoi so huu");
					return 1;
				}
				if (GetPlayerMoney(playerid) >= CarInfo[idcar][cValue])
				{
					if (PlayerInfo[playerid][pPcarkey][0] == -1) { PlayerInfo[playerid][pPcarkey][0] = CarInfo[idcar][cID]; }
					else if (PlayerInfo[playerid][pPcarkey][1] == -1) { PlayerInfo[playerid][pPcarkey][1] = CarInfo[idcar][cID]; }
					else if (PlayerInfo[playerid][pPcarkey][2] == -1) { PlayerInfo[playerid][pPcarkey][2] = CarInfo[idcar][cID]; }
					else { return 1; }
					CarInfo[idcar][cOwned] = 1;
					
					TogglePlayerControllable(playerid, 1);
					format(CarInfo[idcar][cOwner], 128, GLN(playerid));
					SafeGivePlayerMoney(playerid, -CarInfo[idcar][cValue]);
					PlayerPlayMusic(playerid);
					GameTextForPlayer(playerid, "~w~Chuc Mung~n~Su dung /v de dau xe!", 5000, 3);
					SendClientMessage(playerid, COLOR_GRAD2, "Chuc mung ban da giao dich thanh cong!");
					SendClientMessage(playerid, COLOR_GRAD2, "Go /vehiclehelp de xem cac lenh ve xe!");
					SendClientMessage(playerid, COLOR_YELLOW2, "Ban co the khoi dong may xe !");
					gEngine[playerid] = 0;
					engineOn[GetPlayerVehicleID(playerid)] = false;
					DateProp(playerid);
					OnPropUpdate();
					SavePlayer(playerid);
					UpdateCar(GetPlayerVehicleID(playerid));
					//UpdateDealership();
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Ban khong mang du tien! ");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Meo: (/v)ehicle [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: park, lock(1-3), sell, sellto, color");
			return 1;
		}
	}
	return 1;
}
CMD:trunk(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_nr[64], string[256];
		if (sscanf(params, "s[256]", x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Meo: /trunk [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: info, putgun, takegun, putarmour, takearmour");
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Canh sat moi duoc dung lenh nay.");
			}
			return 1;
		}
		if (strcmp(x_nr, "info", true) == 0)
		{
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];

			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			foreach(new i : Vehicle)
			{
				new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
				if (dist)
				{
					result = i;
					counter++;
				}
			}
			switch (counter)
			{
			case 0:
			{
						SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung xe gan ban de luc soat");
			}

			case 1:
			{
						if (IsAnOwnableCar(result))
						{
							if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == result) {}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Thung xe da bi khoa !");
								return 1;
							}
						}
						if (IsPlayerInAnyVehicle(playerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "  Khong the mo thung xe khi dang trong xe");
							return 1;
						}
						if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
						{
							SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
							return 1;
						}

						SendClientMessage(playerid, COLOR_LIGHT_BLUE, "|_______ Vehicle Trunk _______|");
						for (new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
						{
							new gunname[100];
							if (vehTrunk[result][slot] != 0)
							{
								GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
								format(string, sizeof(string), "| Slot %i: %s (Ammo: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
								SendClientMessage(playerid, COLOR_WHITE, string);
							}
							else
							{
								format(string, sizeof(string), "| Slot %i: Trong (Ammo: N/A)", slot);
								SendClientMessage(playerid, COLOR_WHITE, string);
							}
						}
						format(string, sizeof(string), "| Body armour: %f%", vehTrunkArmour[result]);
						SendClientMessage(playerid, COLOR_WHITE, string);

						
						format(string, sizeof(string), "* %s mo thung xe va kiem tra ben trong.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						return 1;
			}

			default:
			{
						 SendClientMessage(playerid, COLOR_GREY, "   Co qua nhieu xe xung quanh");
						 return 1;
			}
			}
			return 1;
		}
		else if (strcmp(x_nr, "putgun", true) == 0)
		{
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];

			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			foreach(new i : Vehicle)
			{
				new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
				if (dist)
				{
					result = i;
					counter++;
				}
			}
			switch (counter)
			{
			case 0:
			{
						SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung chua gan ban");
			}

			case 1:
			{
						if (vehTrunkCounter[result] != (MAX_TRUNK_SLOTS - 1))
						{
							if (IsAnOwnableCar(result))
							{
								if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == result) {}
								else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == result) {}
								else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == result) {}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "  Thung xe da bi khoa !");
									return 1;
								}
							}
							if (ReduceTime[playerid] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   Ban can cho 3 giay de thuc hien lai lenh nay !");
								return 1;
							}
							if (IsPlayerInAnyVehicle(playerid))
							{
								SendClientMessage(playerid, COLOR_GREY, "  Khong the mo thung xe khi dang trong xe");
								return 1;
							}
							if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
							{
								SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
								return 1;
							}
							new buffer[512];
							new gunname[100];
							new gunID = GetPlayerWeapon(playerid);
							new gunAmmo = GetPlayerAmmo(playerid);

							if (gunID != 0 && gunAmmo != 0)
							{
								ReduceTime[playerid] = 1;
								SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
								GetWeaponName(gunID, gunname, sizeof(gunname));
								vehTrunkCounter[result]++;
								vehTrunk[result][vehTrunkCounter[result]] = gunID;
								vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
								format(buffer, sizeof(buffer), "Ban da bo %s (Ammo: %i) vao trong thung cua xe.", gunname, gunAmmo);
								SendClientMessage(playerid, COLOR_WHITE, buffer);
								RemovePlayerWeapon(playerid, gunID);
								
								format(string, sizeof(string), "* %s mo thung xe ra va mot vu khi vao.", GN(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								SaveTrunk();
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, " Thung xe da day");
							return 1;
						}
			}

			default:
			{
						 SendClientMessage(playerid, COLOR_GREY, "   Co qua nhieu xe xung quanh");
						 return 1;
			}
			}
			return 1;
		}
		else if (strcmp(x_nr, "takegun", true) == 0)
		{
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];

			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			foreach(new i : Vehicle)
			{
				new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
				if (dist)
				{
					result = i;
					counter++;
				}
			}

			switch (counter)
			{
			case 0:
			{
						SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung xe gan ban");
						return 1;
			}

			case 1:
			{
						if (IsPlayerInAnyVehicle(playerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "   Khong the mo thung xe khi dang trong xe");
							return 1;
						}
						if (ReduceTime[playerid] == 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Ban can cho 3 giay de thuc hien lai cau lenh !");
							return 1;
						}
						if (IsAnOwnableCar(result))
						{
							if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == result) {}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Thung xe da bi khoa !");
								return 1;
							}
						}
						if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
						{
							SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
							return 1;
						}
						if (vehTrunkCounter[result] != 0)
						{
							ReduceTime[playerid] = 1;
							SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
							new buffer[512];
							new gunName[100];

							SafeGivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
							GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
							format(buffer, sizeof(buffer), "Ban da lay %s (Ammo: %i) tu thung xe.", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
							SendClientMessage(playerid, COLOR_WHITE, buffer);
							vehTrunk[result][vehTrunkCounter[result]] = '\0';
							vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
							vehTrunkCounter[result]--;
							
							format(string, sizeof(string), "* %s mo thung xe va lay mot vu khi ra.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SaveTrunk();
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Thung xe trong ! ");
							return 1;
						}
			}

			default:
			{
						 SendClientMessage(playerid, COLOR_GREY, "   Co qua xe xung quanh");
						 return 1;
			}
			}
			return 1;
		}
		else if (strcmp(x_nr, "putarmour", true) == 0)
		{
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];

			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			foreach(new i : Vehicle)
			{
				new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
				if (dist)
				{
					result = i;
					counter++;
				}
			}
			switch (counter)
			{
			case 0:
			{
						SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung xe gan ban");
						return 1;
			}

			case 1:
			{
						if (IsPlayerInAnyVehicle(playerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "   Khong the mo thung xe khi dang trong xe");
							return 1;
						}
						if (IsAnOwnableCar(result))
						{
							if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == result) {}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Thung xe da bi khoa !");
								return 1;
							}
						}
						if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
						{
							SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
							return 1;
						}

						new Float:plyArmour;
						GetPlayerArmour(playerid, plyArmour);

						if (plyArmour != 0)
						{
							SetPlayerArmour(playerid, 0);
							vehTrunkArmour[result] = plyArmour;

							
							format(string, sizeof(string), "* %s coi ao giap ra va bo vao thung xe.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SaveTrunk();
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Ban khong co giap de bo vao thung xe ");
							return 1;
						}
			}

			default:
			{
						 SendClientMessage(playerid, COLOR_GREY, "   Co qua nhieu xe xung quanh");
						 return 1;
			}
			}
			return 1;
		}
		else if (strcmp(x_nr, "takearmour", true) == 0)
		{
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];

			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			foreach(new i : Vehicle)
			{
				new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
				if (dist)
				{
					result = i;
					counter++;
				}
			}
			switch (counter)
			{
			case 0:
			{
						SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung xe gan ban");
						return 1;
			}

			case 1:
			{
						if (IsPlayerInAnyVehicle(playerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "   Khong the mo thung xe khi dang trong xe");
							return 1;
						}
						if (IsAnOwnableCar(result))
						{
							if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][0]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][1]) == result) {}
							else if (GetVehicleIDFromKey(PlayerInfo[playerid][pPcarkey][2]) == result) {}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Thung xe da bi khoa !");
								return 1;
							}
						}
						if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
						{
							SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
							return 1;
						}
						if (vehTrunkArmour[result] != 0)
						{
							SetPlayerArmour(playerid, vehTrunkArmour[result]);
							vehTrunkArmour[result] = 0;

							
							format(string, sizeof(string), "* %s lay ao giap tu thung xe ra va mac vao.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SaveTrunk();
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Khong co ao giap nao trong xe ! ");
							return 1;
						}
			}

			default:
			{
						 SendClientMessage(playerid, COLOR_GREY, "   Co qua nhieu xe xung quanh");
						 return 1;
			}
			}
			return 1;
		}
		else if (strcmp(x_nr, "frisk", true) == 0)
		{
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
				new counter = 0;
				new result;
				new plyName[MAX_PLAYER_NAME];

				GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				foreach(new i : Vehicle)
				{
					new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
					if (dist)
					{
						result = i;
						counter++;
					}
				}
				switch (counter)
				{
				case 0:
				{
							SendClientMessage(playerid, COLOR_GREY, "   Khong co chiec xe nao co thung xe gan ban");
				}

				case 1:
				{
							if (IsPlayerInAnyVehicle(playerid))
							{
								SendClientMessage(playerid, COLOR_GREY, "  Khong the mo thung xe khi dang trong xe");
								return 1;
							}
							if (IsAPlane(result) || IsABike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHspdCar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >= 78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
							{
								SendClientMessage(playerid, COLOR_GREY, "  Phuong tien nay khong co thung chua !");
								return 1;
							}

							SendClientMessage(playerid, COLOR_LIGHT_BLUE, "|_______ Vehicle Trunk _______|");
							for (new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
							{
								new gunname[100];
								if (vehTrunk[result][slot] != 0)
								{
									GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
									format(string, sizeof(string), "| Slot %i: %s (Ammo: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									format(string, sizeof(string), "| Slot %i: Empty (Ammo: N/A)", slot);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
							format(string, sizeof(string), "| Body armour: %f%", vehTrunkArmour[result]);
							SendClientMessage(playerid, COLOR_WHITE, string);

							
							format(string, sizeof(string), "* %s mo thung xe ra va luc soat ben trong.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							return 1;
				}

				default:
				{
							 SendClientMessage(playerid, COLOR_GREY, "   Co qua nhieu xe xung quanh");
							 return 1;
				}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai canh sat ! ");
				return 1;
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Meo: /trunk [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: info, putgun, takegun, putarmour, takearmour");
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You can /trunk frisk as a cop");
			}
			return 1;
		}
	}
	return 1;
}
CMD:windows(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban can phai dang nhap truoc. ! ");
			return 1;
		}
		new string[256];
		if (IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid), pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsABike(carid) || IsAPizzabike(carid) || IsAPlane(carid) || IsABoat(carid) || IsASweeper(carid) || IsAHarvest(carid) || IsADrugHarvest(carid) || IsATank(carid) || pveh == 523 || pveh == 480 || pveh == 567 || pveh == 533 || pveh == 555 || pveh == 539 || pveh == 572 || pveh == 571 || pveh == 530 || pveh == 457 || pveh == 575 || pveh == 536 || pveh == 424)
			{
				SendClientMessage(playerid, COLOR_GREY, "  Xe nay khong co cua so de mo");
				return 1;
			}
			if (VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
			{
				VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
				
				format(string, sizeof(string), "* %s Mo cua so xuong.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				return 1;
			}
			else if (VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
			{
				VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
				
				format(string, sizeof(string), "* %s Mo cua so len.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				return 1;
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can o trong xe de su dung lenh nay !");
			return 1;
		}
	}
	return 1;
}
CMD:cduty(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] > 0) return SCM(playerid, COLOR_GREY, "Admin khong the thuc hien.");
	if (PlayerInfo[playerid][pHelper] < 2) return SCM(playerid, COLOR_GREY, "Ban khong phai advisor");
	if (!IsLogOn(playerid)) return SCM(playerid, COLOR_GREY, "Ban chua dang nhap.");
	new string[128];
	if (CADuty[playerid] == 0)
	{
		CountAdvisor++;
		CADuty[playerid] = 1;
		SetPlayerColor(playerid, TEAM_VAGOS_COLOR);
		format(string, sizeof(string), "AdmWarning: [ID:%d] %s dang onduty Advisor", playerid, GN(playerid));
		ABroadCast(COLOR_YELLOW, string, 1);
		CBroadCast(COLOR_LIGHT_BLUE, string, 1);
		return 1;
	}
	else if (CADuty[playerid] == 1)
	{
		CountAdvisor--;
		CADuty[playerid] = 0;
		SetPlayerArmour(playerid, 0);
		SetPlayerHealth(playerid, 100);
		SetPlayerColor(playerid, TEAM_HIT_COLOR);

		format(string, sizeof(string), "AdmWarning: [ID:%d] %s da offduty Advisor", playerid, GN(playerid));
		ABroadCast(COLOR_YELLOW, string, 1);
		CBroadCast(COLOR_LIGHT_BLUE, string, 1);
		return 1;
	}
	return 1;
}
CMD:aduty(playerid, params[]) { return cmd_adminduty(playerid, params); }
CMD:adminduty(playerid, params[])
{
		 new string[256];
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban can phai dang nhap truoc. !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			if (AdminDuty[playerid] == 0)
			{
				AdminDuty[playerid] = 1;
				SetPlayerArmour(playerid, 999);
				SetPlayerHealth(playerid, 999);
				SetPlayerColor(playerid, TEAM_VAGOS_COLOR);
				
				format(string, sizeof(string), "AdmWarning: [ID:%d]%s Dang Onduty ADMIN", playerid, GN(playerid));
				ABroadCast(COLOR_YELLOW, string, 1);
				if (PlayerInfo[playerid][pAdmin] >= 1337)
				{
					for (new i = 0; i < sizeof(CarInfo); i++)
					{
						SetVehicleParamsForPlayer(i, playerid, 0, 0);
					}
				}
				return 1;
			}
			else if (AdminDuty[playerid] == 1)
			{
				AdminDuty[playerid] = 0;
				SetPlayerArmour(playerid, 0);
				SetPlayerHealth(playerid, 100);
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
				
				format(string, sizeof(string), "AdmWarning: [ID:%d]%s Dang Off Duty ADMIN", playerid, GN(playerid));
				ABroadCast(COLOR_YELLOW, string, 1);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong phai la Admin !");
			return 1;
		}
	}
	return 1;
}
CMD:moctui(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Meo: /moctui [playerid/PartOfName]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerTied[giveplayerid] != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban phai troi nguoi kia truoc de luc soat ! ");
					return 1;
				}
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "%s co %d$ trong vi.", giveplayer, GetPlayerMoney(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do khong o gan ban !");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:vehid(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (IsPlayerInAnyVehicle(playerid))
		{
			format(string, sizeof(string), "* Vehicle ID: %d.", GetPlayerVehicleID(playerid));
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
	}
	return 1;
}
CMD:gotohospital(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] > 1)
		{
			SetPlayerPos(playerid, 1172.1720, -1332.8326, 1006.4028);
			GameTextForPlayer(playerid, "~w~All Saints Hospital", 5000, 1);
			SetPlayerInterior(playerid, 6);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 6;
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong duoc phep su dung lenh nay.");
			return 1;
		}
	}
	return 1;
}
CMD:sid(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Meo: /sid [playerid/PartOfName]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "   Ban da cho %s thay ID cua ban.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(giveplayerid, COLOR_GREEN, "_______________________");
					format(string, sizeof(string), "   Ten: %s   Tuoi: %d", GN(playerid), PlayerInfo[playerid][pAge]);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "   So dien thoai: %d", PlayerInfo[playerid][pPnumber]);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					SendClientMessage(giveplayerid, COLOR_GREEN, "_______________________");
					format(string, sizeof(string), "   %s da cho ban thay ID cua anh ay.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:tracelastcall(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. ");
			return 1;
		}
		if (IsAPDMember(playerid))
		{
			if (pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Loi tai vi tri nguoi goi ");
				return 1;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Noi nguoi goi cuoi cung da duoc danh dau checkpoint tren ban do");
			SendClientMessage(playerid, COLOR_WHITE, "Meo: /removegps De xoa muc tieu");
			SetPlayerCheckpoint(playerid, pdtrace_x, pdtrace_y, pdtrace_z, 8.0);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			if (emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "  Loi tai vi tri nguoi goi ");
				return 1;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Noi nguoi goi cuoi cung da duoc danh dau checkpoint tren ban do");
			SendClientMessage(playerid, COLOR_WHITE, "Meo: /removegps De xoa muc tieu");
			SetPlayerCheckpoint(playerid, emdtrace_x, emdtrace_y, emdtrace_z, 8.0);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat ! ");
			return 1;
		}
	}
	return 1;
}
CMD:ar(playerid, params[]) { return cmd_acceptreport(playerid, params); }
CMD:acceptreport(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Meo: /acceptreport [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerNeedsHelp[giveplayerid] == 1)
					{
						PlayerNeedsHelp[giveplayerid] = 0;
						
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "AdmWarning: %s da chap nhan bao cao cua [ID:%d]%s.", GN(playerid), giveplayerid, giveplayer);
						ABroadCast(COLOR_YELLOW, string, 1);
						format(string, sizeof(string), "** LARP Administrator [ID:%d]%s da chap nhan bao cao cua ban va se den ho tro ban! Xin vui long cho giay lat.", playerid, GN(playerid));
						SendClientMessage(giveplayerid, 0x4D903DAA, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Player didn't send a report message or it's out of stock !");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co quyen nay to use that command ! ");
			return 1;
		}
	}
	return 1;
}
CMD:tr(playerid, params[]) { return cmd_trashreport(playerid, params); }
CMD:trashreport(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Meo: /trashreport [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerNeedsHelp[giveplayerid] == 1)
					{
						PlayerNeedsHelp[giveplayerid] = 0;
						
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "AdmWarning: %s da tu choi bao cao cua [ID:%d]%s.", GN(playerid), giveplayerid, giveplayer);
						ABroadCast(COLOR_YELLOW, string, 1);
						format(string, sizeof(string), "** LARP Administrator [ID:%d]%s da tu choi bao cao cua ban va se co gang noi cho ban ly do !", playerid, GN(playerid));
						SendClientMessage(giveplayerid, 0xB35959AA, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Player didn't send a report message or it's out of stock !");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co quyen nay to use that command ! ");
			return 1;
		}
	}
	return 1;
}
CMD:editcar(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Ban khong du quyen han.");
	new vid, option[128], choose[50];
	if (sscanf(params, "is[50]", vid, option))
	{
		SCM(playerid, COLOR_GRAD2, "Su dung: /editcar [vehid] [option]");
		SCM(playerid, COLOR_GRAD2, "Option: model, park, type, color");
		return 1;
	}
	GetFirstParams(option, choose, sizeof(choose));
	if (IsAnOwnableCar(vid)) return SCM(playerid, COLOR_GREY, "Chi co the edit xe he thong.");
	if (!strcmp(choose, "model", true))
	{
		new modelid;
		if (sscanf(option, "s[50]i", choose, modelid)) return SCM(playerid, COLOR_GRAD2, "Su dung: /editcar [vehid] model [modelid]");
		if (modelid < 400 || modelid > 611) return SCM(playerid, COLOR_GREY, "ID tu 400 den 611.");
		CarInfo[vid][cModel] = modelid;
		UpdateCar(vid);
		RespawnCar(vid);
		SCM(playerid, COLOR_LIGHTRED, "Chinh model xe thanh cong!");
		return 1;
	}
	if (!strcmp(choose, "park", true))
	{
		GetVehiclePos(vid, CarInfo[vid][cLocationx], CarInfo[vid][cLocationy], CarInfo[vid][cLocationz]);
		GetVehicleZAngle(vid, CarInfo[vid][cAngle]);
		UpdateCar(vid);
		RespawnCar(vid);
		SCM(playerid, COLOR_LIGHTRED, "Chinh vi tri xe thanh cong!");
		return 1;
	}
	else if (!strcmp(choose, "type", true))
	{
		new nametype[50], type = 0;
		if (sscanf(option, "s[50]s[50]", choose, nametype))
		{
			SCM(playerid, COLOR_GRAD2, "Su dung: /editcar [vehid] type [typename]");
			SCM(playerid, COLOR_GRAD2, "Type Name: Cop, FBI, NG, Gor, Ambulance, Truck, Pizza, Bus, Tow");
			SCM(playerid, COLOR_GRAD2, "Type Name: School, Rent, Kart, News, Taxi, Hitman, DoC");
			return 1;
		}
		if (!strcmp(nametype, "cop", true)) type = COPVEH;
		else if (!strcmp(nametype, "fbi", true)) type = FBIVEH;
		else if (!strcmp(nametype, "ng", true)) type = NGVEH;
		else if (!strcmp(nametype, "gor", true)) type = GORVEH;
		else if (!strcmp(nametype, "ambulance", true)) type = AMBUVEH;
		else if (!strcmp(nametype, "truck", true)) type = TRUCKVEH;
		else if (!strcmp(nametype, "pizza", true)) type = PIZZAVEH;
		else if (!strcmp(nametype, "bus", true)) type = BUSVEH;
		else if (!strcmp(nametype, "tow", true)) type = TOWVEH;
		else if (!strcmp(nametype, "school", true)) type = SCHOOLVEH;
		else if (!strcmp(nametype, "rent", true)) type = RENTVEH;
		else if (!strcmp(nametype, "kart", true)) type = KARTVEH;
		else if (!strcmp(nametype, "news", true)) type = NEWSVEH;
		else if (!strcmp(nametype, "taxi", true)) type = TAXIVEH;
		else if (!strcmp(nametype, "hitman", true)) type = HITMANVEH;
		else if (!strcmp(nametype, "doc", true)) type = DOCVEH;
		if (type == 0) return 1;
		CarInfo[vid][cType] = type;
		UpdateCar(vid);
		RespawnCar(vid);
		SCM(playerid, COLOR_LIGHTRED, "Chinh type cua xe thanh cong!");
		return 1;
	}
	else if (!strcmp(choose, "color", true))
	{
		new col1, col2;
		if (sscanf(option, "s[50]ii", option, col1, col2)) return SCM(playerid, COLOR_GRAD2, "Su dung: /editcar [vehid] color [color1] [color2]");
		CarInfo[vid][cColorOne] = col1;
		CarInfo[vid][cColorTwo] = col2;
		UpdateCar(vid);
		RespawnCar(vid);
		SCM(playerid, COLOR_LIGHTRED, "Chinh mau cua xe thanh cong!");
		return 1;
	}
	return 1;
}
CMD:addcar(playerid, params[])
{
	new vid = GetPlayerVehicleID(playerid);
	new avid = IsAdminVehicle(vid);
	if (!IsPlayerInAnyVehicle(playerid) || avid == -1)
		return SCM(playerid, COLOR_GREY, "Ban phai tao mot chiec Admin Vehicle de lam xe.");

	if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Ban khong du quyen han.");
	new idtype[50];
	if (sscanf(params, "s[50]", idtype))
	{
		SCM(playerid, COLOR_GRAD2, "Su dung: /addcar [type name]");
		SCM(playerid, COLOR_GRAD2, "Type Name: Cop, FBI, NG, Gor, Ambulance, Truck, Pizza, Bus, Tow");
		SCM(playerid, COLOR_GRAD2, "Type Name: School, Rent, Kart, News, Taxi, Hitman, DoC");
		return 1;
	}
	new model = GetVehicleModel(vid);
	new Float:x, Float:y, Float:z, Float:a;
	GetVehiclePos(vid, x, y, z);
	GetVehicleZAngle(vid, a);
	if (!strcmp(idtype, "cop", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, COPVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe COP thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "fbi", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, FBIVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe FBI thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "ng", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, NGVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe National Guard thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "gor", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, GORVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Gorvement thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "ambulance", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, AMBUVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Ambulance thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "truck", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, TRUCKVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Truck thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "pizza", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, PIZZAVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Pizza thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "bus", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, BUSVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Bus thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "tow", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, TOWVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Tow thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "school", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, SCHOOLVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe School (Thi bang lai) thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "rent", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, RENTVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Thue thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "kart", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, KARTVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Kart thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "news", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, NEWSVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe SA-News thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "taxi", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, TAXIVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Taxi thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "hitman", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, HITMANVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe Hitman thanh cong", 3000, 4);
		OnPropUpdate();
	}
	else if (!strcmp(idtype, "doc", true))
	{
		AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "The State", 0, 0, DOCVEH);
		DeleteAdminVeh(avid);
		GameTextForPlayer(playerid, "Tao xe DoC thanh cong", 3000, 4);
		OnPropUpdate();
	}
	return 1;
}
CMD:addcds(playerid, params[]) { return cmd_addcardealership(playerid, params); }
CMD:addcardealership(playerid, params[])
{
	if (gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
		return 1;
	}
	if (!IsAtDealership(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   Ban khong o dealership de tao xe ! ");
		return 1;
	}
	new vid = GetPlayerVehicleID(playerid);
	new avid = IsAdminVehicle(vid);
	if (!IsPlayerInAnyVehicle(playerid) || avid == -1)
		return SCM(playerid, COLOR_GREY, "Ban phai tao mot chiec Admin Vehicle de lam xe.");

	if (PlayerInfo[playerid][pAdmin] >= 1337)
	{
		new gia, type = 0, amount;
		if (CountParams(params) == 0)
		{
			if (sscanf(params, "i", gia)) return SCM(playerid, COLOR_GRAD2, "Su dung: /addcardealer [gia] |soluong|");
		}
		else
		{
			if (sscanf(params, "ii", gia, amount)) return SCM(playerid, COLOR_GRAD2, "Su dung: /addcardealer [gia] [soluong]");
		}
		if ((CountParams(params) != 0)) type = 1;
		if (gia < 0) return SCM(playerid, COLOR_GREY, "Gia ban khong the nho hon khong.");
		new Float:x, Float:y, Float:z;
		new Float:a;
		GetVehiclePos(vid, x, y, z);
		GetVehicleZAngle(vid, a);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		new model = GetVehicleModel(vid);
		if (type == 0)
		{
			new str[128];
			format(str, sizeof(str), "AdmCMD: %s da tao mot %s gia %d$ cho dealership thanh cong!", GN(playerid), GetVehicleName(vid), gia);
			SendAdminMessage(COLOR_YELLOW, str);
			GameTextForPlayer(playerid, "~w~Ban da tao mot phuong tien cho dealership thanh cong!", 10000, 3);
			AddCar(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, "Dealership", 0, gia);
			DeleteAdminVeh(avid);
			OnPropUpdate();
			return 1;
		}
		if (amount <= 1) return SCM(playerid, COLOR_GREY, "So luong xe khong the nho hon hoac bang 1");
		new str[128];
		format(str, sizeof(str), "AdmCMD: %s da tao mot %s gia %d$, so luong %d cho dealership thanh cong!", GN(playerid), GetVehicleName(vid), gia, amount);
		SendAdminMessage(COLOR_YELLOW, str);
		GameTextForPlayer(playerid, "~w~Ban da tao mot phuong tien cho dealership thanh cong!", 10000, 3);
		AddDealership(model, x, y, z + 1, a, aColor[avid][0], aColor[avid][1], 60000, gia, amount);
		DeleteAdminVeh(avid);
		OnPropUpdate();
	}
	else SendClientMessage(playerid, COLOR_GREY, "   Ban khong co quyen su dung cau lenh nay !");
	return 1;
}
CMD:hutthuoc(playerid, params[]) { return cmd_smoke(playerid, params); }
CMD:smoke(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		if(!IsAblePedAnimation(playerid)) return 1;
		if (IsSmoking[playerid] == 0)
		{
			if (PlayerInfo[playerid][pLighter] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co que diem de bat lua hut thuoc ! ");
				return 1;
			}
			if (PlayerInfo[playerid][pCigarettes] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co thuoc de hut ! ");
				return 1;
			}
			new randsmoke = random(2) + 1;
			if (randsmoke == 1)
			{
				PlayerInfo[playerid][pLighter] -= 1;
				PlayerInfo[playerid][pCigarettes] -= 1;
				
				if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s lay bat lua ra va cham mot dieu thuoc.", GN(playerid)); }
				else { format(string, sizeof(string), "* %s takes out her lighter and cigarette and lights it up.", GN(playerid)); }
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				IsSmoking[playerid] = 60;
				SendClientMessage(playerid, COLOR_WHITE, "TIP: Ban co the /dropcigarette Luc nao ban muon.");
				SendClientMessage(playerid, COLOR_WHITE, "TIP: Ban co the /smokeanim Neu ban muon.");
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pLighter] -= 1;
				
				if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s takes out his lighter and cigarette and tries to light it up but fails.", GN(playerid)); }
				else { format(string, sizeof(string), "* %s takes out her lighter and cigarette and tries to light it up but fails.", GN(playerid)); }
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da hut thuoc ! ");
			return 1;
		}
	}
	return 1;
}
CMD:vutthuoc(playerid, params[]) { return cmd_dropcigarette(playerid, params); }
CMD:dropcigarette(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		if (IsSmoking[playerid] > 0)
		{
			IsSmoking[playerid] = 0;
			
			if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s Lay dieu thuoc ra khoi mieng anh ay va tat no di.", GN(playerid)); }
			else { format(string, sizeof(string), "* %s Lay dieu thuoc ra khoi mieng co ay va tat no di.", GN(playerid)); }
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			if (UsingSmokeAnim[playerid] == 1)
			{
				ClearAnimations(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong hut thuoc ! ");
			return 1;
		}
	}
	return 1;
}
CMD:smokeanim(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban chi co the /smokeanim khi ban dang dung yen !");
			return 1;
		}
		if (IsSmoking[playerid] != 0)
		{
			UsingSmokeAnim[playerid] = 1;
			ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai hut thuoc de su dung anim nay ! ");
			return 1;
		}
	}
	return 1;
}
CMD:layvatlieu(playerid, params[]) { return cmd_smugglemats(playerid, params); }
CMD:smugglemats(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		//if (PlayerInfo[playerid][pJob] == 22)
		if (PlayerToPoint(3.0, playerid, 2660.3398, -1590.6552, 13.8936))
		{
			if (GetPlayerMoney(playerid) < 199)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong du tien (Ban can 200$)");
				return 1;
			}
			if (MatsHolding[playerid] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban dang buon lau vat lieu.");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -200);
			MatsHolding[playerid] = 25;
			SendClientMessage(playerid, COLOR_WHITE, "Ban da lay vat lieu bay gio ban phai di giao den cho kho vat lieu (checkpoint)");
			GameTextForPlayer(playerid, "~w~Nap vat lieu", 5000, 1);
			SetPlayerCheckpoint(playerid, 2230.3579, -2286.2107, 14.3751, 1.0);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong o noi giao vat lieu! ");
				return 1;
		}
		//else
		//{
		//	SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi buon lau vat lieu !");
		//	return 1;
		//}
	}
	return 1;
}
CMD:chevukhi(playerid, params[]) { return cmd_creategun(playerid, params); }
CMD:creategun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		if (PlayerInfo[playerid][pJob] != 9)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai tho vu khi. ");
			return 1;
		}
		new x_weapon[256];
		if (sscanf(params, "s[256]", x_weapon))
		{
			SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /creategun [weapon name]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: knife(25) bat(25) sdpistol(100) eagle(200)");
			SendClientMessage(playerid, COLOR_GREY, "Available names: mp5(200) shotgun(200) ak47(600) m4(600) rifle(600)");
			SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
			return 1;
		}
		if (strcmp(x_weapon, "knife", true) == 0) { if (PlayerInfo[playerid][pMats] > 24) { CreatingGun[playerid] = 4; CreatingGunPrice[playerid] = 25; CreatingGunAmmo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "bat", true) == 0) { if (PlayerInfo[playerid][pMats] > 24) { CreatingGun[playerid] = 5; CreatingGunPrice[playerid] = 25; CreatingGunAmmo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "sdpistol", true) == 0) { if (PlayerInfo[playerid][pMats] > 99) { CreatingGun[playerid] = 23; CreatingGunPrice[playerid] = 100; CreatingGunAmmo[playerid] = 50; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "flowers", true) == 0) { if (PlayerInfo[playerid][pMats] > 24) { CreatingGun[playerid] = 14; CreatingGunPrice[playerid] = 25; CreatingGunAmmo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "eagle", true) == 0) { if (PlayerInfo[playerid][pMats] > 199) { CreatingGun[playerid] = 24; CreatingGunPrice[playerid] = 150; CreatingGunAmmo[playerid] = 50; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "mp5", true) == 0) { if (PlayerInfo[playerid][pMats] > 199) { CreatingGun[playerid] = 29; CreatingGunPrice[playerid] = 200; CreatingGunAmmo[playerid] = 200; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "shotgun", true) == 0) { if (PlayerInfo[playerid][pMats] > 199) { CreatingGun[playerid] = 25; CreatingGunPrice[playerid] = 200; CreatingGunAmmo[playerid] = 50; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "ak47", true) == 0) { if (PlayerInfo[playerid][pMats] > 599) { CreatingGun[playerid] = 30; CreatingGunPrice[playerid] = 600; CreatingGunAmmo[playerid] = 250; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "m4", true) == 0) { if (PlayerInfo[playerid][pMats] > 599) { CreatingGun[playerid] = 31; CreatingGunPrice[playerid] = 600; CreatingGunAmmo[playerid] = 250; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else if (strcmp(x_weapon, "rifle", true) == 0) { if (PlayerInfo[playerid][pMats] > 599) { CreatingGun[playerid] = 33; CreatingGunPrice[playerid] = 600; CreatingGunAmmo[playerid] = 50; } else { SendClientMessage(playerid, COLOR_GREY, "   Not enough Materials for that Weapon!"); return 1; } }
		else { SendClientMessage(playerid, COLOR_GREY, "   Invalid Weapon name!"); return 1; }
		SetPlayerCheckpoint(playerid, 2152.5308, -2270.8145, 13.3090, 1.0);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		IsPuttingMaterials[playerid] = 1;
		SendClientMessage(playerid, COLOR_WHITE, "Dat goi vat lieu tai nha may !");
		return 1;
	}
	return 1;
}
CMD:muavatlieu(playerid, params[]) { return cmd_buymats(playerid, params); }
CMD:buymats(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai dang nhap truoc. !");
			return 1;
		}
		/*if (PlayerInfo[playerid][pJob] != 23)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai nguoi che tao sung. ");
			return 1;
		}*/
		if (!PlayerToPoint(2.0, playerid, 2230.3579, -2286.2107, 14.3751))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o noi giao vat lieu!");
			return 1;
		}
		new mammount, string[256];
		if(sscanf(params, "i", mammount))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /buymats [ammount]");

		if (mammount > matssys[MatsAmmount])
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ho khong du vat lieu ! ");
			return 1;
		}
		if (GetPlayerMoney(playerid) < mammount * 15 - 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co du tien ! ");
			return 1;
		}
		matssys[MatsAmmount] -= mammount;
		PlayerInfo[playerid][pMats] += mammount;
		SafeGivePlayerMoney(playerid, -mammount * 15);
		format(string, sizeof(string), "   Ban da mua %d Vat lieu cua %d$ !", mammount, mammount * 15);
		SendClientMessage(playerid, COLOR_GREY, string);
		SaveMatsSystem();
		return 1;
	}
	return 1;
}
CMD:mogate(playerid, params[]) { return cmd_gateopen(playerid, params); }
CMD:gateopen(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3
		|| PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
	{
		new gateid = GetClosestGate(playerid);
		if (PlayerToPoint(15, playerid, 1589.053344, -1638.123168, 14.122960))
		{
			MoveObject(pdgate1, 1599.053344, -1638.123168, 14.122960, 0.8);
			SetTimer("GateClose", 12000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "Garage da mo cua va se dong lai sau 6s .");
			
			format(string, sizeof(string), "* %s lay remote de mo cua gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			PlayerPlaySound(playerid, 1153, 1589.053344, -1638.123168, 14.122960);
		}
		else if (PlayerToPoint(15, playerid, 1544.700317, -1630.735717, 13.096980))
		{
			DestroyObject(pdgate2);
			pdgate3 = CreateObject(968, 1544.700317, -1630.735717, 12.924660, 0.000000, 0.000000, 270.972869);
			SetTimer("GateClose5", 6000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "Garage da mo cua va se dong lai sau 6s.");
			
			format(string, sizeof(string), "* %s lay remote de mo cua gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (PlayerToPoint(15, playerid, 2720.3772, -2409.7523, 12.6))
		{
			MoveObject(armygate1, 2720.3772, -2401.2523, 12.6, 3.5);
			SetTimer("GateClose2", 7000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "The Army gate Nr. 1 is opened and will close in 7 seconds.");
			
			format(string, sizeof(string), "* %s takes his/her remote and opens the army gate #1.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (PlayerToPoint(15, playerid, 2720.3772, -2508.3069, 12.6))
		{
			MoveObject(armygate2, 2720.3772, -2499.8069, 12.6, 3.5);
			SetTimer("GateClose2", 7000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "The Army gate Nr. 2 is opened and will close in 7 seconds.");
			
			format(string, sizeof(string), "* %s takes his/her remote and opens the army gate #2.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (PlayerToPoint(15, playerid, 1534.9020, -1451.5979, 14.4882))
		{
			MoveObject(fbigate, 1534.9020, -1451.5979, 20.4882, 1.5);
			SetTimer("GateClose3", 7000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "FBI gate is opened and will close in 7 seconds.");
			
			format(string, sizeof(string), "* %s takes his/her remote and opens fbi gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (PlayerToPoint(15, playerid, 1643.3379, -1714.9338, 15.3067))
		{
			MoveObject(hspdgate, 1643.3379, -1705.9338, 15.3067, 1.5);
			SetTimer("GateClose4", 7000, 0);
			SendClientMessage(playerid, COLOR_BLUE, "HSPD gate is opened and will close in 7 seconds.");

			format(string, sizeof(string), "* %s takes his/her remote and opens hspd gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (gateid != -1)
		{
			MoveGate(gateid, 1);
			format(string, sizeof(string), "* %s lay remote ra, bam nut de mo cua.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			if (GateInfo[gateid][gAutoTime] > 0)
			{
				new str[128];
				format(str, sizeof(str), "Gate se tu dong dong sau %d giay.", GateInfo[gateid][gAutoTime]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
			}
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Destination is too far."); }
	}
	else if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
	{
		if (PlayerToPoint(15, playerid, 1246.0033, -767.3727, 91.1473))
		{
			MoveObject(lucianogate, 1256.2033, -767.3727, 91.1473, 2.2);
			SetTimer("GateClose6", 7000, 0);
			
			format(string, sizeof(string), "* %s takes his/her remote and opens La Famiglia Sinatra hq gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Destination is too far."); }
	}
	/*else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
	{
	if (PlayerToPoint(15, playerid,2796.1454,-1600.2020,10.1297))
	{
	MoveObject(iorgate,2786.1454,-1600.2020,10.1297, 2.2);
	SetTimer("GateClose7", 7000, 0);
	
	format(string, sizeof(string), "* %s takes his/her remote and opens institute of race hq gate.", GN(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else { SendClientMessage(playerid, COLOR_GREY,"Destination is too far."); }
	}*/
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co remote dieu khien.");
	return 1;
}
CMD:tuningopen(playerid, params[])
{
	if (PlayerInfo[playerid][pLeader] == 6)
	{
		new string[256];
		if (PlayerToPoint(30, playerid, 1042.2530, -1026.0344, 32.1016))
		{
			MoveObject(tugate, 1049.2530, -1026.0344, 31.1016, 3.5000);
			SendClientMessage(playerid, COLOR_BLUE, "Cua xe dang mo");
			
			format(string, sizeof(string), "* %s  lay remote de mo cua gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Diem den la qua xa."); }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co remote de mo.");
	return 1;
}
CMD:tuningclose(playerid, params[])
{
	if (PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
	{
		new string[256];
		if (PlayerToPoint(30, playerid, 1042.2530, -1026.0344, 32.1016))
		{
			MoveObject(tugate, 1042.2530, -1026.0344, 32.1016, 3.5000);
			SendClientMessage(playerid, COLOR_BLUE, "Cua xe dang dong ");
			
			format(string, sizeof(string), "* %s lay remote de mo cua gate.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Diem den la qua xa."); }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co remote de mo.");
	return 1;
}
CMD:mocua(playerid, params[]) { return cmd_dooropen(playerid, params); }
CMD:dooropen(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3
		|| PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
	{
		new closestdoor = GetClosestDoor(playerid);
		if (PlayerToPoint(30, playerid, 245.0578, 72.4314, 1002.5406))
		{
			MoveObject(lspddoor1, 244.0578, 72.4314, 1002.5406, 3.5000);
			MoveObject(lspddoor2, 247.1478, 72.4314, 1002.5406, 3.5000);
			SendClientMessage(playerid, COLOR_BLUE, "Cua LSPD da mo vui long hay dong cua!");
			
			format(string, sizeof(string), "* %s lay remote de mo cua.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (closestdoor != -1)
		{
			MoveGate(closestdoor, 1);
			format(string, sizeof(string), "* %s lay remote ra, bam nut de mo cua.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);

			if (GateInfo[closestdoor][gAutoTime] > 0)
			{
				new str[128];
				format(str, sizeof(str), "Cua se tu dong dong sau %d giay.", GateInfo[closestdoor][gAutoTime]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
			}
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Diem den la qua xa."); }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co remote de mo.");
	return 1;
}
CMD:dongcua(playerid, params[]) { return cmd_doorclose(playerid, params); }
CMD:doorclose(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3
		|| PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
	{
		new closestdoor = GetClosestDoor(playerid);
		if (PlayerToPoint(30, playerid, 245.0578, 72.4314, 1002.5406))
		{
			MoveObject(lspddoor1, 245.0578, 72.4314, 1002.5406, 3.5000);
			MoveObject(lspddoor2, 245.9478, 72.4314, 1002.5406, 3.5000);
			SendClientMessage(playerid, COLOR_BLUE, "Cua LSPD da dong, cam on!");
			
			format(string, sizeof(string), "* %s lay remote de dong cua.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else if (closestdoor != -1)
		{
			MoveGate(closestdoor, 2);
			format(string, sizeof(string), "* %s lay remote de dong cua.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else { SendClientMessage(playerid, COLOR_GREY, "Diem den la qua xa."); }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co remote de mo.");
	return 1;
}
//------------BusDriverStartWest---------------
// By Ehren and Luk0r
CMD:startwest(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] == 14)
		{
			if (BusrouteWest[playerid][0] == 12 || BusrouteEast[playerid][0] == 12)
			{
				BusrouteWest[playerid][0] = 0;
				BusrouteEast[playerid][0] = 0;
			}
			if (BusrouteWest[playerid][0] == 0 && BusrouteEast[playerid][0] == 0)
			{
				new playervehicleid = GetPlayerVehicleID(playerid);
				if (IsABus(playervehicleid))
				{
					TogglePlayerControllable(playerid, 1);
					GameTextForPlayer(playerid, "~g~Bus Route Started", 5000, 3);
					SendClientMessage(playerid, COLOR_LIGHTRED, "---------West Los Angeles Bus Route-----------");
					SendBusRoute(playerid, 1);
					SendClientMessage(playerid, COLOR_RED, " ");
					SendClientMessage(playerid, COLOR_GREEN, "Checkpoint duoc danh dau do theo doc chuyen di.");
					SendClientMessage(playerid, COLOR_GREEN, "Dich vu cua ban se duoc quang cao se duoc tu dong quang cao den nguoi choi gan do o tram tiep theo.");
					//GangZoneHideForPlayer(playerid, buszoneeast);
					//GangZoneHideForPlayer(playerid, buszonewest);
					BusrouteWest[playerid][0] = 1;
					BusrouteWest[playerid][1] = playervehicleid;
					//BusrouteWest[playerid][2] = 0;
					/*					for (new i=0; i<=MAX_PLAYERS; i++)
					{
					if (IsLogOn(i) && GetPlayerVehicleID(i) == playervehicleid) BusrouteWest[playerid][2] ++;
					}*/
					OnPlayerEnterCheckpoint(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong xe bus!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban da co tren mot tuyen duong!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong phai nguoi lai xe bus!");
		}
	}
	return 1;
}
//------------BusDriverStartEast---------------
// By Ehren and Luk0r
CMD:starteast(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] == 14)
		{
			if (BusrouteWest[playerid][0] == 12 || BusrouteEast[playerid][0] == 12)
			{
				BusrouteWest[playerid][0] = 0;
				BusrouteEast[playerid][0] = 0;
			}
			if (BusrouteWest[playerid][0] == 0 && BusrouteEast[playerid][0] == 0)
			{
				new playervehicleid = GetPlayerVehicleID(playerid);
				if (IsABus(playervehicleid))
				{
					TogglePlayerControllable(playerid, 1);
					GameTextForPlayer(playerid, "~g~Bus Route Started", 5000, 3);
					SendClientMessage(playerid, COLOR_LIGHTRED, "---------East Los Angeles Bus Route-----------");
					SendBusRoute(playerid, 0);
					SendClientMessage(playerid, COLOR_RED, " ");
					SendClientMessage(playerid, COLOR_GREEN, "Dau check mau do se doc theo tuyen duong.");
					SendClientMessage(playerid, COLOR_GREEN, "Dich vu nay se duoc tu dong quang cao o khu vuc gan do.");
					//GangZoneHideForPlayer(playerid, buszoneeast);
					//GangZoneHideForPlayer(playerid, buszonewest);
					BusrouteEast[playerid][0] = 1;
					BusrouteEast[playerid][1] = playervehicleid;
					//BusrouteEast[playerid][2] = 0;
					/*					for (new i=0; i<=MAX_PLAYERS; i++)
					{
					if (IsLogOn(i) && GetPlayerVehicleID(i) == playervehicleid) BusrouteEast[playerid][2] ++;
					}*/
					OnPlayerEnterCheckpoint(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong xe buyt!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban da co tren mot tuyen duong!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong phai nguoi lai xe buyt !");
		}
	}
	return 1;
}
CMD:aunlock(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /aunlock [playerid/PartOfName]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pLocked] == 1)
				{
					PlayerInfo[giveplayerid][pLocked] = 0;
					TogglePlayerControllable(giveplayerid, 1);
					SendClientMessage(playerid, COLOR_YELLOW, "Account da duoc mo khoa thanh cong.");

				}
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ban phai Admin lv3 de lam dieu nay.");
	}
	return 1;
}
CMD:update(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 2)
	{
		SaveAccounts();
		SendClientMessage(playerid, COLOR_YELLOW, "Tat ca cac tai khoan nguoi choi da cap nhat thanh cong.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ban phai Admin lv2 de lam dieu nay.");
	}
	return 1;
}
CMD:o(playerid, params[]) { return cmd_ooc(playerid, params); }
CMD:ooc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		if ((togOOC) && PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh chat OOC da tat boi Admin !");
			return 1;
		}
		if (PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "  Ban khong the noi do kenh chat da bi mute !");
			return 1;
		}
		
		new result[128], string[256];
		if(sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung lenh: (/o)oc [ooc chat]");

		format(string, sizeof(string), "[OOC] %s: %s ", GN(playerid), result);
		OOCOff(COLOR_OOC, string);
		printf("%s", string);
	}
	return 1;
}
CMD:noooc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 2 && (!togOOC))
		{
			togOOC = 1;
			BroadCast(COLOR_GRAD2, "   Kenh OOC da duoc dong !");
		}
		else if (PlayerInfo[playerid][pAdmin] >= 2 && (togOOC))
		{
			togOOC = 0;
			BroadCast(COLOR_GRAD2, "   Kenh OOC da duoc mo !");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban khong co quyen su dung lenh nay!");
		}
	}
	return 1;
}
CMD:aooc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban chua dang nhap !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   The OOC channel has been disabled by an Admin !");
			return 1;
		}
		
		new result[128], string[256];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung lenh: (/ao)oc [aooc chat]");

		format(string, sizeof(string), "[AOOC] Admin %s: %s ", GN(playerid), result);
		OOCOff(0x62B382AA, string);
		printf("%s", string);
	}
	return 1;
}
CMD:authorizeswat(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pRank] >= 4)
	{
		togauthorizeswat = 1;
		
		format(string, sizeof(string), "HQ: Si quan %s da cap quyen cho S.W.A.T. **", GN(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, string);
	}
	return 1;
}
CMD:deauthorizeswat(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pRank] >= 4)
	{
		togauthorizeswat = 0;
		
		format(string, sizeof(string), "HQ: Si quan %s da ngung cap quyen cho S.W.A.T. **", GN(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, string);
	}
	return 1;
}
CMD:swat(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
		if (togswat[playerid] == 0)
		{
			if (togauthorizeswat == 1)
			{
				if (PlayerToPoint(3, playerid, 210.5792, 144.4530, 1003.0234) || PlayerToPoint(3, playerid, 211.1120, 151.6898, 1003.0234) || PlayerInfo[playerid][pLocal] != 255)
				{
					SafeResetPlayerWeapons(playerid);
					togswat[playerid] = 1;
					SetPlayerSkin(playerid, 285);

					SafeGivePlayerWeapon(playerid, 31, 500);
					SafeGivePlayerWeapon(playerid, 34, 150);
					SafeGivePlayerWeapon(playerid, 29, 730);
					SafeGivePlayerWeapon(playerid, 27, 250);

					SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);

					
					format(string, sizeof(string), "* %s puts on his S.W.A.T uniform.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else { SendClientMessage(playerid, COLOR_GREY, "SWAT khong duoc uy quyen cua chi huy cap cao!"); }
		}
		else
		{
			if (PlayerInfo[playerid][pLeader] == 1) { SetPlayerSkin(playerid, 281); }
			if (PlayerInfo[playerid][pRank] == 5) { SetPlayerSkin(playerid, 281); }
			if (PlayerInfo[playerid][pRank] == 4) { SetPlayerSkin(playerid, 281); }
			if (PlayerInfo[playerid][pRank] == 3) { SetPlayerSkin(playerid, 281); }
			if (PlayerInfo[playerid][pRank] == 2) { SetPlayerSkin(playerid, 267); }
			if (PlayerInfo[playerid][pRank] == 1) { SetPlayerSkin(playerid, 266); }

			togswat[playerid] = 0;
			SafeResetPlayerWeapons(playerid);
			
			format(string, sizeof(string), "* %s puts his S.W.A.T uniform back in the locker.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);

		}
	}
	if (!IsACop(playerid) || PlayerInfo[playerid][pLeader] > 1 || PlayerInfo[playerid][pLeader] < 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "You are not a cop!");
	}
	return 1;
}
//--------------------------------=Police Backup=----------------------------------------------------------------
//===Needs Radar Clear
//Made by Ehren, modified by Luk0r
CMD:bk(playerid, params[]) { return cmd_backup(playerid, params); }
CMD:backup(playerid, params[])
{
	new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRequestingBackup] != 1)
			{
				
				format(string, sizeof(string), "ALL UNITS: %s Dang yeu cau ho tro ngay lap tuc, da duoc danh dau do checkpoint tren ban do.", GN(playerid));
				PlayerInfo[playerid][pRequestingBackup] = 1;
				for (new i = 0; i < MAX_PLAYERS; i++)
				{
					if (IsLogOn(i))
					{
						if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
							SendClientMessage(i, TEAM_BLUE_COLOR, string);
						}
					}
				}
				SendClientMessage(playerid, TEAM_BLUE_COLOR, "Type /bkc De xoa yeu cau backup.");
				SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban da co san mot backup dang hoat dong!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong phai la canh sat!");
		}
	}
	return 1;
}
//-----------------=Radar Clear=-----------------
//======Goes with Police Backup
//Made by Ehren, modified by Luk0r
CMD:bkc(playerid, params[]) { return cmd_backupclear(playerid, params); }
CMD:backupclear(playerid, params[])
{
	BackupClear(playerid, 0);
	return 1;
}
//--------------------------------=[Roadblock]=-----------------------------------
// by Luk0r
CMD:chanduong(playerid, params[]) { return cmd_roadblock(playerid, params); }
CMD:roadblock(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1) return SendClientMessage(playerid, COLOR_GREY, "Ban khong phai la canh sat!");
	if (PlayerInfo[playerid][pRoadblock] != 0) return SendClientMessage(playerid, COLOR_GREY, "Ban chi co the trien khai rao can mot lan, /rrb de loai bo trien khai rao can.");
	if (roadblocktimer != 0) return SendClientMessage(playerid, COLOR_GREY, "Xin cho de mo rao can tiep theo!");
	new string[256];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);
	PlayerInfo[playerid][pRoadblock] = CreateObject(981, x, y, z, 0.0, 0.0, a + 180);
	SetPlayerPos(playerid, x, y, z + 4);
	GameTextForPlayer(playerid, "~w~Roadblock ~r~Placed", 5000, 5);
	SendClientMessage(playerid, COLOR_GREEN, "Rao can duoc mo thanh cong , go /rrb or /roadunblock de tat.");
	roadblocktimer = 1;
	
	format(string, sizeof(string), "HQ: Mot rao can da duoc mo boi %s, no da duoc danh dau tren ban do tren tram kiem soat.", GN(playerid));
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsLogOn(i))
		{
			if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			{
				SetPlayerCheckpoint(playerid, x, y, z - 10, 1.0);
				SendClientMessage(i, TEAM_BLUE_COLOR, string);
				if (PlayerInfo[i][pRank] >= 5 && PlayerInfo[i][pMember] || PlayerInfo[i][pLeader] == 1)
				{
					SendClientMessage(i, COLOR_YELLOW, "Ban co the bo rao chan bang cach go /huychanduong hoac /xoatatcachanduong");
				}
			}
		}
	}
	SetTimer("ResetRoadblockTimer", 60000, false);
	return 1;
}
CMD:huychanduong(playerid, params[]) { return cmd_roadunblock(playerid, params); }
CMD:roadunblock(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "You are not a cop!");
		return 1;
	}
	if (PlayerInfo[playerid][pRank] < 5)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban phai Rank 5 de su dung lenh nay!");
		return 1;
	}
	if (PlayerInfo[playerid][pRoadblock] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban khong duoc trien khai rao can!");
		return 1;
	}
	RemoveRoadblock(playerid);
	SendClientMessage(playerid, COLOR_GREEN, "Go bo rao can thanh cong.");
	return 1;
}
CMD:xoahetchanduong(playerid, params[]) { return cmd_roadunblockall(playerid, params); }
CMD:roadunblockall(playerid, params[])
{
	if (PlayerInfo[playerid][pRank] >= 5 && PlayerInfo[playerid][pMember] || PlayerInfo[playerid][pLeader] == 1)
	{
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (PlayerInfo[i][pRoadblock] != 0)
			{
				RemoveRoadblock(i);
			}
		}
		new string[256];
		format(string, sizeof(string), "HQ: Tat ca cac rao can trong khu vuc duoc xoa ngay lap tuc boi %s.", GN(playerid));
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban phai rank 5 hoac leader de loai bo tat ca cac rao chan!");
	}
	return 1;
}
CMD:duatien(playerid, params[]) { return cmd_pay(playerid, params); }
CMD:pay(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, moneys, giveplayer[50], string[256];
		if(sscanf(params, "ui", giveplayerid, moneys))
			return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /pay [playerid/PartOfName] [amount]");

		if (moneys > 1000 && PlayerInfo[playerid][pLevel] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ban can lv3 de pay hon 1000");
			return 1;
		}
		if (moneys < 1 || moneys > 99999)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Khong duoi 1 va tren 99999 .");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pLocal] == 106)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Khong duoc phep su dung lenh o vi tri nay");
					return 1;
				}
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "  Ban khong the tra tien cho chinh minh !");
						return 1;
					}

					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					new playermoney;
					playermoney = GetPlayerMoney(playerid);
					if (moneys > 0 && playermoney >= moneys)
					{
						//ConsumingMoney[giveplayerid] = 1;
						SafeGivePlayerMoney(playerid, (0 - moneys));
						SafeGivePlayerMoney(giveplayerid, moneys);
						format(string, sizeof(string), "   Ban da gui %s(player: %d), $%d.", giveplayer, giveplayerid, moneys);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   Ban da nhan duoc $%d from %s(player: %d).", moneys, GN(playerid), playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s has paid $%d to %s", GN(playerid), moneys, giveplayer);
						PayLog(string);
						if (moneys >= 1000000)
						{
							ABroadCast(COLOR_YELLOW, string, 1);
						}
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						/*format(string, sizeof(string), "* %s takes out some cash, and hands it to %s.", GN(playerid) ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);*/
						ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 0, 0, 0, 0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "  So tien giao dich khong hop le.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Ban dung qua xa.");
				}
			}//invalid id
		}
		else
		{
			format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:tuthien(playerid, params[]) { return cmd_charity(playerid, params); }
CMD:charity(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new moneys, string[256];
		if(sscanf(params, "i", moneys))
			return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /charity [amount]");

		if (PlayerInfo[playerid][pLocal] == 106)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Khong duoc phep su dung lenh o vi tri nay");
			return 1;
		}
		if (moneys < 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Khong du.");
			return 1;
		}
		if (GetPlayerMoney(playerid) < moneys)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ban khong co that nhieu tien.");
			return 1;
		}
		SafeGivePlayerMoney(playerid, -moneys);
		
		format(string, sizeof(string), "%s Cam on ban da tang, $%d.", GN(playerid), moneys);
		printf("%s", string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SendClientMessage(playerid, COLOR_GRAD1, string);
		PayLog(string);
	}
	return 1;
}
CMD:authorizetactical(playerid, params[])
{
	if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pRank] >= 5)
	{
		new string[256];
		togauthorizetactical = 1;
		
		format(string, sizeof(string), "** HQ: Director %s has authorized the Tactical Response uniform **", GN(playerid));
		SendRadioMessage(2, TEAM_BLUE_COLOR, string);
	}
	return 1;
}
CMD:deauthorizetactical(playerid, params[])
{
	if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pRank] >= 5)
	{
		new string[256];
		togauthorizetactical = 0;
		
		format(string, sizeof(string), "** HQ: Director %s has deauthorized the Tactical Response uniform", GN(playerid));
		SendRadioMessage(2, TEAM_BLUE_COLOR, string);
	}
	return 1;
}
CMD:tactical(playerid, params[])
{
	new string[256];
	if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if (togtactical[playerid] == 0)
		{
			if (togauthorizetactical == 1)
			{
				if (PlayerToPoint(3, playerid, 252.4938, 73.4559, 1003.6406) || PlayerToPoint(3, playerid, 258.6202, 79.8815, 1003.6406) || PlayerInfo[playerid][pLocal] != 255)
				{

					SafeResetPlayerWeapons(playerid);
					togtactical[playerid] = 1;
					SetPlayerSkin(playerid, 287);

					SafeGivePlayerWeapon(playerid, 31, 500);
					SafeGivePlayerWeapon(playerid, 23, 150);
					SafeGivePlayerWeapon(playerid, 27, 250);

					SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);

					
					format(string, sizeof(string), "* %s puts on his Tactical Response uniform.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Tactical Response is not authorized by the Director!");
			}
		}
		else
		{
			if (PlayerInfo[playerid][pLeader] == 2) { SetPlayerSkin(playerid, 286); }
			if (PlayerInfo[playerid][pRank] == 5) { SetPlayerSkin(playerid, 163); }
			if (PlayerInfo[playerid][pRank] == 4) { SetPlayerSkin(playerid, 163); }
			if (PlayerInfo[playerid][pRank] == 3) { SetPlayerSkin(playerid, 163); }
			if (PlayerInfo[playerid][pRank] == 2) { SetPlayerSkin(playerid, 163); }
			if (PlayerInfo[playerid][pRank] == 1) { SetPlayerSkin(playerid, 163); }

			togtactical[playerid] = 0;
			SafeResetPlayerWeapons(playerid);
			
			format(string, sizeof(string), "* %s puts his Tactical Response uniform back in the locker.", GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);

		}
	}
	if (!IsACop(playerid) || PlayerInfo[playerid][pLeader] > 2 || PlayerInfo[playerid][pLeader] < 2)
	{
		SendClientMessage(playerid, COLOR_GREY, "You are not an agent!");
	}
	return 1;
}
//SetPlayerMapIcon(playerid, 0, 1612.324, -2330.167, 13.5469, 38, COLOR_YELLOW);  // Spawn Point
//SetPlayerMapIcon(playerid, 1, 2048.352, -1900.153, 13.5538, 55, COLOR_YELLOW);  // Driving School
//SetPlayerMapIcon(playerid, 5, 396.2429, -2074.728, 7.835938, 25, COLOR_YELLOW);  // Fishing School
//SetPlayerMapIcon(playerid, 6, 1528.779, -1678.113, 5.890625, 30, COLOR_YELLOW);  // Police Station
//SetPlayerMapIcon(playerid, 7, 1461.695, -1011.915, 26.84375, 52, COLOR_YELLOW);  // Bank
//SetPlayerMapIcon(playerid, 8, 1518.5179, -1452.9224, 14.2031, 30, COLOR_YELLOW);  // FBI
//SetPlayerMapIcon(playerid, 9, 1178.03, -1323.41, 14.10, 22, COLOR_YELLOW);  // Hospital
//SetPlayerMapIcon(playerid, 10, 1480.9323, -1767.7324, 18.7958, 56, COLOR_YELLOW);	// CITY HALL
//SetPlayerMapIcon(playerid, 11, 2410.1682, -1220.7765, 25.2978, 49, COLOR_YELLOW);	// Pig Pen
//SetPlayerMapIcon(playerid, 12, 2312.9451, -1645.0206, 14.8270, 49, COLOR_YELLOW);	// Ten Green
//SetPlayerMapIcon(playerid, 13, 1831.4663, -1683.2169, 13.2197, 48, COLOR_YELLOW);	// Alhambra
//SetPlayerMapIcon(playerid, 14, 1498.4476, -1582.8242, 13.5469, 50, COLOR_YELLOW);	// Restaurant
//SetPlayerMapIcon(playerid, 15, 2468.4919, -2092.9902, 13.5469, 51, COLOR_YELLOW);	// Truck Place
////SetPlayerMapIcon(playerid, 16, 2146.3523,-2267.7498,14.2344, 18, COLOR_YELLOW);	// Gun Dealer Reg.
//SetPlayerMapIcon(playerid, 17, 1312.4210, -898.5630, 39.5781, 52, COLOR_YELLOW);	// 24/7
//SetPlayerMapIcon(playerid, 18, 1832.4276, -1838.3896, 13.5781, 52, COLOR_YELLOW);	// 24/7
//SetPlayerMapIcon(playerid, 19, 1353.6860, -1757.4297, 13.5078, 52, COLOR_YELLOW);	// 24/7
//SetPlayerMapIcon(playerid, 20, 1038.0298, -1339.9967, 13.7361, 17, COLOR_YELLOW);	// Jim' sticky ring
//SetPlayerMapIcon(playerid, 21, 2105.4858, -1806.4725, 13.5547, 29, COLOR_YELLOW);	// Pizza stack
//SetPlayerMapIcon(playerid, 22, 2229.9011, -1721.2582, 13.5613, 54, COLOR_YELLOW);	// Gym
//SetPlayerMapIcon(playerid, 23, 2244.3423, -1665.5542, 15.4766, 45, COLOR_YELLOW);	// Binco
/*if(strcmp(cmd, "/buydriving", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerToPoint(3.0,playerid,2048.352,-1900.153,13.5538))
{
if(PlayerInfo[playerid][pCarLic] == 0)
{
if(GetPlayerMoney(playerid) < 1000)
{
SendClientMessage(playerid, COLOR_GREY, "You don't have enough money for a driving license");
return 1;
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought a driving License for $1, 000");
SafeGivePlayerMoney(playerid, - 1000);
PlayerInfo[playerid][pCarLic] = 1;
SavePlayer(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, " You already own a driving license");
return 1;
}
}
}
return 1;
}

if(strcmp(cmd, "/buyflying", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerToPoint(3.0,playerid,1588.291,-2641.629,13.54688))
{
if(PlayerInfo[playerid][pFlyLic] == 0)
{
if(GetPlayerMoney(playerid) < 65000)
{
SendClientMessage(playerid, COLOR_GREY, "You don't have enough money for a flying license");
return 1;
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought a flying license for $65, 000");
SafeGivePlayerMoney(playerid, - 65000);
PlayerInfo[playerid][pFlyLic] = 1;
SavePlayer(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, " You already own a flying license");
return 1;
}
}
}
return 1;
}

if(strcmp(cmd, "/buysailing", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerToPoint(3.0,playerid,397.2415,-1804.371,7.829849))
{
if(PlayerInfo[playerid][pBoatLic] == 0)
{
if(GetPlayerMoney(playerid) < 15000)
{
SendClientMessage(playerid, COLOR_GREY, "You don't have enough money for a sailing license");
return 1;
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought a boat license for $15, 000");
SafeGivePlayerMoney(playerid, - 15000);
PlayerInfo[playerid][pBoatLic] = 1;
SavePlayer(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, " You already own a boat license");
return 1;
}
}
}
return 1;
}

if(strcmp(cmd, "/buygunlic", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerToPoint(3.0,playerid,1365.159,-1288.066,13.54688))
{
if(PlayerInfo[playerid][pGunLic] == 0)
{
if(GetPlayerMoney(playerid) < 35000)
{
SendClientMessage(playerid, COLOR_GREY, "You don't have enough money for a gun license");
return 1;
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought a gun license for $35, 000");
SafeGivePlayerMoney(playerid, - 35000);
PlayerInfo[playerid][pGunLic] = 1;
SavePlayer(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, " You already own a gun license");
return 1;
}
}
}
return 1;
}

if(strcmp(cmd, "/buyfishing", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerToPoint(3.0,playerid,396.2429,-2074.728,7.835938))
{
if(PlayerInfo[playerid][pFishLic] == 0)
{
if(GetPlayerMoney(playerid) < 5000)
{
SendClientMessage(playerid, COLOR_GREY, "You don't have enough money for a fishing license");
return 1;
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought a fishing license for $5, 000");
SafeGivePlayerMoney(playerid, - 5000);
PlayerInfo[playerid][pFishLic] = 1;
SavePlayer(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_LIGHTBLUE, " You already own a fishing license");
return 1;
}
}
}
return 1;
}*/
CMD:thongtin(playerid, params[]) { return cmd_stats(playerid, params); }
CMD:stats(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] != 0)
		{
			ShowStats(playerid, playerid);
			/*
			format(string, sizeof(string), "* %s flips open his PDA and looks at his stats.", GN(playerid));
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);*/
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "   You are not Logged in!");
	}
	return 1;
}
CMD:dn(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz - 2);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban khong phai la Admin!");
		}
	}
	return 1;
}
CMD:up(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz + 2);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong phai la Admin !");
		}
	}
	return 1;
}
CMD:fly(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:px, Float:py, Float:pz, Float:pa;
			GetPlayerFacingAngle(playerid, pa);
			if (pa >= 0.0 && pa <= 22.5) //n1
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py + 30, pz + 5);
			}
			if (pa >= 332.5 && pa < 0.0) //n2
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py + 30, pz + 5);
			}
			if (pa >= 22.5 && pa <= 67.5) //nw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px - 15, py + 15, pz + 5);
			}
			if (pa >= 67.5 && pa <= 112.5) //w
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px - 30, py, pz + 5);
			}
			if (pa >= 112.5 && pa <= 157.5) //sw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px - 15, py - 15, pz + 5);
			}
			if (pa >= 157.5 && pa <= 202.5) //s
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py - 30, pz + 5);
			}
			if (pa >= 202.5 && pa <= 247.5)//se
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px + 15, py - 15, pz + 5);
			}
			if (pa >= 247.5 && pa <= 292.5)//e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px + 30, py, pz + 5);
			}
			if (pa >= 292.5 && pa <= 332.5)//e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px + 15, py + 15, pz + 5);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong phai la Admin!");
		}
	}
	return 1;
}
CMD:lt(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly + 2, slz);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong phai la Admin !");
		}
	}
	return 1;
}
CMD:rt(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly - 2, slz - 2);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong phai la Admin !");
		}
	}
	return 1;
}
CMD:check(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new giveplayerid;
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /check [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					ShowStats(playerid, giveplayerid);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   No Such Player");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   You are not an admin");
		}
	}
	return 1;
}
CMD:number(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPhoneBook] == 1)
		{
			new giveplayerid, string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /number [playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pHideNumber] == 1)
					{
						format(string, 256, "Name: %s, Ph: HIDDEN", GN(playerid));
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						format(string, 256, "Name: %s, Ph: %d", GN(playerid), PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   No Such Player !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co danh ba !");
		}
	}
	return 1;
}
CMD:muacapdo(playerid, params[]) { return cmd_levelup(playerid, params); }
CMD:levelup(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] != 0)
		{
			/*PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);*/
			if (PlayerInfo[playerid][pLevel] >= 0)
			{
				new nxtlevel = PlayerInfo[playerid][pLevel] + 1;
				/*new costlevel = nxtlevel*levelcost;//10k for testing purposes*/
				new expamount = nxtlevel*levelexp;
				new infostring[256], string[256];
				/*if(GetPlayerMoney(playerid) < costlevel)
				{
				format(infostring, 256, "   You do not have enough Cash ($%d)!",costlevel);
				SendClientMessage(playerid, COLOR_GRAD1, infostring);
				return 1;
				}*/
				if (PlayerInfo[playerid][pExp] < expamount)
				{
					format(infostring, 256, "   Ban can %d diem Respect, ban hien dang co %d !", expamount, PlayerInfo[playerid][pExp]);
					SendClientMessage(playerid, COLOR_GRAD1, infostring);
					return 1;
				}
				else
				{
					format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerPlayMusic(playerid);
					/*SafeGivePlayerMoney(playerid, (-costlevel));*/
					PlayerInfo[playerid][pLevel]++;
					if (PlayerInfo[playerid][pDonateRank] > 0)
					{
						PlayerInfo[playerid][pExp] -= expamount;
						new total = PlayerInfo[playerid][pExp];
						if (total > 0)
						{
							PlayerInfo[playerid][pExp] = total;
						}
						else
						{
							PlayerInfo[playerid][pExp] = 0;
						}
					}
					else
					{
						PlayerInfo[playerid][pExp] = 0;
					}
					PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade] + 2;
					GameTextForPlayer(playerid, string, 5000, 1);
					format(infostring, 256, "   You bought Level %d Type /upgrade", nxtlevel);
					SendClientMessage(playerid, COLOR_GRAD1, infostring);
					format(infostring, 256, "   You gave %d unspent Upgrade Points", PlayerInfo[playerid][gPupgrade]);
					SendClientMessage(playerid, COLOR_GRAD2, infostring);
				}
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   You are not Logged in !");
		}
	}
	return 1;
}
/*if (strcmp(cmd, "/carcolor", true) == 0)
{
if(IsLogOn(playerid))
{
new house = PlayerInfo[playerid][pPhousekey];
GetPlayerName(playerid, playername, sizeof(playername));
if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_GRAD3,"($5000) Su dung: /carcolor [color 1 - 2] [color number]");
return 1;
}
new colornum = strval(tmp);
if(colornum > 2 || colornum < 1)
{
SendClientMessage(playerid, COLOR_GRAD3,"Choices are 1 or 2");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_GRAD3,"($5000) Su dung: /carcolor [color 1 - 2] [color number]");
}
new color = strval(tmp);
if(color > 126)
{
SendClientMessage(playerid, COLOR_GRAD3,"Maximum is 126");
return 1;
}
if (GetPlayerMoney(playerid) < 5000)
{
SendClientMessage(playerid, COLOR_GRAD3,"You can't afford that ($5000)");
}
if(colornum == 1)
{
HouseInfo[house][hVcol1] = color;
format(string, sizeof(string), "Car color 1 set to %d -$5000",color);
SendClientMessage(playerid, COLOR_GRAD3,string);
}
else
{
HouseInfo[house][hVcol2] = color;
format(string, sizeof(string), "Car color 2 set to %d -$5000",color);
SendClientMessage(playerid, COLOR_GRAD3,string);
}
SendClientMessage(playerid, COLOR_GRAD6, "Your new paintjob will be complete within 24 hours");
SafeGivePlayerMoney(playerid,-5000);
SBizzInfo[5][sbTill] += 5000;
ExtortionSBiz(5, 5000);
PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
OnPropUpdate();
}
else
{
SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house");
return 1;
}
}
return 1;
}*/
/*if (strcmp(cmd, "/carupgrade", true) == 0)
{
if(IsLogOn(playerid))
{
new house = PlayerInfo[playerid][pPhousekey];
GetPlayerName(playerid, playername, sizeof(playername));
if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
{
new gunid[16];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
format(string, sizeof(string), "Su dung: /carupgrade [carname]");
SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
SendClientMessage(playerid, COLOR_WHITE,"*** CAR UPGRADES Cost $100000 ***");
SendClientMessage(playerid, COLOR_GRAD2,string);
if(PlayerInfo[playerid][pLevel] >= 3)
{
SendClientMessage(playerid, COLOR_GRAD3, "Cars: blistacompact clover elegant emperor glendale greenwood");
SendClientMessage(playerid, COLOR_GRAD3, "Cars: huntley jester landstalker merit nebula sabre stratum");
SendClientMessage(playerid, COLOR_GRAD3, "Cars: sunrise tahoma uranus maverick");
SendClientMessage(playerid, COLOR_GRAD3, "Donation cars: maverick stretch elegy phoenix hotknife bandito sultan");
}
SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
return 1;
}
if(SBizzInfo[5][sbProducts] == 0)
{
GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
return 1;
}
strmid(gunid, tmp, 0, strlen(cmdtext), 255);
if (GetPlayerMoney(playerid) > 100000)
{
if(strcmp(gunid, "stretch", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Stretch");
HouseInfo[house][hVec] = 409;
}
else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Hotknife");
HouseInfo[house][hVec] = 434;
}
else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Bandito");
HouseInfo[house][hVec] = 568;
}
else if(strcmp(gunid, "sultan", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Sultan");
HouseInfo[house][hVec] = 560;
}
else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Elegy");
HouseInfo[house][hVec] = 562;
}
else if(strcmp(gunid, "maverick", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Maverick");
HouseInfo[house][hVec] = 487;
}
else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
{
if(PlayerInfo[playerid][pDonateRank] < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a Premium Account !");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Phoenix");
HouseInfo[house][hVec] = 603;
}
else if(strcmp(gunid, "blistacompact", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Blista Compact");
HouseInfo[house][hVec] = 496;
}
else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Clover");
HouseInfo[house][hVec] = 542;
}
else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Elegant");
HouseInfo[house][hVec] = 507;
}
else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Emperor");
HouseInfo[house][hVec] = 585;
}
else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Glendale");
HouseInfo[house][hVec] = 466;
}
else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Greenwood");
HouseInfo[house][hVec] = 492;
}
else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Huntley");
HouseInfo[house][hVec] = 579;
}
else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Jester");
HouseInfo[house][hVec] = 559;
}
else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Landstalker");
HouseInfo[house][hVec] = 400;
}
else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Merit");
HouseInfo[house][hVec] = 551;
}
else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Nebula");
HouseInfo[house][hVec] = 516;
}
else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Sabre");
HouseInfo[house][hVec] = 475;
}
else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Stratum");
HouseInfo[house][hVec] = 561;
}
else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Sunrise");
HouseInfo[house][hVec] = 550;
}
else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Tahoma");
HouseInfo[house][hVec] = 566;
}
else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
{
SendClientMessage(playerid, COLOR_GRAD6, "New Upgrade: Your House Car Is Now A Uranus");
HouseInfo[house][hVec] = 558;
}
else
{
SendClientMessage(playerid, COLOR_GRAD6, "   Unrecognized Car or Donate Rank not High enough.");
return 1;
}
SendClientMessage(playerid, COLOR_GRAD6, "Your new car will be delivered within 24 hours -$100000");
OnPropUpdate();
SafeGivePlayerMoney(playerid,-100000);
SBizzInfo[5][sbTill] += 100000;
ExtortionSBiz(5, 100000);
SBizzInfo[5][sbProducts]--;
PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid, COLOR_GRAD2, "   You can't afford that ($100000)");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house");
return 1;
}
}
return 1;
}*/
CMD:resetnangcap(playerid, params[]) { return cmd_resetupgrades(playerid, params); }
CMD:resetupgrades(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban chua dang nhap !");
			return 1;
		}
		if (GetPlayerMoney(playerid) < 100000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Chi phi la  $50000 !");
			return 1;
		}
		if (PlayerInfo[playerid][pLevel] < 2)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "  Ban can it nhat lv2 !");
			return 1;
		}
		new string[255];
		PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel] - 1) * 2;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pAlcoholPerk] = 0;
		PlayerInfo[playerid][pDrugPerk] = 0;
		PlayerInfo[playerid][pMiserPerk] = 0;
		PlayerInfo[playerid][pPainPerk] = 0;
		PlayerInfo[playerid][pTraderPerk] = 0;
		SafeGivePlayerMoney(playerid, -50000);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, 256, "   Ban co %d diem nang cap chua su dung !", PlayerInfo[playerid][gPupgrade]);
		SendClientMessage(playerid, COLOR_GRAD2, string);
	}
	return 1;
}
CMD:muasung(playerid, params[]) { return cmd_buygun(playerid, params); }
CMD:buygun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (GetPlayerMoney(playerid) < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co du tien!");
			return 1;
		}
		new gun;
		new gunid[16];
		new ammo, string[256];
		new gunstring1[256];
		new gunstring2[256];
		new gunstring3[256];
		new gunstring4[256];
		new gunstring5[256];
		new infostring[256];
		new guncharge;
		new ammocharge;
		new location = PlayerInfo[playerid][pLocal];
		if (location == 99 || location == 100 || location == 102)
		{
			if (BizzInfo[location - 99][bProducts] <= 0)
			{
				GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				return 1;
			}
			new modz = 100;
			if(sscanf(params, "s[256]i", gun, ammo))
			{
				format(string, sizeof(string), "Su dung: /buygun [gunname] [ammoamount]");
				SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "*** Guns & Ammo ***");
				SendClientMessage(playerid, COLOR_GRAD2, string);
				format(gunstring1, 256, "Weapons: parachute ($%d) golfclub ($%d) nightstick ($%d) baseballbat ($%d) shovel ($%d) poolcue ($%d)",
					GunPrice[0][0] / 100 * modz, GunPrice[1][0] / 100 * modz, GunPrice[2][0] / 100 * modz, GunPrice[3][0] / 100 * modz, GunPrice[4][0] / 100 * modz, GunPrice[5][0] / 100 * modz, GunPrice[6][0] / 100 * modz);
				SendClientMessage(playerid, COLOR_GRAD3, gunstring1);
				format(gunstring2, 256, "Weapons: purpledildo ($%d) whitedildo ($%d) longwhitedildo ($%d) whitedildo2 ($%d) flowers ($%d) cane",
					GunPrice[7][0] / 100 * modz, GunPrice[8][0] / 100 * modz, GunPrice[9][0] / 100 * modz, GunPrice[10][0] / 100 * modz, GunPrice[11][0] / 100 * modz, GunPrice[12][0] / 100 * modz);
				SendClientMessage(playerid, COLOR_GRAD3, gunstring2);
				format(gunstring3, 256, "Weapons: sdpistol ($%d) deagle ($%d) mp5 ($%d)",
					GunPrice[13][0] / 100 * modz, GunPrice[14][0] / 100 * modz, GunPrice[15][0] / 100 * modz, GunPrice[16][0] / 100 * modz, GunPrice[17][0] / 100 * modz, GunPrice[18][0] / 100 * modz);
				SendClientMessage(playerid, COLOR_GRAD3, gunstring3);
				format(gunstring4, 256, "Weapons: shotgun ($%d) ak47 ($%d) m4 ($%d) rifle ($%d)",
					GunPrice[19][0] / 100 * modz, GunPrice[20][0] / 100 * modz, GunPrice[21][0] / 100 * modz, GunPrice[22][0] / 100 * modz, GunPrice[23][0] / 100 * modz, GunPrice[24][0] / 100 * modz);
				SendClientMessage(playerid, COLOR_GRAD3, gunstring4);
				format(gunstring5, 256, "Weapons: pistolammo ($%d) shotgunammo ($%d) smgammo ($%d) assaultammo ($%d) rifleammo ($%d)",
					GunPrice[25][0], GunPrice[26][0], GunPrice[27][0], GunPrice[28][0], GunPrice[29][0]);
				SendClientMessage(playerid, COLOR_GRAD3, gunstring5);
				SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
				return 1;
			}
			if (ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Ammo ammount not lower then 1 or higher then 999 !"); return 1; }
			if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
			{
				gun = 46;
				guncharge = GunPrice[0][0] / 100 * modz;
				ammocharge = 0;
			}
			else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
			{
				gun = 2; guncharge = GunPrice[1][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 2; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
			{
				gun = 3; guncharge = GunPrice[2][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 3; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
			{
				gun = 5; guncharge = GunPrice[4][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 5; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
			{
				gun = 6; guncharge = GunPrice[5][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 6; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
			{
				gun = 7; guncharge = GunPrice[6][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 7; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
			{
				gun = 10; guncharge = GunPrice[7][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 10; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
			{
				gun = 11; guncharge = GunPrice[8][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 11; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
			{
				gun = 12; guncharge = GunPrice[9][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 12; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
			{
				gun = 13; guncharge = GunPrice[10][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 13; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
			{
				gun = 14; guncharge = GunPrice[11][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 14; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
			{
				gun = 15; guncharge = GunPrice[12][0] / 100 * modz; ammocharge = 0;
				//PlayerInfo[playerid][pGun][0] = 15; PlayerInfo[playerid][pAmmo][0] = 1;
			}
			else if (strcmp(gunid, "sdpistol", true, strlen(gunid)) == 0)
			{
				gun = 23; guncharge = GunPrice[13][0] / 100 * modz; ammocharge = GunPrice[25][0] * ammo;
				//PlayerInfo[playerid][pGun][1] = 23; PlayerInfo[playerid][pAmmo][1] = ammo;
			}
			else if (strcmp(gunid, "deagle", true, strlen(gunid)) == 0)
			{
				gun = 24; guncharge = GunPrice[15][0] / 100 * modz; ammocharge = GunPrice[25][0] * ammo;
				//PlayerInfo[playerid][pGun][1] = 24; PlayerInfo[playerid][pAmmo][1] = ammo;
			}
			else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
			{
				gun = 29; guncharge = GunPrice[18][0] / 100 * modz; ammocharge = GunPrice[27][0] * ammo;
				//PlayerInfo[playerid][pGun][2] = 29; PlayerInfo[playerid][pAmmo][2] = ammo;
			}
			else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
			{
				gun = 25; guncharge = GunPrice[19][0] / 100 * modz; ammocharge = GunPrice[26][0] * ammo;
				//PlayerInfo[playerid][pGun][2] = 25; PlayerInfo[playerid][pAmmo][2] = ammo;
			}
			else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
			{
				gun = 30; guncharge = GunPrice[22][0] / 100 * modz; ammocharge = GunPrice[28][0] * ammo;
				//PlayerInfo[playerid][pGun][3] = 30; PlayerInfo[playerid][pAmmo][3] = ammo;
			}
			else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
			{
				gun = 31; guncharge = GunPrice[23][0] / 100 * modz; ammocharge = GunPrice[28][0] * ammo;
				//PlayerInfo[playerid][pGun][3] = 31; PlayerInfo[playerid][pAmmo][3] = ammo;
			}
			else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
			{
				gun = 33; guncharge = GunPrice[24][0] / 100 * modz; ammocharge = GunPrice[29][0] * ammo;
				//PlayerInfo[playerid][pGun][3] = 33; PlayerInfo[playerid][pAmmo][3] = ammo;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "ShopKeeper noi: I have never heard of that weapon.");
				return 1;
			}
			if ((guncharge + ammocharge) > GetPlayerMoney(playerid))
			{
				format(infostring, 256, "   You don't have $%d !", guncharge + ammocharge);
				SendClientMessage(playerid, COLOR_GRAD3, infostring);
				return 1;
			}
			if (GetPlayerMoney(playerid) < (guncharge + ammocharge))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Can't afford that !");
				return 1;
			}
			new payout = guncharge + ammocharge;
			format(infostring, 256, "You have purchased %s with %d ammo for $%d", gunid, ammo, payout);
			SendClientMessage(playerid, COLOR_GRAD3, infostring);
			if (location == 102 && IsACop(playerid)) {}
			else { SafeGivePlayerMoney(playerid, -payout); }
			BizzInfo[location - 99][bTill] += payout;
			ExtortionBiz(location - 99, payout);
			BizzInfo[location - 99][bProducts]--;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SafeGivePlayerWeapon(playerid, gun, ammo);
			
			format(string, sizeof(string), "%s bought weapons for $%d at biz %d", GN(playerid), payout, location - 99);
			printf("%s", string);
			PayLog(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong o trong cua hang.");
			return 1;
		}
	}
	return 1;
}
CMD:nangcap(playerid, params[]) { return cmd_upgrade(playerid, params); }
CMD:upgrade(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new gunid[16], string[256];
		new infostring[256];
		new upgradepoints = PlayerInfo[playerid][gPupgrade] - 1;
		if (sscanf(params, "s[256]", gunid))
		{
			format(string, sizeof(string), "Su dung: /upgrade [upgradename] (You have %d Upgrade points)", upgradepoints);
			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "*** UPGRADES ***");
			SendClientMessage(playerid, COLOR_GRAD2, string);
			if (PlayerInfo[playerid][pLevel] == 2)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Level 2 Perks: Alcoholic, DrugAddict");
			}
			else if (PlayerInfo[playerid][pLevel] == 3)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Level 3 Perks: Alcoholic, DrugAddict, Miser");
			}
			else if (PlayerInfo[playerid][pLevel] == 3)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Level 4 Perks: Alcoholic, DrugAddict, Miser, Trader");
			}
			else if (PlayerInfo[playerid][pLevel] >= 5)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Level 5 Perks: Alcoholic, DrugAddict, Miser, Trader, PainKillers");
			}
			SendClientMessage(playerid, COLOR_GRAD5, "Extra Health: health");
			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			return 1;
		}
		if (PlayerInfo[playerid][gPupgrade] > 1)
		{
			if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "health", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pSHealth] < 50)
				{
					PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth] + 5.0;
					format(infostring, 256, "Nang cap moi: Ban se duoc hoi sinh voi %.2f suc khoe (+5)", PlayerInfo[playerid][pSHealth] + 50);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Ban da hoi phuc suc khoe");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "alcoholic", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pAlcoholPerk] < 3)
				{
					PlayerInfo[playerid][pAlcoholPerk] += 1;
					format(infostring, 256, "New Perk Upgrade: Alcoholic Perk cua ban da dat Level %d.", PlayerInfo[playerid][pAlcoholPerk]);
					PlayerInfo[playerid][gPupgrade]--;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Alcoholic Perk cua ban da dat cap do toi da !");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "drugaddict", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pDrugPerk] < 3)
				{
					PlayerInfo[playerid][pDrugPerk] += 1;
					format(infostring, 256, "New Perk Upgrade: Drug Addict Perk cua ban da dat Level %d.", PlayerInfo[playerid][pDrugPerk]);
					PlayerInfo[playerid][gPupgrade]--;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Drug Addict Perk cua ban da dat cap do toi da !");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "miser", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pMiserPerk] < 3)
				{
					PlayerInfo[playerid][pMiserPerk] += 1;
					format(infostring, 256, "New Perk Upgrade: Miser Perk cua ban da dat Level %d.", PlayerInfo[playerid][pMiserPerk]);
					PlayerInfo[playerid][gPupgrade]--;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Miser Perk cua ban da dat cap do toi da !");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "trader", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pTraderPerk] < 3)
				{
					PlayerInfo[playerid][pTraderPerk] += 1;
					format(infostring, 256, "New Perk Upgrade: Trader Perk cua ban da dat Level %d.", PlayerInfo[playerid][pTraderPerk]);
					PlayerInfo[playerid][gPupgrade]--;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Trader Perk cua ban da dat cap do toi da !");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
			{
				if (PlayerInfo[playerid][pPainPerk] < 3)
				{
					PlayerInfo[playerid][pPainPerk] += 1;
					format(infostring, 256, "New Perk Upgrade: Pain Killers Perk cua ban da dat Level %d.", PlayerInfo[playerid][pPainPerk]);
					PlayerInfo[playerid][gPupgrade]--;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Pain Killers Perk cua ban da dat cap do toi da !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Unrecognized Upgrade");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD6, "   You Have 0 Upgrade Points");
			return 1;
		}
		SendClientMessage(playerid, COLOR_GRAD6, infostring);
		PlayerInfo[playerid][gPupgrade]--;
	}
	return 1;
}
//CMD:dangnhap(playerid, params[]) { return cmd_login(playerid, params); }
//CMD:login(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new tmppass[64];
//		if (gPlayerLogged[playerid] == 1)
//		{
//			SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "SERVER: Ban da dang nhap.");
//			return 1;
//		}
//		if(sscanf(params, "s[64]", tmppass))
//			return SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Su dung: (/l)ogin [password]");
//
//		//Encrypt(tmppass);
//		OnPlayerLogin(playerid, tmppass);
//	}
//	return 1;
//}
//-----------Register---------------
//if (strcmp(cmd, "/register", true) == 0)
//{
//	if (IsLogOn(playerid))
//	{
//		if (gPlayerLogged[playerid] == 1)
//		{
//			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ban da dang nhap.");
//			return 1;
//		}
//		
//		format(string, sizeof(string), "users/%s.ini", GN(playerid));
//		new File: hFile = fopen(string, io_read);
//		if (hFile)
//		{
//			SendClientMessage(playerid, COLOR_YELLOW, "Ten dang nhap do da co nguoi choi, hay chon ten khac.");
//			fclose(hFile);
//			return 1;
//		}
//		new tmppass[64];
//		tmp = strtok(cmdtext, idx);
//		if (!strlen(tmp))
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /register [password]");
//			return 1;
//		}
//		strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
//		//Encrypt(tmppass);
//		OnPlayerRegister(playerid, tmppass);
//	}
//	return 1;
//}
//----------------------------------[ooc]-----------------------------------------------
/*if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/say", true) == 0)
{
if(IsLogOn(playerid))
{
if(gPlayerLogged[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
return 1;
}
if ((noooc) && PlayerInfo[playerid][pAdmin] < 1)
{
SendClientMessage(playerid, COLOR_GRAD2, "   The OOC channel has been disabled by an Admin !");
return 1;
}
if(PlayerInfo[playerid][pMuted] == 1)
{
SendClientMessage(playerid, TEAM_CYAN_COLOR, "   You can't speak, you have been silenced !");
return 1;
}

new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[64];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/o)oc [ooc chat]");
return 1;
}
format(string, sizeof(string), "(( %s: %s ))", GN(playerid), result);
OOCOff(COLOR_OOC,string);
printf("%s", string);
}
return 1;
}*/
//CMD:noooc(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pAdmin] >= 3 && (!togOOC))
//		{
//			togOOC = 1;
//			BroadCast(COLOR_GRAD2, "   Kenh OOC da duoc dong !");
//		}
//		else if (PlayerInfo[playerid][pAdmin] >= 3 && (togOOC))
//		{
//			togOOC = 0;
//			BroadCast(COLOR_GRAD2, "   Kenh OOC da duoc mo !");
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong duoc phep su dung lenh nay!");
//		}
//	}
//	return 1;
//}
/*if(strcmp(cmd, "/speedo", true) == 0)
{
if(IsLogOn(playerid))
{
if (gSpeedo[playerid] == 1)
{
gSpeedo[playerid] = 2;
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~on", 5000, 5);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
}
else if (gSpeedo[playerid] == 2)
{
gSpeedo[playerid] = 1;
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~off", 5000, 5);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "you dont have a speedometer");
}
}
return 1;
}*/
CMD:xemxang(playerid, params[]) { return cmd_fuel(playerid, params); }
CMD:fuel(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gGas[playerid] == 0)
		{
			gGas[playerid] = 1;
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Fuel Info on", 5000, 5);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
		else if (gGas[playerid] == 1)
		{
			gGas[playerid] = 0;
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Fuel Info off", 5000, 5);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
	}
	return 1;
}
CMD:advertise(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLevel] < 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can lv2 de co the su dung lenh nay !");
			return 1;
		}
		if (!PlayerToPoint(3.0, playerid, 359.6820, 207.0294, 1008.3828))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o ABC Studio !");
			return 1;
		}
		new result[50], string[256];
		if(sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/ad)vertise [advert text]");

		if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
		{
			format(string, sizeof(string), "  Vui long thu lai sau %d Vai giay giua quang cao !", (addtimer / 1000));
			SendClientMessage(playerid, COLOR_GRAD2, string);
			return 1;

		}
		new payout = strlen(result) * 5;
		if (GetPlayerMoney(playerid) < payout)
		{
			format(string, sizeof(string), "* You used %d characters which cost $%d, you don't have enough.", strlen(result), payout);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;

		}

		SafeGivePlayerMoney(playerid, -payout);
		SBizzInfo[7][sbTill] += payout;
		ExtortionSBiz(7, payout);
		format(string, sizeof(string), "[Advert] %s, So dien thoai: %d", result, PlayerInfo[playerid][pPnumber]);
		OOCNews(TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters", payout, strlen(result));
		GameTextForPlayer(playerid, string, 5000, 1);
		if (PlayerInfo[playerid][pAdmin] < 1){ SetTimer("AddsOn", addtimer, 0); adds = 0; }
	}
	return 1;
}
CMD:gov(playerid, params[]) { return cmd_government(playerid, params); }
CMD:government(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gTeam[playerid] != TEAMGOV)
		{
			if (PlayerInfo[playerid][pLeader] != MAYOR)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat !");
				return 1;
			}
		}
		if (PlayerInfo[playerid][pRank] < 6)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai rank 6 de su dung lenh nay !");
			return 1;
		}
		
		new result[50], string[256];
		if(sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/gov)ernment [text]");

		BroadCast(COLOR_WHITE, "|___________ Thong Bao Tu Chinh Phu ___________|");
		if (PlayerInfo[playerid][pMember] == PD || PlayerInfo[playerid][pLeader] == PD)
		{
			if (PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Chief %s: %s", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Deputy Chief %s: %s", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Captain %s: %s", GN(playerid), result); }
			BroadCast(COLOR_BLUE, string);
		}
		else if (PlayerInfo[playerid][pMember] == FBI || PlayerInfo[playerid][pLeader] == FBI)
		{
			format(string, sizeof(string), "Agent %s: %s", GN(playerid), result);
			BroadCast(COLOR_GRAD2, string);
		}
		else if (PlayerInfo[playerid][pMember] == NG || PlayerInfo[playerid][pLeader] == NG)
		{
			format(string, sizeof(string), "Soldier %s: %s", GN(playerid), result);
			BroadCast(COLOR_GREEN, string);
		}
		else if (PlayerInfo[playerid][pLeader] == MAYOR)
		{
			format(string, sizeof(string), "Mayor %s: %s", GN(playerid), result);
			BroadCast(COLOR_GREY, string);
		}
		else if (PlayerInfo[playerid][pMember] == DOC || PlayerInfo[playerid][pLeader] == DOC)
		{
			format(string, sizeof(string), "DoC %s: %s", GN(playerid), result);
			BroadCast(COLOR_GREY, string);
		}
	}
	return 1;
}
CMD:togooc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!gOoc[playerid])
		{
			gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh OOC da tat !");
		}
		else if (gOoc[playerid])
		{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh OOC da bat !");
		}
	}
	return 1;
}
CMD:tognews(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!gNews[playerid])
		{
			gNews[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh News chat da tat !");
		}
		else if (gNews[playerid])
		{
			gNews[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh News chat da bat !");
		}
	}
	return 1;
}
CMD:togfam(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!gFam[playerid])
		{
			gFam[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh Family chat da tat !");
		}
		else if (gFam[playerid])
		{
			gFam[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Kenh Family chat da bat !");
		}
	}
	return 1;
}
CMD:togpm(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!HidePM[playerid])
		{
			HidePM[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Tin nhan rieng tu da tat !");
		}
		else if (HidePM[playerid])
		{
			HidePM[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Tin nhan rieng tu da bat !");
		}
	}
	return 1;
}
CMD:togphone(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Dien thoai cua ban da tat nguon !");
		}
		else if (PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Dien thoai cua ban da mo nguon !");
		}
	}
	return 1;
}
CMD:me(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban chua dang nhap !");
			return 1;
		}
		new string[256], result[50];
		if(sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /me [action]");

		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "* Stranger %s", result);
		}
		else
		{
			format(string, sizeof(string), "* %s %s", GN(playerid), result);
		}
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		printf("%s", string);
	}
	return 1;
}
	 /*
CMD:try(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		if (sscanf(params, "s[256]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /try [action]");
		new randa = random(2) + 1;
		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			if (randa == 1) format(string, sizeof(string), "*** Stranger tries %s and succeeds", result);
			else format(string, sizeof(string), "*** Stranger tries %s, but fails", result);
		}
		else
		{
			if (randa == 1) format(string, sizeof(string), "*** %s tries %s and succeeds", , result);
			else format(string, sizeof(string), "*** %s tries %s, but fails", GN(playerid), result);
		}
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
CMD:do(playerid, params[])
{
	new str[128];
	if (!IsLogOn(playerid)) return 1;
	if (gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "  Ban chua dang nhap !");

	new result[128];
	if (sscanf(params, "s[256]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /do [action]");
	if (PlayerInfo[playerid][pMaskuse] == 1)
		format(str, sizeof(str), "* %s (( Stranger ))", result);
	else
		format(str, sizeof(str), "* %s (( %s ))", result, GN(playerid));
	
	ProxDetector(30.0, playerid, str, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	return 1;
}
*/
CMD:local(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap!");
			return 1;
		}
		
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /local [local chat]");

		if (!IsPlayerInAnyVehicle(playerid))
		{
			if (PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "Stranger noi: %s", result);
				ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			}
			else
			{
				format(string, sizeof(string), "%s noi: %s", GN(playerid), result);
				ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			}
		}
		else
		{
			new carid = GetPlayerVehicleID(playerid), pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsABike(carid) || IsAPizzabike(carid) || IsAPlane(carid) || IsABoat(carid) || IsASweeper(carid) || IsAHarvest(carid) || IsADrugHarvest(carid) || IsATank(carid) || pveh == 523 || pveh == 480 || pveh == 567 || pveh == 533 || pveh == 555 || pveh == 539 || pveh == 572 || pveh == 571 || pveh == 530 || pveh == 457 || pveh == 575 || pveh == 536 || pveh == 424)
			{
				if (PlayerInfo[playerid][pMaskuse] == 1)
				{
					format(string, sizeof(string), "Stranger noi: %s", result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				}
				else
				{
					format(string, sizeof(string), "%s noi: %s", GN(playerid), result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				}
			}
			else
			{
				if (VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
				{
					if (PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Windows Shut) Stranger noi: %s", result);
						ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
					else
					{
						format(string, sizeof(string), "(Windows Shut) %s noi: %s", GN(playerid), result);
						ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
				}
				else
				{
					if (PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Windows Open) Stranger noi: %s", result);
						ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
					else
					{
						format(string, sizeof(string), "(Windows Open) %s noi: %s", GN(playerid), result);
						ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
					}
				}
			}
		}
		printf("%s", string);
	}
	return 1;
}
CMD:b(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /b [local ooc chat]");

		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "(( Stranger noi:  %s ))", result);
		}
		else
		{
			format(string, sizeof(string), "(( [%i] %s noi: %s ))", playerid, GN(playerid), result);
		}
		ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		printf("%s", string);
	}
	return 1;
}
CMD:close(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap !");
			return 1;
		}
		
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /(c)lose [close chat text]");

		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Stranger noi: %s", result);
		}
		else
		{
			format(string, sizeof(string), "%s noi: %s", GN(playerid), result);
		}
		ProxDetector(3.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		printf("%s", string);
	}
	return 1;
}
CMD:l(playerid, params[]) { return cmd_low(playerid, params); }
CMD:low(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
			return 1;
		}
		
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /low [chat text]");

		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Stranger noi: [LOW] %s", result);
		}
		else
		{
			format(string, sizeof(string), "%s noi: [LOW] %s", GN(playerid), result);
		}
		ProxDetector(3.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		printf("%s", string);
	}
	return 1;
}
CMD:s(playerid, params[]) { return cmd_shout(playerid, params); }
CMD:shout(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
			return 1;
		}
		
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/s)hout [local chat]");

		if (PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Sranger Shouts: %s!!", result);
		}
		else
		{
			format(string, sizeof(string), "%s Shouts: %s!!", GN(playerid), result);
		}
		ProxDetector(30.0, playerid, string, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_FADE1, COLOR_FADE2);
		printf("%s", string);
	}
	return 1;
}
CMD:m(playerid, params[]) { return cmd_megaphone(playerid, params); }
CMD:megaphone(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		
		new result[64];
		new string[256];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/m)egaphone [megaphone chat]");

		if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
		{
			if (IsACopCar(tmpcar) || IsAnFbiCar(tmpcar) || IsADoCCar(tmpcar))
			{
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					new currank[64];
					if (PlayerInfo[playerid][pRank] == 1) { currank = "Cadet"; }
					else if (PlayerInfo[playerid][pRank] == 2) { currank = "Police Officer"; }
					else if (PlayerInfo[playerid][pRank] == 3) { currank = "Corporal"; }
					else if (PlayerInfo[playerid][pRank] == 4) { currank = "Sergeant"; }
					else if (PlayerInfo[playerid][pRank] == 5) { currank = "Lieutenant"; }
					else if (PlayerInfo[playerid][pRank] == 6) { currank = "Captain"; }
					else if (PlayerInfo[playerid][pRank] == 7) { currank = "Deputy Chief"; }
					else if (PlayerInfo[playerid][pRank] == 8) { currank = "Chief"; }
					else { currank = "Cadet"; }
					format(string, sizeof(string), "[%s %s:o< %s]", currank, GN(playerid), result);
					ProxDetector(60.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
				}
				else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				{
					format(string, sizeof(string), "[Dac Vu FBI %s:o< %s]", GN(playerid), result);
					ProxDetector(60.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
				}
				else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
				{
					format(string, sizeof(string), "[Nhan Vien DoC %s:o< %s]", GN(playerid), result);
					ProxDetector(60.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are not in a Police Vehicle!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You are not part of a Team!");
			return 1;
		}
	}
	return 1;
}
CMD:r(playerid, params[]) { return cmd_radio(playerid, params); }
CMD:radio(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new result[64];
		new string[256];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/r)adio [radio chat]");

		if (PlayerInfo[playerid][pMember] == PD || PlayerInfo[playerid][pLeader] == PD)
		{
			if (PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(PD, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == FBI || PlayerInfo[playerid][pLeader] == FBI)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(FBI, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == DOC || PlayerInfo[playerid][pLeader] == DOC)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(DOC, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (gTeam[playerid] == TEAMGOV || PlayerInfo[playerid][pMember] == FD || PlayerInfo[playerid][pLeader] == FD)
		{
			format(string, sizeof(string), "** Paramedic %s: %s, over. **", GN(playerid), result);
			SendRadioMessage(4, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == MAYOR || PlayerInfo[playerid][pLeader] == MAYOR)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Mayor %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Bodyguard %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Driver %s: %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** Not-assigned %s: %s, over. **", GN(playerid), result);
			}
			SendRadioMessage(MAYOR, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == HITMAN || PlayerInfo[playerid][pLeader] == HITMAN)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(HITMAN, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == NEWS || PlayerInfo[playerid][pLeader] == NEWS)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(NEWS, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == TAXI || PlayerInfo[playerid][pLeader] == TAXI)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** %s(radio): %s **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** %s(radio): %s, over. **", GN(playerid), result);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			SendRadioMessage(TAXI, TEAM_RADIO_COLOR, string);
			printf("%s", string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong la thanh vien cua to chuc nao !");
			return 1;
		}
	}
	return 1;
}
CMD:duty(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2
			|| PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			if ((PlayerToPoint(3, playerid, 255.3, 77.4, 1003.6) || PlayerToPoint(3, playerid, -1616.1294, 681.1594, 7.1875) || PlayerToPoint(3, playerid, 2591.8745, -1479.4348, -48.9141)))
			{
				if (OnDuty[playerid] == 0)
				{
					if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						format(string, sizeof(string), "* Si quan %s da lay ra huy hieu va sung tu tu do.", GN(playerid));
					}
					else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
						format(string, sizeof(string), "* Dac vu FBI %s da lay ra huy hieu va sung tu tu do.", GN(playerid));
					}
					else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					{
						format(string, sizeof(string), "* Nhan vien DoC %s da lay ra huy hieu va sung tu tu do.", GN(playerid));
					}
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SafeGivePlayerWeapon(playerid, 24, 70);
					SafeGivePlayerWeapon(playerid, 3, 0);
					SetPlayerArmour(playerid, 100);
					OnDuty[playerid] = 1;
				}
				else if (OnDuty[playerid] == 1)
				{
					if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						format(string, sizeof(string), "* Si quan %s da cat huy hieu va sung vao tu do.", GN(playerid));
					}
					else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
						format(string, sizeof(string), "* Dac vu FBI %s da cat huy hieu va sung vao tu do.", GN(playerid));
					}
					else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					{
						format(string, sizeof(string), "* Nhan vien DoC %s da cat huy hieu va sung vao tu do.", GN(playerid));
					}
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SafeResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 0);
					SafeGivePlayerWeapon(playerid, 41, 500);
					OnDuty[playerid] = 0;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong o locker room !");
				return 1;
			}
		}
		else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			if (JobDuty[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da offduty ban se khong nhan duoc cac cuoc goi cuu thuong.");
				JobDuty[playerid] = 0;
				Medics -= 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da onduty, ban se nhan duoc cac cuoc goi cuu thuong.");
				JobDuty[playerid] = 1;
				Medics += 1;
				
				format(string, sizeof(string), "[Benh Vien] Nhan vien Cap Cuu %s dang lam viec. (/dichvu cuuthuong hoac /call 911)", GN(playerid));
				OOCNews(COLOR_ALLDEPT, string);
			}
		}
		else if (PlayerInfo[playerid][pJob] == 17)
		{
			if (JobDuty[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da offduty, ban se khong nhan duoc cac cuoc goi pizza.");
				JobDuty[playerid] = 0;
				PizzaBoys -= 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da onduty, ban se nhan duoc cac cuoc goi pizza.");
				JobDuty[playerid] = 1;
				PizzaBoys += 1;
				
				format(string, sizeof(string), "[Pizza] Nhan vien Pizza %s dang lam viec. (/call 111 de dat pizza)", GN(playerid));
				OOCNews(0xFF7E00AA, string);
			}
		}
		else if (PlayerInfo[playerid][pJob] == 7)
		{
			if (JobDuty[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da offduty, ban se khong nhan duoc cac cuoc goi sua xe.");
				JobDuty[playerid] = 0;
				Mechanics -= 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da onduty, ban se nhan duoc cac cuoc goi sua xe.");
				JobDuty[playerid] = 1;
				Mechanics += 1;
				
				format(string, sizeof(string), "[Sua Xe] Tho Sua Xe %s dang lam viec. (/call 555 de goi sua xe)", GN(playerid));
				OOCNews(0x2993EDAA, string);
			}
		}
		else
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co chuc vu gi !");
	}
	return 1;
}
CMD:dept(playerid, params[]) { return cmd_departments(playerid, params); }
CMD:departments(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256], result[50];
		if (sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/d)epartments [department chat]");

		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Chief %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Deputy Chief %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Captain %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Lieutenant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Sergeant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Corporal %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Police Officer %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Cadet %s: %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** Cadet %s: %s, over. **", GN(playerid), result);
			}
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Assistant Director in Charge %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Special Agent in Charge %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Special Agent %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Special Agent Trainee %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Professional Staff %s: %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** Intern %s: %s, over. **", GN(playerid), result);
			}
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** General %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Lieutenant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Captain %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Major %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Sergeant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Private %s: %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** Private %s: %s, over. **", GN(playerid), result);
			}
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** General %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Lieutenant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Captain %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Major %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Sergeant %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Private %s: %s, over. **", GN(playerid), result); }
			else
			{
				format(string, sizeof(string), "** Private %s: %s, over. **", GN(playerid), result);
			}
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else if (gTeam[playerid] == TEAMGOV || PlayerInfo[playerid][pMember] == FD || PlayerInfo[playerid][pLeader] == FD)
		{
			format(string, sizeof(string), "** Paramedic %s: %s, over. **", GN(playerid), result);
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else if (PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		{
			if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Mayor %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Mayor's bodyguard %s: %s, over. **", GN(playerid), result); }
			else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Mayor's driver %s: %s, over. **", GN(playerid), result); }
			else { SendClientMessage(playerid, COLOR_GREY, "  Mayor hasn't given you a radio to speak in"); return 1; }
			SendTeamMessage(TEAMGOV, COLOR_ALLDEPT, string);
			printf("%s", string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You are not part of a Team !");
			return 1;
		}
	}
	return 1;
}
CMD:mdc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop !");
			return 1;
		}
		new tmpcar;
		tmpcar = GetPlayerVehicleID(playerid);
		new giveplayerid, string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /mdc [playerid/PartOfName]");

		if (IsACopCar(tmpcar) || IsAHspdCar(tmpcar) || IsAnFbiCar(tmpcar) || PlayerToPoint(5.0, playerid, 253.9280, 69.6094, 1003.6406))
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "______-=MOBILE DATA COMPUTER=-_______");
					format(string, sizeof(string), "Ten : %s", GN(playerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "Crime : %s", PlayerCrime[giveplayerid][pAccusedof]);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "Claimant : %s", PlayerCrime[giveplayerid][pVictim]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					format(string, sizeof(string), "Reported : %s", PlayerCrime[giveplayerid][pAccusing]);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					format(string, sizeof(string), "Accused : %s", PlayerCrime[giveplayerid][pBplayer]);
					SendClientMessage(playerid, COLOR_GRAD5, string);
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "_______________________________________");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You are not in a Police Vehicle or in the Police Department.");
			return 1;
		}
	}
	return 1;
}
CMD:su(playerid, params[]) { return cmd_suspect(playerid, params); }
CMD:suspect(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1)
			return SCM(playerid, COLOR_GREY, "Chi co PD moi co ket toi");

		if (OnDuty[playerid] != 1)
			return SendClientMessage(playerid, COLOR_GREY, "   You are not on Duty!");

		new giveplayerid, giveplayer[50], result[50], string[256];
		if(sscanf(params, "us[50]", giveplayerid, result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/su)spect [playerid/PartOfName] [crime discription]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (gTeam[giveplayerid] != TEAMGOV)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					if (WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 3; }
					else { WantedPoints[giveplayerid] += 2; }
					SetPlayerCriminalEx(giveplayerid, playerid, result);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong the ket toi mot nhan vien chinh phu !");
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			return 1;
		}
	}
	return 1;
}
/*if(strcmp(cmd, "/carlock", true) == 0)
{
new keycar = PlayerInfo[playerid][pPcarkey][0];
if(IsLogOn(playerid))
{
if(keycar != 999)
{
new locked[256];
locked = strtok(cmdtext, idx);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if (IsLogOn(i))
{
SetVehicleParamsForPlayer(keycar,i,0,1);
}
}
format(string, sizeof(string), "~w~Car~n~~r~Locked");
GameTextForPlayer(playerid, string, 10000, 3);
CarInfo[keycar][cLock] = 1;
OnPropUpdate();
return 1;
}
else { SendClientMessage(playerid,COLOR_WHITE,"** You do not own a car! **"); return 1; }
}
}*/
/*if(strcmp(cmd, "/carunlock", true) == 0)
{
new keycar = PlayerInfo[playerid][pPcarkey][0];
if(IsLogOn(playerid))
{
if(keycar != 999)
{
new locked[256];
locked = strtok(cmdtext, idx);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if (IsLogOn(i))
{
SetVehicleParamsForPlayer(keycar,i,0,0);
}
}
format(string, sizeof(string), "~w~Car~n~~g~Unlocked");
GameTextForPlayer(playerid, string, 10000, 3);
CarInfo[keycar][cLock] = 0;
OnPropUpdate();
return 1;
}
else { SendClientMessage(playerid,COLOR_WHITE,"** You do not own a car! **"); return 1; }
}
}*/
CMD:lock(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new carid;
		if (gTeam[playerid] == TEAMGOV)
		{
			if (gLastCar[playerid] == 0 && PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co xe.");
				return 1;
			}
			else if (gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPhousekey] + 1)
			{
				if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] != 299)
				{
					gLastDriver[HireCar[playerid]] = 300;
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
				}
				HireCar[playerid] = gLastCar[playerid];
			}
		}
		if (PlayerInfo[playerid][pPhousekey] == 255)
		{
			if (HireCar[playerid] == 299)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co xe.");
				return 1;
			}
		}
		carid = PlayerInfo[playerid][pPhousekey] + 1;
		if (HireCar[playerid] != 299 && !SwitchKey[playerid])
		{
			carid = HireCar[playerid];
		}
		//new driver = gLastDriver[carid];
		new lockstatus = gCarLock[carid];
		new Float:cx, Float:cy, Float:cz;
		GetVehiclePos(carid, cx, cy, cz);
		switch (lockstatus)
		{
		case 0:
		{
					if (HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co xe");
						return 1;
					}
					if (HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
					}
					else if (PlayerInfo[playerid][pPhousekey] == carid - 1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
						return 1;
					}
		}
		case 1:
		{
					if (HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co xe");
						return 1;
					}
					if (HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
					}
					if (PlayerInfo[playerid][pPhousekey] == carid - 1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
						return 1;
					}
		}
		default:
		{
					 SendClientMessage(playerid, COLOR_GRAD2, "   Error");
		}
		}
		if (carid == 256)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co xe!");
		}
	}
	return 1;
}
CMD:open(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		for (new i = 0; i < MAX_HOUSES; i++)
		{
			if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if (PlayerInfo[playerid][pPhousekey] == i)
				{
					if (HouseInfo[i][hLock] == 1)
					{
						HouseInfo[i][hLock] = 0;
						GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if (HouseInfo[i][hLock] == 0)
					{
						HouseInfo[i][hLock] = 1;
						GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Ban khong co chia khoa", 5000, 6);
					return 1;
				}
			}
		}
		for (new i = 0; i < sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
			{
				if (PlayerInfo[playerid][pPbiskey] == i)
				{
					if (BizzInfo[i][bLocked] == 1)
					{
						BizzInfo[i][bLocked] = 0;
						GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if (BizzInfo[i][bLocked] == 0)
					{
						BizzInfo[i][bLocked] = 1;
						GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Ban khong co chia khoa", 5000, 6);
					return 1;
				}
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				if (PlayerInfo[playerid][pPbiskey] == i + 100)
				{
					if (SBizzInfo[i][sbLocked] == 1)
					{
						SBizzInfo[i][sbLocked] = 0;
						GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if (SBizzInfo[i][sbLocked] == 0)
					{
						SBizzInfo[i][sbLocked] = 1;
						GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Ban khong co chia khoa", 5000, 6);
					return 1;
				}
			}
		}
	}
	return 1;
}
/*if(strcmp(cmd, "/gang", true) == 0)
{
if(IsLogOn(playerid))
{
new carid;
if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16)
{
if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pGangKey]+1)
{
if (GangCar[playerid] != gLastCar[playerid] && GangCar[playerid] != 512)
{
gLastDriver[GangCar[playerid]] = 520;
gCarLock[GangCar[playerid]] = 0;
UnLockCar(GangCar[playerid]);
}
GangCar[playerid] = gLastCar[playerid];
}
}
if(GangCar[playerid] != 512 && !SwitchKey[playerid])
{
carid = GangCar[playerid];
}
//new driver = gLastDriver[carid];
new lockstatus = gCarLock[carid];
new Float:cx,Float:cy,Float:cz;
GetVehiclePos(carid, cx, cy, cz);
switch (lockstatus)
{
case 0:
{
if(GangCar[playerid] == carid && !SwitchKey[playerid])
{
GameTextForPlayer(playerid, "~w~Gang Vehicle ~r~Locked", 5000, 6);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
gCarLock[carid] = 1;
LockCar(carid);
}
else if (PlayerInfo[playerid][pPhousekey] == carid-1)
{
GameTextForPlayer(playerid, "~w~Gang Vehicle ~r~Locked", 5000, 6);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
gCarLock[carid] = 1;
LockCar(carid);
return 1;
}
}
case 1:
{
if(GangCar[playerid] == carid && !SwitchKey[playerid])
{
GameTextForPlayer(playerid, "~w~Gang Vehicle ~g~Unlocked", 5000, 6);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
gCarLock[carid] = 0;
UnLockCar(carid);
}
if (PlayerInfo[playerid][pPhousekey] == carid-1)
{
GameTextForPlayer(playerid, "~w~Gang Vehicle ~g~Unlocked", 5000, 6);
PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
gCarLock[carid] = 0;
UnLockCar(carid);
return 1;
}
}
default:
{
SendClientMessage(playerid, COLOR_GRAD2, "   Error");
}
}
if(carid == 256)
{
SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle !");
}
}
return 1;
}*/
CMD:pm(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua vao game!");
			return 1;
		}
		new giveplayerid, giveplayer[50], result[50], string[256];
		if (sscanf(params, "us[50]", giveplayerid, result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/p)m [playerid/PartOfName] [text]");
			
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (HidePM[giveplayerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi do da chan tin nhan!");
					return 1;
				}
				
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if (giveplayerid == playerid)
				{
					format(string, sizeof(string), "* %s dang tu thi tham gi do.", GN(playerid));
					ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				format(string, sizeof(string), "[ID:%d] %s pm: %s", playerid, GN(playerid), (result));
				SendClientMessage(giveplayerid, 0xBBA033AA, string);
				format(string, sizeof(string), "PM gui toi [ID:%d]%s: %s", giveplayerid, giveplayer, (result));
				SendClientMessage(playerid, 0xE5C43EAA, string);
				return 1;
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Nguoi choi khong tin tai.");
	}
	return 1;
}
CMD:w(playerid, params[]) { return cmd_whisper(playerid, params); }
CMD:whisper(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap!");
			return 1;
		}
		new giveplayerid, giveplayer[50], string[256], result[256];
		if (sscanf(params, "us[256]", giveplayerid, result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/w)hisper [playerid/PartOfName] [whisper text]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[playerid][pAdmin] > 0)
				{
					format(string, sizeof(string), "[Admin] %s: %s", GN(playerid), result);
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "Ban noi voi %s: %s", GN(giveplayerid), result);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid, x, y, z);
					if (PlayerToPoint(5, playerid, x, y, z))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if (giveplayerid == playerid)
						{
							format(string, sizeof(string), "* %s dang tu lam nham gi do.", GN(playerid));
							ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "* %s dang noi gi do voi %s", GN(playerid), giveplayer);
							ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						format(string, sizeof(string), "%s noi: %s", GN(playerid), (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "Ban noi voi %s: %s", GN(giveplayerid), result);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    Nguoi choi do khong gan ban !");
						return 1;
					}
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:cw(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap!");
			return 1;
		}
		if (!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co trong xe!");
			return 1;
		}
		new result[50],string[256];
		if(sscanf(params, "s[256]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/cw)hisper [text]");
	
		new vehicle = GetPlayerVehicleID(playerid);
		for (new i = 0; i != MAX_PLAYERS; i++)
		{
			if (IsLogOn(i) && IsPlayerInAnyVehicle(i))
			{
				if (GetPlayerVehicleID(i) == vehicle)
				{
					if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						format(string, sizeof(string), "Driver %s noi: %s", GN(playerid), result);
						SendClientMessage(i, 0xD7DFF3AA, string);
					}
					else
					{
						format(string, sizeof(string), "Passenger %s noi: %s", GN(playerid), result);
						SendClientMessage(i, 0xD7DFF3AA, string);
					}
				}
			}
		}
	}
	return 1;
}
CMD:ruttien(playerid, params[]) { return cmd_withdraw(playerid, params); }
CMD:withdraw(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLocal] == 103 || IsAtATM(playerid))
		{
			new cashdeposit, string[256];
			if(sscanf(params, "i", cashdeposit))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /withdraw [amount]");
				format(string, sizeof(string), "  Ban co $%d trong tai khoan.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co nhieu den the !");
				return 1;
			}
			//ConsumingMoney[playerid] = 1;
			SafeGivePlayerMoney(playerid, cashdeposit);
			PlayerInfo[playerid][pAccount] = PlayerInfo[playerid][pAccount] - cashdeposit;
			format(string, sizeof(string), "  Ban da rut $%d Tu tai khoan va con lai: $%d ", cashdeposit, PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co o ngan hang !");
			return 1;
		}
	}
	return 1;
}
CMD:guitien(playerid, params[]) { return cmd_bank(playerid, params); }
CMD:bank(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLocal] != 103 && !IsAtATM(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co o ngan hang !");
			return 1;
		}
		new cashdeposit, string[256];
		if (sscanf(params, "i", cashdeposit))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /bank [amount]");
			format(string, sizeof(string), "  Ban co $%d trong tai khoan.", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_GRAD3, string);
			return 1;
		}
		if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co nhieu den the");
			return 1;
		}
		SafeGivePlayerMoney(playerid, -cashdeposit);
		new curfunds = PlayerInfo[playerid][pAccount];
		PlayerInfo[playerid][pAccount] = cashdeposit + PlayerInfo[playerid][pAccount];
		SendClientMessage(playerid, COLOR_WHITE, "|___ BANK STATMENT ___|");
		format(string, sizeof(string), "  Old Balance: $%d", curfunds);
		SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "  Deposit: $%d", cashdeposit);
		SendClientMessage(playerid, COLOR_GRAD4, string);
		SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
		format(string, sizeof(string), "  New Balance: $%d", PlayerInfo[playerid][pAccount]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	return 1;
}
CMD:kiemtrataikhoan(playerid, params[]) { return cmd_balance(playerid, params); }
CMD:balance(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (PlayerInfo[playerid][pLocal] == 103 || IsAtATM(playerid))
		{
			format(string, sizeof(string), "  Ban co $%d trong tai khoan.", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co o ngan hang !");
			return 1;
		}
	}
	return 1;
}
CMD:dice(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		new dice = random(6) + 1;
		if (gDice[playerid] == 1)
		{
			
			format(string, sizeof(string), "*** %s lac xi ngau ra so %d", GN(playerid), dice);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You Don't Have A Dice");
			return 1;
		}
	}
	return 1;
}
CMD:tungdongxu(playerid, params[]) { return cmd_coin(playerid, params); }
CMD:coin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		new coin = random(2) + 1;
		
		new coinname[20];
		if (coin == 1) { coinname = "Tien"; }
		else { coinname = "Hinh"; }
		format(string, sizeof(string), "*** %s tung dong xu va xuat hien mat %s", GN(playerid), coinname);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
CMD:chuyenkhoan(playerid, params[]) { return cmd_transfer(playerid, params); }
CMD:transfer(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLevel] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban phai lv3 tro len !");
			return 1;
		}
		if (PlayerInfo[playerid][pLocal] != 103)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co o ngan hang!");
			return 1;
		}
		new giveplayerid, moneys, string[256], giveplayer[50];
		if(sscanf(params, "ui", giveplayerid, moneys))
			return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /transfer [playerid/PartOfName] [amount]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				new playermoney;
				playermoney = PlayerInfo[playerid][pAccount];
				if (moneys > 0 && playermoney >= moneys)
				{
					PlayerInfo[playerid][pAccount] -= moneys;
					PlayerInfo[giveplayerid][pAccount] += moneys;
					format(string, sizeof(string), "   Ban da chuyen khoang $%d cho tai khoan cua %s", moneys, giveplayer, giveplayerid);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   Ban da nhan duoc $%d vao tai khoan cua ban tu %s", moneys, GN(playerid), playerid);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "%s chuyen khoan $%d cho %s", GN(playerid), moneys, giveplayer);
					if (moneys >= 500000)
					{
						ABroadCast(COLOR_YELLOW, string, 1);
					}
					printf("%s", string);
					PayLog(string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:trangbi(playerid, params[]) { return cmd_equip(playerid, params); }
CMD:equip(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		if (PlayerToPoint(100, playerid, 244.9618, -1348.2435, 107.1833))//centerpoint 24-7
		{
			new item;
			if(sscanf(params, "i", item))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /equip [item number]");
				SendClientMessage(playerid, COLOR_BLUE, "|_______ LSPD Police Armory _______|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Cadet Patrol		2: Officer Patrol");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: Detective Patrol	4: Motorcyclist Patrol");
				SendClientMessage(playerid, COLOR_GRAD3, "| 5: Standard SWAT	6: Medium SWAT");
				SendClientMessage(playerid, COLOR_GRAD4, "| 7: Heavy SWAT		8: Sharpshooter SWAT");
				SendClientMessage(playerid, COLOR_GRAD5, "| 9: Equip Armor+health      10: Ceremonial Uniform");
				SendClientMessage(playerid, COLOR_GRAD5, "| 11: Default ((WARNING: It kills you))");
				return 1;
			}
			if (item == 1)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41);
					
					format(string, sizeof(string), "* %s has suited himself up with the standard cadet equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 2)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 29);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 25);
					
					format(string, sizeof(string), "* %s has suited himself up with the standard officer equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 3)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SendClientMessage(playerid, COLOR_WHITE, "Use the camera to zoom and f8 to take a picture");
					SafeGivePlayerWeapon(playerid, 43, 1);
					SafeGivePlayerWeapon(playerid, 24);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi tham tu.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 4)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SetPlayerSkin(playerid, 284);
					
					format(string, sizeof(string), "* %s has put on safety gear and equipment for motorcycle use and patrol.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 5)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 17, 5);
					SafeGivePlayerWeapon(playerid, 29);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s has put on a SWAT uniform and geared up with standard equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 6)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 17, 5);
					SafeGivePlayerWeapon(playerid, 31);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s has put on a SWAT uniform and geared up with medium equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 7)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 16, 5);
					SafeGivePlayerWeapon(playerid, 27);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s has put on a SWAT uniform and geared up with heavy equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 8)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 23);
					SafeGivePlayerWeapon(playerid, 34);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s has put on a SWAT uniform and geared up with sharpshooter equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 9)
			{
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				{
					SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
					
					format(string, sizeof(string), "* %s da mac giap va duoc hoi phuc suc khoe.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 10)
			{
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pRank] < 4)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 23);
					SafeGivePlayerWeapon(playerid, 33);
					SetPlayerSkin(playerid, 288);
					
					format(string, sizeof(string), "* %s has put on a ceremonial uniform and equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pRank] > 3)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 23);
					SafeGivePlayerWeapon(playerid, 33, 50);
					SetPlayerSkin(playerid, 283);
					
					format(string, sizeof(string), "* %s has put on a ceremonial uniform and equipment.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 11)
			{
				new originalskin = PlayerInfo[playerid][pModel];
				SetPlayerSkin(playerid, originalskin);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "   You don't have the cash for that!");
				return 1;
			}
		}
		if (PlayerToPoint(100, playerid, 222.6434, 115.1870, 999.0156))//centerpoint 24-7
		{
			new item;
			if (sscanf(params, "i", item))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /equip [item number]");
				SendClientMessage(playerid, COLOR_GREEN, "|_______ LSPD Police Armory _______|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Intern Surveillance  2: Agent Surveillance");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: Surveillance Camera  4: Covert Surveillance");
				SendClientMessage(playerid, COLOR_GRAD3, "| 5: Standard Tactical    6: Medium Tactical");
				SendClientMessage(playerid, COLOR_GRAD4, "| 7: Heavy Tactical	    8: Sharpshooter Tactical");
				SendClientMessage(playerid, COLOR_GRAD5, "| 9: Equip Armor+health   10: Night Vision Goggles");
				SendClientMessage(playerid, COLOR_GRAD5, "| 11: Thermal Goggles     12: Default");
				return 1;
			}
			if (item == 1)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 43, 100);
					SafeGivePlayerWeapon(playerid, 3, 1);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi tap su.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 2)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 43, 100);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 3, 1);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi mat vu.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 3)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 43, 100);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi tham tu.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 4)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 43, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 23);
					SafeGivePlayerWeapon(playerid, 46, 1);
					
					format(string, sizeof(string), "* %s da lay mot trang bi diep vien.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 5)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 17, 5);
					SafeGivePlayerWeapon(playerid, 29);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi hang nhe danh cho SWAT.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 6)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 17, 5);
					SafeGivePlayerWeapon(playerid, 31);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi hang trung binh danh cho SWAT.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 7)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 16, 5);
					SafeGivePlayerWeapon(playerid, 27);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "* %s da lay mot bo trang bi hang nang danh cho SWAT.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 8)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 23);
					SafeGivePlayerWeapon(playerid, 34);
					SafeGivePlayerWeapon(playerid, 46, 1);
					SetPlayerSkin(playerid, 285);
					
					format(string, sizeof(string), "*  %s da lay mot bo trang ban tia danh cho SWAT.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 9)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
					
					format(string, sizeof(string), "* %s da mac giap va duoc hoi phuc suc khoe.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 10)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeGivePlayerWeapon(playerid, 44, 1);
					
					format(string, sizeof(string), "* %s da lay mot nightvision goggles.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 11)
			{
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					SafeGivePlayerWeapon(playerid, 45, 1);
					format(string, sizeof(string), "* %s da lay mot thermal goggles.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (item == 12)
			{
				new originalskin = PlayerInfo[playerid][pChar];
				SetPlayerSkin(playerid, originalskin);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "   You don't have the cash for that!");
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
CMD:mua(playerid, params[]) { return cmd_buy(playerid, params); }
CMD:buy(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!PlayerToPoint(100, playerid, -30.875, -88.9609, 1004.53))//centerpoint 24-7
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong o trong 24-7 !");
			return 1;
		}
		new item, string[256];
		if (sscanf(params, "i", item))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /buy [item number]");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______ 24-7 _______|");
			SendClientMessage(playerid, COLOR_GRAD1, "| 1: Dien thoai $150       2: The cao $500");
			SendClientMessage(playerid, COLOR_GRAD1, "| 3: Danh ba $10           4: Xuc xac $10");
			SendClientMessage(playerid, COLOR_GRAD2, "| 5: Thung xang 20$      6: Bao cao su $1");
			SendClientMessage(playerid, COLOR_GRAD3, "| 7: Camera $50            8: Mat na 500$");
			SendClientMessage(playerid, COLOR_GRAD3, "| 9: Dong ho $100       10: Dung cu cau ca 150$");
			SendClientMessage(playerid, COLOR_GRAD4, "| 11: Day thung $10     12: Binh xit cay 50$");
			SendClientMessage(playerid, COLOR_GRAD4, "| 13: Bat lua 5$            14: Cigarettes 30$");
			return 1;
		}
		if (SBizzInfo[9][sbProducts] == 0)
		{
			GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
			return 1;
		}
		if (item == 1 && GetPlayerMoney(playerid) > 149)
		{
			if (PlayerInfo[playerid][pTraderPerk] > 0)
			{
				new skill = 150 / 100;
				new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
				new payout = 150 - price;
				format(string, sizeof(string), "~r~-$%d", payout);
				GameTextForPlayer(playerid, string, 5000, 1);
				SafeGivePlayerMoney(playerid, -payout);
				SBizzInfo[9][sbTill] += payout;
				ExtortionSBiz(9, payout);
			}
			else
			{
				format(string, sizeof(string), "~r~-$%d", 150);
				GameTextForPlayer(playerid, string, 5000, 1);
				SafeGivePlayerMoney(playerid, -150);
				SBizzInfo[9][sbTill] += 150;
				ExtortionSBiz(9, 150);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new randphone = 100000 + random(899999);//minimum 1000  max 9999
			PlayerInfo[playerid][pPnumber] = randphone;
			format(string, sizeof(string), "   So dien thoai di dong moi cua ban la %d", randphone);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD5, "Ban co the kiem tra so dien thoai bang cach go /stats");
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Ban co the /help de duoc huong dan su dung dien thoai.");
			return 1;
		}
		else if (item == 2 && GetPlayerMoney(playerid) > 500)
		{
			if (PlayerInfo[playerid][pTraderPerk] > 0)
			{
				new skill = 500 / 100;
				new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
				new payout = 500 - price;
				SafeGivePlayerMoney(playerid, -payout);
				SBizzInfo[9][sbTill] += payout;
				ExtortionSBiz(9, payout);
				format(string, sizeof(string), "~r~-$%d", payout);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			else
			{
				SafeGivePlayerMoney(playerid, -500);
				SBizzInfo[9][sbTill] += 500;
				ExtortionSBiz(9, 500);
				format(string, sizeof(string), "~r~-$%d", 500);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new prize;
			new symb1[32]; new symb2[32]; new symb3[32];
			new randcard1 = random(10);//minimum 1000  max 9999
			new randcard2 = random(10);//minimum 1000  max 9999
			new randcard3 = random(10);//minimum 1000  max 9999
			if (randcard1 >= 5)
			{
				format(symb1, sizeof(symb1), "~b~]");
				randcard1 = 1;
			}
			else if (randcard1 <= 4 && randcard1 >= 2)
			{
				format(symb1, sizeof(symb1), "~g~]");
				randcard1 = 2;
			}
			else if (randcard1 < 2)
			{
				format(symb1, sizeof(symb1), "~y~]");
				randcard1 = 3;
			}
			if (randcard2 >= 5)
			{
				format(symb2, sizeof(symb2), "~b~]");
				randcard2 = 1;
			}
			else if (randcard2 <= 4 && randcard2 >= 2)
			{
				format(symb2, sizeof(symb2), "~g~]");
				randcard2 = 2;
			}
			else if (randcard2 < 2)
			{
				format(symb2, sizeof(symb2), "~y~]");
				randcard2 = 3;
			}
			if (randcard3 >= 5)
			{
				format(symb3, sizeof(symb3), "~b~]");
				randcard3 = 1;
			}
			else if (randcard3 <= 4 && randcard3 >= 2)
			{
				format(symb3, sizeof(symb3), "~g~]");
				randcard3 = 2;
			}
			else if (randcard3 < 2)
			{
				format(symb3, sizeof(symb3), "~y~]");
				randcard3 = 3;
			}
			if (randcard1 == randcard2 && randcard1 == randcard3)
			{
				if (randcard1 > 5)
				{
					prize = 2500;
				}
				if (randcard1 <= 4 && randcard1 >= 2)
				{
					prize = 1500;
				}
				if (randcard1 < 2)
				{
					prize = 500;
				}
				SafeGivePlayerMoney(playerid, prize);
				SBizzInfo[9][sbTill] -= prize;
				ExtortionSBiz(9, prize);
				format(string, sizeof(string), "%s %s %s ~n~~n~~w~~g~$%d", symb1, symb2, symb3, prize);
			}
			else
			{
				format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0", symb1, symb2, symb3);
			}
			GameTextForPlayer(playerid, string, 3000, 3);
			return 1;
		}
		else if (item == 3 && GetPlayerMoney(playerid) > 10)
		{
			if (PlayerInfo[playerid][pTraderPerk] > 0)
			{
				new skill = 10 / 100;
				new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
				new payout = 10 - price;
				SafeGivePlayerMoney(playerid, -payout);
				SBizzInfo[9][sbTill] += payout;
				ExtortionSBiz(9, payout);
				GameTextForPlayer(playerid, "~r~-$10", 5000, 1);
			}
			else
			{
				SafeGivePlayerMoney(playerid, -10);
				SBizzInfo[9][sbTill] += 10;
				ExtortionSBiz(9, 10);
				format(string, sizeof(string), "~r~-$%d", 100);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][pPhoneBook] = 1;
			format(string, sizeof(string), "   Ban da co danh ba, ban co the tim so bat ky nguoi choi !");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /number <id/name>.");
			return 1;
		}
		else if (item == 4 && GetPlayerMoney(playerid) > 10)
		{
			if (PlayerInfo[playerid][pTraderPerk] > 0)
			{
				new skill = 10 / 100;
				new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
				new payout = 10 - price;
				SafeGivePlayerMoney(playerid, -payout);
				SBizzInfo[9][sbTill] += payout;
				ExtortionSBiz(9, payout);
				format(string, sizeof(string), "~r~-$%d", payout);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			else
			{
				SafeGivePlayerMoney(playerid, -10);
				SBizzInfo[9][sbTill] += 10;
				ExtortionSBiz(9, 10);
				format(string, sizeof(string), "~r~-$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			gDice[playerid] = 1;
			format(string, sizeof(string), "   Da mua xuc xac, bay gio ban co the choi nem xuc xac.");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: Go /dice ");
			return 1;
		}
		/*else if(item == 5 && GetPlayerMoney(playerid) > 5000)
		{
		if (gLastCar[playerid] != 0)
		{
		if(HireCar[playerid] != 299)
		{
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		HireCar[playerid] = 299;
		}
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 5000 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 5000 - price;
		SafeGivePlayerMoney(playerid,- payout);
		SBizzInfo[9][sbTill] += payout;
		ExtortionSBiz(9, payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid,-5000);
		SBizzInfo[9][sbTill] += 5000;
		ExtortionSBiz(9, 5000);
		format(string, sizeof(string), "~r~-$%d", 5000);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		SBizzInfo[9][sbProducts]--;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		HireCar[playerid] = gLastCar[playerid];
		format(string, sizeof(string), "Key Purchased You Can Lock Your Last Vehicle.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /lock ");
		}
		else
		{
		SendClientMessage(playerid, COLOR_WHITE, "   You don't have a Vehicle to fit it to !");
		}
		return 1;
		}*/
		else if (item == 5 && GetPlayerMoney(playerid) > 20)
		{
			PlayerInfo[playerid][pFuel] = 20;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: Go /fillup");
			GameTextForPlayer(playerid, "~r~-$20", 5000, 1);
			return 1;
		}
		/*else if (item == 6 && GetPlayerMoney(playerid) > 500)
		{
		gSpeedo[playerid] = 1;
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 500 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 500 - price;
		SafeGivePlayerMoney(playerid,- payout);
		SBizzInfo[9][sbTill] += payout;
		ExtortionSBiz(9, payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid,-500);
		SBizzInfo[9][sbTill] += 500;
		ExtortionSBiz(9, 500);
		format(string, sizeof(string), "~r~-$%d", 5000);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		SBizzInfo[9][sbProducts]--;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "Speedometer Purchased.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /speedo ");
		return 1;
		}*/
		else if (item == 6 && GetPlayerMoney(playerid) > 1)
		{
			if (PlayerInfo[playerid][pTraderPerk] > 0)
			{
				new skill = 1 / 100;
				new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
				new payout = 1 - price;
				SafeGivePlayerMoney(playerid, -payout);
				format(string, sizeof(string), "~r~-$%d", payout);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			else
			{
				SafeGivePlayerMoney(playerid, -1);
				format(string, sizeof(string), "~r~-$%d", 1);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			Condom[playerid] ++;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Da mua bao cao su.");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			return 1;
		}
		/*else if (item == 7 && GetPlayerMoney(playerid) > 250)
		{
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 250 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 250 - price;
		SafeGivePlayerMoney(playerid, - payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid, - 250);
		format(string, sizeof(string), "~r~-$%d", 250);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "CD-Player Purchased.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /music");
		PlayerInfo[playerid][pCrashed] = 1;
		return 1;
		}*/
		/*else if (item == 7 && GetPlayerMoney(playerid) > 9)
		{
		if(Groceries[playerid][pChickens] >= 3)
		{
		SendClientMessage(playerid, COLOR_GREY, "   You have to many Chickens, Cook some first !");
		return 1;
		}
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 10 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 10 - price;
		SafeGivePlayerMoney(playerid, - payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid, - 10);
		format(string, sizeof(string), "~r~-$%d", 10);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		SafeGivePlayerMoney(playerid, - 10);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "Chicken Purchased.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		format(string, sizeof(string), "~r~-$%d", 10);
		GameTextForPlayer(playerid, string, 5000, 1);
		new rand = random(15);
		Groceries[playerid][pChickens] += 1;
		Groceries[playerid][pChicken] += rand;
		return 1;
		}*/
		/*else if (item == 8 && GetPlayerMoney(playerid) > 9)
		{
		if(Groceries[playerid][pHamburgers] >= 3)
		{
		SendClientMessage(playerid, COLOR_GREY, "   You have to many Hamburgers, Cook some first !");
		return 1;
		}
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 10 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 10 - price;
		SafeGivePlayerMoney(playerid, - payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid, - 10);
		format(string, sizeof(string), "~r~-$%d", 10);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		SafeGivePlayerMoney(playerid, - 10);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "Hamburger Purchased.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		format(string, sizeof(string), "~r~-$%d", 10);
		GameTextForPlayer(playerid, string, 5000, 1);
		new rand = random(15);
		Groceries[playerid][pHamburgers] += 1;
		Groceries[playerid][pHamburger] += rand;
		return 1;
		}*/
		/*else if (item == 9 && GetPlayerMoney(playerid) > 9)
		{
		if(Groceries[playerid][pPizzas] >= 3)
		{
		SendClientMessage(playerid, COLOR_GREY, "   You have to many Pizzas, Cook some first !");
		return 1;
		}
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{
		new skill = 10 / 100;
		new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
		new payout = 10 - price;
		SafeGivePlayerMoney(playerid, - payout);
		format(string, sizeof(string), "~r~-$%d", payout);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		else
		{
		SafeGivePlayerMoney(playerid, - 10);
		format(string, sizeof(string), "~r~-$%d", 10);
		GameTextForPlayer(playerid, string, 5000, 1);
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "Frozen Pizza Purchased.");
		SendClientMessage(playerid, COLOR_GRAD4, string);
		new rand = random(15);
		Groceries[playerid][pPizzas] += 1;
		Groceries[playerid][pPizza] += rand;
		return 1;
		}*/
		else if (item == 7 && GetPlayerMoney(playerid) > 49)
		{
			SafeGivePlayerMoney(playerid, -50);
			format(string, sizeof(string), "~r~-$%d", 50);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Da mua may anh.");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SafeGivePlayerWeapon(playerid, 43, 20);
			return 1;
		}
		else if (item == 8 && GetPlayerMoney(playerid) > 499)
		{
			if (PlayerInfo[playerid][pLevel] < 5)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban can lv5 de co the mua no ");
				return 1;
			}
			if (PlayerInfo[playerid][pMask] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban da co mot");
				return 1;
			}
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				GameTextForPlayer(playerid, "~w~Free", 5000, 1);
			}
			else
			{
				SafeGivePlayerMoney(playerid, -500);
				format(string, sizeof(string), "~r~-$%d", 500);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Da mua mat na.");
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_WHITE, "Meo: go /maskon hoac /maskoff");
			PlayerInfo[playerid][pMask] = 1;
			return 1;
		}
		else if (item == 9 && GetPlayerMoney(playerid) > 99)
		{
			if (PlayerInfo[playerid][pWatch] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban da co mot");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -100);
			format(string, sizeof(string), "~r~-$%d", 100);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Da mua dong ho.");
			SendClientMessage(playerid, COLOR_WHITE, "Meo: /time");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			PlayerInfo[playerid][pWatch] = 1;
		}
		else if (item == 10 && GetPlayerMoney(playerid) > 149)
		{
			if (PlayerInfo[playerid][pFishTool] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban da co mot !");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -150);
			format(string, sizeof(string), "~r~-$%d", 150);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD4, "Hop cong cu cau ca.");
			PlayerInfo[playerid][pFishTool] = 1;
		}
		else if (item == 11 && GetPlayerMoney(playerid) > 9)
		{
			if (Rope[playerid] >= 5)
			{
				SendClientMessage(playerid, COLOR_GREY, "   You have 5 already !");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -10);
			format(string, sizeof(string), "~r~-$%d", 10);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD4, "Da mua day thung.");
			SendClientMessage(playerid, COLOR_GRAD4, "Su dung: Go /tie de troi.");
			Rope[playerid]++;
		}
		else if (item == 12 && GetPlayerMoney(playerid) > 49)
		{
			SafeGivePlayerMoney(playerid, -50);
			format(string, sizeof(string), "~r~-$%d", 50);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD4, "Da mua binh xit cay.");
			SafeGivePlayerWeapon(playerid, 41, 200);
		}
		else if (item == 13 && GetPlayerMoney(playerid) > 4)
		{
			if (PlayerInfo[playerid][pLighter] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   You already have a lighter ! ");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -5);
			PlayerInfo[playerid][pLighter] = 30;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~r~-$%d", 5);
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_GRAD4, "Da mua bat lua.");
			SavePlayer(playerid);
			return 1;
		}
		else if (item == 14 && GetPlayerMoney(playerid) > 29)
		{
			if (PlayerInfo[playerid][pCigarettes] != 0)
			{
				format(string, sizeof(string), "   You already have %d cigarettes left .", PlayerInfo[playerid][pCigarettes]);
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
			SafeGivePlayerMoney(playerid, -30);
			PlayerInfo[playerid][pCigarettes] = 20;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~r~-$%d", 30);
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_GRAD4, "Ban da co si ga.");
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Ban co the /smoke bay gio !");
			SavePlayer(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "  Ban khong co du tien de lam dieu do !");
		}
	}
	return 1;
}
CMD:trogiupxe(playerid, params[]) { return cmd_vehiclehelp(playerid, params); }
CMD:vehiclehelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPcarkey][0] != -1 && PlayerInfo[playerid][pPcarkey][0] != -1 && PlayerInfo[playerid][pPcarkey][0] != -1)
		{
			SendClientMessage(playerid, COLOR_GREEN, "________________Vehicle Help________________");
			SendClientMessage(playerid, COLOR_GRAD2, "*** VEHICLE *** /v [name]");
			SendClientMessage(playerid, COLOR_GRAD3, "*** VEHICLE *** Available names: park, lock, sell, sellto, color");
			SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /cellphonehelp /help /notehelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "** You do not currently own a car! **");
			return 1;
		}
	}
	return 1;
}
CMD:apark(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new Float:x, Float:y, Float:z;
		new Float:a;
		new carid, playername[50], string[256];
		carid = GetPlayerVehicleID(playerid);
		if (!IsAnOwnableCar(carid)) return SCM(playerid, COLOR_GREY, "Xe nay khong phai xe so huu.");
		GetPlayerName(playerid, playername, sizeof(playername));
		GetVehiclePos(carid, x, y, z);
		//GetPlayerFacingAngle(playerid, a);
		GetVehicleZAngle(carid, a);
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			CarInfo[carid][cLocationx] = x;
			CarInfo[carid][cLocationy] = y;
			CarInfo[carid][cLocationz] = z;
			CarInfo[carid][cAngle] = a;
			format(string, sizeof(string), "~n~ You have parked your car in this location. ~n~");
			GameTextForPlayer(playerid, "You have parked this car in this position. It will respawn here.", 10000, 3);
			OnPropUpdate();
			SavePlayer(playerid);
			RespawnCar(carid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co quyen nay to use that command !");
			return 1;
		}
	}
	return 1;
}
/*if(strcmp(cmd, "/carspawn", true) == 0)
{
if(!IsLogOn(playerid)) { return 1; }
if(PlayerInfo[playerid][pPcarkey][0]==999) { GameTextForPlayer(playerid, "~w~You do not have a car to locate", 2500, 3); return 1; }
if(PlayerInfo[playerid][pPnumber]==0) { SendClientMessage(playerid, COLOR_GRAD2, "You do not have a phone to locate your car spawn"); return 1; }
SendClientMessage(playerid,COLOR_WHITE,"Car spawn location is red on a map");
SetPlayerCheckpoint(playerid,CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationx], CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationy], CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationz], 5.0);
return 1;
}*/
/*if(strcmp(cmd, "/carlocate", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerInfo[playerid][pPcarkey][0] != 999)
{
if(PlayerInfo[playerid][pPnumber] != 0)
{
if(gPlayerCheckPointStatus[playerid] != CHECKPOINT_CAR)
{
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
format(string,sizeof(string),"** %s takes out a cellphone",GN(playerid));
ProxDetector(15.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
Wait(5000);
SendClientMessage(playerid,COLOR_WHITE,"On-Star: This is On-Star how can I help you?");
Wait(2000);
format(string,sizeof(string),"%s noi: [Cell] I'd like to locate a stolen vehicle",GN(playerid)");
ProxDetector(15.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
Wait(2000);
SendClientMessage(playerid,COLOR_WHIE,"On-Star: Okay sir, can I have your name and identification number please");
Wait(2000);
format(string,sizeof(string),"%s enters in the information into their cellphone",GN(playerid));
ProxDetector(15.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
Wait(2000);
SendClientMessage(playerid,COLOR_WHITE,"On-Star: Okay sir, your car location is being uploaded to your phone.");
Wait(500);
SendClientMessage(playerid,COLOR_WHITE,"On-Star: If you wish to cancel the trace of your car, call this number again");
Wait(500);
SetPlayerCheckpoint(playerid,CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationx], CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationy], CarInfo[PlayerInfo[playerid][pPcarkey][0]][cLocationz], 5.0);
gPlayerCheckpointStatus[playerid] = CHECKPOINT_CAR;
return 1;
}
else
{
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
Wait(1000);
SendClientMessage(playerid,COLOR_WHITE,"Your tracking of your vehicle has been automatically cancelled");
return 1;
}
}
else
{
SendClientMessage(playerid,
}
}
else
{
GameTextForPlayer(playerid, "~w~You do not have a car to locate", 5000, 1);
}
}
return 1;
}*/
CMD:muanha(playerid, params[]) { return cmd_buyhouse(playerid, params); }
CMD:buyhouse(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255];
		new Float:oldposx, Float: oldposy, Float: oldposz;
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for (new h = 0; h < MAX_HOUSES; h++)
		{
			if (PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
			{
				if (PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
					format(string, sizeof(string), "   Ban can dat level %d de co the mua !", HouseInfo[h][hLevel]);
					SendClientMessage(playerid, COLOR_GRAD5, string);
					return 1;
				}
				if (PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "   Ban da so huu mot can nha, co the /bannha de mua nha moi !");
					return 1;
				}
				if (GetPlayerMoney(playerid) > HouseInfo[h][hValue])
				{
					PlayerInfo[playerid][pPhousekey] = h;
					PlayerInfo2[HouseEntered][playerid] = h;
					HouseInfo[h][hOwned] = 1;

					strmid(HouseInfo[h][hOwner], playername, 0, sizeof(playername), 255);
					SafeGivePlayerMoney(playerid, -HouseInfo[h][hValue]);
					PlayerPlayMusic(playerid);
					SetPlayerInterior(playerid, HouseInfo[h][hInt]);
					SetVirtualWorld(playerid, HouseInfo[h][hWorld]);
					SetPlayerPos(playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]);
					GameTextForPlayer(playerid, "~w~Welcome Home~n~Ban co the ra ngoai bang cach lai gan cua va dung lenh /exit", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_WHITE, "Chuc mung, ban da so huu can nha thanh cong !");
					SendClientMessage(playerid, COLOR_WHITE, "Go /help de xem tro giup ve nha !");
					DateProp(playerid);
					OnPropUpdate();
					SavePlayer(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "   Ban khong du tien !");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:thuenha(playerid, params[]) { return cmd_rentroom(playerid, params); }
CMD:rentroom(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playername[255];
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for (new h = 0; h < MAX_HOUSES; h++)
		{
			if (PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 && HouseInfo[h][hRentabil] == 1)
			{
				if (PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "   Ban da so huu mot can nha, go /bannha neu ban muon thue can nha nay.");
					return 1;
				}
				if (GetPlayerMoney(playerid) > HouseInfo[h][hRent])
				{
					PlayerInfo[playerid][pPhousekey] = h;
					PlayerInfo2[HouseEntered][playerid] = h;
					SafeGivePlayerMoney(playerid, -HouseInfo[h][hRent]);
					HouseInfo[h][hTakings] = HouseInfo[h][hTakings] + HouseInfo[h][hRent];
					PlayerPlayMusic(playerid);
					SetPlayerInterior(playerid, HouseInfo[h][hInt]);
					SetVirtualWorld(playerid, HouseInfo[h][hWorld]);
					SetPlayerPos(playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]);
					GameTextForPlayer(playerid, "~w~Welcome Home~n~Ban co the ra ngoai bang cach lai gan cua va dung lenh /exit", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_WHITE, "Chuc mung, ban da thue nha thanh cong, tu gio ban co the ra vao nha tu do.");
					SendClientMessage(playerid, COLOR_WHITE, "Go /help de xem tro giup ve nha !");
					SavePlayer(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "   Ban khong du tien !");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:thuexe(playerid, params[]) { return cmd_rentcar(playerid, params); }
CMD:rentcar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		if (IsARentCar(vid) && !IsABike(vid))
		{
			new hirefee = HireCost(GetPlayerVehicleID(playerid));
			if (SBizzInfo[1][sbProducts] == 0)
			{
				GameTextForPlayer(playerid, "~r~Het hang", 5000, 1);
				return 1;
			}
			if (GetPlayerMoney(playerid) <  SBizzInfo[1][sbEntranceCost])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co du tien !");
				return 1;
			}
			if (HireCar[playerid] != 299)
			{
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				SendClientMessage(playerid, COLOR_GREY, "Ban hien dang thue mot phuong tien, /unrentbike (/unrentcar) de ngung thue xe !");
				return 1;
			}
			foreach(new i : Player)
			{
				if (HireCar[i] == GetPlayerVehicleID(playerid))
				{
					SendClientMessage(playerid, COLOR_GREY, "    Da co nguoi thue chiec xe nay !");
					return 1;
				}
			}
			/*if(PlayerInfo[playerid][pPbiskey] == 1)
			{
			GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
			TogglePlayerControllable(playerid, 1);
			return 1;
			}*/
			SafeGivePlayerMoney(playerid, -SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			OnPropUpdate();
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new string[255];
			format(string, sizeof(string), "~w~Dung quen tra xe ~r~/unrentcar~n~~g~ /lock ~w~de khoa xe~n~Phi: %d$.", hirefee);
			SendClientMessage(playerid, COLOR_YELLOW2, "Ban co the khoi dong xe !");
			gEngine[playerid] = 0;
			engineOn[GetPlayerVehicleID(playerid)] = false;
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, string, 5000, 3);
		}
	}
	return 1;
}
CMD:thuemoto(playerid, params[]) { return cmd_rentbike(playerid, params); }
CMD:rentbike(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		if (IsARentCar(vid) && IsABike(vid))
		{
			new hirefee = HireCost(GetPlayerVehicleID(playerid));
			if (SBizzInfo[0][sbProducts] == 0)
			{
				GameTextForPlayer(playerid, "~r~Het hang", 5000, 1);
				return 1;
			}
			/*if(PlayerInfo[playerid][pPbiskey] == 0)
			{
			GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
			TogglePlayerControllable(playerid, 1);
			return 1;
			}*/
			if (GetPlayerMoney(playerid) <  SBizzInfo[0][sbEntranceCost])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co du tien de thue xe !");
				return 1;
			}
			if (HireCar[playerid] != 299)
			{
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				SendClientMessage(playerid, COLOR_GREY, "Ban hien dang thue mot phuong tien, /unrentbike (/unrentcar) de ngung thue xe !");
				return 1;
			}
			foreach(new i : Player)
			{
				if (HireCar[i] == GetPlayerVehicleID(playerid))
				{
					SendClientMessage(playerid, COLOR_GREY, "    Da co nguoi thue chiec xe nay !");
					return 1;
				}
			}
			SafeGivePlayerMoney(playerid, -SBizzInfo[0][sbEntranceCost]);
			SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];
			ExtortionSBiz(0, SBizzInfo[0][sbEntranceCost]);
			SBizzInfo[0][sbProducts]--;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new string[255];
			format(string, sizeof(string), "~w~Dung quen tra xe ~b~/unrentbike~n~~g~/lock ~w~to de khoa xe cua ban~n~Phi: $%d", hirefee);
			GameTextForPlayer(playerid, string, 5000, 3);
			TogglePlayerControllable(playerid, 1);
			gEngine[GetPlayerVehicleID(playerid)] = 1;
			OnPropUpdate();
		}
	}
	return 1;
}
CMD:hirecar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new string[255], car;
			if (sscanf(params, "i", car)) {
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /hirecar [key id]");
				return 1;
			}
			HireCar[playerid] = car;
			format(string, sizeof(string), "Key Fashioned You Can Lock Car %d.", car);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Type /lock ");
			return 1;
		}
	}
	return 1;
}
CMD:switchkey(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!SwitchKey[playerid])
		{
			if (HireCar[playerid] != 299)
			{
				SwitchKey[playerid] = 1;
				GameTextForPlayer(playerid, "~w~Ban co the kiem soat tai nha xe cua ban", 5000, 6);
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Ban khong thue chiec xe", 5000, 6);
			}
			return 1;
		}
		else
		{
			SwitchKey[playerid] = 0;
			GameTextForPlayer(playerid, "~w~Ban kiem soat thue xe cua ban", 5000, 6);
		}
	}
	return 1;
}
CMD:huythuexe(playerid, params[]) { return cmd_unrentcar(playerid, params); }
CMD:unrentcar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (HireCar[playerid] != 299)
		{
			if (GetPlayerVehicleID(playerid) == HireCar[playerid])
			{
				RemovePlayerFromVehicle(playerid);
			}
			SetVehicleToRespawn2(HireCar[playerid]);
			gCarLock[HireCar[playerid]] = 0;
			UnLockCar(HireCar[playerid]);
			HireCar[playerid] = 299;
			GameTextForPlayer(playerid, "~w~Ban khong con thue chiec xe nay", 5000, 3);
		}
	}
	return 1;
}
CMD:huythuemoto(playerid, params[]) { return cmd_unrentbike(playerid, params); }
CMD:unrentbike(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (HireCar[playerid] != 299)
		{
			if (GetPlayerVehicleID(playerid) == HireCar[playerid])
			{
				RemovePlayerFromVehicle(playerid);
			}
			SetVehicleToRespawn2(HireCar[playerid]);
			gCarLock[HireCar[playerid]] = 0;
			UnLockCar(HireCar[playerid]);
			HireCar[playerid] = 299;
			GameTextForPlayer(playerid, "~w~Ban khong con thue chiec xe nay", 5000, 3);
		}
	}
	return 1;
}
CMD:unrent(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playername[255];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "  Ban so huu ngoi nha nay !");
			return 1;
		}
		PlayerInfo[playerid][pPhousekey] = 255;
		SendClientMessage(playerid, COLOR_WHITE, "Ban dang vo gia cu.");
	}
	return 1;
}
CMD:housewithdraw(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playername[255];
		GetPlayerName(playerid, playername, sizeof(playername));
		new bouse = PlayerInfo[playerid][pPhousekey];
		if (PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			new string[255], cashdeposit;
			if (sscanf(params, "i", cashdeposit))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /housewithdraw [amount]");
				format(string, sizeof(string), "  Ban co $%d trong tu tien cua ban.", HouseInfo[bouse][hTakings]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit >  HouseInfo[bouse][hTakings] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong co nhieu !");
				return 1;
			}
			if (!PlayerToPoint(100, playerid, HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban dang cach xa ngoi nha cua ban!");
				return 1;
			}
			else
			{
				//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid, cashdeposit);
				HouseInfo[bouse][hTakings] = HouseInfo[bouse][hTakings] - cashdeposit;
				format(string, sizeof(string), "  Ban da rut $%d tu tu tien cua ban va bay gio ban con: $%d ", cashdeposit, HouseInfo[bouse][hTakings]);
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai chu nha.");
		}
	}
	return 1;

}
CMD:acarsell(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255], car;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (sscanf(params, "i", car))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /acarsell [bizid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			CarInfo[car][cOwned] = 0;
			CarInfo[car][cLock] = 1;
			format(string, sizeof(string), "~w~You have sold the Car");
			GameTextForPlayer(playerid, string, 2500, 3);
			OnPropUpdate();
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai Admin.");
		}
	}
	return 1;
}
CMD:asellbiz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255], biz;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (sscanf(params, "i", biz))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /asellbiz [bizid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			BizzInfo[biz][bLocked] = 1;
			BizzInfo[biz][bOwned] = 0;
			strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
			strmid(BizzInfo[biz][bExtortion], "No-one", 0, strlen("No-one"), 255);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~You have sold the Business");
			GameTextForPlayer(playerid, string, 10000, 3);
			OnPropUpdate();
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai Admin.");
		}
	}
	return 1;
}
CMD:asellsbiz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255], sbiz;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (sscanf(params, "i", sbiz))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /asellsbiz [sbizid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SBizzInfo[sbiz][sbLocked] = 1;
			SBizzInfo[sbiz][sbOwned] = 0;
			strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
			strmid(SBizzInfo[sbiz][sbExtortion], "No-one", 0, strlen("No-one"), 255);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Ban da ban cua hang");
			GameTextForPlayer(playerid, string, 10000, 3);
			OnPropUpdate();
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai Admin.");
		}
	}
	return 1;
}
CMD:asellhouse(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255], house;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (sscanf(params, "i", house))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /asellhouse [houseid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hArm] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			HouseInfo[house][hVec] = 418;
			HouseInfo[house][hVcol1] = -1;
			HouseInfo[house][hVcol2] = -1;
			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Ban da ban lai tai san nay", HouseInfo[house][hValue]);
			GameTextForPlayer(playerid, string, 10000, 3);
			OnPropUpdate();
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai Admin.");
		}
	}
	return 1;
}
CMD:bannha(playerid, params[]) { return cmd_sellhouse(playerid, params); }
CMD:sellhouse(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (PlayerInfo[playerid][pPhousekey] == 255)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai chu nha.");
			return 1;
		}
		if (PlayerInfo[playerid][pMarried] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da dam cuoi va khong the ban nha !");
			return 1;
		}
		if (PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			new house = PlayerInfo[playerid][pPhousekey];
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hArm] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			HouseInfo[house][hVec] = 418;
			HouseInfo[house][hVcol1] = -1;
			HouseInfo[house][hVcol2] = -1;

			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			//ConsumingMoney[playerid] = 1;
			SafeGivePlayerMoney(playerid, HouseInfo[house][hValue]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Chuc mung~n~ Ban da ban tai san cua minh cho ~n~~g~$%d", HouseInfo[house][hValue]);
			GameTextForPlayer(playerid, string, 10000, 3);
			PlayerInfo[playerid][pPhousekey] = 255;
			if (PlayerInfo[playerid][pLocal] == house)
			{
				SetPlayerInterior(playerid, 0);
				SetVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez]);
				PlayerInfo[playerid][pInt] = 0;
			}
			OnPropUpdate();
			SavePlayer(playerid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong phai chu nha.");
		}
	}
	return 1;
}
CMD:nangcapnha(playerid, params[]) { return cmd_houseupgrade(playerid, params); }
CMD:houseupgrade(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new house = PlayerInfo[playerid][pPhousekey], playername[255], item;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if (sscanf(params, "i", item))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /houseupgrade [item number]");
				SendClientMessage(playerid, COLOR_GRAD1, "|_______ Nang Cap Nha _______|");
				SendClientMessage(playerid, COLOR_GRAD2, "| 1: Health Upgrade $50,000.");
				SendClientMessage(playerid, COLOR_GRAD3, "| 2: Armour Upgrade $100,000.");
				return 1;
			}
			switch (item)
			{
			case 1:
			{
				if (SBizzInfo[6][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Het hang", 5000, 1);
					return 1;
				}
				if (PlayerInfo[playerid][pLevel] < 5)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ban phai level 5 de lam duoc dieu nay");
					return 1;
				}
				if (GetPlayerMoney(playerid) < 50000)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ban khong co tien de lam viec nay");
					return 1;
				}
				HouseInfo[house][hHel] = 1;
				SafeGivePlayerMoney(playerid, -25000);
				SBizzInfo[6][sbTill] += 50000;//heal buisness
				ExtortionSBiz(6, 25000);
				SBizzInfo[6][sbProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD5, "Ban co the chua lanh vet thuong tai nha, go /heal.");
			}
			case 2:
			{
				if (SBizzInfo[6][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Het hang", 5000, 1);
					return 1;
				}
				if (PlayerInfo[playerid][pLevel] < 7)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ban phai level 7 de lam duoc dieu nay");
					return 1;
				}
				if (GetPlayerMoney(playerid) < 100000)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ban khong co tien de lam viec nay");
					return 1;
				}
				HouseInfo[house][hArm] = 1;
				SafeGivePlayerMoney(playerid, -50000);
				SBizzInfo[6][sbTill] += 50000;//heal buisness
				ExtortionSBiz(6, 50000);
				SBizzInfo[6][sbProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD5, "Ban co the chua lanh vet thuong tai nha, go /heal.");
			}
			/*case 3:
			{
			if(SBizzInfo[6][sbProducts] == 0)
			{
			GameTextForPlayer(playerid, "~r~Het hang", 5000, 1);
			return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 3)
			{
			SendClientMessage(playerid, COLOR_GRAD5, "You Must Be Level 3 To Purchase This");
			return 1;
			}
			if(GetPlayerMoney(playerid) < 500)
			{
			SendClientMessage(playerid, COLOR_GRAD5, "You Don't Have The Cash To Purchase This");
			return 1;
			}
			HouseInfo[house][hHealthx] = 1;
			SafeGivePlayerMoney(playerid,-500);
			SBizzInfo[6][sbTill] += 500;
			ExtortionSBiz(6, 500);
			SBizzInfo[6][sbProducts]--;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD5, "You can now use your TV set, type /tv.");
			}*/
			}
			OnPropUpdate();
			SavePlayer(playerid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house");
			return 1;
		}
	}
	return 1;
}
CMD:setrent(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey], playername[255], string[255], fee;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if (sscanf(params, "i", fee))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /setrent [RentFee]");
				return 1;
			}
			if (fee < 1 || fee > 99999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Gia cho thue thap nhat $1, cao nhat $99999.");
				return 1;
			}
			HouseInfo[bouse][hRent] = fee;
			OnPropUpdate();
			format(string, sizeof(string), "House rent set to $%d", HouseInfo[bouse][hRent]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong phai chu nha");
			return 1;
		}
	}
	return 1;
}
CMD:evictall(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey], playername[255];
		if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (i != playerid)
					{
						if (PlayerInfo[i][pPhousekey] == PlayerInfo[playerid][pPhousekey])
						{
							SendClientMessage(i, COLOR_WHITE, "Ban bi duoi ra khoi nha cua ban.");
							PlayerInfo[i][pPhousekey] = 255;
							new houseid = PlayerInfo[playerid][pPhousekey];
							SetPlayerPos(i, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez]);
							SetPlayerInterior(i, 0);
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Moi nguoi deu bi duoi ra.");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong phai chu nha!");
			return 1;
		}
	}
	return 1;
}
CMD:evict(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey], playername[255], target;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if (sscanf(params, "u", target))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /evict [playerid/PartOfName]");
			}
			if (target == playerid)
			{
				SendClientMessage(target, COLOR_WHITE, "You cant evict yourself.");
				return 1;
			}
			if (IsLogOn(target))
			{
				if (target != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
					{
						SendClientMessage(target, COLOR_WHITE, "You have been evicted");
						SendClientMessage(playerid, COLOR_WHITE, "Player has been evicted");
						PlayerInfo[target][pPhousekey] = 255;
						new houseid = PlayerInfo[playerid][pPhousekey];
						SetPlayerPos(target, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez]);
						SetPlayerInterior(target, 0);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Player doesn't rent at your House !");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house !");
			return 1;
		}
	}
	return 1;
}
CMD:setrentable(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], playername[255], choice;
		new bouse = PlayerInfo[playerid][pPhousekey];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if (sscanf(params, "i", choice))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /setrentable [0/1]");
			}
			HouseInfo[bouse][hRentabil] = choice;
			OnPropUpdate();
			format(string, sizeof(string), "Nha thue voi gia %d.", HouseInfo[bouse][hRentabil]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong phai chu nha !");
			return 1;
		}
	}
	return 1;
}
CMD:ucall(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255], phonenumb;
		if (sscanf(params, "i", phonenumb))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /ucall [phonenumber]");
		}
		if (PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  You don't have a cell phone!");
			return 1;
		}
		format(string, sizeof(string), "* %s takes out a cellphone.", GN(playerid));
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		if (phonenumb == PlayerInfo[playerid][pPnumber])
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban dang ban voi cuoc goi nao do...");
			return 1;
		}
		if (Mobile[playerid] != 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban da co tren mot cuoc goi...");
			return 1;
		}
		new giveplayerid;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
				{
					giveplayerid = i;
					Mobile[playerid] = giveplayerid; //caller connecting
					if (IsLogOn(giveplayerid))
					{
						if (giveplayerid != INVALID_PLAYER_ID)
						{
							if (PhoneOnline[giveplayerid] > 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "   That players Phone is Offline!");
								return 1;
							}
							if (Mobile[giveplayerid] == 255)
							{
								format(string, sizeof(string), "Your Mobile is Ringing Type (/pickup) CallerID: UNKNOWN");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								RingTone[giveplayerid] = 10;
								format(string, sizeof(string), "* %s's phone begins to ring.", GN(playerid));
								SendClientMessage(playerid, COLOR_WHITE, "Meo: You now use T to talk on your cellphone, type /hangup to hang up");
								ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								CellTime[playerid] = 1;
								UnidentifedCall[playerid] = 1;
								return 1;
							}
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "  You just get a Busy tone...");
	}
	return 1;
}
CMD:call(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJailed] > 0)
		{
			if (PlayerInfo[playerid][pJailed] == 3) return SCM(playerid, COLOR_GREY, "Ban dang o tu, dien thoai da bi tich thu. (Hay den buong goi dien cua phong giam de goi dien)");
			return SCM(playerid, COLOR_GREY, "Ban dang o tu, dien thoai da bi tich thu.");
		}
		new phonenumb, string[255], giveplayerid;
		if(sscanf(params, "i", phonenumb))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /call [phonenumber]");
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /calllist (Danh ba)");
			return 1;
		}
		if (PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong co dien thoai");
			return 1;
		}

		format(string, sizeof(string), "* %s rut dien thoai ra.", GN(playerid));
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		/*if(phonenumb == list)
		{
		SendClientMessage(playerid, COLOR_GREEN, "____________Services number list____________");
		SendClientMessage(playerid, COLOR_WHITE, "111 - pizza stack co., 222 - bus services");
		SendClientMessage(playerid, COLOR_WHITE, "103 - medics, 444 - taxi, 555 - mechanic");
		SendClientMessage(playerid, COLOR_GREEN, "____________________________________________");
		return 1;
		}*/
		if (phonenumb == 111)
		{
			new pizzaworkers = 0;
			foreach(new i : Player)
			{
				if (IsLogOn(i))
				{
					if (PlayerInfo[i][pJob] == 17 && JobDuty[i] == 1)
					{
						pizzaworkers++;
					}
				}
			}

			if (pizzaworkers < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
				SendClientMessage(playerid, 0xF4E19FAA, "Men voice Says (cellphone): Well stacked pizza here.");
				SendClientMessage(playerid, 0xF4E19FAA, "Men voice Says (cellphone): We are sorry, we do not have any pizza boys on duty.");
				SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
				return 1;
			}

			format(string, sizeof(string), "** %s is in need of a Pizza. (use /accept Pizza to accept the call)", GN(playerid));
			SendJobMessage(17, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
			SendClientMessage(playerid, 0xF4E19DAA, "Mans' voice Says (cellphone): Well stacked pizza here.");
			if (pizzaworkers == 1) { format(string, sizeof(string), "Mans' voice Says (cellphone): Pizza boy has been informed about your order, sir."); }
			else { format(string, sizeof(string), "Mans' voice Says (cellphone): We have %d pizza boys on duty, they were all informed about your order !", pizzaworkers); }
			SendClientMessage(playerid, 0xF4E19DAA, string);
			SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
			PizzaCall = playerid;
			return 1;
		}
		if (phonenumb == 222)
		{
			new routezonecheck = IsInBusrouteZone(playerid);
			new drivercount = 0;
			if (routezonecheck == 0)
			{
				for (new i = 0; i <= MAX_PLAYERS; i++)
				{
					if (IsLogOn(i) && BusrouteEast[i][0] != 0) drivercount++;
				}
				if (drivercount != 0)
				{
					format(string, sizeof(string), "There are currently %d bus drivers on the east route. The route is as follows:", drivercount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendBusRoute(playerid, 0);
				}
				else SendClientMessage(playerid, COLOR_GREY, "There are no bus drivers on the east route at this time.");
			}
			else if (routezonecheck == 1)
			{
				for (new i = 0; i <= MAX_PLAYERS; i++)
				{
					if (IsLogOn(i) && BusrouteWest[i][0] != 0) drivercount++;
				}
				if (drivercount != 0)
				{
					format(string, sizeof(string), "There are currently %d bus drivers on the west route. The route is as follows:", drivercount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendBusRoute(playerid, 1);
				}
				else SendClientMessage(playerid, COLOR_GREY, "There are no bus drivers on the west route at this time.");
			}
			else SendClientMessage(playerid, COLOR_GREY, "No bus services are running in this area at the current time.");
			return 1;
		}
		/*if(phonenumb == 103)
		{
		if(Medics < 1)
		{
		SendClientMessage(playerid, COLOR_GREY, "   There are no Medics On Duty at the moment, try again later !");
		return 1;
		}

		format(string, sizeof(string), "** %s is in need of a Medic. (use /accept medic to accept the call)", GN(playerid));
		SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Medic, wait for a reply.");
		MedicCall = playerid;
		return 1;
		}*/
		if (phonenumb == 444)
		{
			if (TaxiDrivers < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
				SendClientMessage(playerid, 0xF4E19FAA, "Men voice Says (cellphone): Yellow cab co. here. Sorry we have no drivers available at the moment.");
				SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
				return 1;
			}
			if (TransportDuty[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   You can't call for a Taxi now !");
				return 1;
			}

			format(string, sizeof(string), "** %s is in need of a Taxi Driver. (use /accept taxi to accept the call)", GN(playerid));
			SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
			SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
			SendClientMessage(playerid, 0xF4E19FAA, "Men voice Says (cellphone): All taxi drivers have been informed about your call.");
			SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
			TaxiCall = playerid;
			return 1;
		}
		if (phonenumb == 555)
		{
			new mechanicworkers = 0;
			foreach(new i : Player)
			{
				if (IsLogOn(i))
				{
					if (PlayerInfo[i][pJob] == 7 && JobDuty[i] == 1)
					{
						mechanicworkers++;
					}
				}
			}
			if (mechanicworkers < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
				SendClientMessage(playerid, 0xBBE1F2AA, "Men voice Says (cellphone): Sorry we have no mechanics available at the moment.");
				SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
				return 1;
			}

			format(string, sizeof(string), "** %s is in need of a Car Mechanic. (use /accept mechanic to accept the call)", GN(playerid));
			SendJobMessage(7, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_GREY, "   They Picked up the call.");
			SendClientMessage(playerid, 0xBBE1F2AA, "Men voice Says (cellphone): Hello, all mechanics at your area have been informed about your call.");
			SendClientMessage(playerid, COLOR_GREY, "   They hang up.");
			MechanicCall = playerid;
			return 1;
		}
		/*if(phonenumb == 1180)
		{
		if(PlayerInfo[playerid][pLevel] < 2)
		{
		SendClientMessage(playerid, COLOR_GREEN, "Advertisement business: We're only advertising well known people's ads.");
		SendClientMessage(playerid, COLOR_GRAD2, "  They hang up...");
		}
		else
		{
		SendClientMessage(playerid, COLOR_WHITE, "Meo: You now use T to talk on your cellphone, type /hangup to hang up");
		SendClientMessage(playerid, COLOR_GREEN, "Advertisement business: Welcome to the advertisement business, what would you like to advertise?");
		SendClientMessage(playerid, COLOR_WHITE, "Meo: Type your ad here. Ex: Selling my Comet");
		Mobile[playerid] = 1180;
		}
		return 1;
		}*/
		if (phonenumb == 3900)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Bay gio ban hay nhan T de noi chuyen dien thoai, go /h de cup may");
			SendClientMessage(playerid, COLOR_GREEN, "ABC Studio: Vui long de lai tin nhan sau tieng : Beep!");
			SendClientMessage(playerid, COLOR_WHITE, "Beep!");
			Mobile[playerid] = 3900;
			return 1;
		}
		if (phonenumb == 911)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Meo: Bay gio ban hay nhan T de noi chuyen dien thoai, go /h de cup may");
			SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Ban muon yeu cau dich vu nao, Canh sat hay Cap cuu?");
			Mobile[playerid] = 911;
			return 1;
		}
		if (phonenumb == PlayerInfo[playerid][pPnumber])
		{
			SendClientMessage(playerid, COLOR_GRAD2, "May ban...");
			return 1;
		}
		if (Mobile[playerid] != 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ban dang trong mot cuoc goi...");
			return 1;
		}
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
				{
					giveplayerid = i;
					Mobile[playerid] = giveplayerid; //caller connecting
					if (IsLogOn(giveplayerid))
					{
						if (giveplayerid != INVALID_PLAYER_ID)
						{
							if (PhoneOnline[giveplayerid] > 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "   Khong co tin hieu!");
								return 1;
							}
							if (Mobile[giveplayerid] == 255)
							{
								format(string, sizeof(string), "Dien thoai cua ban dang do chuong (/p) Nguoi goi: %s", GN(playerid));
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								RingTone[giveplayerid] = 10;
								format(string, sizeof(string), "* Dien thoai cua %s's dang do chuong.", GN(playerid));
								SendClientMessage(playerid, COLOR_WHITE, "Meo: Bay gio ban hay nhan T de noi chuyen dien thoai, go /h de cup may");
								ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								CellTime[playerid] = 1;
								return 1;
							}
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "May ban...");
	}
	return 1;
}
CMD:sms(playerid, params[]) { return cmd_txt(playerid, params); }
CMD:txt(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new phonenumb, result[255], string[255], giveplayerid;
		if (gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua dang nhap!");
			return 1;
		}
		if (sscanf(params, "is[256]", phonenumb, result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/t)xt [So dien thoai] [Noi dung]");
			return 1;
		}
		if (PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban khong co dien thoai...");
			return 1;
		}

		format(string, sizeof(string), "* %s lay dien thoai ra.", GN(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		if (phonenumb == 555)
		{
			if ((strcmp("Co", result, true, strlen(result)) == 0) && (strlen(result) == strlen("Co")))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Tin nhan da duoc gui.");
				if (gTeam[playerid] == TEAMGOV)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "SMS: Toi khong biet ban muon noi gi, Nguoi gui: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "SMS: Vang toi se lam, Nguoi gui: MOLE (555)");
				RingTone[playerid] = 20;
				return 1;
			}
		}
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
				{
					giveplayerid = i;
					Mobile[playerid] = giveplayerid; //caller connecting
					if (IsLogOn(giveplayerid))
					{
						if (giveplayerid != INVALID_PLAYER_ID)
						{
							if (PhoneOnline[giveplayerid] > 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "   Khong co tin hieu!");
								return 1;
							}
							format(string, sizeof(string), "SMS: %s, Nguoi gui: %s (%d)", result, GN(playerid), PlayerInfo[playerid][pPnumber]);
							//format(string, sizeof(string), "* %s's phone beeps.", GN(playerid));
							RingTone[giveplayerid] = 20;
							SendClientMessage(playerid, COLOR_WHITE, "Tin nhan da duoc gui");
							SendClientMessage(giveplayerid, COLOR_YELLOW, string);
							SendClientMessage(playerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "~r~$-%d", txtcost);
							GameTextForPlayer(playerid, string, 5000, 1);
							SafeGivePlayerMoney(playerid, -txtcost);
							SBizzInfo[2][sbTill] += txtcost;
							ExtortionSBiz(2, txtcost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							Mobile[playerid] = 255;
							return 1;
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "  Tin nhan gui khong thanh cong...");
	}
	return 1;
}
CMD:houseworld(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new level, string[255];
		if (sscanf(params, "i", level))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Su dung: /houseworld [World]");
			return 1;
		}
		{
			SetWorld = level;
			format(string, sizeof(string), "House World Is Set To %d", SetWorld);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	return 1;
}
CMD:p(playerid, params[]) { return cmd_pickup(playerid, params); }
CMD:pickup(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (Mobile[playerid] != 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Ban dang trong mot cuoc goi...");
			return 1;
		}
		new string[255];
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (Mobile[i] == playerid)
				{
					Mobile[playerid] = i; //caller connecting
					SendClientMessage(i, COLOR_GRAD2, "   Dau day ben kia da bat may.");

					format(string, sizeof(string), "* %s tra loi dien thoai.", GN(playerid));
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					RingTone[playerid] = 0;
				}

			}
		}
	}
	return 1;
}
CMD:h(playerid, params[]) { return cmd_hangup(playerid, params); }
CMD:hangup(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new caller = Mobile[playerid];
		if (IsLogOn(caller))
		{
			if (caller != INVALID_PLAYER_ID)
			{
				if (caller != 255)
				{
					if (caller < 255)
					{
						SendClientMessage(caller, COLOR_GRAD2, "   Ho da cup may.");
						CellTime[caller] = 0;
						CellTime[playerid] = 0;
						SendClientMessage(playerid, COLOR_GRAD2, "   Ban da cup may.");
						Mobile[caller] = 255;
					}
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "   Dien thoai cua ban dang o trong tui.");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	}
	return 1;
}
CMD:fixr(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		PlayerFixRadio(playerid);
	}
	return 1;
}
CMD:thoigian(playerid, params[]) { return cmd_time(playerid, params); }
CMD:time(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new mtext[20];
		new year, month, day;
		getdate(year, month, day);
		if (month == 1) { mtext = "Thang 1"; }
		else if (month == 2) { mtext = "Thang 2"; }
		else if (month == 3) { mtext = "Thang 3"; }
		else if (month == 4) { mtext = "Thang 4"; }
		else if (month == 5) { mtext = "Thang 5"; }
		else if (month == 6) { mtext = "Thang 6"; }
		else if (month == 7) { mtext = "Thang 7"; }
		else if (month == 8) { mtext = "Thang 8"; }
		else if (month == 9) { mtext = "Thang 9"; }
		else if (month == 10) { mtext = "Thang 10"; }
		else if (month == 11) { mtext = "Thang 11"; }
		else if (month == 12) { mtext = "Thang 12"; }
		new hour, minuite, second;
		gettime(hour, minuite, second);
		FixHour(hour);
		hour = shifthour;
		new string[255];
		if (minuite < 10)
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				if (PlayerInfo[playerid][pWatch] == 1)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime] - 10);
				}
				else
				{
					format(string, sizeof(string), "~w~Thoi gian cai tao con: %d sec", PlayerInfo[playerid][pJailTime] - 10);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pWatch] == 1)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
				}
				else
				{
					format(string, sizeof(string), "~r~Ban khong co dong ho");
				}
			}
		}
		else
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				if (PlayerInfo[playerid][pWatch] == 1)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime] - 10);
				}
				else
				{
					format(string, sizeof(string), "~w~Thoi gian cai tao con: %d sec", PlayerInfo[playerid][pJailTime] - 10);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pWatch] == 1)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
				}
				else
				{
					format(string, sizeof(string), "~r~Ban khong co dong ho");
				}
			}
		}
		GameTextForPlayer(playerid, string, 5000, 1);

		if (PlayerInfo[playerid][pWatch] == 1)
		{
			if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s xem dong ho cua anh ay.", GN(playerid)); }
			else { format(string, sizeof(string), "* %s xem dong ho cua co ay.", GN(playerid)); }
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		//ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
	}
	return 1;
}
CMD:house(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new housenum;
			if (sscanf(params, "i", housenum))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /house [housenumber]");
				return 1;
			}
			SetPlayerInterior(playerid, HouseInfo[housenum][hInt]);
			SetVirtualWorld(playerid, HouseInfo[housenum][hWorld]);
			SetPlayerPos(playerid, HouseInfo[housenum][hExitx], HouseInfo[housenum][hExity], HouseInfo[housenum][hExitz]);
			GameTextForPlayer(playerid, "~w~Dich chuyen", 5000, 1);
			PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInt];
			PlayerInfo[playerid][pLocal] = housenum;

		}
	}
	return 1;
}
CMD:houseo(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new housenum;
			if (sscanf(params, "i", housenum))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /houseo [housenumber]");
				return 1;
			}
			SetPlayerPos(playerid, HouseInfo[housenum][hEntrancex], HouseInfo[housenum][hEntrancey], HouseInfo[housenum][hEntrancez]);
			GameTextForPlayer(playerid, "~w~Dich chuyen", 5000, 1);
		}
	}
	return 1;
}
CMD:biz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new housenum;
			if (sscanf(params, "i", housenum))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /biz [biznumber]");
				return 1;
			}
			SetPlayerInterior(playerid, BizzInfo[housenum][bInterior]);
			SetPlayerPos(playerid, BizzInfo[housenum][bExitX], BizzInfo[housenum][bExitY], BizzInfo[housenum][bExitZ]);
			GameTextForPlayer(playerid, "~w~Dich chuyen", 5000, 1);
			PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
			PlayerInfo[playerid][pLocal] = housenum + 99;
		}
	}
	return 1;
}
CMD:sbiz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new housenum;
			if (sscanf(params, "i", housenum))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /sbiz [biznumber]");
				return 1;
			}
			SetPlayerInterior(playerid, SBizzInfo[housenum][sbInterior]);
			SetPlayerPos(playerid, SBizzInfo[housenum][sbEntranceX], SBizzInfo[housenum][sbEntranceY], SBizzInfo[housenum][sbEntranceZ]);
			GameTextForPlayer(playerid, "~w~Dich chuyen", 5000, 1);
		}
	}
	return 1;
}
	/*if(strcmp(cmd, "/editcarmodzel", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
	return 1;
	}
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /editcarmodzel [modzelid]");
	return 1;
	}
	new proplev = strval(tmp);
	for(new i = 0; i < sizeof(CarInfo); i++)
	{
	if(IsAnOwnableCar(idcar))
	{
	CarInfo[idcar][cModel] = proplev;
	format(string, sizeof(string), "Car: %d is now %d",idcar,CarInfo[idcar][cModel]);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	OnPropUpdate();
	}
	}
	}
	return 1;
	}*/
	/*if(strcmp(cmd, "/resethousecars", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 1337)
	{
	SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
	return 1;
	}
	HouseInfo[0][hVec] = 499; HouseInfo[1][hVec] = 499; HouseInfo[2][hVec] = 499;
	HouseInfo[3][hVec] = 499; HouseInfo[4][hVec] = 499; HouseInfo[5][hVec] = 499;
	HouseInfo[6][hVec] = 499; HouseInfo[7][hVec] = 499; HouseInfo[8][hVec] = 499;
	HouseInfo[9][hVec] = 499; HouseInfo[10][hVec] = 499; HouseInfo[11][hVec] = 499;
	HouseInfo[12][hVec] = 499; HouseInfo[13][hVec] = 499; HouseInfo[14][hVec] = 499;
	HouseInfo[15][hVec] = 499; HouseInfo[16][hVec] = 499; HouseInfo[17][hVec] = 499;
	HouseInfo[18][hVec] = 499; HouseInfo[19][hVec] = 499; HouseInfo[20][hVec] = 499;
	HouseInfo[21][hVec] = 499; HouseInfo[22][hVec] = 499; HouseInfo[23][hVec] = 499;
	HouseInfo[24][hVec] = 499; HouseInfo[25][hVec] = 499; HouseInfo[26][hVec] = 499;
	HouseInfo[27][hVec] = 499; HouseInfo[28][hVec] = 499; HouseInfo[29][hVec] = 499;
	HouseInfo[30][hVec] = 499; HouseInfo[31][hVec] = 499; HouseInfo[32][hVec] = 499;
	HouseInfo[33][hVec] = 499;
	OnPropUpdate();
	SendClientMessage(playerid, COLOR_GREY, "   All House Cars resetted !");
	}
	return 1;
	}*/
	/*if(strcmp(cmd, "/edithousecar", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
	return 1;
	}
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /edithousecar [vecid]");
	return 1;
	}
	new proplev = strval(tmp);
	for(new i = 0; i < MAX_HOUSES; i++)
	{
	if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
	{
	HouseInfo[i][hVec] = proplev;
	format(string, sizeof(string), "House Car: %d is now %d", i,HouseInfo[i][hVec]);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	}
	}
	OnPropUpdate();
	}
	return 1;
	}*/
CMD:edit(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong phai la Admin !");
			return 1;
		}
		new x_job[256], proplev, string[255];
		if (sscanf(params, "s[256]i", x_job, proplev)) {
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /edit [name] [So luong] (Dung cho nha va cua hang)");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Level, Gia, Nganquy, SanPham");
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
			return 1;
		}
		//if(strcmp(x_job,"car",true) == 0)
		for (new i = 0; i < MAX_HOUSES; i++)
		{
			if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				format(string, sizeof(string), "House: %d", i);
				SendClientMessage(playerid, COLOR_GRAD2, string);
				if (proplev > 0)
				{
					if (strcmp(x_job, "level", true) == 0)
					{
						HouseInfo[i][hLevel] = proplev;
					}
					else if (strcmp(x_job, "gia", true) == 0)
					{
						HouseInfo[i][hValue] = proplev;
					}
				}
			}
		}
		for (new i = 0; i < sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
				format(string, sizeof(string), "Biz: %d", i);
				SendClientMessage(playerid, COLOR_GRAD2, string);
				if (proplev > 0)
				{
					if (strcmp(x_job, "level", true) == 0)
					{
						BizzInfo[i][bLevelNeeded] = proplev;
					}
					else if (strcmp(x_job, "gia", true) == 0)
					{
						BizzInfo[i][bBuyPrice] = proplev;
					}
					else if (strcmp(x_job, "nganquy", true) == 0)
					{
						BizzInfo[i][bTill] = proplev;
					}
					else if (strcmp(x_job, "sanpham", true) == 0)
					{
						BizzInfo[i][bProducts] = proplev;
					}
				}
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				format(string, sizeof(string), "SBiz: %d", i);
				SendClientMessage(playerid, COLOR_GRAD2, string);
				if (proplev > 0)
				{
					if (strcmp(x_job, "level", true) == 0)
					{
						SBizzInfo[i][sbLevelNeeded] = proplev;
					}
					else if (strcmp(x_job, "gia", true) == 0)
					{
						SBizzInfo[i][sbBuyPrice] = proplev;
					}
					else if (strcmp(x_job, "nganquy", true) == 0)
					{
						SBizzInfo[i][sbTill] = proplev;
					}
					else if (strcmp(x_job, "sanpham", true) == 0)
					{
						SBizzInfo[i][sbProducts] = proplev;
					}
				}
			}
		}
		format(string, sizeof(string), "Ban vua dieu chinh: %s.", x_job);
		SendClientMessage(playerid, COLOR_WHITE, string);
		OnPropUpdate();
	}
	return 1;
}
//CMD:xemhang(playerid, params[]) { return cmd_load(playerid, params); }
//CMD:load(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new tmpcar = GetPlayerVehicleID(playerid), string[255];
//		if (!IsATruck(tmpcar))
//		{
//			GameTextForPlayer(playerid, "~r~Day khong phai la xe trucker", 5000, 1);
//			return 1;
//		}
//		format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//	}
//	return 1;
//}
CMD:layhang(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 16) return SCM(playerid, COLOR_GREY, "Ban khong phai trucker");
	if (CheckAllBizTruck() == 0) return SCM(playerid, COLOR_GREY, "Hien tai khong co cua hang nao can giao hang.");
	new tmpcar = GetPlayerVehicleID(playerid);
	if (!PlayerToPoint(70.0, playerid, 2468.4919, -2092.9902, 13.5469)) return SCM(playerid, COLOR_GREY, "Ban khong o noi lay hang.");
	if (Trucking[tmpcar] != 0) return SCM(playerid, COLOR_GREY, "Xe nay hien tai dang dat hang, hay giao hang truoc.");
	if (GetPlayerMoney(playerid) < 10000) return SCM(playerid, COLOR_GREY, "Can 10,000$ de lay hang!");
	//new compcost = 20;
	if (!IsATruck(tmpcar)) return SCM(playerid, COLOR_GREY, "Day khong phai xe truck.");
	LoadTruck(playerid);
	return cmd_timgiaohang(playerid, params);
}
CMD:timgiaohang(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 16) return SCM(playerid, COLOR_GREY, "Ban khong phai trucker");
	new tmpcar = GetPlayerVehicleID(playerid);
	//new compcost = 20;
	if (!IsATruck(tmpcar)) return SCM(playerid, COLOR_GREY, "Day khong phai xe truck.");
	if (Trucking[tmpcar] == 0) return SCM(playerid, COLOR_GREY, "Xe nay khong dat hang de giao.");
	ShowPlayerDialog(playerid, DIALOG_FINDTRUCK, DIALOG_STYLE_LIST, "TIM CUA HANG", "Cua Hang Ngau Nhien\nTu Chon Cua Hang", "Chon", "Thoat");
	return 1;
}
//CMD:layhang(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new tmpcar = GetPlayerVehicleID(playerid), string[255];
//		new compcost = 20;
//		if (PlayerToPoint(70.0, playerid, 2468.4919, -2092.9902, 13.5469))
//		{
//			if (IsATruck(tmpcar))
//			{
//				if (PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
//				{
//					new amount;
//					if (sscanf(params, "i", amount))
//					{
//						SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /layhang [So luong]");
//						return 1;
//					}
//					if (amount < 1 || amount > 500) { SendClientMessage(playerid, COLOR_GREY, "   Khong the lay duoi 1 hoac hon 500 hang hoa!"); return 1; }
//					new check = PlayerHaul[tmpcar][pLoad] + amount;
//					if (check > PlayerHaul[tmpcar][pCapasity])
//					{
//						format(string, sizeof(string), "   So luong hang toi da ma ban co the cho la %d, ban dang cho %d.", PlayerHaul[tmpcar][pCapasity], PlayerHaul[tmpcar][pLoad]);
//						SendClientMessage(playerid, COLOR_GREY, string);
//						return 1;
//					}
//					new cost = amount*compcost;
//					if (GetPlayerMoney(playerid) >= cost)
//					{
//						PlayerHaul[tmpcar][pLoad] += amount;
//						format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						format(string, sizeof(string), "Ban da mua %d hang hoa voi gia $%d.", amount, cost);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						SafeGivePlayerMoney(playerid, -cost);
//						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
//						return 1;
//					}
//					else
//					{
//						format(string, sizeof(string), "Ban khong co kha nang cho %d hang hoa voi $%d!", amount, cost);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						return 1;
//					}
//				}
//				else
//				{
//					format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					return 1;
//				}
//			}
//			else
//			{
//				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Phuong tien khong duoc dung de cho hang hoa.");
//				return 1;
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GREY, "Ban khong o noi danh cho trucker.");
//			return 1;
//		}
//	}
//	return 1;
//}
//CMD:giaohang(playerid, params[])
//{
//	new cashmade;
//	new tmpcar;
//	new string[255];
//	if (IsLogOn(playerid))
//	{
//		tmpcar = GetPlayerVehicleID(playerid);
//		if (!IsATruck(tmpcar))
//		{
//			GameTextForPlayer(playerid, "~r~Ban khong o trong xe cho hang", 5000, 1);
//			return 1;
//		}
//		if (PlayerHaul[tmpcar][pLoad] == 0)
//		{
//			GameTextForPlayer(playerid, "~r~Khong co hang hoa tren xe, tro ve kho de lay hang hoa", 5000, 1);
//			format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//			return 1;
//		}
//		for (new i = 0; i < sizeof(BizzInfo); i++)
//		{
//			if (PlayerToPoint(10, playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
//			{
//				//printf("Found House :%d",i);
//				for (new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
//				{
//					if (BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
//					{
//						GameTextForPlayer(playerid, "~r~Cua hang cua chung toi da day kho", 5000, 1);
//						format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
//						return 1;
//					}
//					if (BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
//					{
//						GameTextForPlayer(playerid, "~r~Chung toi khong du kha nang cho hop dong", 5000, 1);
//						format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
//						return 1;
//					}
//					PlayerHaul[tmpcar][pLoad]--;
//					BizzInfo[i][bProducts]++;
//					cashmade = cashmade + BizzInfo[i][bPriceProd];
//					//ConsumingMoney[playerid] = 1;
//					SafeGivePlayerMoney(playerid, BizzInfo[i][bPriceProd]);
//					BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
//					if (PlayerHaul[tmpcar][pLoad] == 0)
//					{
//						GameTextForPlayer(playerid, "~r~Khong co hang hoa tren xe, tro ve kho de lay hang hoa", 5000, 1);
//						format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
//						return 1;
//					}
//				}
//				OnPropUpdate();
//				return 1;
//			}
//		}
//	}
//	for (new i = 0; i < sizeof(SBizzInfo); i++)
//	{
//		if (PlayerToPoint(10, playerid, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
//		{
//			//printf("Found House :%d",i);
//			for (new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
//			{
//				if (SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts])
//				{
//					GameTextForPlayer(playerid, "~r~Cua hang cua chung toi da day kho", 5000, 1);
//					format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					return 1;
//				}
//				if (SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill])
//				{
//					GameTextForPlayer(playerid, "~r~Chung toi khong du kha nang cho hop dong", 5000, 1);
//					format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					return 1;
//				}
//				PlayerHaul[tmpcar][pLoad]--;
//				SBizzInfo[i][sbProducts]++;
//				cashmade = cashmade + SBizzInfo[i][sbPriceProd];
//				//ConsumingMoney[playerid] = 1;
//				SafeGivePlayerMoney(playerid, SBizzInfo[i][sbPriceProd]);
//				SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
//				if (PlayerHaul[tmpcar][pLoad] == 0)
//				{
//					GameTextForPlayer(playerid, "~r~Khong co hang hoa tren xe, tro ve kho de lay hang hoa", 5000, 1);
//					format(string, sizeof(string), "So tien kiem duoc : $%d.", cashmade);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					format(string, sizeof(string), "Hang hoa: %d/%d.", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
//					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
//					return 1;
//				}
//			}
//			OnPropUpdate();
//			return 1;
//		}
//	}
//	GameTextForPlayer(playerid, "~r~chua den noi giao dich", 5000, 1);
//	return 1;
//}
stock GetHQHouse(houseid)
{
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if (FamilyInfo[i][fHouseHQ] == houseid)
			return i;
	}
	return -1;
}
CMD:enter(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		for (new i = 0; i < MAX_HOUSES; i++)
		{
			if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				new hqfamily = GetHQHouse(i);
				//printf("Found House :%d",i);
				if (hqfamily != -1 && PlayerInfo[playerid][pFMember] == hqfamily)
				{
					SetPlayerInterior(playerid, HouseInfo[i][hInt]);
					SetVirtualWorld(playerid, HouseInfo[i][hWorld]);
					SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~w~Chao Mung Ve HQ Family", 5000, 1);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
					PlayerInfo2[HouseEntered][playerid] = i;
				}
				else if (PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
				{
					SetPlayerInterior(playerid, HouseInfo[i][hInt]);
					SetVirtualWorld(playerid, HouseInfo[i][hWorld]);
					SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~w~Chao Mung Ve Nha", 5000, 1);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
					PlayerInfo2[HouseEntered][playerid] = i;
					return 1;
				}
				else GameTextForPlayer(playerid, "~r~Khoa Cua", 5000, 1);
			}
		}
		for (new i = 0; i < sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
				//printf("Found House :%d",i);
				if (!IsACop(playerid) && BizzInfo[i][bType] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Chi co canh sat moi co quyen !");
					return 1;
				}
				if (PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
				{
					if (PlayerInfo[playerid][pPbiskey] != i)
					{
						if (BizzInfo[i][bLocked] == 1)
						{
							GameTextForPlayer(playerid, "~r~Dong Cua", 5000, 1);
							return 1;
						}
						if (BizzInfo[i][bProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Het Hang", 5000, 1);
							return 1;
						}
						SafeGivePlayerMoney(playerid, -BizzInfo[i][bEntranceCost]);
						format(string, sizeof(string), "~r~-$%d~n~~w~Go /exit~n~de ra ngoai", BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
						ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bProducts]--;
						OnPropUpdate();
						GameTextForPlayer(playerid, string, 5000, 3);
					}
					SetPlayerInterior(playerid, BizzInfo[i][bInterior]);
					SetPlayerPos(playerid, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]);
					PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
					PlayerInfo[playerid][pLocal] = i + 99;
					new dood[MAX_PLAYER_NAME];
					GetPlayerName(playerid, dood, sizeof(dood));
					format(string, sizeof(string), "%s da tra $%d de vao business %d.", dood, BizzInfo[i][bEntranceCost], i);
					printf("%s", string);
					PayLog(string);
					//PlayerInfo[playerid][pLocal] = i;
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Ban khong co du tien", 5000, 1);
				}
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				if (PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
				{
					if (PlayerInfo[playerid][pPbiskey] != i)
					{
						if (SBizzInfo[i][sbLocked] == 1)
						{
							GameTextForPlayer(playerid, "~r~Dong Cua", 5000, 1);
							return 1;
						}
						if (SBizzInfo[i][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Het Hang", 5000, 1);
							return 1;
						}
						if (i == 10)
						{
							PaintballPlayers++;
							PlayerPaintballing[playerid] = 1;
							new rand = random(sizeof(PaintballSpawns));
							SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
							TogglePlayerControllable(playerid, 0);
						}
						else if (i == 11)
						{
							PlayerKarting[playerid] = 1;
							SendClientMessage(playerid, TEAM_GROVE_COLOR, "Bay gio ban co the tham gia vao Karting Race, chon mot chiec Kart.");
						}
						else
						{
							return 1;
						}
						SafeGivePlayerMoney(playerid, -SBizzInfo[i][sbEntranceCost]);
						gSpentCash[playerid] = GetPlayerMoney(playerid);
						SBizzInfo[i][sbProducts]--;
						SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
						ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s da tra $%d de vao sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						OnPropUpdate();
					}
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Ban khong co du tien", 5000, 1);
				}
			}
		}
		if (PlayerToPoint(3.0, playerid, 2695.6235, -1704.6960, 11.8438))
		{
			GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			SetPlayerInterior(playerid, 7);
			PlayerInfo[playerid][pInt] = 7;
			SetPlayerPos(playerid, -1404.5299, -259.0602, 1043.6563);
		}
		else if (PlayerToPoint(8.0, playerid, -2111.5686, -443.9720, 38.7344))
		{
			GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			SetPlayerInterior(playerid, 4);
			PlayerInfo[playerid][pInt] = 4;
			SetPlayerPos(playerid, -1443.0554, -581.1879, 1055.0472);
		}
		else if (PlayerToPoint(8.0, playerid, -2080.3079, -406.0309, 38.7344))
		{
			GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			SetPlayerInterior(playerid, 14);
			PlayerInfo[playerid][pInt] = 14;
			SetPlayerPos(playerid, -1464.7732, 1557.5533, 1052.5313);
		}
		else if (PlayerToPoint(4, playerid, 2073.2979, -1831.1228, 13.5469))
		{ // Pay & Spray
			if (GetPlayerState(playerid) == 2)
			{
				if (GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
				{
					if (SBizzInfo[5][sbProducts] > 0)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2062.1294, -1831.5498, 13.5469);
						SetVehicleZAngle(tmpcar, 90);
						SafeGivePlayerMoney(playerid, -SBizzInfo[5][sbEntranceCost]);
						SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
						SBizzInfo[5][sbProducts]--;
						SetTimerEx("AfterSpray1", 5000, false, "i", playerid);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong co du tien de vao Pay & Spray.");
				}
			}
		}
		else if (PlayerToPoint(4, playerid, 1024.9756, -1030.7930, 32.0257))
		{ // Pay & Spray
			if (GetPlayerState(playerid) == 2)
			{
				if (GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
				{
					if (SBizzInfo[5][sbProducts] > 0)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 1024.9763, -1021.8850, 32.1016);
						SetVehicleZAngle(tmpcar, 0);
						SafeGivePlayerMoney(playerid, -SBizzInfo[5][sbEntranceCost]);
						SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
						SBizzInfo[5][sbProducts]--;
						SetTimerEx("AfterSpray2", 5000, false, "i", playerid);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong co du tien de vao Pay & Spray.");
				}
			}
		}
		else if (PlayerToPoint(4, playerid, 488.3819, -1733.0563, 11.1752))
		{ // Pay & Spray
			if (GetPlayerState(playerid) == 2)
			{
				if (GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
				{
					if (SBizzInfo[5][sbProducts] > 0)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 487.4099, -1741.4585, 11.1330);
						SetVehicleZAngle(tmpcar, 180);
						SafeGivePlayerMoney(playerid, -SBizzInfo[5][sbEntranceCost]);
						SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
						SBizzInfo[5][sbProducts]--;
						SetTimerEx("AfterSpray3", 5000, false, "i", playerid);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong co du tien de vao Pay & Spray.");
				}
			}
		}
		else if (PlayerToPoint(4, playerid, 719.8940, -464.8272, 16.3359))
		{ // Pay & Spray
			if (GetPlayerState(playerid) == 2)
			{
				if (GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
				{
					if (SBizzInfo[5][sbProducts] > 0)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 720.3924, -456.0286, 16.3359);
						SetVehicleZAngle(tmpcar, 0);
						SafeGivePlayerMoney(playerid, -SBizzInfo[5][sbEntranceCost]);
						SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
						SBizzInfo[5][sbProducts]--;
						SetTimerEx("AfterSpray4", 5000, false, "i", playerid);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ban khong co du tien de vao Pay & Spray.");
				}
			}
		}
	}
	return 1;
}
//CMD:mocua(playerid, params[])
//{
//	if (GetPlayerState(playerid) == 1) CheckForWalkingTeleport(playerid);
//	return 1;
//}
CMD:home(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPhousekey] != 255)
		{
			if (PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Dang lam nhiem vu, khong the dung lenh nay !");
				return 1;
			}
			SetPlayerCheckpoint(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
			GameTextForPlayer(playerid, "~w~Chi Duong ~r~Nha", 5000, 1);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
		}
		else
		{
			GameTextForPlayer(playerid, "~w~Ban la nguoi vo gia cu", 5000, 1);
		}
	}
	return 1;
}
	/*	if(strcmp(cmd, "/towcar", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	new house = PlayerInfo[playerid][pPhousekey];
	GetPlayerName(playerid, playername, sizeof(playername));
	if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
	{
	if(SBizzInfo[8][sbProducts] == 0)
	{
	GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
	return 1;
	}
	if(CarTow(house+1))
	{
	GameTextForPlayer(playerid, "~w~Car~n~~g~Towed Home~n~~r~$-100", 5000, 1);
	SafeGivePlayerMoney(playerid,-100);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SBizzInfo[8][sbTill] += 100;//towcar buisness
	ExtortionSBiz(8, 1000);
	SBizzInfo[8][sbProducts]--;
	}
	else
	{
	GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
	}
	}
	else
	{
	GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
	}
	}
	return 1;
	}*/
	/*if(strcmp(cmd, "/fixcar", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	new house = PlayerInfo[playerid][pPhousekey];
	GetPlayerName(playerid, playername, sizeof(playername));
	if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
	{
	if(SBizzInfo[8][sbProducts] == 0)
	{
	GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
	return 1;
	}
	if(CarRespawn(house+1))
	{
	GameTextForPlayer(playerid, "~w~Car~n~~g~Repaired~n~~r~$-50", 5000, 1);
	SafeGivePlayerMoney(playerid,-50);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SBizzInfo[8][sbTill] += 50;//towcar buisness
	ExtortionSBiz(8, 1000);
	SBizzInfo[8][sbProducts]--;
	}
	else
	{
	GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
	}
	}
	else
	{
	GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
	}
	}
	return 1;
	}*/
CMD:buybiz(playerid, params[]) { return cmd_muabiz(playerid, params); }
CMD:muabiz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz, playername[255], string[255];
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		if (PlayerInfo[playerid][pPbiskey] != 255)
		{
			SendClientMessage(playerid, COLOR_WHITE, "   Ban da so huu mot co so kinh doanh, go /banbiz neu ban muon mua co so nay.");
			return 1;
		}
		for (new b = 0; b < sizeof(SBizzInfo); b++)
		{
			if (PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
			{
				if (PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
				{
					format(string, sizeof(string), "Ban phai dat Level %d de mua", SBizzInfo[b][sbLevelNeeded]);
					SendClientMessage(playerid, COLOR_GRAD5, string);
					return 1;
				}
				if (GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
				{
					PlayerInfo[playerid][pPbiskey] = b + 100;
					SBizzInfo[b][sbOwned] = 1;

					strmid(SBizzInfo[b][sbOwner], playername, 0, sizeof(playername), 255);
					SafeGivePlayerMoney(playerid, -SBizzInfo[b][sbBuyPrice]);
					PlayerPlayMusic(playerid);
					SendClientMessage(playerid, COLOR_WHITE, "Chuc mung, co so kinh doanh moi cua ban.");
					SendClientMessage(playerid, COLOR_WHITE, "Go /help de xem tro giup ve co so kinh doanh moi.");
					DateProp(playerid);
					OnPropUpdate();
					SavePlayer(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Ban khong co du tien");
					return 1;
				}
			}
		}
		for (new b = 0; b < sizeof(BizzInfo); b++)
		{
			if (PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
			{
				if (PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
				{
					format(string, sizeof(string), "Ban phai dat %d de mua", BizzInfo[b][bLevelNeeded]);
					SendClientMessage(playerid, COLOR_GRAD5, string);
					return 1;
				}
				if (GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
				{
					PlayerInfo[playerid][pPbiskey] = b;
					BizzInfo[b][bOwned] = 1;

					strmid(BizzInfo[b][bOwner], playername, 0, sizeof(playername), 255);
					SafeGivePlayerMoney(playerid, -BizzInfo[b][bBuyPrice]);
					PlayerPlayMusic(playerid);
					SetPlayerInterior(playerid, BizzInfo[b][bInterior]);
					PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
					SetPlayerPos(playerid, BizzInfo[b][bExitX], BizzInfo[b][bExitY], BizzInfo[b][bExitZ]);
					GameTextForPlayer(playerid, "~w~Welcome~n~Ban co the ra ngoai bang cach di den canh cua va go /exit", 5000, 3);
					PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
					PlayerInfo[playerid][pLocal] = b;
					SendClientMessage(playerid, COLOR_WHITE, "Chuc mung, co so kinh doanh moi cua ban.");
					SendClientMessage(playerid, COLOR_WHITE, "Go /help de xem tro giup ve co so kinh doanh moi.");
					DateProp(playerid);
					OnPropUpdate();
					SavePlayer(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Ban khong co du tien");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:sellbiz(playerid, params[]) { return cmd_banbiz(playerid, params); }
CMD:banbiz(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playername[255], string[255];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (PlayerInfo[playerid][pPbiskey] == 255)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong so huu bizz.");
			return 1;
		}
		if (PlayerInfo[playerid][pMarried] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da co gia dinh, khong the ban nha!");
			return 1;
		}
		if (PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey] - 100][sbOwner], true) == 0)
		{
			new bouse = PlayerInfo[playerid][pPbiskey] - 100;
			SafeGivePlayerMoney(playerid, SBizzInfo[bouse][sbTill]);
			SBizzInfo[bouse][sbLocked] = 1;
			SBizzInfo[bouse][sbOwned] = 0;

			strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
			strmid(SBizzInfo[bouse][sbExtortion], "No-one", 0, strlen("No-one"), 255);
			//ConsumingMoney[playerid] = 1;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Chuc mung~n~ Ban da ban tai san cua minh cho ~n~~g~$%d", SBizzInfo[bouse][sbTill]);
			GameTextForPlayer(playerid, string, 10000, 3);
			SBizzInfo[bouse][sbTill] = 0;
			PlayerInfo[playerid][pPbiskey] = 255;
			OnPropUpdate();
			SavePlayer(playerid);
			return 1;
		}
		if (strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			BizzInfo[bouse][bLocked] = 1;
			BizzInfo[bouse][bOwned] = 0;

			strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
			strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
			//ConsumingMoney[playerid] = 1;
			SafeGivePlayerMoney(playerid, BizzInfo[bouse][bTill]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Chuc mung~n~ Ban da ban tai san cua minh cho ~n~~g~$%d", BizzInfo[bouse][bTill]);
			GameTextForPlayer(playerid, string, 10000, 3);
			BizzInfo[bouse][bTill] = 0;
			PlayerInfo[playerid][pPbiskey] = 255;
			OnPropUpdate();
			SavePlayer(playerid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong so huu co so kinh doanh.");
		}
	}
	return 1;
}
CMD:bizinfo(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong so huu co so kinh doanh.");
			return 1;
		}
		if (bouse >= 100)
		{

			PrintSBizInfo(playerid, bouse - 100);
		}
		else
		{
			PrintBizInfo(playerid, bouse);
		}
	}
	return 1;
}
CMD:prodprice(playerid, params[])
{
	new bouse = PlayerInfo[playerid][pPbiskey];
	if (bouse == 255)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh");
		return 1;
	}
	new amount, string[255];
	if (sscanf(params, "i", amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Sudung: /prodprice [So luong de tra cho mot hang hoa]");
	}
	if (amount < 1 || amount > 99999)
	{
		SendClientMessage(playerid, COLOR_WHITE, "So luong nho nhat la $1, lon nhat la $99999.");
		return 1;
	}
	if (bouse >= 100)
	{
		if (amount > SBizzInfo[bouse - 100][sbTill])
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong co du tien trong thu ngan.");
			return 1;
		}
		SBizzInfo[bouse - 100][sbPriceProd] = amount;
		format(string, sizeof(string), "Mua hoang hoa cho $%d.", SBizzInfo[bouse - 100][sbPriceProd]);
	}
	else
	{
		if (amount > BizzInfo[bouse][bTill])
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban khong co du tien trong thu ngan.");
			return 1;
		}
		BizzInfo[bouse][bPriceProd] = amount;
		format(string, sizeof(string), "Mua hoang hoa cho $%d.", BizzInfo[bouse][bPriceProd]);
	}
	OnPropUpdate();
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}
CMD:bizfee(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh !");
			return 1;
		}
		new amount, string[255];
		if (sscanf(params, "i", amount))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Sudung: /bizfee [Phi vao cua]");
			return 1;
		}
		if (amount < 0 || amount > 99999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "So luong nho nhat la $0, lon nhat la $99999.");
			return 1;
		}
		if (bouse >= 100)
		{
			SBizzInfo[bouse - 100][sbEntranceCost] = amount;
			format(string, sizeof(string), "Phi vao cua hien tai: $%d.", SBizzInfo[bouse - 100][sbEntranceCost]);
		}
		else
		{
			BizzInfo[bouse][bEntranceCost] = amount;
			format(string, sizeof(string), "Phi vao cua hien tai: $%d.", BizzInfo[bouse][bEntranceCost]);
		}
		OnPropUpdate();
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:extortion(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh !");
			return 1;
		}
		new giveplayerid;
		new string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Sudung: /extortion [playerid/PartOfName] (or 555 for No-one)");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "* %s is know Extortioning your Business.", GN(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s da dieu chinh co so kinh doanh cua anh ay, bay gio ban la Extortioning cua co so kinh doanh.", GN(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);
				if (bouse >= 100)
				{
					format(string, sizeof(string), "%s", GN(giveplayerid));
					strmid(SBizzInfo[bouse - 100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s", SBizzInfo[bouse - 100][sbExtortion]);
				}
				else
				{
					format(string, sizeof(string), "%s", GN(giveplayerid));
					strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s", BizzInfo[bouse][bExtortion]);
				}
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else if (giveplayerid == 555)
		{
			if (bouse >= 100)
			{
				format(string, sizeof(string), "No-one");
				strmid(SBizzInfo[bouse - 100][sbExtortion], string, 0, sizeof(string), 255);
				format(string, sizeof(string), "Business Extortion Name set to %s", SBizzInfo[bouse - 100][sbExtortion]);
			}
			else
			{
				format(string, sizeof(string), "No-one");
				strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
				format(string, sizeof(string), "Business Extortion Name set to %s", BizzInfo[bouse][bExtortion]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang OFFLINE !");
			return 1;
		}
	}
	return 1;
}
//CMD:bizname(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new bouse = PlayerInfo[playerid][pPbiskey];
//		if (bouse == 255)
//		{
//			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh !");
//			return 1;
//		}
//		new string[255];
//		new result[64];
//		if(sscanf(params, "s[64]", result))
//		{
//			SendClientMessage(playerid, COLOR_WHITE, "Sudung: /bizname [Ten]");
//		}
//		if (bouse >= 100)
//		{
//			strmid(SBizzInfo[bouse - 100][sbMessage], result, 0, 64, 255);
//			format(string, sizeof(string), "Ten cua co so kinh doanh duoc doi thanh: %s", SBizzInfo[bouse - 100][sbMessage]);
//		}
//		else
//		{
//			strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
//			format(string, sizeof(string), "Ten cua co so kinh doanh duoc doi thanh: %s", BizzInfo[bouse][bMessage]);
//		}
//		OnPropUpdate();
//		SendClientMessage(playerid, COLOR_WHITE, string);
//	}
//	return 1;
//}
CMD:bizwithdraw(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh !");
			return 1;
		}
		new cashdeposit, string[255];
		if (sscanf(params, "i", cashdeposit))
		{
			if (bouse >= 100)
			{
				format(string, sizeof(string), "  Ban co $%d trong ngan sach.", SBizzInfo[bouse - 100][sbTill]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
			}
			else
			{
				format(string, sizeof(string), "  Ban co $%d trong ngan sach.", BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
			}
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /bizwithdraw [So luong]");
			return 1;
		}
		if (bouse >= 100)
		{
			if (cashdeposit > SBizzInfo[bouse - 100][sbTill] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co du");
				return 1;
			}
		}
		else
		{
			if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co du");
				return 1;
			}
		}
		if (bouse >= 100)
		{
			if (!PlayerToPoint(100, playerid, SBizzInfo[bouse - 100][sbEntranceX], SBizzInfo[bouse - 100][sbEntranceY], SBizzInfo[bouse - 100][sbEntranceZ]))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban dang o xa co so kinh doanh cua ban");
				return 1;
			}
			else
			{
				//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid, cashdeposit);
				SBizzInfo[bouse - 100][sbTill] -= cashdeposit;
				format(string, sizeof(string), "  Ban da rut $%d tu ngan sach - Tong: $%d ", cashdeposit, SBizzInfo[bouse - 100][sbTill]);
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
		else
		{
			if (!PlayerToPoint(100, playerid, BizzInfo[bouse][bExitX], BizzInfo[bouse][bExitY], BizzInfo[bouse][bExitZ]))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban dang o xa co so kinh doanh cua ban");
				return 1;
			}
			else
			{
				//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid, cashdeposit);
				BizzInfo[bouse][bTill] -= cashdeposit;
				format(string, sizeof(string), "  Ban da rut $%d tu ngan sach - Tong: $%d ", cashdeposit, BizzInfo[bouse][bTill]);
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
	}
	return 1;
}
CMD:bizbank(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong so huu co so kinh doanh !");
			return 1;
		}
		new cashdeposit, string[255];
		if (sscanf(params, "i", cashdeposit))
		{
			if (bouse >= 100)
			{
				format(string, sizeof(string), "  Ban co $%d trong ngan sach.", SBizzInfo[bouse - 100][sbTill]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
			}
			else
			{
				format(string, sizeof(string), "  Ban co $%d trong ngan sach.", BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
			}
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /bizbank [So luong]");
			return 1;
		}
		if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong co du");
			return 1;
		}
		if (bouse >= 100)
		{
			if (!PlayerToPoint(100, playerid, SBizzInfo[bouse - 100][sbEntranceX], SBizzInfo[bouse - 100][sbEntranceY], SBizzInfo[bouse - 100][sbEntranceZ]))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban dang o xa co so kinh doanh cua ban");
				return 1;
			}
			else
			{
				SafeGivePlayerMoney(playerid, -cashdeposit);
				SBizzInfo[bouse - 100][sbTill] += cashdeposit;
				ExtortionSBiz(bouse - 100, cashdeposit);
				format(string, sizeof(string), "  Ban da gui $%d vao ngan sach cua ban - Tong: $%d ", cashdeposit, SBizzInfo[bouse - 100][sbTill]);
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
		else
		{
			if (!PlayerToPoint(100, playerid, BizzInfo[bouse][bExitX], BizzInfo[bouse][bExitY], BizzInfo[bouse][bExitZ]))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban dang o xa co so kinh doanh cua ban");
				return 1;
			}
			else
			{
				SafeGivePlayerMoney(playerid, -cashdeposit);
				BizzInfo[bouse][bTill] += cashdeposit;
				ExtortionBiz(bouse, cashdeposit);
				format(string, sizeof(string), "  Ban da gui $%d vao ngan sach cua ban - Tong: $%d ", cashdeposit, BizzInfo[bouse][bTill]);
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
	}
	return 1;
}
CMD:hoimau(playerid, params[]) { return cmd_heal(playerid, params); }
CMD:heal(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new location = PlayerInfo[playerid][pLocal], giveplayerid, moneys, string[255];
		if (sscanf(params, "ui", giveplayerid, moneys))
		{
			if (location != 255)
			{
				if (location < 99)
				{
					if (HouseInfo[location][hArm] == 1)
					{
						format(string, sizeof(string), "* %s da mac giap len nguoi.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						SetPlayerArmour(playerid, 50.0);
					}
					else
					{
						format(string, sizeof(string), "Ngoi nha nay chua nang cap de lay giap.");
						SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
					}
					if (HouseInfo[location][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid, tempheal);
						if (tempheal < 100.0)
						{
							SetPlayerHealth(playerid, 100.0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Ban da duoc hoi 100 mau.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
						}
						else
						{
							SendClientMessage(playerid, TEAM_GREEN_COLOR, "Ban da duoc hoi 100 mau.");
						}
					}
					else
					{
						format(string, sizeof(string), "Noi nay khong the hoi phuc.");
						SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
					}
					return 1;
				}
				else if (location == 101)//Restaurant
				{
					new Float:tempheal;
					GetPlayerHealth(playerid, tempheal);
					if (tempheal < 100.0)
					{
						SetPlayerHealth(playerid, 100.0);
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "Ban da duoc hoi 100 mau.");
						SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
					}
					else
					{
						SendClientMessage(playerid, TEAM_GREEN_COLOR, "Ban da duoc hoi 100 mau.");
					}
				}
				else if (location == 102 && IsACop(playerid))//Police Armoury
				{
					SetPlayerHealth(playerid, 100.0);
					format(string, sizeof(string), "* %s da mac giap len nguoi.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					TogglePlayerControllable(playerid, 0);
					GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
					Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
					Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
					SetPlayerPos(playerid, 1527.5, -12.1, 1002.0);
					PlayerInfo[playerid][pLocal] = 255;
					SetPlayerInterior(playerid, 99);
					Spectate[playerid] = 257;
					SetPlayerArmour(playerid, 100.0);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /heal [playerid/Ten] [Gia]");
				return 1;
			}
		}
		if (moneys < 1 || moneys > 1000) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1 hoac hon 1000!"); return 1; }
		if (giveplayerid == playerid)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the tu dieu tri cho ban than!");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new giveambu = GetPlayerVehicleID(giveplayerid);
				new playambu = GetPlayerVehicleID(playerid);
				if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//modzel
				{
					if (IsAnAmbulance(playambu) && playambu == giveambu)
					{
						new Float:tempheal;
						GetPlayerHealth(giveplayerid, tempheal);
						if (tempheal >= 100.0)
						{
							SendClientMessage(playerid, TEAM_GREEN_COLOR, "   Nguoi choi khoe manh.");
							return 1;
						}
						format(string, sizeof(string), "~y~Ban da dieu tri ~n~~w~%s~n~~g~$%d", GN(giveplayerid), moneys);
						GameTextForPlayer(playerid, string, 5000, 1);
						SafeGivePlayerMoney(playerid, moneys);
						SafeGivePlayerMoney(giveplayerid, -moneys);
						new hp = 0;
						if (PlayerInfo[playerid][pPainPerk] > 0)
						{
							hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
							SetPlayerHealth(giveplayerid, hp);
						}
						else
						{
							hp = 100;
							SetPlayerHealth(giveplayerid, 100);
						}
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "Ban da duoc dieu tri %d mau -$%d", hp, moneys);
						SendClientMessage(giveplayerid, TEAM_GREEN_COLOR, string);
						if (STDPlayer[giveplayerid] > 0)
						{
							STDPlayer[giveplayerid] = 0;
							SendClientMessage(giveplayerid, COLOR_WHITE, "* Ban da khong con bi nhiem STD nua vi su giup do cua nhan vien dieu duong!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Ca hai phai o trong xe cap cuu / may bay cap cuu!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
					return 1;
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d khong phu hop.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:agl(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new x_nr[256], giveplayerid, string[255];
			if (sscanf(params, "s[256]u", x_nr, giveplayerid)) {
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /agl [Ten] [playerid/Ten]");
				SendClientMessage(playerid, COLOR_WHITE, "Available names: LaiXe, MayBay, Thuyen, Cauca, VuKhi.");
				return 1;
			}
			if (strcmp(x_nr, "maybay", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "* Ban da dua giay phep su dung may bay cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Admin %s da dua cho ban giay phep su dung may bay.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pFlyLic] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
			else if (strcmp(x_nr, "thuyen", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "* Ban da dua giay phep su dung thuyen cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Admin %s da dua cho ban giay phep su dung thuyen.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pBoatLic] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
			else if (strcmp(x_nr, "laixe", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "* Ban da dua giay phep su dung xe cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Admin %s da dua cho ban giay phep su dung xe.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pCarLic] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
			else if (strcmp(x_nr, "cauca", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "* Ban da dua giay phep cau ca cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Admin %s da dua cho ban giay phep cau ca.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pFishLic] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
			else if (strcmp(x_nr, "vukhi", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "* Ban da dua giay phep su dung vu khi cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Admin %s da dua cho ban giay phep su dung vu khi.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pGunLic] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong the su dung lenh nay!");
			return 1;
		}
	}
	return 1;
}
CMD:mole(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		new result[255];
		if (sscanf(params, "s[255]", result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /mole [mole text]");
			return 1;
		}
		format(string, sizeof(string), "SMS: %s, Nguoi gui: MOLE (555)", result);
		if (gTeam[playerid] == TEAMCIVILLAIN) { SendClientMessage(playerid, COLOR_YELLOW, string); }
		SendEnemyMessage(COLOR_YELLOW, string);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (gTeam[i] == TEAMCIVILLAIN && gPlayerSpawned[i])
				{
					RingTone[i] = 20;
				}
			}
		}
		printf("MOLE: %s", result);
	}
	return 1;
}
CMD:bigears(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!BigEar[playerid])
		{
			BigEar[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Grown");
		}
		else if (BigEar[playerid])
		{
			(BigEar[playerid] = 0);
			SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Shrank");
		}
	}
	return 1;
}
CMD:id(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new target;
		if (sscanf(params, "u", target))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /id [playerid/Ten]");
			return 1;
		}
		new sstring[256];
		if (IsLogOn(target))
		{
			if (target != INVALID_PLAYER_ID)
			{
				format(sstring, sizeof(sstring), "ID: (%d) %s", target, GN(target));
				SendClientMessage(playerid, COLOR_GRAD1, sstring);
			}
		}
	}
	return 1;
}
CMD:tv(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pDonateRank] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Da duoc xoa khoi game.");
			return 1;
		}
		if (PlayerInfo[playerid][pDonateRank] > 0)
		{
			if (WatchingTV[playerid] < 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2]);
			}
		}
		new hkey = PlayerInfo[playerid][pPhousekey];
		new house = PlayerInfo[playerid][pLocal];
		if (Spectate[playerid] == 255 && PlayerInfo[playerid][pLocal] != 255 || Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] > 0)
		{
			GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
			Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
			Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
			PlayerInfo[playerid][pLocal] = 255;
			gTeam[playerid] = 0;
		}
		new string[255];
		if (strcmp(params, "off", true) == 0)
		{
			if (WatchingTV[playerid] > 0)
			{
				WatchingTV[playerid] = 0;
				Spectate[playerid] = 253;
				GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong xem TV !");
				return 1;
			}
		}
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
			if (house == 255)
			{
				GameTextForPlayer(playerid, "~r~Khong co cai TV nao o day", 5000, 1);
				return 1;
			}
		}
		if (PlayerInfo[playerid][pAdmin] > 1 || PlayerToPoint(12.0, playerid, HouseInfo[hkey][hExitx], HouseInfo[hkey][hExity], HouseInfo[hkey][hExitz]))
		{
			if (HouseInfo[hkey][hHel] != 1)
			{
				GameTextForPlayer(playerid, "~r~Viec nang cap nay khong duoc thuc hien", 5000, 1);
				return 1;
			}
			new giveplayerid;
			if (sscanf(params, "u", giveplayerid)) {
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /tv [playerid/Ten]");
				return 1;
			}
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					Spectate[playerid] = giveplayerid;
					new Float:health;
					GetPlayerHealth(Spectate[playerid], health);
					new cash = GetPlayerMoney(Spectate[playerid]);
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string, sizeof(string), "Recon: (%d) %s $%d H:%.0f", Spectate[playerid], GN(Spectate[playerid]), cash, health);
					}
					else
					{
						format(string, sizeof(string), "UAV: (%d) %s", Spectate[playerid], GN(Spectate[playerid]));
					}
					SendClientMessage(playerid, COLOR_GREEN, string);
					WatchingTV[playerid] = 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Doi tuong khong hop le.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, "   Ban khong o trong nha cua ban !");
			return 1;
		}
	}
	return 1;
}
	/*	if(strcmp(cmd, "/uncon", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	SetCamBack(playerid);
	}
	return 1;
	}*/
CMD:a(playerid, params[]) { return cmd_admin(playerid, params); }
CMD:admin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new result[255], string[255];
		if (sscanf(params, "s[255]", result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/a)dmin [admin chat]");
			return 1;
		}

		new arank[64];
		if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Moderator"; }
		else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Level 2 Admin"; }
		else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Level 3 Admin"; }
		else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Level 4 Admin"; }
		else if (PlayerInfo[playerid][pAdmin] == 1337) { arank = "Lead Admin"; }
		else if (PlayerInfo[playerid][pAdmin] == 1338) { arank = "Lead Admin"; }
		else { arank = "Moderator"; }

		format(string, sizeof(string), "*** %s %s *** %s", arank, GN(playerid), result);
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			SendAdminMessage(COLOR_YELLOW, string);
		}
		printf("Admin %s: %s", GN(playerid), result);
	}
	return 1;
}
//CMD:logout(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pAdmin] >= 4)
//		{
//			SavePlayer(playerid);
//			gPlayerLogged[playerid] = 0;
//			SendClientMessage(playerid, COLOR_GRAD1, "   It is now safe to quit.");
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay !");
//		}
//	}
//	return 1;
//}
//CMD:logoutpl(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new giveplayerid;
//		if (sscanf(params, "u", giveplayerid))
//		{
//			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /logoutpl [playerid/PartOfName]");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pAdmin] >= 4)
//		{
//			if (IsLogOn(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
//			{
//				SavePlayer(giveplayerid);
//				gPlayerLogged[giveplayerid] = 0;
//				SendClientMessage(playerid, COLOR_GRAD1, "   player was logged out.");
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay !");
//		}
//	}
//	return 1;
//}
//CMD:logoutall(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pAdmin] >= 4)
//		{
//			for (new i = 0; i < MAX_PLAYERS; i++)
//			{
//				if (IsLogOn(i))
//				{
//					SavePlayer(i);
//					gPlayerLogged[i] = 0;
//				}
//			}
//			SendClientMessage(playerid, COLOR_GRAD1, "   All Players Logged out.");
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay !");
//		}
//	}
//	return 1;
//}
CMD:cnnn(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new txtid;
			new result[255], string[255];
			if (sscanf(params, "is[255]", txtid, result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
				return 1;
			}
			format(string, sizeof(string), "~w~%s", result);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i) == 1)
				{
					GameTextForPlayer(i, string, 5000, txtid);
				}
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
			return 1;
		}
	}
	return 1;
}
CMD:prison(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong the su dung lenh nay !");
			return 1;
		}
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /prison [playerid/PartOfName]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "* Ban da tong giam %s den Fort DeMorgan.", GN(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "* Ban bi tong giam vao Fort DeMorgan boi Admin %s.", GN(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
				GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
				SafeResetPlayerWeapons(giveplayerid);
				WantedPoints[giveplayerid] = 0;
				WantedLevel[giveplayerid] = 0;
				PlayerInfo[giveplayerid][pJailed] = 2;
				PlayerInfo[giveplayerid][pJailTime] = 3600;
				SetPlayerPos(giveplayerid, 107.2300, 1920.6311, 18.5208);
				SetPlayerWorldBounds(giveplayerid, 337.5694, 101.5826, 1940.9759, 1798.7453); //285.3481,96.9720,1940.9755,1799.0811
				SetPlayerInterior(giveplayerid, 0);
				PlayerInfo[giveplayerid][pInt] = 0;
				format(string, 256, "AdmCMD: %s da bi giam boi Admin %s.", GN(giveplayerid), GN(playerid));
				BroadCast(COLOR_LIGHTRED, string);
				format(string, sizeof(string), "AdmCMD: %s da bi giam boi Admin %s", GN(giveplayerid), GN(playerid));
				printf("%s", string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:unprison(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong the su dung lenh nay!");
			return 1;
		}
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /unprison [playerid/Ten]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "* Ban da tha tu do cho %s.", GN(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "* Ban da duoc tha tu do boi Admin %s.", GN(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
				PlayerInfo[giveplayerid][pJailTime] = 0;
				PlayerInfo[giveplayerid][pJailed] = 0;
				SetPlayerWorldBounds(giveplayerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
				SetPlayerPos(giveplayerid, 93.4852, 1920.6235, 18.0450);
				SetPlayerInterior(giveplayerid, 0);
				PlayerInfo[giveplayerid][pInt] = 0;
				PlayerInfo[giveplayerid][pVirWorld] = 0;
				SetVirtualWorld(giveplayerid, 0);
				format(string, 256, "AdmCMD: %s has da duoc tha tu do boi Admin %s.", GN(giveplayerid), GN(playerid));
				BroadCast(COLOR_LIGHTRED, string);
				format(string, 256, "AdmWarning: %s da duoc tha tu do boi Admin %s.", GN(giveplayerid), GN(playerid));
				ABroadCast(COLOR_YELLOW, string, 1);
			}
		}
	}
	return 1;
}
CMD:ajail(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new result[255], playa, string[255], money;
		if (sscanf(params, "uis[255]", playa, money, result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /ajail [playerid/Ten] [time(minutes)] [Ly do]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >=2)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin])
						return SCM(playerid, COLOR_GREY, "Ban khong the jail nguoi nay.");

					if (PlayerInfo[playerid][pHelper] >= 2 && money > 30) return SCM(playerid, COLOR_GREY, "CA chi co the giam toi da 30 phut.");
					format(string, sizeof(string), "* Ban da giam %s.", GN(playa));
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					if (PlayerInfo[playerid][pAdmin] >= 1)
						format(string, sizeof(string), "* Ban da bi giam boi Admin %s.", GN(playerid));
					else if (PlayerInfo[playerid][pHelper] >= 2)
						format(string, sizeof(string), "* Ban da bi giam boi CA %s.", GN(playerid));
					SendClientMessage(playa, COLOR_LIGHTRED, string);
					SafeResetPlayerWeapons(playa);
					WantedPoints[playa] = 0;
					PlayerInfo[playa][pJailed] = 1;
					PlayerInfo[playa][pJailTime] = money * 60;
					SetPlayerInterior(playa, 6);
					PlayerInfo[playa][pInt] = 6;
					SetPlayerPos(playa, 264.6288, 77.5742, 1001.0391);
					format(string, sizeof(string), "Ban bi giam trong vong %d phut. Tien the chan: Khong the", money);
					SendClientMessage(playa, COLOR_WHITE, string);
					if (PlayerInfo[playerid][pAdmin] >= 1)
						format(string, 256, "AdmCMD: %s da bi giam boi Admin %s. Ly do: %s", GN(playa), GN(playerid), (result));
					else if (PlayerInfo[playerid][pHelper] >= 2)
						format(string, 256, "AdmCMD: %s da bi giam boi CA %s. Ly do: %s", GN(playa), GN(playerid), (result));
					BroadCast(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "AdmCMD: %s da bi giam boi %s. Ly do: %s", GN(playa), GN(playerid), (result));
					printf("%s", string);
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
	}
	return 1;
}
CMD:tod(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new hour, string[255];
		if (sscanf(params, "i", hour))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /tod [timeofday] (0-23)");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			SetWorldTime(hour);
			format(string, sizeof(string), "   Time set to %d Hours.", hour);
			BroadCast(COLOR_GRAD1, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay !");
		}
	}
	return 1;
}
CMD:startlotto(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new string[255];
			format(string, sizeof(string), "Lottery News: Chung toi vua bat dau xo so Lottery.");
			OOCOff(COLOR_DBLUE, string);
			new rand = random(80);
			if (rand < 77) { rand += 3; }
			Lotto(rand);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin !");
			return 1;
		}
	}
	return 1;
}
CMD:setstat(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[255], stat, amount;
		if (sscanf(params, "uii", giveplayerid, stat, amount))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /setstat [playerid/PartOfName] [statcode] [amount]");
			SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model |5 BankAccount");
			SendClientMessage(playerid, COLOR_GRAD3, "|6 PhoneNumber |7 RespectPoints |8 HouseKey |9 BizKey |10 DonateRank");
			SendClientMessage(playerid, COLOR_GRAD2, "|11 FMember |12 Det |13 Lawyer |14 Fixer |15 News |16 Jack |17 Drug");
			SendClientMessage(playerid, COLOR_GRAD2, "|18 Sex |19 Box |20 PassKey |21 VehKey1 |22 VehKey2 |23 VehKey3");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[playerid][pAdmin] >= 1337)
				{
					switch (stat)
					{
					case 1:
					{
						PlayerInfo[giveplayerid][pLevel] = amount;
						format(string, sizeof(string), "   The Player Was Set To Level %d", amount);
						SetPlayerScore(giveplayerid, amount);
					}
					case 2:
					{
						PlayerInfo[giveplayerid][pSHealth] = amount;
						format(string, sizeof(string), "   The Player Was Set To %d Spawnhealth ", amount);
					}
					case 3:
					{
						PlayerInfo[giveplayerid][gPupgrade] = amount;
						format(string, sizeof(string), "   The Player Was Set To %d Upgrade Points", amount);
					}
					case 4:
					{
						PlayerInfo[giveplayerid][pModel] = amount;
						format(string, sizeof(string), "   The Player Was Set To Model %d", amount);
					}
					case 5:
					{
						PlayerInfo[giveplayerid][pAccount] = amount;
						format(string, sizeof(string), "   The Player Account Was Set To $%d", amount);
					}
					case 6:
					{
						PlayerInfo[giveplayerid][pPnumber] = amount;
						format(string, sizeof(string), "   The Player Phone Number Was Set To %d", amount);
					}
					case 7:
					{
						PlayerInfo[giveplayerid][pExp] = amount;
						format(string, sizeof(string), "   The Player Respect Points Were Set To %d", amount);
					}
					case 8:
					{
						PlayerInfo[giveplayerid][pPhousekey] = amount;
						format(string, sizeof(string), "   The Player House Key Was Set To %d", amount);
					}
					case 9:
					{
						PlayerInfo[giveplayerid][pPbiskey] = amount;
						format(string, sizeof(string), "   The Player Business Key Was Set To %d", amount);
					}
					case 10:
					{
						PlayerInfo[giveplayerid][pDonateRank] = amount;
						format(string, sizeof(string), "   The Player DonateRank Was Set To %d", amount);
					}
					case 11:
					{
						PlayerInfo[giveplayerid][pFMember] = amount;
						format(string, sizeof(string), "   The Player Family Member Was Set To %d", amount);
					}
					case 12:
					{
						PlayerInfo[giveplayerid][pDetSkill] = amount;
						format(string, sizeof(string), "   The Player Detective Skill Set To %d", amount);
					}
					case 13:
					{
						PlayerInfo[giveplayerid][pLawSkill] = amount;
						format(string, sizeof(string), "   The Player Lawyer Skill Set To %d", amount);
					}
					case 14:
					{
						PlayerInfo[giveplayerid][pMechSkill] = amount;
						format(string, sizeof(string), "   The Player Car Mechanic Skill Set To %d", amount);
					}
					case 15:
					{
						PlayerInfo[giveplayerid][pNewsSkill] = amount;
						format(string, sizeof(string), "   The Player News Reporter Skill Set To %d", amount);
					}
					case 16:
					{
						PlayerInfo[giveplayerid][pJackSkill] = amount;
						format(string, sizeof(string), "   The Player Car Jacker Skill Set To %d", amount);
					}
					case 17:
					{
						PlayerInfo[giveplayerid][pDrugsSkill] = amount;
						format(string, sizeof(string), "   The Player Drug Dealer Skill Set To %d", amount);
					}
					case 18:
					{
						PlayerInfo[giveplayerid][pSexSkill] = amount;
						format(string, sizeof(string), "   The Player Sex Skill Set To %d", amount);
					}
					case 19:
					{
						PlayerInfo[giveplayerid][pBoxSkill] = amount;
						format(string, sizeof(string), "   The Player Box Skill Set To %d", amount);
					}
					/*case 21:
					{
						PlayerInfo[giveplayerid][pPcarkey][0] = amount;
						format(string, sizeof(string), "   The Player VehKey1 Set To %d", amount);
					}
					case 22:
					{
						PlayerInfo[giveplayerid][pPcarkey][1] = amount;
						format(string, sizeof(string), "   The Player VehKey2 Set To %d", amount);
					}
					case 23:
					{
						PlayerInfo[giveplayerid][pPcarkey][2] = amount;
						format(string, sizeof(string), "   The Player VehKey3 Set To %d", amount);
					}*/
					case 77:
					{
						PlayerInfo[giveplayerid][pJob] = amount;
						format(string, sizeof(string), "   The Player Job Set To %d", amount);
					}
					/*case 88:
					{
						PlayerInfo[giveplayerid][pContractTime] = amount;
						format(string, sizeof(string), "   The Player Job Contract Time Set To %d", amount);
					}*/
					default:
					{
						format(string, sizeof(string), "   Invalid Stat Code", amount);
					}

					}
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
				}
			}//not valid id
		}//not connected
	}
	return 1;
}
	/*if(strcmp(cmd, "/setfamily", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
	return 1;
	}
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /setfamily [Family] [code] [amount]");
	SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
	return 1;
	}
	new family;
	family = strval(tmp);
	if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
	family -= 1;
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /setfamily [Family] [code] [amount]");
	SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
	return 1;
	}
	new stat;
	stat = strval(tmp);
	if(stat < 1 || stat > 1) { SendClientMessage(playerid, COLOR_GREY, "   Stat Code can't be below 1 or above 1 !"); return 1; }
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /setfamily [Family] [code] [amount]");
	SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
	return 1;
	}
	new amount;
	amount = strval(tmp);
	if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Amount can't be below 1 or above 10 !"); return 1; }
	switch (stat)
	{
	case 1:
	{
	FamilyInfo[family][fMembers] = amount;
	format(string, sizeof(string), "   Family %s set to %d members", FamilyInfo[family][fName], amount);
	}
	default:
	{
	format(string, sizeof(string), "   Invalid Stat Code");
	}
	}
	SendClientMessage(playerid, COLOR_GREY, string);
	}
	return 1;
	}*/
CMD:setint(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, intid, string[255];
		if (sscanf(params, "ui", playa, intid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setint [playerid/PartOfName] [interiorid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SetPlayerInterior(playa, intid);
					PlayerInfo[playa][pInt] = intid;
					format(string, sizeof(string), "   You havae set %s interior to %d.", GN(playa), intid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   %s has set your interior to %d.", GN(playerid), intid);
					SendClientMessage(playa, COLOR_GRAD1, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co quyen nay to use that command!");
		}
	}
	return 1;
}
CMD:setvw(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, virid, string[255];
		if (sscanf(params, "ui", playa, virid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setvw [playerid/PartOfName] [virworldid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SetVirtualWorld(playa, virid);
					format(string, sizeof(string), "   You have set %s virtual world to %d.", GN(playa), virid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   %s have set your virtual world to %d.", GN(playerid), virid);
					SendClientMessage(playa, COLOR_GRAD1, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:skydive(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			GetPlayerPos(playerid, rx, ry, rz);
			if (IsLogOn(playerid))
			{
				SafeGivePlayerWeapon(playerid, 46, 0);
				SetPlayerPos(playerid, rx, ry, rz + 1500);
				SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:fourdive(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1;
		new para2;
		new para3;
		new para4;
		if (sscanf(params, "uuuu", para1, para2, para3, para4))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
			return 1;
		}
		
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(para1)) { SafeGivePlayerWeapon(para1, 46, 0); SetPlayerPos(para1, 1536.0, -1360.0, 1350.0); SetPlayerInterior(para1, 0); PlayerInfo[para1][pInt] = 0; SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!"); }
			if ((IsLogOn(para2)) && (para2>0)) { SafeGivePlayerWeapon(para2, 46, 0); SetPlayerPos(para2, 1536.0, -1345.0, 1350.0); SetPlayerInterior(para2, 0); PlayerInfo[para2][pInt] = 0; SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!"); }
			if ((IsLogOn(para3)) && (para3>0)) { SafeGivePlayerWeapon(para3, 46, 0); SetPlayerPos(para3, 1552.0, -1345.0, 1350.0); SetPlayerInterior(para3, 0); PlayerInfo[para3][pInt] = 0; SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!"); }
			if ((IsLogOn(para4)) && (para4>0)) { SafeGivePlayerWeapon(para4, 46, 0); SetPlayerPos(para4, 1552.0, -1360.0, 1350.0); SetPlayerInterior(para4, 0); PlayerInfo[para4][pInt] = 0; SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!"); }
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:invite(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, string[255];
		new ftext[20];
		if (sscanf(params, "u", para1))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /invite [playerid/Ten]");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] >= 1)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{
					if (gTeam[para1] != TEAMVILLAIN && PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pFMember] == 255)
					{
						PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
						PlayerInfo[para1][pRank] = 1;
						SetPlayerToTeam(para1);
						new fid = PlayerInfo[playerid][pMember];
						if (fid == 0)
							fid = PlayerInfo[playerid][pLeader];
						format(ftext, sizeof(ftext), "%s", GetFactionName(fid));
						printf("AdmCMD: %s da moi %s tham gia vao %s.", GN(playerid), GN(para1), ftext);
						format(string, sizeof(string), "   Ban da tham gia vao %s, ban duoc moi boi leader %s", ftext, GN(playerid));
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), "   Ban da moi %s tham gia vao %s.", GN(para1), ftext);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi dang bi truy na / lam viec cho to chuc khac/ thanh vien gangsters.");
						return 1;
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:uninvite(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, pname[50], string[255], str[128];
		if (sscanf(params, "s[50]", pname))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /uninvite [playername]");
		para1 = GetPlayerIDFromName(pname);
		if (PlayerInfo[playerid][pLeader] >= 1)
		{
			new fid = PlayerInfo[playerid][pLeader];
			if (para1 != INVALID_PLAYER_ID)
			{
				if (!IsLogOn(para1)) return SCM(playerid, COLOR_GREY, "Nguoi choi nay chua dang nhap.");
				if (PlayerInfo[para1][pMember] == fid)
				{
					printf("AdmCMD: %s da moi %s ra khoi faction.", GN(playerid), GN(para1));
					format(string, sizeof(string), "* Ban da bi kick ra khoi Family/To chuc, boi Leader %s.", GN(playerid));
					SendClientMessage(para1, COLOR_WHITE, string);
					SendClientMessage(para1, COLOR_WHITE, "* Bay gio ban la mot cong dan binh thuong.");
					gTeam[para1] = TEAMCIVILLAIN;
					PlayerInfo[para1][pTeam] = TEAMCIVILLAIN;
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pRank] = 0;
					PlayerInfo[para1][pChar] = 0;
					OnDuty[para1] = 0;
					new rand = random(sizeof(CIV));
					//SetSpawnInfo(para1, gTeam[para1], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
					PlayerInfo[para1][pModel] = CIV[rand];
					SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
					PlayerInfo[para1][pHospital] = 0;
					//SpawnPlayer(para1);
					SafeResetPlayerWeapons(para1);
					format(string, sizeof(string), "   Ban da kick %s ra khoi Family/To chuc.", GN(para1));
					SendClientMessage(playerid, COLOR_WHITE, string);
					SavePlayer(para1);
				}
				else SCM(playerid, COLOR_GREY, "Nguoi choi kia khong trong to chuc cua ban.");
			}
			else
			{
				new sql[400];
				format(sql, sizeof(sql), "SELECT * FROM user WHERE Name = '%s' AND Leader = %d", pname, fid);
				mysql_query(conn, sql);
				new row;
				cache_get_row_count(row);
				if (row > 0)
					return SCM(playerid, COLOR_GREY, "Nguoi choi nay la leader, khong the kick.");
				else
				{
					format(sql, sizeof(sql), "SELECT * FROM user WHERE Name = '%s' AND Member = %d", pname, fid);
					mysql_query(conn, sql);
					cache_get_row_count(row);
					if (row > 0)
					{
						format(sql, sizeof(sql), "UPDATE `user` SET `Member` = 0, `Rank` = 0, `Team` = 3, `Char` = 0 WHERE `Name` = '%s'", pname);
						mysql_query(conn, sql);
						format(str, sizeof(str), "Ban da moi %s ra khoi to chuc.", pname);
						SCM(playerid, COLOR_WHITE, str);
					}
					else SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai hoac khong phai la member Faction.");
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
	}
	return 1;
}
CMD:makeadmin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, level, string[255];
		if (sscanf(params, "ui", para1, level))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /makeadmin [playerid/Ten] [level(1-3)]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{
					PlayerInfo[para1][pAdmin] = level;
					PlayerInfo[para1][pHelper] = 0;
					printf("AdmCMD: %s da thang cap cho %s thanh level %d admin.", GN(playerid), GN(para1), level);
					format(string, sizeof(string), "   Ban da duoc thang cap den level %d admin boi %s", level, GN(playerid));
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "   Ban da thang cap cho %s thanh level %d admin.", GN(para1), level);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:makehelper(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
	new pma, rank;
	if (sscanf(params, "ui", pma, rank))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /makehelper [Ten/ID Nguoi Choi] [Loai Advisor]");
		SendClientMessage(playerid, COLOR_GRAD2, "[Loai Advisor]: 1.Tro Giup || 2.Co Van ");
		return 1;
	}
	if (PlayerInfo[pma][pAdmin] >= 1) return 1;
	if (rank <0 || rank>2) return SendClientMessage(playerid, COLOR_GRAD1, "Loai Advisor khong hop le.");
	if (IsLogOn(pma))
	{
		if (pma != INVALID_PLAYER_ID)
		{
			new string[255];
			PlayerInfo[pma][pAdmin] = 0;
			PlayerInfo[pma][pHelper] = rank;
			printf("AdmCMD: %s da thang cap cho %s thanh %s (%d).", GN(playerid), HP(pma), GN(pma), rank);
			format(string, sizeof(string), "   Ban da duoc thang cap thanh %s (%d) boi %s", HP(pma), rank, GN(playerid));
			SendClientMessage(pma, COLOR_WHITE, string);
			format(string, sizeof(string), "   Ban da thang cap cho %s thanh %s (%d).", GN(pma), HP(pma), rank);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}
CMD:makeircadmin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, channel, string[255];
		if (sscanf(params, "ui", giveplayerid, channel))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /makeircadmin [playerid/PartOfName] [ChannelNr]");
			return 1;
		}
		if (channel > 10 || channel < 0) { SendClientMessage(playerid, COLOR_GREY, "   Khong the duoi 0, hoac tren 10!"); return 1; }
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{

					format(string, sizeof(string), "* You've made %s an IRC Admin over Channel %d.", GN(giveplayerid), channel);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s has made you an IRC Admin over Channel %d.", GN(playerid), channel);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "%s", GN(giveplayerid));
					switch (channel)
					{
					case 1:
					{
						strmid(IRCInfo[0][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[0][iNeedPass] = 0; IRCInfo[0][iLock] = 0;
					}
					case 2:
					{
						strmid(IRCInfo[1][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[1][iNeedPass] = 0; IRCInfo[1][iLock] = 0;
					}
					case 3:
					{
						strmid(IRCInfo[2][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[2][iNeedPass] = 0; IRCInfo[2][iLock] = 0;
					}
					case 4:
					{
						strmid(IRCInfo[3][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[3][iNeedPass] = 0; IRCInfo[3][iLock] = 0;
					}
					case 5:
					{
						strmid(IRCInfo[4][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[4][iNeedPass] = 0; IRCInfo[4][iLock] = 0;
					}
					case 6:
					{
						strmid(IRCInfo[5][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[5][iNeedPass] = 0; IRCInfo[5][iLock] = 0;
					}
					case 7:
					{
						strmid(IRCInfo[6][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[6][iNeedPass] = 0; IRCInfo[6][iLock] = 0;
					}
					case 8:
					{
						strmid(IRCInfo[7][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[7][iNeedPass] = 0; IRCInfo[7][iLock] = 0;
					}
					case 9:
					{
						strmid(IRCInfo[8][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[8][iNeedPass] = 0; IRCInfo[8][iLock] = 0;
					}
					case 10:
					{
						strmid(IRCInfo[9][iAdmin], string, 0, strlen(string), 255);
						IRCInfo[9][iNeedPass] = 0; IRCInfo[9][iLock] = 0;
					}
					}
					SaveIRC();
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong the su dung lenh nay !");
			return 1;
		}
	}
	return 1;
}
stock CreateNewFamily(leadername[], fname[])
{
	new sql[128];
	format(sql, sizeof(sql), "INSERT INTO family \
		(`Taken`, `Name`, `Leader`) VALUES \
				(1, '%s', '%s')", fname, leadername);
	mysql_query(conn, sql);
	new newid = cache_insert_id();
	new fid = -1;
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if (FamilyInfo[i][fID] == -1)
		{
			fid = i;
			break;
		}
	}

	FamilyInfo[fid][fID] = newid;
	format(FamilyInfo[fid][fName], 50, fname);
	format(FamilyInfo[fid][fLeader], MAX_PLAYER_NAME, leadername);
	FamilyInfo[fid][fHouseHQ] = -1;
	FamilyInfo[fid][fMembers] = 1;
	FamilyInfo[fid][fTaken] = 1;
	for (new i = 0; i < 7; i++)
	{
		if (i == 0)
			format(FamilyTitle[fid][i], 25, "Nguoi Ngoai");
		else format(FamilyTitle[fid][i], 25, "No Title");
	}
	format(FamilyInfo[fid][fMOTD], 128, "None");
	format(FamilyInfo[fid][fColor], 20, "0xFFFFFF00");

	foreach(new playerid : Player)
	{
		if (!strcmp(GLN(playerid), leadername, false))
		{
			PlayerInfo[playerid][pFMember] = fid;
			break;
		}
	}
	SaveFamilies();
	return fid;
}
stock CountFamilies()
{
	new count = 0;
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if (FamilyInfo[i][fID] != -1)
			count++;
	}
	return count;
}
stock ClearFamilies()
{
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		format(FamilyInfo[i][fMOTD], 128, "None");
		format(FamilyInfo[i][fColor], 20, "0xFFFFFF00");
		FamilyInfo[i][fID] = -1;
		format(FamilyInfo[i][fLeader], MAX_PLAYER_NAME, "None");
		for (new z = 0; z < 7; z++)
		{
			if (z == 0)
				format(FamilyTitle[i][z], 25, "Nguoi Ngoai");
			else 
				format(FamilyTitle[i][z], 25, "No Title");
		}
	}
	return 1;
}
CMD:makefleader(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Ban khong co quyen su dung lenh nay.");
	new pid, fid, str[128];
	if (sscanf(params, "ui", pid, fid))
	{
		SCM(playerid, COLOR_GRAD2, "Su dung: /makefleader [playerid] [family id]");
		SCM(playerid, COLOR_GRAD2, "/families de xem ID");
		return 1;
	}
	if (pid == INVALID_PLAYER_ID || !IsLogOn(pid)) return SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai hoac chua dang nhap");
	if (PlayerInfo[pid][pLeader] != 0) return SCM(playerid, COLOR_GREY, "Nguoi choi nay la leader cua mot to chuc.");
	if (FamilyInfo[fid][fID] == -1) return SCM(playerid, COLOR_GREY, "Khong ton tai Family nay.");
	format(FamilyInfo[fid][fLeader], MAX_PLAYER_NAME, "%s", GLN(pid));
	format(str, sizeof(str), "[Family] %s tro thanh Leader moi cua Family", GN(pid));
	SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
	format(str, sizeof(str), "AdmCMD: %s da make cho %s thanh leader family %s!", GN(playerid), GN(pid), FamilyInfo[fid][fName]);
	SendAdminMessage(COLOR_LIGHTRED, str);
	PlayerInfo[pid][pFMember] = fid;
	PlayerInfo[pid][pMember] = 0;
	SaveFamilies();
	SavePlayer(pid);
	return 1;
}
CMD:makefamily(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Ban khong co quyen su dung lenh nay.");
	if (CountFamilies() == sizeof(FamilyInfo)+1) return SCM(playerid, COLOR_GREY, "Da max Family");
	new pleader, name[50], str[128];
	if (sscanf(params, "us[50]", pleader, name)) return SCM(playerid, COLOR_GREY, "Su dung: /makefamily [playerid] [family name]");
	if (pleader == INVALID_PLAYER_ID || !IsLogOn(pleader)) return 1;
	if (PlayerInfo[pleader][pLeader] != 0 || PlayerInfo[pleader][pMember] != 0 || PlayerInfo[pleader][pFMember] != 255)
		return SCM(playerid, COLOR_GREY, "Nguoi choi nay hien dang trong mot to chuc.");
	CreateNewFamily(GLN(pleader), name);
	format(str, sizeof(str), "AdmCMD: %s da tao Family %s thanh cong - Leader: %s)", GN(playerid), name, GLN(pleader));
	SendAdminMessage(COLOR_LIGHTRED, str);
	SavePlayer(pleader);
	printf("%s", str);
	return 1;
}
CMD:makeleader(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, level, string[255];
		if (sscanf(params, "ui", para1, level))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /makeleader [playerid/Ten] [Number(1-10)]");
			return 1;
		}
		if (level > 17 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   Khong the duoi 0, hoac tren 16!"); return 1; }
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{
					new leaderid = GetFamilyIDLeader(para1);
					if (leaderid != -1) return SCM(playerid, COLOR_GREY, "Nguoi chua kia hien tai la leader cua mot Family.");
					PlayerInfo[para1][pLeader] = level;
					format(string, sizeof(string), "   Ban da duoc thang chuc thanh Leader cho Faction, boi Admin %s", GN(playerid));
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "   Ban da dua %s len  leader faction so %d.", GN(para1), level);
					SendClientMessage(playerid, COLOR_WHITE, string);
					if (level == 0) { PlayerInfo[para1][pChar] = 0; PlayerInfo[para1][pRank] = 0; gTeam[para1] = TEAMCIVILLAIN; PlayerInfo[para1][pTeam] = 0; return 1; }
					else if (level == 1) { PlayerInfo[para1][pChar] = 288; } //Police Force
					else if (level == 2) { PlayerInfo[para1][pChar] = 286; } //FBI/ATF
					else if (level == 3) { PlayerInfo[para1][pChar] = 287; } //National Guard
					else if (level == 4) { PlayerInfo[para1][pChar] = 228; } //Fire/Ambulance
					//else if (level == 5) { PlayerInfo[para1][pChar] = 175; } //Surenos
					//else if (level == 6) { PlayerInfo[para1][pChar] = 113; } //La Famiglia Sinatra
					else if (level == 7) { PlayerInfo[para1][pChar] = 147; } //Mayor
					else if (level == 8) { PlayerInfo[para1][pChar] = 20; } //Hitmans
					else if (level == 9) { PlayerInfo[para1][pChar] = 227; } //News Reporters
					else if (level == 10) { PlayerInfo[para1][pChar] = 61; } //Taxi Cab Company
					//else if (level == 11) { PlayerInfo[para1][pChar] = 171; } //Driving/Flying School
					//else if (level == 14) { PlayerInfo[para1][pChar] = 294; } //Yamaguchi
					//else if (level == 15) { PlayerInfo[para1][pChar] = 271; } //47th Street Saints Families
					//else if (level == 16) { PlayerInfo[para1][pChar] = 19; } //East Side Bloods
					else if (level == 17) { PlayerInfo[para1][pChar] = 71; } //DOC

					if (level == 0)
					{
						gTeam[para1] = TEAMCIVILLAIN;
						PlayerInfo[para1][pTeam] = TEAMCIVILLAIN;
					}
					else if (level == 1 || level == 2 || level == 3 || level == 4 || level == 17 || level == 7)
					{
						gTeam[para1] = TEAMGOV;
						PlayerInfo[para1][pTeam] = TEAMGOV;
					}
					
					if (level == 0)
						PlayerInfo[para1][pRank] = 0;
					else
						PlayerInfo[para1][pRank] = 6;

					if (PlayerInfo[para1][pChar] == 0)
						SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
					else SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					PlayerInfo[para1][pFMember] = 255;
					SavePlayer(para1);
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
//CMD:forceskin(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new para1, string[255];
//		if (sscanf(params, "u", para1))
//		{
//			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /forceskin [playerid/Ten]");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pAdmin] >= 4)
//		{
//			if (IsLogOn(para1))
//			{
//				if (para1 != INVALID_PLAYER_ID)
//				{
//					if (PlayerInfo[para1][pMember] < 1)
//					{
//						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong thuoc Family / To chuc nao !");
//						return 1;
//					}
//
//					format(string, sizeof(string), "* Ban da buoc phai thay doi skin boi Admin %s.", GN(playerid));
//					SendClientMessage(para1, COLOR_WHITE, string);
//					format(string, sizeof(string), "* Ban da buoc %s thay doi Skin.", GN(para1));
//					SendClientMessage(playerid, COLOR_WHITE, string);
//					if (PlayerInfo[para1][pMember] == 1) { PlayerInfo[para1][pTeam] = TEAMGOV; ChosenSkin[para1] = 59; }
//					else if (PlayerInfo[para1][pMember] == 2) { PlayerInfo[para1][pTeam] = TEAMGOV; ChosenSkin[para1] = 121; }
//					else if (PlayerInfo[para1][pMember] == 3) { PlayerInfo[para1][pTeam] = TEAMGOV; ChosenSkin[para1] = 98; }
//					else if (PlayerInfo[para1][pMember] == 4) { PlayerInfo[para1][pTeam] = TEAMGOV; ChosenSkin[para1] = 46; }
//					else if (PlayerInfo[para1][pMember] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
//					//else if(PlayerInfo[para1][pMember] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 111; }
//					else if (PlayerInfo[para1][pMember] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
//					else if (PlayerInfo[para1][pMember] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
//					else { return 1; }
//					SetPlayerInterior(para1, 0);
//					new rand = random(sizeof(gInviteSpawns));
//					SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
//					SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
//					SetPlayerCameraPos(para1, gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//					SetPlayerCameraLookAt(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//					TogglePlayerControllable(para1, 0);
//					SelectChar[para1] = 255;
//					SelectCharID[para1] = PlayerInfo[para1][pMember];
//					SelectCharPlace[para1] = 1;
//					PlayerInfo[para1][pModel] = ChosenSkin[para1];
//					PlayerInfo[para1][pChar] = ChosenSkin[para1];
//					SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'next' to Select the char you want to use.");
//					SendClientMessage(para1, COLOR_LIGHTRED, "* If you've found the Char you want to use, type 'done'.");
//				}
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
//		}
//	}
//	return 1;
//}
CMD:setskin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, level, string[255];
		if (sscanf(params, "ui", para1, level))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setskin [playerid/PartOfName] [skin id]");
			return 1;
		}
		if (level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Wrong skin ID!"); return 1; }
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{
					PlayerInfo[para1][pChar] = level;
					format(string, sizeof(string), "Skin cua ban da duoc thay doi boi Admin %s", GN(playerid));
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "Ban da thay doi %s skin thanh %d.", GN(para1), level);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:giverank(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, level, string[255];
		if (sscanf(params, "ui", para1, level))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /giverank [playerid/Ten] [Number(1-6)]");
			return 1;
		}
		if (level > 9 || level < 0) { SendClientMessage(playerid, COLOR_GREY, " SERVER: To chuc chi co 1-6 ranks."); return 1; }
		if (PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[para1][pMember] != 2)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 3 && PlayerInfo[para1][pMember] != 3)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 4 && PlayerInfo[para1][pMember] != 4)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 5 && PlayerInfo[para1][pMember] != 5)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		/*
		if(PlayerInfo[playerid][pLeader] == 6 && PlayerInfo[para1][pMember] != 6)
		{
		SendClientMessage(playerid, COLOR_GRAD2, "Access denied!");
		return 1;
		}
		*/
		if (PlayerInfo[playerid][pLeader] == 7)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 8 && PlayerInfo[para1][pMember] != 8)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 9 && PlayerInfo[para1][pMember] != 9)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 10 && PlayerInfo[para1][pMember] != 10)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 11 && PlayerInfo[para1][pMember] != 11)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 12 && PlayerInfo[para1][pMember] != 12)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 13 && PlayerInfo[para1][pMember] != 13)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		if (PlayerInfo[playerid][pLeader] == 14 && PlayerInfo[para1][pMember] != 14)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Tu choi truy cap!");
			return 1;
		}
		/*
		if(PlayerInfo[playerid][pLeader] == 15 && PlayerInfo[para1][pMember] != 15)
		{
		SendClientMessage(playerid, COLOR_GRAD2, "Access denied!");
		return 1;
		}
		if(PlayerInfo[playerid][pLeader] == 16 && PlayerInfo[para1][pMember] != 16)
		{
		SendClientMessage(playerid, COLOR_GRAD2, "Access denied!");
		return 1;
		}
		*/
		if (PlayerInfo[playerid][pLeader] >= 1)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{
					PlayerInfo[para1][pRank] = level;
					format(string, sizeof(string), " Ban da duoc thang cap cao hon boi Leader %s", GN(playerid));
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), " Ban da thang cap cho %s den Rank %d.", GN(para1), level);
					SendClientMessage(playerid, COLOR_WHITE, string);
					if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 266; SetPlayerSkin(para1, 266); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 267; SetPlayerSkin(para1, 267); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 265; SetPlayerSkin(para1, 265); }
							else if (PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 276; SetPlayerSkin(para1, 276); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 275; SetPlayerSkin(para1, 275); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 275; SetPlayerSkin(para1, 275); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 70; SetPlayerSkin(para1, 70); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 228; SetPlayerSkin(para1, 228); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 223; SetPlayerSkin(para1, 223); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 258; SetPlayerSkin(para1, 258); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 126; SetPlayerSkin(para1, 126); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 98; SetPlayerSkin(para1, 98); }
							else if (PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 127; SetPlayerSkin(para1, 127); }
							else if (PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 41; SetPlayerSkin(para1, 41);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 163; SetPlayerSkin(para1, 163); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 227; SetPlayerSkin(para1, 227); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 164; SetPlayerSkin(para1, 164); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 17; SetPlayerSkin(para1, 17); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 147; SetPlayerSkin(para1, 147); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 126; SetPlayerSkin(para1, 126); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 295; SetPlayerSkin(para1, 295); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 272; SetPlayerSkin(para1, 272); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 28; SetPlayerSkin(para1, 28); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 219; SetPlayerSkin(para1, 219); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 67; SetPlayerSkin(para1, 67); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 180; SetPlayerSkin(para1, 180); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 19; SetPlayerSkin(para1, 19); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 22; SetPlayerSkin(para1, 22); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 233; SetPlayerSkin(para1, 233);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 107; SetPlayerSkin(para1, 107); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 106; SetPlayerSkin(para1, 106); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 105; SetPlayerSkin(para1, 105); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 269; SetPlayerSkin(para1, 269); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 270; SetPlayerSkin(para1, 270); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 271; SetPlayerSkin(para1, 271); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 293; SetPlayerSkin(para1, 293); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 105; SetPlayerSkin(para1, 105); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 107; SetPlayerSkin(para1, 107); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 106; SetPlayerSkin(para1, 106); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 269; SetPlayerSkin(para1, 269); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 270; SetPlayerSkin(para1, 270); }
							else if (PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 271; SetPlayerSkin(para1, 271); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
						}
					}
					else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
					{
						if (PlayerInfo[para1][pSex] == 1)
						{
							//Male Skin
							if (PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 7; SetPlayerSkin(para1, 7); }
							else if (PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 28; SetPlayerSkin(para1, 28); }
							else if (PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 28; SetPlayerSkin(para1, 28); }
							else if (PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 67; SetPlayerSkin(para1, 67); }
							else if (PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 67; SetPlayerSkin(para1, 67); }
							else if (PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 180; SetPlayerSkin(para1, 180); }
							else if (PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 180; SetPlayerSkin(para1, 180); }
							else if (PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 144; SetPlayerSkin(para1, 144); }
							else if (PlayerInfo[para1][pRank] == 9) { PlayerInfo[para1][pChar] = 19; SetPlayerSkin(para1, 19); }
						}
						else if (PlayerInfo[para1][pSex] == 2)
						{
							PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
						}
					}
					/*
					else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					{
					if(PlayerInfo[para1][pSex] == 1)
					{
					//Male Skin
					if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					}
					else if(PlayerInfo[para1][pSex] == 2)
					{
					PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
					}
					}
					else if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
					{
					if(PlayerInfo[para1][pSex] == 1)
					{
					//Male Skin
					if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					}
					else if(PlayerInfo[para1][pSex] == 2)
					{
					PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
					}
					}
					else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
					{
					if(PlayerInfo[para1][pSex] == 1)
					{
					//Male Skin
					if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
					else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
					}
					else if(PlayerInfo[para1][pSex] == 2)
					{
					PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
					}
					}
					else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
					{
					if(PlayerInfo[para1][pSex] == 1)
					{
					//Male Skin
					if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
					else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
					else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
					else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
					else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
					else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
					}
					else if(PlayerInfo[para1][pSex] == 2)
					{
					PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
					}
					}*/
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, " Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
//CMD:setteam(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new para1, level, string[255];
//		if (sscanf(params, "ui", para1, level))
//		{
//			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setteam [playerid/PartOfName] [team 1(civ) - 2(cop)]");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pAdmin] >= 2)
//		{
//			if (IsLogOn(para1))
//			{
//				if (para1 != INVALID_PLAYER_ID)
//				{
//					PlayerInfo[para1][pTeam] = level;
//					gTeam[para1] = level;
//					SetPlayerWeapons(para1);
//					//SetPlayerSpawn(para1);
//					//ClearCrime(para1);
//					printf("AdmCMD: %s da chuyen %s den doi %d.", GN(playerid), GN(para1), level);
//					format(string, sizeof(string), "   Ban da bi chuyen den doi %d boi %s", level, GN(playerid));
//					SendClientMessage(para1, COLOR_WHITE, string);
//					format(string, sizeof(string), "   Ban da chuyen %s den doi %d.", GN(para1), level);
//					SendClientMessage(playerid, COLOR_WHITE, string);
//				}
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
//		}
//	}
//	return 1;
//}
CMD:setjob(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new para1, jobid, string[255];
		if (sscanf(params, "ui", para1, jobid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setjob [playerid/PartOfName] [jobid)]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (IsLogOn(para1))
			{
				if (para1 != INVALID_PLAYER_ID)
				{

					PlayerInfo[para1][pJob] = jobid;
					format(string, 256, "AdmWarning: %s da dieu chinh %s job den id %d.", GN(playerid), GN(para1), jobid);
					ABroadCast(COLOR_YELLOW, string, 1);
					SendClientMessage(playerid, COLOR_GRAD1, "   Job duoc dieu chinh thanh cong !");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:entercar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new testcar;
		if (sscanf(params, "i", testcar))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /entercar [carid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			PutPlayerInVehicle(playerid, testcar, 1);
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotocar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new testcar;
		if (sscanf(params, "i", testcar))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /gotocar [carid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new Float:cwx2, Float:cwy2, Float:cwz2;
			GetVehiclePos(testcar, cwx2, cwy2, cwz2);
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
				TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, cwx2, cwy2, cwz2);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
			SetPlayerInterior(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:mark(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_GRAD1, "   Da danh dau");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotomark(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
			SetPlayerInterior(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotoin(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1416.107000, 0.268620, 1000.926000);
			}
			else
			{
				SetPlayerPos(playerid, 1416.107000, 0.268620, 1000.926000);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
			SetPlayerInterior(playerid, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotostad(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
			}
			else
			{
				SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
			}
			SetPlayerInterior(playerid, 4);
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotojet(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
			}
			else
			{
				SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
			}
			SetPlayerInterior(playerid, 1);
			SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:gotoid(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new plo, string[255];
		if (sscanf(params, "u", plo))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /gotoid [playerid/Ten]");
			return 1;
		}
		new Float:plocx, Float:plocy, Float:plocz;
		if (IsLogOn(plo))
		{
			if (plo != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if (Spectate[playerid] != 255)
					{
						Spectate[playerid] = 256;
					}
					new vir = GetPlayerVirtualWorld(plo);
					new intid = GetPlayerInterior(plo);
					PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
					PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
					GetPlayerPos(plo, plocx, plocy, plocz);

					SetPlayerPos(playerid, plocx, plocy, plocz + 0.5);
					SetPlayerInterior(playerid, intid);
					SetVirtualWorld(playerid, vir);

					SendClientMessage(playerid, COLOR_GRAD1, "   Da duoc dich chuyen");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , nguoi choi khong hop le.", plo);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:gethere(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		new plo, string[255];
		if (sscanf(params, "u", plo))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /gethere [playerid/PartOfName]");
			return 1;
		}
		new Float:plocx, Float:plocy, Float:plocz;
		if (IsLogOn(plo))
		{
			if (plo != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[plo][pAdmin] > 1337)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Khong the tele Admin 1337.");
					return 1;
				}
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					new vir = GetPlayerVirtualWorld(playerid);
					new intid = GetPlayerInterior(playerid);
					PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
					PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
					GetPlayerPos(playerid, plocx, plocy, plocz);

					SetPlayerPos(plo, plocx, plocy, plocz + 0.5);
					SetPlayerInterior(plo, intid);
					SetVirtualWorld(plo, vir);

					SendClientMessage(plo, COLOR_GRAD1, "   Da duoc dich chuyen");
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , nguoi choi khong hop le.", plo);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:getcar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new plo;
		if (sscanf(params, "i", plo))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /getcar [carid]");
			return 1;
		}
		new Float:plocx, Float:plocy, Float:plocz;
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehiclePos(plo, plocx, plocy + 4, plocz);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:oldcar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		format(string, sizeof(string), "Your old car ID was: %d", gLastCar[playerid]);
		SendClientMessage(playerid, COLOR_GREY, string);
	}
	return 1;
}
CMD:fuelcars(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			for (new c = 0; c<CAR_AMOUNT; c++)
			{
				Gas[c] = GasMax;
			}
			SendClientMessage(playerid, COLOR_GREY, "   All cars filled with Fuel ! ");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong the su dung lenh nay ! ");
			return 1;
		}
	}
	return 1;
}
CMD:sung(playerid, params[]) { return cmd_givegun(playerid, params); }
CMD:givegun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, gun, ammo, string[255];
		if (sscanf(params, "uii", playa, gun, ammo))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /givegun [playerid/PartOfName] [weaponid] [ammo]");
			SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
			SendClientMessage(playerid, COLOR_GRAD3, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Flamethrower) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
			return 1;
		}
		if (gun < 1 || gun > 46 || gun == 27 || gun == 1 || gun == 2 || gun == 9 || gun == 17 || gun == 19 || gun == 20 || gun == 21 || gun == 35 || gun == 36 || gun == 39 || gun == 40 || gun == 44 || gun == 45)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   wrong WeaponID!"); return 1;
		}
		if (ammo <1 || ammo > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Khong the duoi 1 hoac tren 10000 dan duoc!"); return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SafeGivePlayerWeapon(playa, gun, ammo);
					format(string, 256, "AdmWarning: %s da dua cho %s sung id %d.", GN(playerid), GN(playa), gun);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:mau(playerid, params[]) { return cmd_sethp(playerid, params); }
CMD:sethp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, health, string[255];
		if (sscanf(params, "ui", playa, health))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /sethp [playerid/PartOfName] [health]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SetPlayerHealth(playa, health);

					format(string, 256, "AdmWarning: %s da set %s's hp thanh %d.", GN(playerid), GN(playa), health);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:giap(playerid, params[]) { return cmd_setarmor(playerid, params); }
CMD:setarmor(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, health, string[255];
		if (sscanf(params, "ui", playa, health))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setarmor [playerid/PartOfName] [armor]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SetPlayerArmour(playa, health);

					format(string, 256, "AdmWarning: %s da set %s's giap thanh %d.", GN(playerid), GN(playa), health);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:setage(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, age, string[255];
		if (sscanf(params, "ui", playa, age))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /setage [playerid/PartOfName] [age]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					PlayerInfo[playa][pAge] = age;

					format(string, 256, "AdmWarning: %s da set %s's tuoi thanh %d.", GN(playerid), GN(playa), age);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
	/*if(strcmp(cmd, "/veh", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if (PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
	return 1;
	}
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /veh [carid] [color1] [color2]");
	return 1;
	}
	new car;
	car = strval(tmp);
	if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Vehicle Number can't be below 400 or above 611 !"); return 1; }
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /veh [carid] [color1] [color2]");
	return 1;
	}
	new color1;
	color1 = strval(tmp);
	if(color1 < 0 || color1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /veh [carid] [color1] [color2]");
	return 1;
	}
	new color2;
	color2 = strval(tmp);
	if(color2 < 0 || color2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	new carid = CreateVehicle2(car, X,Y,Z, 0.0, color1, color2, 60000);
	CreatedCars[CreatedCar] = carid;
	CreatedCar ++;
	format(string, sizeof(string), "   Vehicle %d spawned.", carid);
	SendClientMessage(playerid, COLOR_GREY, string);
	}
	return 1;
	}*/
CMD:suaveh(playerid, params[]) { return cmd_fixveh(playerid, params); }
CMD:fixveh(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
			return 1;
		}
		if (IsPlayerInAnyVehicle(playerid))
		{
			SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);
			FixVehicle(GetPlayerVehicleID(playerid));
			SendClientMessage(playerid, COLOR_GREY, "   Phuong tien da duoc sua !");
		}
	}
	return 1;
}
CMD:healcar(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new health, string[255];
		sscanf(params, "i", health);

		SetVehicleHealthEx(GetPlayerVehicleID(playerid), health * 10);
		FixVehicle(GetPlayerVehicleID(playerid));

		format(string, 256, "AdmWarning: %s has healed his car by %d percents", GN(playerid), health);
		ABroadCast(COLOR_YELLOW, string, 1);
	}
	return 1;
}
	/*if(strcmp(cmd, "/destroycars", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
	return 1;
	}
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	if(i != 0)
	{
	DestroyVehicle2(i);
	}
	}
	SendClientMessage(playerid, COLOR_GREY, "   Created Vehicles destroyed !");
	}
	return 1;
	}*/
CMD:weather(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
			return 1;
		}
		new weather, string[255];
		if (sscanf(params, "i", weather))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /weather [weatherid]");
			return 1;
		}
		if (weather < 0 || weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45!"); return 1; }
		SetPlayerWeather(playerid, weather);
		//SendClientMessage(playerid, COLOR_GREY, "You have set the weather to %s" , weather);

		format(string, 256, "AdmWarning: %s da thay doi thoi tiet thanh %d.", GN(playerid), weather);
		ABroadCast(COLOR_YELLOW, string, 1);
	}
	return 1;
}
CMD:weatherall(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
			return 1;
		}
		new weather, string[255];
		if (sscanf(params, "i", weather))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /weatherall [weatherid]");
			return 1;
		}
		if (weather < 0 || weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45!"); return 1; }
		SetWeather(weather);
		SendClientMessage(playerid, COLOR_GREY, "   Thoi tiet da thay doi!");

		format(string, 256, "AdmWarning: %s da thay doi thoi tiet thanh %d.", GN(playerid), weather);
		ABroadCast(COLOR_YELLOW, string, 1);
		DefaultWeather = weather;
	}
	return 1;
}
CMD:money(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, money, string[255];
		if (sscanf(params, "ui", playa, money))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /money [playerid/PartOfName] [money]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					SafeResetPlayerMoney(playa);
					//ConsumingMoney[playa] = 1;
					SafeGivePlayerMoney(playa, money);

					format(string, 256, "AdmWarning: %s da set %s tien thanh $%d.", GN(playerid), GN(playa), money);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:givemoney(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, money, string[255];
		if (sscanf(params, "ui", playa, money))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /givemoney [playerid/PartOfName] [money]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					//ConsumingMoney[playa] = 1;
					SafeGivePlayerMoney(playa, money);

					format(string, 256, "AdmWarning: %s has admin-given %s $%d.", GN(playerid), GN(playa), money);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:slap(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, string[255];
		if (sscanf(params, "u", playa))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /slap [playerid/PartOfName]");
			return 1;
		}
		new Float:shealth;
		new Float:slx, Float:sly, Float:slz;
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					GetPlayerHealth(playa, shealth);
					SetPlayerHealth(playa, shealth - 5);
					GetPlayerPos(playa, slx, sly, slz);
					SetPlayerPos(playa, slx, sly, slz + 5);
					PlayerPlaySound(playa, 1190, slx, sly, slz + 5);
					printf("AdmCMD: %s slapped %s", GN(playerid), GN(playa));
					format(string, sizeof(string), "AdmCMD: %s da bi slap boi %s", GN(playa), GN(playerid));
					BroadCast(COLOR_LIGHTRED, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:fine(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREY, "Khong co quyen han su dung cau lenh nay.");
	new nguoichoi, soluong, str[128];
	if (sscanf(params, "uis[32]", nguoichoi, soluong, params)) return SCM(playerid, COLOR_GRAD2, "/fine [ID] [so luong] [ly do]");
	if (!IsLogOn(nguoichoi)) return SCM(playerid, COLOR_GREY, "ID khong hop le.");
	if (soluong <= 0) return SCM(playerid, COLOR_GREY, "So tien khong hop le.");
	SafeGivePlayerMoney(nguoichoi, -soluong);
	format(str, sizeof(str), "AdmCMD: %s da bi phat %d$ boi %s, ly do: %s", GN(playerid), soluong, GN(nguoichoi), params);
	BroadCast(COLOR_LIGHTRED, str);
	return 1;
}
CMD:mute(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, string[255];
		if (sscanf(params, "u", playa))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /mute [playerid/PartOfName]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{

					if (PlayerInfo[playa][pMuted] == 0)
					{
						PlayerInfo[playa][pMuted] = 1;
						printf("AdmCMD: %s silenced %s", GN(playerid), GN(playa));
						format(string, sizeof(string), "AdmCMD: %s da bi khoa noi chuyen boi %s", GN(playa), GN(playerid));
						ABroadCast(COLOR_LIGHTRED, string, 1);
					}
					else
					{
						PlayerInfo[playa][pMuted] = 0;
						printf("AdmCMD: %s unsilenced %s", GN(playerid), GN(playa));
						format(string, sizeof(string), "AdmCMD: %s da duoc mo khoa noi chuyen boi %s", GN(playa), GN(playerid));
						ABroadCast(COLOR_LIGHTRED, string, 1);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:learn(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /learn [playerid/PartOfName]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{

					new year, month, day;
					getdate(year, month, day);
					format(string, sizeof(string), "AdmCMD: %s was learned by %s (%d-%d-%d)", GN(playerid), GN(giveplayerid), day, month, year);
					KickLog(string);
					PlayerInfo[giveplayerid][pTut] = 0;
					format(string, sizeof(string), "Ban da bi truc xuat khoi dat nuoc. Ban se duoc tuyen huan lai.");
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					KickEx(giveplayerid);

					format(string, 256, "AdmCMD: %s da kick %s va bat buoc phai doc lai huong dan.", GN(playerid), GN(giveplayerid));
					BroadCast(COLOR_LIGHTRED, string);
					return 1;
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , la nguoi choi khong hop le.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:name(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /name [playerid/PartOfName]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{

					format(string, sizeof(string), " AdmCMD: %s da bi kick boi Admin %s vi ly do : NON-RP name", GN(giveplayerid), GN(playerid));
					SendAdminMessage(COLOR_YELLOW, string);
					format(string, sizeof(string), " AdmCMD: Ban da bi kick boi Admin %s vi ly do : NON-RP name ( TenLot_Ten )", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					KickEx(giveplayerid);
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , la nguoi choi khong hop le.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
//CMD:changename(playerid, params[])
//{
//	new giveplayerid, tmp[255], string[255];
//	if (sscanf(params, "us[255]", giveplayerid, tmp))
//	{
//		SendClientMessage(playerid, COLOR_DBLUE, "Su dung: /changename [playerid] [new nick]");
//		return 1;
//	}
//
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pAdmin] >= 1337)
//		{
//			if (IsLogOn(giveplayerid))
//			{
//				SetPlayerName(giveplayerid, tmp);
//				format(string, sizeof(string), "AdmCMD: %s(%i) da doi ten cua ban thanh %s", GN(playerid), playerid, tmp);
//				SendClientMessage(giveplayerid, COLOR_DBLUE, string);
//				format(string, sizeof(string), "AdmCMD: Ban da thay doi ID %i's ten thanh %s", giveplayerid, tmp);
//				SendClientMessage(playerid, COLOR_DBLUE, string);
//				format(string, 256, "AdmWarning: %s da thay doi %s's ten cua nguoi choi thanh %s.", GN(playerid), GN(giveplayerid), tmp);
//				ABroadCast(COLOR_YELLOW, string, 1);
//			}
//			else
//			{
//				format(string, sizeof(string), "%d , la nguoi choi khong hop le.", giveplayerid);
//				SendClientMessage(playerid, COLOR_RED, string);
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_RED, "Ban khong the su dung lenh nay!");
//		}
//	}
//	else
//	{
//		SendClientMessage(playerid, COLOR_RED, "Ban phai dang nhap de su dung lenh nay!");
//	}
//	return 1;
//}
CMD:kick(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, result[255], string[255];
		if (sscanf(params, "us[255]", giveplayerid, result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /kick [playerid/PartOfName] [Ly do]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2)
		{
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
						return SCM(playerid, COLOR_GREY, "Ban khong the kick nguoi nay.");
					new year, month, day;
					getdate(year, month, day);
					format(string, sizeof(string), "AdmCMD: %s da bi kick boi %s, ly do: %s (%d-%d-%d)", GN(giveplayerid), GN(playerid), (result), month, day, year);
					KickLog(string);
					format(string, sizeof(string), "AdmCMD: %s da bi kick boi %s, ly do: %s", GN(giveplayerid), GN(playerid), (result));
					BroadCast(COLOR_LIGHTRED, string);
					KickEx(giveplayerid);
					return 1;
				}
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , la nguoi choi khong hop le.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
	/*if(strcmp(cmd, "/skick", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /skick [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if (PlayerInfo[playerid][pAdmin] >= 1)
	{
	if(IsLogOn(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	KickEx(giveplayerid);
	}
	}
	}
	else
	{
	format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	}
	return 1;
	}*/
CMD:kickres(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
			return 1;
		}
		new level, ammount;
		if (sscanf(params, "ui", level, ammount))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /kickres [level] [ammount]");
			return 1;
		}
		if (ammount < 1 || ammount > 5) { SendClientMessage(playerid, COLOR_GREY, "   Can only Reserved Slots Kick of a maximum of 5 players !"); return 1; }
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pLevel] == level && PlayerInfo[i][pAdmin] < 1 && PlayerInfo[i][pDonateRank] < 1 && ammount > 0)
				{
					ammount -= 1;
					KickEx(i);
				}
			}
		}
	}
	return 1;
}
CMD:ban(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREY, "Admin level 3 tro len moi co the thuc hien.");
	new banobject[50], reason[50];
	if (sscanf(params, "s[50]s[50]", banobject, reason)) return SCM(playerid, COLOR_GREY, "Su dung: /ban [playername/ip] [ly do]");
	if (IsContainChar(banobject, '.') == 1)
	{
		if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Admin level 1337 moi co the ban IP.");
		if (!IsValidIP(banobject)) return SCM(playerid, COLOR_GREY, "IP khong hop le.");
		new str[128];
		if (CheckBanIP(banobject) == 0)
		{
			BanIP(banobject);
			format(str, sizeof(str), "AdmCMD: %s da ban IP %s. Ly do: %s", GN(playerid), banobject, reason);
			SendAdminMessage(COLOR_LIGHTRED, str);
		}
		else SCM(playerid, COLOR_GREY, "IP nay da bi banned!");
	}
	else
	{
		if (CheckBan(playerid) == 0)
			BanPlayer(playerid, banobject, reason);
		else SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai hoac da bi banned!");
	}
	return 1;
}
CMD:unban(playerid, params[])
 {
	if (PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREY, "Admin level 3 tro len moi co the thuc hien.");
	new banobject[50];
	if (sscanf(params, "s[50]", banobject)) return SCM(playerid, COLOR_GREY, "Su dung: /unban [playername/ip]");
	if (IsContainChar(banobject, '.') == 1)
	{
		if (PlayerInfo[playerid][pAdmin] < 1337) return SCM(playerid, COLOR_GREY, "Admin level 1337 moi co the ban IP.");
		if (!IsValidIP(banobject)) return SCM(playerid, COLOR_GREY, "IP khong hop le.");
		new str[128];
		
		if (UnBanIP(banobject))
		{
			format(str, sizeof(str), "AdmCMD: %s da unban IP %s.", GN(playerid), banobject);
			SendAdminMessage(COLOR_LIGHTRED, str);
		}
		else SCM(playerid, COLOR_GREY, "IP nay khong bi banned!");
	}
	else UnBanPlayer(playerid, banobject);
	return 1;
 }
stock fdeleteline(filename[], line)
{
	new count, string[256], File:file, File:temp;

	file = fopen(filename, io_read);
	temp = fopen("tmpfile.tmp", io_write);

	while (fread(file, string))
	if (++count != line)
		fwrite(temp, string);

	fclose(file);
	fclose(temp);

	file = fopen(filename, io_write);
	temp = fopen("tmpfile.tmp", io_read);

	while (fread(temp, string))
		fwrite(file, string);

	fclose(file);
	fclose(temp);
	fremove("tmpfile.tmp");
}
stock BanPlayer(playerid, name[], reason[])
{
	SCM(playerid, COLOR_WHITE, "[Ban] Kiem tra tai khoan...");
	new sql[400];
	format(sql, sizeof(sql), "UPDATE user SET Banned = 1 WHERE Name = '%s'", name);
	mysql_tquery(conn, sql, "BanCheck", "issi", playerid, name, reason, 0);
}
stock UnBanPlayer(playerid, name[])
{
	SCM(playerid, COLOR_WHITE, "[UnBan] Kiem tra tai khoan...");
	new sql[400];
	format(sql, sizeof(sql), "UPDATE user SET Banned = 0 WHERE Name = '%s'", name);
	mysql_tquery(conn, sql, "BanCheck", "issi", playerid, name, "", 1);
}
forward BanCheck(playerid, name[], reason[], type);
public BanCheck(playerid, name[], reason[], type)
{
	new countresult = cache_affected_rows();
	if (countresult != -1)
	{
		if (type == 0)
		{
			new str[128];
			if (playerid == INVALID_PLAYER_ID)
				format(str, sizeof(str), "AdmCMD: %s da ban tai khoan %s. Ly do: %s", GN(playerid), name, reason);
			else format(str, sizeof(str), "AdmCMD: SERVER da ban tai khoan %s. Ly do: %s", name, reason);
			BroadCast(COLOR_LIGHTRED, str);

			new pid = GetPlayerIDFromName(name);
			if (pid != INVALID_PLAYER_ID)
				KickEx(pid);
		}
		else
		{
			new str[128];
			format(str, sizeof(str), "AdmCMD: %s da unban tai khoan %s", GN(playerid), name);
			BroadCast(COLOR_LIGHTRED, str);
		}
	}
	else
	{
		if (type == 1) SCM(playerid, COLOR_RED, "[Ban] Ban that bai! Khong tim thay tai khoan.");
		else SCM(playerid, COLOR_RED, "[UnBan] Ban that bai! Khong tim thay tai khoan.");
	}
}
stock BanIP(IP[])
{
	new string[24];
	new File:ban = fopen("ban.cfg", io_append);
	format(string, sizeof(string), "%s\r\n", IP);
	fwrite(ban, string);
	fclose(ban);
	foreach(new i : Player)
	{
		if (strcmp(IP, GetIp(i), true) == 0)
		{
			new str[128];
			format(str, sizeof(str), "IP cua ban da bi khoa, ban se bi kick khoi server.");
			SCM(i, COLOR_RED, str);
			KickEx(i);
		}
	}
	return 1;
}
stock UnBanIP(IP[])
{
	new str[128];
	new File:ban = fopen("ban.cfg", io_read);
	new idx = 1, done = 0;
	while (fread(ban, str))
	{
		if (!strcmp(IP, str, true))
		{
			fdeleteline("ban.cfg", idx);
			done = 1;
		}
		idx++;
	}
	fclose(ban);
	return done;
}
stock CheckBan(playerid)
{
	if (CheckBanPlayer(GLN(playerid)) == 1)
	{
		SCM(playerid, COLOR_RED, "Tai khoan da bi banned.");
		KickEx(playerid);
	}
	if (CheckBanIP(GetIp(playerid)))
	{
		SCM(playerid, COLOR_RED, "IP cua ban da bi banned.");
		KickEx(playerid);
	}
	return 1;
}
stock CheckBanPlayer(name[])
{
	new sql[400];
	format(sql, sizeof(sql), "SELECT Banned FROM user WHERE Name = '%s'", name);
	mysql_query(conn, sql);
	new row;
	cache_get_row_count(row);
	if (row != 0)
	{
		new isbanned = 0;
		cache_get_value_name_int(0, "Banned", isbanned);
		return isbanned;
	}
	return 0;
}
stock CheckBanIP(ip[])
{
	new string[128];
	new File: file = fopen("ban.cfg", io_read);
	while (fread(file, string))
	{
		new readip[128];
		format(readip, sizeof(readip), string);
		format(readip, sizeof(readip), "%s", Replace(readip, "\r\n", ""));
		if (!strcmp(ip, readip, true))
		{
			fclose(file);
			return 1;
		}
	}
	fclose(file);
	return 0;
}
//CMD:ban(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		new giveplayerid, result[255], string[255];
//		if (sscanf(params, "us[255]", giveplayerid, result))
//		{
//			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /ban [playerid/PartOfName] [Ly do]");
//			return 1;
//		}
//		if (PlayerInfo[playerid][pAdmin] >= 1)
//		{
//			if (IsLogOn(giveplayerid))
//			{
//				if (giveplayerid != INVALID_PLAYER_ID)
//				{
//					new year, month, day;
//					getdate(year, month, day);
//					format(string, sizeof(string), "AdmCMD: %s da bi BAN boi %s, ly do: %s (%d-%d-%d)", GN(giveplayerid), GN(playerid), (result), month, day, year);
//					BanLog(string);
//					format(string, sizeof(string), "AdmCMD: %s da bi BAN boi %s, ly do: %s", GN(giveplayerid), GN(playerid), (result));
//					BroadCast(COLOR_LIGHTRED, string);
//					PlayerInfo[giveplayerid][pLocked] = 1;
//					Ban(giveplayerid);
//					return 1;
//				}
//			}//not connected
//		}
//		else
//		{
//			format(string, sizeof(string), "   %d , la nguoi choi khong hop le.", giveplayerid);
//			SendClientMessage(playerid, COLOR_GRAD1, string);
//		}
//	}
//	return 1;
//}
CMD:freeze(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, string[255];
		if (sscanf(params, "u", playa))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /freeze [playerid/PartOfName]");
			return 1;
		}
		if (PlayerInfo[playa][pAdmin] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Admins khong the bi dong bang");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					TogglePlayerControllable(playa, 0);
					SetPVarInt(playerid, "CantUseAnim", 1);
					GameTextForPlayer(playa, "~r~Frozen", 5000, 3);
					format(string, sizeof(string), "AdmCMD: %s dong bang %s", GN(playerid), GN(playa));
					printf("%s", string);
					format(string, sizeof(string), "AdmCMD: %s da bi dong bang boi %s", GN(playa), GN(playerid));
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:unfreeze(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new playa, string[255];
		if (sscanf(params, "u", playa))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /unfreeze [playerid]");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (IsLogOn(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{

					TogglePlayerControllable(playa, 1);
					SetPVarInt(playerid, "CantUseAnim", 0);
					GameTextForPlayer(playa, "~w~Unfrozen", 5000, 3);
					format(string, sizeof(string), "AdmCMD: %s bo dong bang %s", GN(playerid), GN(playa));
					printf("%s", string);
					format(string, sizeof(string), "AdmCMD: %s bo dong bang boi %s", GN(playa), GN(playerid));
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
	/*if(strcmp(cmd, "/endround", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if (PlayerInfo[playerid][pAdmin] >= 3)
	{
	GameModeInitExitFunc();
	}
	else
	{
	SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command !");
	}
	}
	return 1;
	}*/
	/*if(strcmp(cmd, "/gmx", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	if (PlayerInfo[playerid][pAdmin] >= 1337)
	{
	GameModeExit();
	}
	else
	{
	SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong co quyen nay to use that command !");
	}
	}
	return 1;
	}*/
CMD:cam(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new cam, string[255];
		if (sscanf(params, "i", cam))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /cam [1/2/3/4]");
			return 1;
		}
		Unspec[playerid][sCam] = cam;
		format(string, sizeof(string), "Switching to cam %d", Unspec[playerid][sCam]);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	return 1;
}
CMD:admins(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		SendClientMessage(playerid, COLOR_GREEN, "|____ LA:RP Administration Team ____|");
		foreach(new i : Player)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pAdmin] >= 1)
				{
					new admtext[64];
					if (PlayerInfo[i][pAdmin] == 1337) { admtext = "Lead Administrator"; }
					else if (PlayerInfo[i][pAdmin] == 4) { admtext = "Level 4 Administrator"; }
					else if (PlayerInfo[i][pAdmin] == 3) { admtext = "Level 3 Administrator"; }
					else if (PlayerInfo[i][pAdmin] == 2) { admtext = "Level 2 Administrator"; }
					else if (PlayerInfo[i][pAdmin] == 1) { admtext = "Level 1 Moderator"; }
					else { admtext = "Level 1 Moderator"; }
					if (AdminDuty[i] == 0)
					{
						format(string, 256, "%s: %s", admtext, GN(i));
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						format(string, 256, "%s: %s (on duty)", admtext, GN(i));
						SendClientMessage(playerid, TEAM_VAGOS_COLOR, string);
					}
				}
				else if (PlayerInfo[i][pHelper] >= 1)
				{
					if (CADuty[i] == 0)
					{
						format(string, 256, "%s: %s", HP(i), GN(i));
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						format(string, 256, "%s: %s (on duty)", HP(i), GN(i));
						SendClientMessage(playerid, TEAM_VAGOS_COLOR, string);
					}
				}
			}
		}
	}
	return 1;
}
CMD:licensers(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		SendClientMessage(playerid, COLOR_GRAD1, "Licensers Online:");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
				{
					format(string, 256, "** Ph: %d ** %s", PlayerInfo[i][pPnumber], GN(playerid));
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
		}
	}
	return 1;
}
CMD:masked(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[255];
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong the su dung lenh nay . ");
			return 1;
		}
		SendClientMessage(playerid, COLOR_GRAD1, "Masked users online:");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pMaskuse] == 1)
				{
					format(string, 256, "** ID: %d ** %s", i, GN(playerid));
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
		}
	}
	return 1;
}
CMD:trogiup(playerid, params[]) { return cmd_help(playerid, params); }
CMD:help(playerid, params[])
{
	if (!IsLogOn(playerid)) return SCM(playerid, COLOR_GREY, "Ban chua dang nhap.");
	SendClientMessage(playerid, COLOR_GRAD1, ":: NEWB :: /huongdan /yeucautrogiup (/n)ewbie");
	SendClientMessage(playerid, COLOR_GRAD1, ":: TAI KHOAN :: /luatchoi /dangnhap /doimatkhau /thongtin /muacapdo /nangcap");
	SendClientMessage(playerid, COLOR_GRAD1, ":: TONG HOP :: /duatien /tuthien /time /mua /huythuexe /huythuemoto /switchkey /id /uong /muaquanao /xemxang");
	SendClientMessage(playerid, COLOR_GRAD2, ":: TONG HOP :: /resetnangcap(50k) /muasung /lock /kinang /xemgiayphep /duagiayphep /baocao /hoiadmin /animlist /stopanim ");
	SendClientMessage(playerid, COLOR_GRAD2, ":: TONG HOP :: /huybo /chapnhan /moiraxe /sudungthuoc /hopdong /doxang /admins /licensers (/f)actionlist");
	SendClientMessage(playerid, COLOR_GRAD3, ":: TONG HOP :: /windows /tungdongxu /trunk (/inv)entory /gocua /knockout /give /gateopen /sid /smoke /xoamuctieu");
	SendClientMessage(playerid, COLOR_GRAD3, ":: BUON LAU :: /buonlau /doibuonlau");
	SendClientMessage(playerid, COLOR_GRAD3, ":: VAT LIEU :: /latvatlieu");
	SendClientMessage(playerid, COLOR_GRAD3, ":: VIEC LAM :: /xinviec /chapnhan (job) /quitjob");
	SendClientMessage(playerid, COLOR_GRAD3, ":: CHAT :: /pm (/cw)hisper (/o)oc (/s)hout (/l)ow (/b) (/f)action /me /do /togooc /tognews /togfam /togpm /togphone");
	SendClientMessage(playerid, COLOR_GRAD4, ":: NGAN HANG :: /kiemtrataikhoan /ruttien /guitien /chuyenkhoan");
	if (PlayerInfo[playerid][pHelper] > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, ":: HELPER :: (/n)ewb ");
		SendClientMessage(playerid, COLOR_WHITE, ":: C.ADVISOR :: /c (/n)ewb /cudty /chapnhangiupdo /dagiup /ajail(20p) /kick");
	}
	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: SAPD :: (/r)adio (/dept)departments (/m)egaphone (/su)spect /mdc /batgiam /duty /wanted /congtay /thaocong /nguytrang /backup(/bk)");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: SAPD :: /lucsoat /lucsoatinv /tichthu /vephat (/gov)ernment /deliver /phacua /swat /authorizeswat /deauthorizeswat /dualenxe /copmotroi");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: SAPD :: /trangbi /pdfind /stopfind /backupclear(/bkc) /chanduong /huychanduong /xoahetchanduong /showbadge /tracelastcall(/tlc) /weplicense");
	}
	if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: FBI :: (/r)adio (/dept)departments (/m)egaphone (/su)spect /mdc /arrest /duty /wanted (/cu)ff (/ta)zer /agent /showid /friskinv");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: FBI :: /frisk /take /ticket (/gov)ernment /deliver /ram /drag /copuntie /authorizetactical /deauthorizetactical /tactical");
	}
	if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: Military :: (/r)adio (/dept)departments (/m)egaphone (/su)spect /mdc /arrest /wanted (/cu)ff (/ta)zer");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: Military :: /frisk /friskinv /take /ticket (/gov)ernment /deliver /ram /drag /copuntie");
	}
	if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: DoC :: (/r)adio (/gov)ernment (/dept)departments (/m)egaphone /frisk /tichthu");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: DoC :: /duty /congtay /thaocong /batgiam /mophonggiam /dongphonggiam /dualenxe");
	}
	if (PlayerInfo[playerid][pJob] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /find");
	}
	else if (PlayerInfo[playerid][pJob] == 2)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /free");
	}
	else if (PlayerInfo[playerid][pJob] == 3) {
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /sex");
	}
	else if (PlayerInfo[playerid][pJob] == 4)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /selldrugs");
	}
	else if (PlayerInfo[playerid][pJob] == 5)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /dropcar");
	}
	else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /paper /papers /live /news [text]");
	}
	else if (PlayerInfo[playerid][pJob] == 7)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /radinh /dungradinh /repair /refill /duty /chapnhan (mechanic)");
	}
	else if (PlayerInfo[playerid][pJob] == 8)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /guard");
	}
	else if (PlayerInfo[playerid][pJob] == 9)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /layvatlieu /muavatlieu /banvatlieu /chesung /bansung");
	}
	else if (PlayerInfo[playerid][pJob] == 10)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /sellcar");
	}
	else if (PlayerInfo[playerid][pJob] == 11)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /heal");
	}
	else if (PlayerInfo[playerid][pJob] == 12)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /fight /boxstats");
	}
	else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pJob] == 14)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /gia");
	}
	else if (PlayerInfo[playerid][pJob] == 15)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /papers /bring /deliver");
	}
	else if (PlayerInfo[playerid][pJob] == 16) {
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /layhang /timgiaohang");
	}
	else if (PlayerInfo[playerid][pJob] == 17) {
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /duty /sellpizza");
	}
	else if (PlayerInfo[playerid][pJob] == 18) {
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /startharvest /stopharvest");
	}
	else if (PlayerInfo[playerid][pJob] == 19) {
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /gieohat");
	}
	else if (PlayerInfo[playerid][pJob] == 21)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /batdauquet /dungquet");
	}
	/*else if (PlayerInfo[playerid][pJob] == 22)
	{
	SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /smugglemats");
	}*/
	/*else if (PlayerInfo[playerid][pJob] == 23)
	{
	SendClientMessage(playerid, COLOR_YELLOW2, ":: JOB :: /smugglemats /creategun /buymats");
	}*/
	else if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: HITMAN :: /portable");
	}
	if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: LESSON :: /startlesson /stoplesson /givelicense");
	}
	if (gTeam[playerid] == 1 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, ":: SAMD :: (/r)adio (/d)epartments /heal /tracelastcall(/tlc)");
		SendClientMessage(playerid, COLOR_YELLOW2, ":: SAMD :: /duty /nhancapcuu(ncc) /dualenxe /dieutri ");
	}
	if (PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, ":: ADMIN :: (/a)dmin (/ah)elp");
		SendClientMessage(playerid, COLOR_GRAD6, ":: KHAC :: /familyhelp(fhelp) /trogiupdienthoai /trogiupnha /trogiupnote /trogiupxe /renthelp /businesshelp /trogiupleader /fishhelp /cookhelp /irchelp");
	}
	return 1;
}
	//------------------------------------------------------------------------------------------------------
	//----------------------------------[HELP]-----------------------------------------------
CMD:luatchoi(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "THONG TIN: Truy cap vao dien dan de xem chi tiet.");
	}
	return 1;
}
CMD:trogiupdienthoai(playerid, params[]) { return cmd_cellphonehelp(playerid, params); }
CMD:cellphonehelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		if (PlayerInfo[playerid][pPnumber] > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "*** HELP *** go lenh de biet huong dan cu the");
			SendClientMessage(playerid, COLOR_GRAD3, "*** CELLPHONE *** /call 'eg: /call 911' /ucall /sms /pickup (/h)angup /number");
			SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /help /househelp /notehelp /vehiclehelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ban co the mua dien thoai tai cua hang 24-7");
		}
	}
	return 1;
}
CMD:trogiupnha(playerid, params[]) { return cmd_househelp(playerid, params); }
CMD:househelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** HOUSE HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_GRAD3, "*** HOUSE *** /enter /exit /open /home /hoimau /nangcapnha /setrentable /tv (off/player)");
		SendClientMessage(playerid, COLOR_GRAD3, "*** HOUSE *** /evictall /setrent /evict /housewithdraw /bannha /muanha");
		SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /cellphonehelp /help /notehelp /vehiclehelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
	}
	return 1;
}
CMD:trogiupnote(playerid, params[]) { return cmd_notehelp(playerid, params); }
CMD:notehelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** NOTE HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_GRAD3, "*** NOTE *** /shownotes /deletenote /createnote /givenote");
		SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /cellphonehelp /help /househelp /vehiclehelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
	}
	return 1;
}
CMD:trogiupthue(playerid, params[]) { return cmd_renthelp(playerid, params); }
CMD:renthelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** RENTING HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_GRAD3, "*** RENT *** /unrent /enter /exit /lock /home");
		SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /cellphonehelp /househelp /notehelp /vehiclehelp /help /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
	}
	return 1;
}
CMD:businesshelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** BUSINESS HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_GRAD3, "*** BUSINESS *** /bizinfo /bizfee /bizname /prodprice /extortion");
		SendClientMessage(playerid, COLOR_GRAD4, "*** BUSINESS *** /enter /exit /open /banbiz /muabiz /bizbank /bizwithdraw");
		SendClientMessage(playerid, COLOR_GRAD4, "*** OTHER *** /cellphonehelp /househelp /notehelp /vehiclehelp /renthelp /help");
	}
	return 1;
}
CMD:trogiupleader(playerid, params[]) { return cmd_leaderhelp(playerid, params); }
CMD:leaderhelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1)
		{
			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			if (PlayerInfo[playerid][pLeader] != 7)
			{
				SendClientMessage(playerid, COLOR_WHITE, "*** LEADER HELP *** go lenh de biet huong dan cu the");
				SendClientMessage(playerid, COLOR_GRAD3, "*** LEADERS *** /invite /uninvite /giverank");
			}
			if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 16)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "*** LEADERS *** /lockhq");
			}
			if (PlayerInfo[playerid][pLeader] == 7)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "*** LEADERS *** /govinvite /govuninvite /settax /givetax (Dua tien cho cops)");
			}
			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai Leader!");
		}
	}
	return 1;
}
CMD:irchelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** IRC HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_WHITE, "*** IRC *** (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc leave)");
		SendClientMessage(playerid, COLOR_WHITE, "*** IRC *** (/irc Password [channelnr])  (/irc NeedPass [channelnr])  (/irc Lock [channelnr])");
		SendClientMessage(playerid, COLOR_WHITE, "*** IRC *** (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [channelnr])  (/i [text])");
	}
	return 1;
}
CMD:fishhelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "*** FISH HELP *** go lenh de biet huong dan cu the");
		SendClientMessage(playerid, COLOR_GRAD3, "*** FISHING *** /fish (Try to catch a fish)   /fishes (Xem so ca ma ban cau duoc)");
		SendClientMessage(playerid, COLOR_GRAD3, "*** FISHING *** /throwback (Throw the last fish you caught back)   /throwbackall");
		SendClientMessage(playerid, COLOR_GRAD3, "*** FISHING *** /releasefish (Release one of your fishes)");
	}
	return 1;
}
	/*if(strcmp(cmd, "/cookhelp", true) == 0)
	{
	if(IsLogOn(playerid))
	{
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_WHITE,"*** COOK HELP *** go lenh de biet huong dan cu the");
	SendClientMessage(playerid, COLOR_GRAD3,"*** COOKING *** /cook (See all the options available)   /cooked (See everything that you have Cooked)");
	SendClientMessage(playerid, COLOR_GRAD3,"*** COOKING *** /eat (Eat something that you have Cooked)");
	}
	return 1;
	}*/
CMD:ah(playerid, params[]) { return cmd_ahelp(playerid, params); }
CMD:ahelp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "*** Duty *** /adminduty");
			SendClientMessage(playerid, COLOR_GRAD1, "*** Level 1 Moderator ***  /fly /check /setint /setvw /mute /kick /kickres /masked /unfreeze /learn");
			SendClientMessage(playerid, COLOR_GRAD1, "*** Level 1 Moderator *** /ban /slap /goto /a (/ao)oc /name /setskin /ajail /freeze /spec /checkweapons");
		}
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "*** Level 2 Administrator *** /skydive /noooc /setteam /bigears /respawnthiscar(/rtc) /agl /setjob /update");
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GRAD3, "*** Level 3 Administrator *** /cnnn /fourdive /gotols /prison /unprison /aunlock /apark /fuelcars /edit /vehslap");
			SendClientMessage(playerid, COLOR_GRAD4, "*** Level 3 Administrator *** /mark /gotomark /gotolv /gotosf /gethere /oldcar /gotocar /getcar /setage");
			SendClientMessage(playerid, COLOR_GRAD4, "*** Level 3 Administrator *** /respawnallcars /respawnrentbikes /respawnrentcars /unban /unbanip /fixveh");
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SendClientMessage(playerid, COLOR_GRAD4, "*** Level 4 Administrator *** /mole /logout /logoutpl /logoutall /asellhouse /asellbiz /sellsbiz /setchamp /mk");
			SendClientMessage(playerid, COLOR_GRAD4, "*** Level 4 Administrator *** /destroycars /sethp /setarmor /forceskin /explode /supervehslap");
		}
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD5, "*** Lead Administrator ***  /weather /weatherall /makeircadmin /makeadmin /makeleader /bizentrance /sbizentrance");
			SendClientMessage(playerid, COLOR_GRAD5, "*** Lead Administrator *** /asellcar /setstat /money(sets money)");
			SendClientMessage(playerid, COLOR_GRAD5, "*** Lead Administrator *** /givemoney /givegun /crash /changename /houseentrance /housexit /tod /startlotto");
			SendClientMessage(playerid, COLOR_GRAD5, "*** Lead Administrator *** /makefamily /families /makefleader (Luu y: Leader cu se bi xoa!)");
		}
		if (PlayerInfo[playerid][pAdmin] >= 1338)
		{
			SendClientMessage(playerid, COLOR_GRAD6, "***  ***");
		}
	}
	return 1;
}
CMD:fhelp(playerid, params[]) { return cmd_familyhelp(playerid, params); }
CMD:familyhelp(playerid, params[])
{
	SendClientMessage(playerid, COLOR_GRAD1, ":: Leader :: /fmakehq /finvite /funinvite /frank /fmotd");
	SendClientMessage(playerid, COLOR_GRAD2, ":: Leader :: /fchangetitle(fct) /ftitles(fdanhhieu) /fcolor");
	SendClientMessage(playerid, COLOR_GRAD3, ":: Member :: /f /fhq /families /heal /fsafe /fmembers");
	return 1;
}
	/*if(strcmp(cmd,"/gravity",true)==0)
	{
	if(IsLogOn(playerid))
	{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
	SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	return 1;
	}
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp)) {
	SendClientMessage(playerid, COLOR_WHITE, "Su dung: /gravity [value Default: 0.008]");
	return 1;
	}
	new Float:gravity;
	floatstr(tmp);
	SetGravity(gravity);
	format(string, sizeof(string), "* Gravity changed to %f.",gravity);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	return 1;
	}*/
CMD:mk(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin !");
			return 1;
		}
		new x_mk[50];
		if(sscanf(params, "s[50]", x_mk)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk [name]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: (/mk text [number] [text]) (/mk game [number] [text]) (/mk cp [number])");
			SendClientMessage(playerid, COLOR_GREY, "Available names: (/mk title [text]) (/mk reward [price]) (/mk usecp)");
			return 1;
		}
		if (strcmp(x_mk, "text", true) == 0)
		{
			new number, result[255];
			if (sscanf(params, "s[50]is[255]", x_mk, number, result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk text [number] [text]");
				return 1;
			}
			if (number < 1 || number > 18) { SendClientMessage(playerid, COLOR_GREY, "   Number can't be below 1 or above 18 !"); return 1; }
			switch (number)
			{
			case 1:
			{
				strmid(MissionInfo[mText1], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 1 cua nhiem vu.");
			}
			case 2:
			{
				strmid(MissionInfo[mText2], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 2 cua nhiem vu.");
			}
			case 3:
			{
				strmid(MissionInfo[mText3], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 3 cua nhiem vu.");
			}
			case 4:
			{
				strmid(MissionInfo[mText4], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 4 cua nhiem vu.");
			}
			case 5:
			{
				strmid(MissionInfo[mText5], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 5 cua nhiem vu.");
			}
			case 6:
			{
				strmid(MissionInfo[mText6], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 6 cua nhiem vu.");
			}
			case 7:
			{
				strmid(MissionInfo[mText7], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 7 cua nhiem vu.");
			}
			case 8:
			{
				strmid(MissionInfo[mText8], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 8 cua nhiem vu.");
			}
			case 9:
			{
				strmid(MissionInfo[mText9], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 9 cua nhiem vu.");
			}
			case 10:
			{
				strmid(MissionInfo[mText10], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 10 cua nhiem vu.");
			}
			case 11:
			{
				strmid(MissionInfo[mText11], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 11 cua nhiem vu.");
			}
			case 12:
			{
				strmid(MissionInfo[mText12], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 12 cua nhiem vu.");
			}
			case 13:
			{
				strmid(MissionInfo[mText13], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 13 cua nhiem vu.");
			}
			case 14:
			{
				strmid(MissionInfo[mText14], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 14 cua nhiem vu.");
			}
			case 15:
			{
				strmid(MissionInfo[mText15], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 15 cua nhiem vu.");
			}
			case 16:
			{
				strmid(MissionInfo[mText16], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 16 cua nhiem vu.");
			}
			case 17:
			{
				strmid(MissionInfo[mText17], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 17 cua nhiem vu.");
			}
			case 18:
			{
				strmid(MissionInfo[mText18], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong text 18 cua nhiem vu.");
			}
			}
		}
		else if (strcmp(x_mk, "game", true) == 0)
		{
			new number, result[255];
			if (sscanf(params, "s[50]is[255]", x_mk, number, result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk game [number] [text]");
				return 1;
			}
			if (number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   So khong the duoi 1 hoac tren 6 !"); return 1; }
			switch (number)
			{
			case 1:
			{
				strmid(MissionInfo[mGText1], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 1 cua nhiem vu.");
			}
			case 2:
			{
				strmid(MissionInfo[mGText2], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 2 cua nhiem vu.");
			}
			case 3:
			{
				strmid(MissionInfo[mGText3], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 3 cua nhiem vu.");
			}
			case 4:
			{
				strmid(MissionInfo[mGText4], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 4 cua nhiem vu.");
			}
			case 5:
			{
				strmid(MissionInfo[mGText5], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 5 cua nhiem vu.");
			}
			case 6:
			{
				strmid(MissionInfo[mGText6], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat dong Gametext 7 cua nhiem vu.");
			}
			}
		}
		else if (strcmp(x_mk, "cp", true) == 0)
		{
			new number;
			if (sscanf(params, "s[50]i", x_mk, number))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk cp [number]");
				return 1;
			}
			if (number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   So khong the duoi 1 hoac tren 6 !"); return 1; }
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			switch (number)
			{
			case 1:
			{
				MissionInfo[mCP1][0] = x; MissionInfo[mCP1][1] = y; MissionInfo[mCP1][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 1 cua nhiem vu.");
			}
			case 2:
			{
				MissionInfo[mCP2][0] = x; MissionInfo[mCP2][1] = y; MissionInfo[mCP2][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 2 cua nhiem vu.");
			}
			case 3:
			{
				MissionInfo[mCP3][0] = x; MissionInfo[mCP3][1] = y; MissionInfo[mCP3][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 3 cua nhiem vu.");
			}
			case 4:
			{
				MissionInfo[mCP4][0] = x; MissionInfo[mCP4][1] = y; MissionInfo[mCP4][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 4 cua nhiem vu.");
			}
			case 5:
			{
				MissionInfo[mCP5][0] = x; MissionInfo[mCP5][1] = y; MissionInfo[mCP5][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 5 cua nhiem vu.");
			}
			case 6:
			{
				MissionInfo[mCP6][0] = x; MissionInfo[mCP6][1] = y; MissionInfo[mCP6][2] = z;
				SendClientMessage(playerid, COLOR_WHITE, "Ban da dat Checkpoint 6 cua nhiem vu.");
			}
			}
		}
		else if (strcmp(x_mk, "usecp", true) == 0)
		{
			new toggle;
			if (sscanf(params, "s[50]i", x_mk, toggle))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk usecp [0/1]");
				return 1;
			}
			if (toggle == 0 || toggle == 1) {}
			else { SendClientMessage(playerid, COLOR_GREY, "  So checkpointUse phai la 0 (OFF) hoac 1 (ON) !"); return 1; }
			MissionInfo[mToggle] = toggle;
			if (toggle == 0) { SendClientMessage(playerid, COLOR_WHITE, "Ban da dat su dung Checkpoints toi 0 (OFF)."); }
			else if (toggle == 1) { SendClientMessage(playerid, COLOR_WHITE, "Ban da dat su dung Checkpoints toi 1 (ON)."); }
		}
		else if (strcmp(x_mk, "title", true) == 0)
		{
			new result[255];
			if (sscanf(params, "s[50]s[255]", x_mk, result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk title [text]");
				return 1;
			}

			strmid(MissionInfo[mTitle], result, 0, strlen(result), 255);
			SendClientMessage(playerid, COLOR_WHITE, "Ban da dat tieu de cua nhiem vu.");
		}
		else if (strcmp(x_mk, "reward", true) == 0)
		{
			new price;
			if (sscanf(params, "s[50]i", x_mk, price))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /mk reward [price]");
				return 1;
			}
			if (price < 1 || price > 50000) { SendClientMessage(playerid, COLOR_GREY, "   Giai thuong khong the duoi 1 hoac tren 50000 !"); return 1; }
			MissionInfo[mReward] = price;
			SendClientMessage(playerid, COLOR_WHITE, "Ban da dat giai thuong cho nhiem vu nay.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ten khong hop le !");
			return 1;
		}
	}
	return 1;
}
CMD:savemission(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new name[255];
			if(sscanf(params, "s[255]", name))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /savemission [missionname]");
				return 1;
			}
			SaveMission(playerid, name);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:loadmission(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new name[255];
			if (sscanf(params, "s[255]", name))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /loadmission [missionname]");
				return 1;
			}
			LoadMission(playerid, name);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:kinang(playerid, params[]) { return cmd_skill(playerid, params); }
CMD:skill(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_nr[256], string[255];
		if (sscanf(params, "i", x_nr)) {
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /skill [number]");
			SendClientMessage(playerid, COLOR_GREY, "| 1: Luat su         		6: Boxer");
			SendClientMessage(playerid, COLOR_GREY, "| 2: Gai diem / Trai bao              	7: Cau ca");
			SendClientMessage(playerid, COLOR_GREY, "| 3: Buon thuoc              	8: Trong trot");
			SendClientMessage(playerid, COLOR_GREY, "| 4: Phat thanh vien");
			SendClientMessage(playerid, COLOR_GREY, "| 5: Tho sua xe");
			SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
			return 1;
		}
		else if (strcmp(x_nr, "1", true) == 0)//Lawyer
		{
			new level = PlayerInfo[playerid][pLawSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang luat su cua ban = 1."); format(string, sizeof(string), "Ban can tha tu do cho %d nguoi nua de len level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang luat su cua ban = 2."); format(string, sizeof(string), "Ban can tha tu do cho %d nguoi nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang luat su cua ban = 3."); format(string, sizeof(string), "Ban can tha tu do cho %d nguoi nua de len level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang luat su cua ban = 4."); format(string, sizeof(string), "Ban can tha tu do cho %d nguoi nua de len level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang luat su cua ban = 5."); }
		}
		else if (strcmp(x_nr, "2", true) == 0)//Whore
		{
			new level = PlayerInfo[playerid][pSexSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang gai diem / trai bao cua ban = 1."); format(string, sizeof(string), "Ban can phai sex them %d lan nua de len level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang gai diem / trai bao cua ban = 2."); format(string, sizeof(string), "Ban can phai sex them %d lan nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang gai diem / trai bao cua ban = 3."); format(string, sizeof(string), "Ban can phai sex them %d lan nua de len level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang gai diem / trai bao cua ban = 4."); format(string, sizeof(string), "Ban can phai sex them %d lan nua de len level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang gai diem / trai bao cua ban = 5."); }
		}
		else if (strcmp(x_nr, "3", true) == 0)//Drugs Dealer
		{
			new level = PlayerInfo[playerid][pDrugsSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang buon thuoc cua ban = 1."); format(string, sizeof(string), "Ban can phai buon thuoc them %d lan nua de len level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang buon thuoc cua ban = 2."); format(string, sizeof(string), "Ban can phai buon thuoc them %d lan nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang buon thuoc cua ban = 3."); format(string, sizeof(string), "Ban can phai buon thuoc them %d lan nua de len level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang buon thuoc cua ban = 4."); format(string, sizeof(string), "Ban can phai buon thuoc them %d lan nua de len level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang buon thuoc cua ban = 5."); }
		}
		else if (strcmp(x_nr, "4", true) == 0)//News Reporter
		{
			new level = PlayerInfo[playerid][pNewsSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang phat thanh vien cua ban = 1."); format(string, sizeof(string), "Ban can phai lam viec them %d lan nua de len level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang phat thanh vien cua ban = 2."); format(string, sizeof(string), "Ban can phai lam viec them %d lan nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang phat thanh vien cua ban = 3."); format(string, sizeof(string), "Ban can phai lam viec them %d lan nua de len level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang phat thanh vien cua ban = 4."); format(string, sizeof(string), "Ban can phai lam viec them %d lan nua de len level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang phat thanh vien cua ban = 5."); }
		}
		else if (strcmp(x_nr, "5", true) == 0)//Car Mechanic
		{
			new level = PlayerInfo[playerid][pMechSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang tho sua xe cua ban = 1."); format(string, sizeof(string), "Ban can phai sua chua / do xang cho xe them %d lan nua de len level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang tho sua xe cua ban = 2."); format(string, sizeof(string), "Ban can phai sua chua / do xang cho xe them %d lan nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang tho sua xe cua ban = 3."); format(string, sizeof(string), "Ban can phai sua chua / do xang cho xe them %d lan nua de len level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang tho sua xe cua ban = 4."); format(string, sizeof(string), "Ban can phai sua chua / do xang cho xe them %d lan nua de len level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang tho sua xe cua ban = 5."); }
		}
		else if (strcmp(x_nr, "6", true) == 0)//Boxer
		{
			new level = PlayerInfo[playerid][pBoxSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang boxing cua ban = 1."); format(string, sizeof(string), "Ban can chien thang %d tran loi dai nua de len Level.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang boxing cua ban = 2."); format(string, sizeof(string), "Ban can chien thang %d tran loi dai nua de len Level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang boxing cua ban = 3."); format(string, sizeof(string), "Ban can chien thang %d tran loi dai nua de len Level.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang boxing cua ban = 4."); format(string, sizeof(string), "Ban can chien thang %d tran loi dai nua de len Level.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang boxing cua ban = 5."); }
		}
		else if (strcmp(x_nr, "7", true) == 0)//Fishing
		{
			new level = PlayerInfo[playerid][pFishSkill];
			if (level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang cau ca cua ban = 1."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang cau ca cua ban = 2."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang cau ca cua ban = 3."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang cau ca cua ban = 4."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Level ki nang cau ca cua ban = 5."); }
		}
		else if (strcmp(x_nr, "8", true) == 0)//Farmer
		{
			format(string, sizeof(string), "Level ki nang trong trot cua ban = %d.", GetLevelSkill(playerid, PLANT));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			new level = PlayerInfo[playerid][pPlantSkill];
			if (level >= 0 && level < 100) { format(string, sizeof(string), "Ban can trong them %d cay nua de len level.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 100 && level < 500) { format(string, sizeof(string), "Ban can trong them %d cay nua de len level.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 500 && level < 1000) { format(string, sizeof(string), "Ban can trong them %d cay nua de len level.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if (level >= 1000 && level < 2000) { format(string, sizeof(string), "Ban can trong them %d cay nua de len level.", 2000 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong hop le !");
			return 1;
		}
	}
	return 1;
}
	/*if(strcmp(cmd,"/agreementbroken",true)==0)
	{
	if(IsLogOn(playerid))
	{
	SendClientMessage(playerid, COLOR_YELLOW, "Agreement Violation Security has been activated.");
	Security = 1;
	SaveStuff();
	GameModeExit();
	}
	return 1;
	}*/
CMD:cks(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin !");
			return 1;
		}
		new ck;
		new number = 0;
		new x_nr[256], string[255];
		if (!strlen(params))
		{
			for (new i = 0; i < sizeof(CKInfo); i++)
			{
				number++;
				if (CKInfo[i][cUsed] != 0)
				{
					format(string, sizeof(string), "%d| %s wants to Character Kill %s.", number, CKInfo[i][cSendername], CKInfo[i][cGiveplayer]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			return 1;
		}
		if (sscanf(params, "s[256]", x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cks [accept/delete]");
			return 1;
		}
		if (strcmp(x_nr, "accept", true) == 0)
		{
			if (sscanf(params, "s[256]i", x_nr, ck))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cks accept [cknumber]");
				return 1;
			}
			if (ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   So CK khong the duoi 1 hoac tren 10 !"); return 1; }
			ck -= 1;
			new found1 = 255;
			new found2 = 255;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					//if(found1 != 255 && found2 != 255)
					//{
					new wstring[MAX_PLAYER_NAME];
					format(string, sizeof(string), "%s", GN(i));
					strmid(wstring, string, 0, strlen(string), 255);
					if (strcmp(CKInfo[ck][cSendername], wstring, true) == 0)
					{
						found1 = i;
					}
					else if (strcmp(CKInfo[ck][cGiveplayer], wstring, true) == 0)
					{
						found2 = i;
					}
					//}
				}
			}
			if (found1 != 255 && found2 != 255)
			{
				format(string, sizeof(string), "* An Admin has accepted your Character Kill, you can now perform your kill on %s.", GN(found2));
				SendClientMessage(found1, COLOR_LIGHTBLUE, string);
				OnCK[found1] = found2;
				GettingCK[found2] = found1;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Sorry, the Killer or Dieer ain't Online.");
				return 1;
			}
		}
		else if (strcmp(x_nr, "delete", true) == 0)
		{
			if (sscanf(params, "s[256]i", x_nr, ck))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cks delete [cknumber]");
				return 1;
			}
			if (ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   CK Number can't be below 1 or above 10 !"); return 1; }
			ck -= 1;
			ClearCK(ck);
			ck += 1;
			format(string, sizeof(string), "* You've cleared Character Kill nr: %d", ck);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Invalid CK command name !");
			return 1;
		}
	}
	return 1;
}
CMD:ck(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLevel] < 5)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban phai dat den cap do 5 de co the dat contract !");
			return 1;
		}
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /ck [playerid/PartOfName]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pAdmin] >= 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Khong the su dung len Admin !");
					return 1;
				}
				else if (PlayerInfo[giveplayerid][pLevel] < 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi ban muon dat hop dong phai dat level 5 !");
					return 1;
				}
				ABroadCast(COLOR_YELLOW, "* Mot hop dong moi da duoc dat, go /cks.", 3);
				new found = 0;
				for (new i = 0; i < sizeof(CKInfo); i++)
				{
					if (found != 1)
					{
						if (CKInfo[i][cUsed] != 1)
						{
							found = 1;

							format(string, sizeof(string), "%s", GN(playerid));
							strmid(CKInfo[i][cSendername], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", GN(giveplayerid));
							strmid(CKInfo[i][cGiveplayer], string, 0, strlen(string), 255);
							CKInfo[i][cUsed] = 1;
							SaveCK();
						}
					}
				}
				if (found != 1)
				{
					SendClientMessage(playerid, COLOR_YELLOW2, "Xin loi, Hop dong da tiep nhan du, xin thu lai sau.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW2, "Hop dong cua ban da duoc gui, ban se duoc thong bao boi Admin som nhat.");
				}
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:givelicense(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsAnInstructor(playerid))
		{
			if (PlayerInfo[playerid][pRank] < 1)
			{
				//SendClientMessage(playerid, COLOR_GREY, "   Only Rank 2 or higher can give away a License !");
				return 1;
			}
			new x_nr[256], string[255];
			if (sscanf(params, "s[256]", x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /givelicense [name] [playerid/PartOfName] [price]");
				SendClientMessage(playerid, COLOR_WHITE, "Available names: Laxe, MayBay, Thuyen, CauCa.");
				return 1;
			}
			if (strcmp(x_nr, "laixe", true) == 0)
			{
				new giveplayerid, price;
				if (sscanf(params, "ui", giveplayerid, price))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /givelicense laixe [playerid/PartOfName] [price]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (price < 50 || price > 500) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 50, hoac hon 500!"); return 1; }

						/*format(string, sizeof(string), "* You've given a Drivers License to %s.",GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Instructor %s has given you a Drivers License.",GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pCarLic] = 1;*/
						format(string, sizeof(string), "* Ban de nghi %s mua bang lai xe voi gia $%d .", GN(giveplayerid), price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Giang vien %s muon ban bang lai xe cho ban voi gia $%d, (go /accept license) de mua.", GN(playerid), price);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LicenseOffer[giveplayerid] = playerid;
						LicensePrice[giveplayerid] = price;
						LicenseType[giveplayerid] = 1;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "maybay", true) == 0)
			{
				new giveplayerid, price;
				if (sscanf(params, "ui", giveplayerid, price))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /givelicense maybay [playerid/PartOfName] [Gia]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (price < 500 || price > 25000) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 500, hoac tren 25000!"); return 1; }

						/*format(string, sizeof(string), "* You've given a Flying License to %s.",GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Instructor %s has given you a Flying License.",GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pFlyLic] = 1;*/
						format(string, sizeof(string), "* Ban de nghi %s mua giay phep su dung may bay voi gia $%d .", GN(giveplayerid), price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Giang vien %s muon ban cho ban giay phep su dung may bay voi gia $%d, (go /accept license) de mua.", GN(playerid), price);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LicenseOffer[giveplayerid] = playerid;
						LicensePrice[giveplayerid] = price;
						LicenseType[giveplayerid] = 2;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "thuyen", true) == 0)
			{
				new giveplayerid, price;
				if (sscanf(params, "ui", giveplayerid, price))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /givelicense thuyen [playerid/PartOfName] [Gia]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (price < 100 || price > 10000) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 100, hoac tren 10000!"); return 1; }

						/*format(string, sizeof(string), "* You've given a Sailing License to %s.",GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Instructor %s has given you a Sailing License.",GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pBoatLic] = 1;*/
						format(string, sizeof(string), "* Ban de nghi %s mua giay phep su dung thuyen voi gia $%d .", GN(giveplayerid), price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Giang vien %s muon ban cho ban giay phep su dung thuyen voi gia $%d, (go /accept license) de mua.", GN(playerid), price);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LicenseOffer[giveplayerid] = playerid;
						LicensePrice[giveplayerid] = price;
						LicenseType[giveplayerid] = 3;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "cauca", true) == 0)
			{
				new giveplayerid, price;
				if (sscanf(params, "ui", giveplayerid, price))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /givelicense cauca [playerid/PartOfName] [Gia]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (price < 100 || price > 1000) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 100, hoac tren 1000!"); return 1; }

						/*format(string, sizeof(string), "* You've given a Fishing License to %s.",GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Instructor %s has given you a Fishing License.",GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pFishLic] = 1;*/
						format(string, sizeof(string), "* Ban de nghi %s mua giay phep cau ca voi gia $%d .", GN(giveplayerid), price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Giang vien %s muon ban giay phep cau ca cho ban voi gia $%d, (go /accept license) de mua.", GN(playerid), price);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LicenseOffer[giveplayerid] = playerid;
						LicensePrice[giveplayerid] = price;
						LicenseType[giveplayerid] = 4;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la giang vien !");
			return 1;
		}
	}
	return 1;
}
CMD:weplicense(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRank] < 3)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Chi co rank 3 tro len moi co the cho bang cap !");
				return 1;
			}
			new x_nr[256], giveplayerid, string[255];
			if (sscanf(params, "s[256]u", x_nr, giveplayerid)) {
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /weplicense [name] [playerid/PartOfName]");
				SendClientMessage(playerid, COLOR_WHITE, "Available names: VuKhi.");
				return 1;
			}
			if (strcmp(x_nr, "vukhi", true) == 0)
			{
				new price;
				if (sscanf(params, "s[256]ui", x_nr, giveplayerid, price))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /weplicense vukhi [playerid/PartOfName] [Gia]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (price < 1 || price > 100) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi $1, hoac tren $100."); return 1; }

						/*format(string, sizeof(string), "* You've given a Weapon License to %s.",GN(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Instructor %s has given you a Weapon License.",GN(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pGunLic] = 1;*/
						format(string, sizeof(string), "* Ban de nghi %s mua giay phep su dung vu khi voi gia $%d .", GN(giveplayerid), price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Si quan %s muon ban giay phep su dung vu khi cho ban voi gia $%d, (go /accept license) de mua.", GN(playerid), price);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LicenseOffer[giveplayerid] = playerid;
						LicensePrice[giveplayerid] = price;
						LicenseType[giveplayerid] = 5;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong thuc to chuc co quyen han nay !");
			return 1;
		}
	}
	return 1;
}
CMD:startlesson(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsAnInstructor(playerid))
		{
			new giveplayerid, string[255];
			if (sscanf(params, "u", giveplayerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /startlesson [playerid/PartOfName]");
				return 1;
			}
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{

					format(string, sizeof(string), "* Ban da bat dau %s's khoa hoc.", GN(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Giang vien %s da bat dau khoa hoc cua ban.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					TakingLesson[giveplayerid] = 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la giang vien !");
			return 1;
		}
	}
	return 1;
}
CMD:stoplesson(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsAnInstructor(playerid))
		{
			new giveplayerid, string[255];
			if (sscanf(params, "u", giveplayerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /stoplesson [playerid/PartOfName]");
				return 1;
			}
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (TakingLesson[giveplayerid] != 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi hien khong co trong khoa hoc nao !");
						return 1;
					}

					format(string, sizeof(string), "* Ban da dung %s's khoa hoc.", GN(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Giang vien %s da dung khoa hoc cua ban.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					TakingLesson[giveplayerid] = 0;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la giang vien !");
			return 1;
		}
	}
	return 1;
}
stock GetFamilyIDLeader(playerid)
{
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if (!strcmp(GLN(playerid), FamilyInfo[i][fLeader], false))
			return i;
	}
	return -1;
}
stock GetInHouse(playerid)
{
	new inter = GetPlayerInterior(playerid);
	new vworld = GetPlayerVirtualWorld(playerid);
	for (new i = 0; i < MAX_HOUSES; i++)
	{
		new Float:distance = GetDistanceToPoint(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
		if (distance < 100.0 && HouseInfo[i][hInt] == inter && HouseInfo[i][hWorld] == vworld)
			return i;
	}
	return -1;
}
CMD:frank(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new pid, rank, str[128];
	if (sscanf(params, "ui", pid, rank)) return SCM(playerid, COLOR_GRAD2, "Su dung: /frank [playerid] [rank]");
	if (pid == INVALID_PLAYER_ID || !IsLogOn(pid)) return SCM(playerid, COLOR_GREY, "Nguoi choi khong ton tai hoac chua dang nhap");
	if (PlayerInfo[playerid][pFMember] != leaderid) return SCM(playerid, COLOR_GREY, "Nguoi choi kia khong phai thanh vien cua Family");
	if (rank < 1 || rank > 6) return SCM(playerid, COLOR_GREY, "Rank chi co the tu 1 den 6.");
	PlayerInfo[pid][pRank] = rank;
	format(str, sizeof(str), "Leader Family %s da chinh rank cho ban thanh rank %d (%s)", GN(playerid), rank, FamilyTitle[leaderid][rank]);
	SCM(pid, COLOR_LIGHTBLUE, str);
	format(str, sizeof(str), "Ban da chinh rank cho %s thanh rank %d (%s)", GN(pid), rank, FamilyTitle[leaderid][rank]);
	SCM(playerid, COLOR_LIGHTBLUE, str);
	return 1;
}
CMD:fmotd(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new motdz[128], str[128];
	if (sscanf(params, "s[128]", motdz)) return SCM(playerid, COLOR_GRAD2, "Su dung: /fmotd [noi dung]");
	format(FamilyInfo[leaderid][fMOTD], 128, "%s", motdz);
	format(str, sizeof(str), "Family MOTD: %s", FamilyInfo[leaderid][fMOTD]);
	SendNewFamilyMessage(leaderid, COLOR_LIGHTBLUE, str);
	SCM(playerid, COLOR_GREEN, "Chinh sua thong bao Family thanh cong.");
	SaveFamilies();
	return 1;
}
stock GetPlayerIDFromName(playername[])
{
	foreach(new i:Player)
	{
		if (IsLogOn(i))
		{
			if (strcmp(GLN(i), playername, true) == 0)
				return i;
		}
	}
	return INVALID_PLAYER_ID;
}
stock GetFactionName(i)
{
	new ftext[128];
	if (i == 1)
		ftext = "Los Angeles Police Department";
	else if (i == 2)
		ftext = "Federal Bureau of Investigation";
	else if (i == 3)
		ftext = "National Guard";
	else if (i == 8)
		ftext = "Hitman Agency";
	else if (i == 9)
		ftext = "San Andreas News";
	else if (i == 10)
		ftext = "Taxi Cab";
	else if (i == 17)
		ftext = "Department Of Corrections";
	else if (i == 4)
		ftext = "Firemen/Paramedics";
	return ftext;
}
stock ShowListFactionMember(playerid, fid, type = 1)
{
	new str[128];
	format(str, sizeof(str), "----------Danh Sach Member Faction %s----------", GetFactionName(fid));
	SCM(playerid, COLOR_LIGHTBLUE, str);
	if (type == 1)
	{
		foreach(new i : Player)
		{
			if (PlayerInfo[i][pMember] == fid || PlayerInfo[i][pLeader] == fid)
			{
				if (PlayerInfo[i][pLeader] == fid)
					format(str, sizeof(str), "Leader %s | Rank %d | Online", GN(i), PlayerInfo[i][pRank]);
				else 
					format(str, sizeof(str), "%s | Rank %d | Online", GN(i), PlayerInfo[i][pRank]);
				SCM(playerid, COLOR_WHITE, str);
			}
		}
	}
	else if (type == 2)
	{
		new sql[300];
		format(sql, sizeof(sql), "SELECT * FROM user WHERE Member = %d OR Leader = %d", fid, fid);
		mysql_query(conn, sql);
		new row;
		cache_get_row_count(row);
		for (new idx = 0; idx < row; idx++)
		{
			new name[50], rank, tmpstr[128], leader;
			cache_get_value_name(idx, "Name", name);
			new i = GetPlayerIDFromName(name);
			if (i != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[i][pLeader] == fid)
					format(str, sizeof(str), "Leader %s | Rank %d | Online", GN(i), PlayerInfo[i][pRank]);
				else
					format(str, sizeof(str), "%s | Rank %d | Online", GN(i), PlayerInfo[i][pRank]);
				SCM(playerid, COLOR_WHITE, str);
			}
			else
			{
				cache_get_value_name_int(idx, "Rank", rank);
				cache_get_value_name_int(idx, "Leader", leader);
				cache_get_value_name(idx, "LastConnectedTime", tmpstr);
				new subtimestamp = GetSubTimeStampFromNow(tmpstr);
				if (leader != 0)
					format(str, sizeof(str), "Leader %s | Rank %d | Offline (%s truoc)", name, rank, GetDateFromTimeStamp(subtimestamp));
				else
					format(str, sizeof(str), "%s | Rank %d | Offline (%s truoc)", name, rank, GetDateFromTimeStamp(subtimestamp));
				SCM(playerid, COLOR_GREY, str);
			}
		}
	}
	return 1;
}
stock ShowListFamilyMember(playerid, fid, type = 1)
{
	new str[128];
	format(str, sizeof(str), "----------Danh Sach Member Family %s----------", FamilyInfo[fid][fName]);
	SCM(playerid, COLOR_LIGHTBLUE, str);
	if (type == 1)
	{
		foreach(new i : Player)
		{
			if (PlayerInfo[i][pFMember] == fid)
			{
				new leaderid = GetFamilyIDLeader(i);
				if (leaderid != fid)
					format(str, sizeof(str), "%s | %s (%d) | Online", GN(i), FamilyTitle[fid][PlayerInfo[i][pRank]], PlayerInfo[i][pRank]);
				else 
					format(str, sizeof(str), "Leader %s | %s (%d) | Online", GN(i), FamilyTitle[fid][PlayerInfo[i][pRank]], PlayerInfo[i][pRank]);
				SCM(playerid, COLOR_WHITE, str);
			}
		}
	}
	else if (type == 2)
	{
		new sql[300];
		format(sql, sizeof(sql), "SELECT * FROM user WHERE FMember = %d", fid);
		mysql_query(conn, sql);
		new row;
		cache_get_row_count(row);
		for (new idx = 0; idx < row; idx++)
		{
			new name[50], rank, tmpstr[128];
			cache_get_value_name(idx, "Name", name);
			new i = GetPlayerIDFromName(name);
			if (i != INVALID_PLAYER_ID)
			{
				new leaderid = GetFamilyIDLeader(i);
				rank = PlayerInfo[i][pRank];
				if (leaderid != fid)
					format(str, sizeof(str), "%s | %s (%d) | Online", GN(i), FamilyTitle[fid][rank], rank);
				else
					format(str, sizeof(str), "Leader %s | %s (%d) | Online", GN(i), FamilyTitle[fid][rank], rank);
				SCM(playerid, COLOR_WHITE, str);
			}
			else
			{
				cache_get_value_name_int(idx, "Rank", rank);
				cache_get_value_name(idx, "LastConnectedTime", tmpstr);
				new subtimestamp = GetSubTimeStampFromNow(tmpstr);
				if (!IsLeaderFamilyName(name, fid))
					format(str, sizeof(str), "%s | %s (%d) | Offline (%s truoc)", name, FamilyTitle[fid][rank], rank, GetDateFromTimeStamp(subtimestamp));
				else 
					format(str, sizeof(str), "Leader %s | %s (%d) | Offline (%s truoc)", name, FamilyTitle[fid][rank], rank, GetDateFromTimeStamp(subtimestamp));
				SCM(playerid, COLOR_GREY, str);
			}
		}
	}
	return 1;
}
stock IsLeaderFamilyName(name[], fid)
{
	if (!(strcmp(FamilyInfo[fid][fName], name, false)))
		return 1;
	return 0;
}
stock GetDateFromTimeStamp(timestamp)
{
	new str[128];
	new year, month, day, hour, minute, second;
	while (timestamp > 31536000) { timestamp -= 31536000; year++; }
	while (timestamp > 2592000) { timestamp -= 2592000; month++; }
	while (timestamp > 86400) { timestamp -= 86400; day++; }
	while (timestamp > 3600) { timestamp -= 3600; hour++; }
	while (timestamp > 60) { timestamp -= 60; minute++; }
	if (timestamp > 0) { second = timestamp; timestamp = 0; }

	if (year > 0) format(str, sizeof(str), "%d nam", year);
	else if (month > 0) format(str, sizeof(str), "%d thang", month);
	else if (day > 0) format(str, sizeof(str), "%d ngay", day);
	else if (hour > 0) format(str, sizeof(str), "%d gio", hour);
	else if (minute > 0) format(str, sizeof(str), "%d phut", minute);
	else if (second > 0) format(str, sizeof(str), "%d giay", second);
	return str;
}
stock GetSubTimeStamp(date[], datesub[])
{
	return GetTimeString(date, TIMESTAMP) - GetTimeString(datesub, TIMESTAMP);
}
stock GetSubTimeStampFromNow(datesub[])
{
	return GetNowTime(TIMESTAMP) - GetTimeString(datesub, TIMESTAMP);
}
stock GetNowTime(type = TIMESTAMP)
{
	new Day, Month, Year,
		Hour, Minute, Second;

	gettime(Hour, Minute, Second);
	getdate(Year, Month, Day);

	if (type == HOUR) return Hour;
	else if (type == MINUTE) return Minute;
	else if (type == SECOND) return Second;
	else if (type == DAY) return Day;
	else if (type == MONTH) return Month;
	else if (type == YEAR) return Year;

	new all[128];
	format(all, sizeof(all), "%02d-%02d-%04d %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
	return DateToTimestamp(all);
}
stock GetTimeString(time[], type = TIMESTAMP)
{
	new Day, Month, Year,
		Hour, Minute, Second;

	new tmp[128], all[128];
	strmid(tmp, time, 0, 4);
	Year = strval(tmp);
	strmid(tmp, time, 5, 7);
	Month = strval(tmp);
	strmid(tmp, time, 8, 10);
	Day = strval(tmp);
	strmid(tmp, time, 11, 13);
	Hour = strval(tmp);
	strmid(tmp, time, 14, 16);
	Minute = strval(tmp);
	strmid(tmp, time, 17, 19);
	Second = strval(tmp);
	if (type == YEAR) return Year;
	if (type == MONTH) return Month;
	if (type == DAY) return Day;
	if (type == HOUR) return Hour;
	if (type == MINUTE) return Minute;
	if (type == SECOND) return Second;
	format(all, sizeof(all), "%02d-%02d-%04d %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
	return DateToTimestamp(all);
	//2017-03-10 11:43:52
}
CMD:members(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] > 0)
	{
		new fid, zb[50];
		if (sscanf(params, "is[50]", fid, zb))
		{
			SCM(playerid, COLOR_GRAD2, "Su dung: /members [faction id] [on/off]");
			SCM(playerid, COLOR_GRAD2, "Faction: 1-PD, 2-FBI, 3-NG, 4-FD, 8-HITMAN");
			SCM(playerid, COLOR_GRAD2, "Faction: 9-NEWS, 10-TAXI, 17-DOC");
			return 1;
		}
		if (fid < 1 || fid > 17 || fid == 5 || fid == 6 || fid == 7 ||
			fid == 11 || fid == 12 || fid == 13 || fid == 14 || fid == 15
			|| fid == 16)
			return SCM(playerid, COLOR_GREY, "Faction khong ton tai");

		if (!strcmp(zb, "on", true))
			ShowListFactionMember(playerid, fid, 1);
		else if (!strcmp(zb, "off", true))
			ShowListFactionMember(playerid, fid, 2);
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) return SCM(playerid, COLOR_GREY, "Ban khong phai thanh vien cua Family nao.");
	new fid = PlayerInfo[playerid][pMember];
	if (fid == 0)
		fid = PlayerInfo[playerid][pLeader];
	if (sscanf(params, "s[50]", params)) return SCM(playerid, COLOR_GRAD2, "Su dung: /members [on/off]");
	if (!strcmp(params, "on", true))
		ShowListFactionMember(playerid, fid, 1);
	else if (!strcmp(params, "off", true))
		ShowListFactionMember(playerid, fid, 2);
	return 1;
}
CMD:fmembers(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] > 0)
	{
		new fid, zb[50];
		if (sscanf(params, "is[50]", fid, zb)) return SCM(playerid, COLOR_GRAD2, "Su dung: /fmembers [fid] [on/off]");
		if (fid < 0 || fid > sizeof(FamilyInfo)) return SCM(playerid, COLOR_GRAD2, "Family khong ton tai.");
		if (FamilyInfo[fid][fID] == -1) return SCM(playerid, COLOR_GRAD2, "Family khong ton tai.");
		if (!strcmp(zb, "on", true)) 
			ShowListFamilyMember(playerid, fid, 1);
		else if (!strcmp(zb, "off", true))
			ShowListFamilyMember(playerid, fid, 2);
		return 1;
	}
	if (PlayerInfo[playerid][pFMember] == 255) return SCM(playerid, COLOR_GREY, "Ban khong phai thanh vien cua Family nao.");
	if (sscanf(params, "s[50]", params)) return SCM(playerid, COLOR_GRAD2, "Su dung: /fmembers [on/off]");
	if (!strcmp(params, "on", true))
		ShowListFamilyMember(playerid, PlayerInfo[playerid][pFMember], 1);
	else if (!strcmp(params, "off", true))
		ShowListFamilyMember(playerid, PlayerInfo[playerid][pFMember], 2);
	return 1;
}
CMD:fsafe(playerid, params[])
{
	if (PlayerInfo[playerid][pFMember] == 255) return SCM(playerid, COLOR_GREY, "Ban khong trong Family nao.");
	new houseid = GetInHouse(playerid);
	if (houseid == -1) return SCM(playerid, COLOR_GREY, "Ban phai trong HQ cua minh.");
	ShowPlayerDialog(playerid, DIALOG_FAMILYSAFE, DIALOG_STYLE_LIST, "FAMILY SAFE", "Lay\nBo Vao", "Chon", "Thoat");
	return 1;
}
CMD:fhq(playerid, params[])
{
	if (PlayerInfo[playerid][pFMember] == 255) return SCM(playerid, COLOR_GREY, "Ban khong trong Family nao.");
	if (FamilyInfo[PlayerInfo[playerid][pFMember]][fHouseHQ] == -1) return SCM(playerid, COLOR_GREY, "Family cua ban chua co HQ.");
	new houseid = FamilyInfo[PlayerInfo[playerid][pFMember]][fHouseHQ];
	SetPlayerCheckpoint(playerid, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez], 4.0);
	GameTextForPlayer(playerid, "~w~Chi Duong ~r~Family HQ", 5000, 1);
	return 1;
}
CMD:fmakehq(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new houseid = GetInHouse(playerid);
	if (houseid == -1) return SCM(playerid, COLOR_GREY, "Ban khong trong ngoi nha nao de lam HQ.");
	if (!strcmp(GLN(playerid), HouseInfo[houseid][hOwner], false))
	{
		new fid = PlayerInfo[playerid][pFMember], str[128];
		format(str, sizeof(str), "Ban da bien can nha nay thanh HQ cho Family cua minh.");
		SCM(playerid, COLOR_WHITE, str);
		format(str, sizeof(str), "[Family] Chu family %s da thay doi HQ (/fhq de biet vi tri cua HQ)");
		FamilyInfo[fid][fHouseHQ] = houseid;

		SendNewFamilyMessage(fid, COLOR_LIGHTBLUE, str);
		SaveFamilies();
	}
	else SCM(playerid, COLOR_GREY, "Ban khong phai chu so huu cua ngoi nha nay.");
	return 1;
}
CMD:fdanhhieu(playerid, params[]) { return cmd_ftitles(playerid, params); }
CMD:ftitles(playerid, params[])
{
	if (PlayerInfo[playerid][pFMember] == 255) return SCM(playerid, COLOR_GREY, "Ban khong thuoc Family nao.");
	new str[128];
	new familyid = PlayerInfo[playerid][pFMember];
	format(str, sizeof(str), "--------Danh Hieu Family %s--------", FamilyInfo[familyid][fName]);
	SCM(playerid, HexToInt(FamilyInfo[familyid][fColor]), str);
	for (new i = 1; i < 7; i++)
	{
		format(str, sizeof(str), "Rank %d: %s", i, FamilyTitle[familyid][i]);
		SCM(playerid, COLOR_WHITE, str);
	}
	return 1;
}
stock IsValidColor(string[])
{
	if (string[0] != '0') return 0;
	else if (string[1] != 'x') return 0;
	if ((strlen(string) - 2) != 6) return 0;
	for (new i = 2; i < strlen(string); i++)
	{
		string[i] = toupper(string[i]);
		if ((string[i] >= '0' && string[i] <= '9') || (string[i] >= 'A' && string[i] <= 'Z'))
			continue;
		else return 0;
	}
	return 1;
}
CMD:fcolor(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new hexcolor[20];
	if (sscanf(params, "s[20]", hexcolor))
	{
		SCM(playerid, COLOR_GRAD2, "Su dung: /fcolor [code ma mau]");
		SCM(playerid, COLOR_GRAD2, "Dinh dang code ma mau: 0xFFFFFF");
		SCM(playerid, COLOR_GRAD2, "Chung toi khong chiu trach nhiem, neu ban khong danh dung dinh dang ma mau");
		SCM(playerid, COLOR_GRAD2, "Web ma mau: http://www.nthelp.com/colorcodes.htm");
		return 1;
	}
	if (!IsValidColor(hexcolor)) return SCM(playerid, COLOR_GREY, "Ma mau khong dung dinh dang.");
	format(hexcolor, sizeof(hexcolor), "%s00", hexcolor);
	new str[128];
	format(str, sizeof(str), "[Family] Leader %s da chinh mau cho Family thanh cong.", GN(playerid));
	SendNewFamilyMessage(leaderid, COLOR_LIGHTBLUE, str);
	FamilyChangeColor(leaderid, hexcolor);
	SCM(playerid, COLOR_GREEN, "Ban da doi mau cho Family thanh cong.");
	return 1;
}
stock FamilyChangeColor(fid, hexcolor[])
{
	format(FamilyInfo[fid][fColor], 20, hexcolor);
	foreach(new i:Player)
	{
		if (PlayerInfo[i][pFMember] == fid)
			SetPlayerToTeamColor(i);
	}
	SaveFamilies();
	return 1;
}
CMD:fct(playerid, params[]) { return cmd_fchangetitle(playerid, params); }
CMD:fchangetitle(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new rank, title[25];
	if (sscanf(params, "is[25]", rank, title)) return SCM(playerid, COLOR_GRAD2, "Su dung: /fTitle [rank] [ten chuc vu]");
	if (rank < 1 || rank > 6) return SCM(playerid, COLOR_GREY, "Rank chi co the tu 1 den 6.");
	format(FamilyTitle[leaderid][rank], 25, title);
	new str[128];
	format(str, sizeof(str), "[Family] Chu Family da sua danh hieu cho rank %d thanh %s.", rank, title);
	SendNewFamilyMessage(leaderid, COLOR_LIGHTBLUE, str);
	format(str, sizeof(str), "Ban da sua danh hieu cho rank %d thanh cong.", rank);
	SCM(playerid, COLOR_GREEN, str);
	SaveFamilies();
	return 1;
}
CMD:finvite(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new pinvite, str[128];
	if (sscanf(params, "u", pinvite)) return SCM(playerid, COLOR_GRAD2, "Su dung: /finvite [playerid]");
	if (pinvite == INVALID_PLAYER_ID || !IsLogOn(pinvite)) return SCM(playerid, COLOR_GREY, "Nguoi choi khong ton tai hoac chua dang nhap");
	if (PlayerInfo[pinvite][pMember] != 0 || PlayerInfo[pinvite][pLeader] != 0 || PlayerInfo[pinvite][pFMember] != 255) return SCM(playerid, COLOR_GREY, "Nguoi choi kia da la thanh vien cua mot to chuc hoac gia dinh.");
	if (!IsPlayerNearPlayer(playerid, pinvite, 5)) return SCM(playerid, COLOR_GREY, "Ban khong dung gan nguoi choi kia.");
	format(str, sizeof(str), "%s da moi ban vao family. (/chapnhan family)", GN(playerid));
	SCM(pinvite, COLOR_WHITE, str);
	format(str, sizeof(str), "Ban da moi %s vao family.", GN(pinvite));
	SCM(playerid, COLOR_WHITE, str);
	SetPVarInt(pinvite, "FInviteOffer", playerid);
	return 1;
}
CMD:funinvite(playerid, params[])
{
	new leaderid = GetFamilyIDLeader(playerid);
	if (leaderid == -1) return SCM(playerid, COLOR_GREY, "Ban khong phai chu Family nao.");
	new pinvite, pname[50], str[128];
	if (sscanf(params, "s[50]", pname)) return SCM(playerid, COLOR_GRAD2, "Su dung: /funinvite [playername]");
	pinvite = GetPlayerIDFromName(pname);
	//if (pinvite == INVALID_PLAYER_ID || !IsLogOn(pinvite)) return SCM(playerid, COLOR_GREY, "Nguoi choi khong ton tai hoac chua dang nhap");
	if (pinvite != INVALID_PLAYER_ID)
	{
		if(!IsLogOn(pinvite)) return SCM(playerid, COLOR_GREY, "Nguoi choi chua dang nhap");
		if (PlayerInfo[playerid][pFMember] != PlayerInfo[pinvite][pFMember]) return SCM(playerid, COLOR_GREY, "Nguoi choi kia khong phai nguoi trong Family cua ban.");
		format(str, sizeof(str), "%s da moi ban ra khoi to chuc.", GN(playerid));
		SCM(pinvite, COLOR_WHITE, str);
		format(str, sizeof(str), "Ban da moi %s ra khoi to chuc.", GN(pinvite));
		SCM(playerid, COLOR_WHITE, str);
		format(str, sizeof(str), "[Family] Leader Family %s da duoi %s ra khoi gia dinh.", GN(playerid), GN(pinvite));
		SendNewFamilyMessage(PlayerInfo[playerid][pFMember], COLOR_WHITE, str);
		PlayerInfo[pinvite][pFMember] = 255;
		PlayerInfo[pinvite][pRank] = 0;
		FamilyInfo[leaderid][fMembers]--;
		SetPlayerToTeamColor(pinvite);
		SaveFamilies();
		SavePlayer(pinvite);
	}
	else
	{
		new sql[400];
		format(sql, sizeof(sql), "SELECT * FROM user WHERE Name = '%s' AND FMember = %d", pname, leaderid);
		mysql_query(conn, sql);
		new row;
		cache_get_row_count(row);
		if (row > 0)
		{
			format(sql, sizeof(sql), "UPDATE user SET FMember = 255, Rank = 0 WHERE Name = '%s'", pname);
			mysql_query(conn, sql);
			format(str, sizeof(str), "Ban da moi %s ra khoi to chuc.", pname);
			SCM(playerid, COLOR_WHITE, str);
			format(str, sizeof(str), "[Family] Leader Family %s da duoi %s ra khoi gia dinh.", GN(playerid), pname);
			SendNewFamilyMessage(PlayerInfo[playerid][pFMember], COLOR_LIGHTBLUE, str);
			FamilyInfo[leaderid][fMembers]--;
			SaveFamilies();
		}
		else SCM(playerid, COLOR_GREY, "Nguoi choi nay khong ton tai hoac khong phai la member Family.");
	}
	return 1;
 }
CMD:phacua(playerid, params[]) { return cmd_ram(playerid, params); }
CMD:ram(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gTeam[playerid] == TEAMGOV || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
		{
			for (new i = 0; i < MAX_HOUSES; i++)
			{
				if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					SetPlayerInterior(playerid, HouseInfo[i][hInt]);
					SetVirtualWorld(playerid, HouseInfo[i][hWorld]);
					SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~r~Vi pham", 5000, 1);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
					PlayerInfo2[HouseEntered][playerid] = i;
				}
			}
			if (PlayerToPoint(3, playerid, 1298.7075, -798.5981, 84.1406))
			{
				SetPlayerInterior(playerid, 5);
				PlayerInfo[playerid][pInt] = 5;
				GameTextForPlayer(playerid, "~r~Vi pham", 5000, 1);
				SetPlayerPos(playerid, 1254.3436, -789.3809, 1084.0078);
			}
			if (PlayerToPoint(3, playerid, 2380.5647, -1785.7302, 13.5469))
			{
				SetPlayerPos(playerid, 318.4700, 1117.5127, 1083.8828);
				GameTextForPlayer(playerid, "~r~Vi pham", 5000, 1);
				SetPlayerInterior(playerid, 5);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 5;
			}
			if (PlayerToPoint(3, playerid, 2022.9038, -1120.2688, 26.4210))
			{
				SetPlayerPos(playerid, 1237.8329, -833.3148, 1084.0078);
				GameTextForPlayer(playerid, "~r~Vi pham", 5000, 1);
				SetPlayerInterior(playerid, 5);
				SetPlayerFacingAngle(playerid, 90);
				PlayerInfo[playerid][pInt] = 5;
			}
			if (PlayerToPoint(3, playerid, 2770.6973, -1628.4293, 12.1775))
			{
				SetPlayerPos(playerid, 2464.8335, -1698.4218, 1013.5078);
				GameTextForPlayer(playerid, "~r~Vi pham", 5000, 1);
				SetPlayerInterior(playerid, 2);
				SetPlayerFacingAngle(playerid, 90);
				PlayerInfo[playerid][pInt] = 2;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat / quan doi !");
			return 1;
		}
	}
	return 1;
}
CMD:camera(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsACop(playerid))
		{
			if (!PlayerToPoint(8.0, playerid, 211.6222, 1811.9565, 21.8594))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong khu vuc Area51 Security Panel !");
				return 1;
			}
			new number;
			if (sscanf(params, "i", number))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /camera [number 1 - 6]  (6 = OFF)");
				return 1;
			}
			if (number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   So camera khong the duoi 1 hoac tren 6 !"); return 1; }
			TogglePlayerControllable(playerid, 0);
			GetPlayerPos(playerid, Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2]);
			if (number == 1) { SetPlayerCameraPos(playerid, 118.1011, 1931.3221, 22.5527); SetPlayerCameraLookAt(playerid, 98.9656, 1920.9819, 18.2180); }
			else if (number == 2) { SetPlayerCameraPos(playerid, 213.5340, 1875.3075, 17.6406); SetPlayerCameraLookAt(playerid, 213.8679, 1884.1714, 13.8945); }
			else if (number == 3) { SetPlayerCameraPos(playerid, 266.0640, 1894.8856, 38.6459); SetPlayerCameraLookAt(playerid, 224.0039, 1887.1532, 17.6406); }
			else if (number == 4) { SetPlayerCameraPos(playerid, 260.8112, 1808.0175, 38.6303); SetPlayerCameraLookAt(playerid, 227.5645, 1818.4778, 17.6406); }
			else if (number == 5) { SetPlayerCameraPos(playerid, 114.5196, 1814.3483, 38.6029); SetPlayerCameraLookAt(playerid, 123.6176, 1846.4792, 17.6549); }
			else if (number == 6)
			{
				PlayerInfo[playerid][pHospital] = 0;
				TogglePlayerControllable(playerid, 1);
				SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
				SpawnPlayer(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat / quan doi !");
			return 1;
		}
	}
	return 1;
}
CMD:divorce(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMarried] < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua ket hon !");
			return 1;
		}
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /divorce [Playerid/Ten]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the kien nghi voi chinh minh!"); return 1; }
					new dstring[MAX_PLAYER_NAME];
					new wstring[MAX_PLAYER_NAME];

					format(string, sizeof(string), "%s", GN(giveplayerid));
					strmid(wstring, string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
					strmid(dstring, string, 0, strlen(string), 255);
					if (strcmp(dstring, wstring, true) == 0)
					{
						format(string, sizeof(string), "* Ban da dua don ly hon cho %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s vua dua cho ban don ly hon (go /accept divorce) de chap nhan.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						DivorceOffer[giveplayerid] = playerid;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi chua ket hon voi ban !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:propose(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (GetPlayerMoney(playerid) < 20000)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Dam cuoi & chi phi la $20000 !");
			return 1;
		}
		if (PlayerInfo[playerid][pMarried] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da co gia dinh!");
			return 1;
		}
		if (PlayerInfo[playerid][pPhousekey] == 255)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co nha de cho vo / chong cung chung song !");
			return 1;
		}
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /propose [Playerid/Ten]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pMarried] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da co gia dinh !");
					return 1;
				}
				if (PlayerInfo[giveplayerid][pPhousekey] != 255)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da co mot can nha, khong the ket hon !");
					return 1;
				}
				if (PlayerInfo[giveplayerid][pPbiskey] != 255)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da co mot co so kinh doanh, khong the ket hon !");
					return 1;
				}
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the cau hon voi chinh minh!"); return 1; }

					format(string, sizeof(string), "* Ban cau hon voi %s.", GN(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s vua cau hon ban (go /accept marriage) de chap nhan.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					ProposeOffer[giveplayerid] = playerid;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:witness(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[255];
		if (sscanf(params, "u", giveplayerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /witness [Playerid/Ten]");
			return 1;
		}
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the kien nghi voi chinh minh!"); return 1; }

					format(string, sizeof(string), "* Ban de nghi %s tro thanh nguoi chung giam cho dam cuoi cua ban.", GN(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s de nghi ban tro thanh nguoi chung giam cho dam cuoi cua ho (go /accept witness) de chap nhan.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					MarryWitnessOffer[giveplayerid] = playerid;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:irc(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_nr[256];
		if (sscanf(params, "s[256]", x_nr)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc Leave)  (/irc Admins)");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc [name] [channelnr]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: MOTD, Password, NeedPass, Lock, Kick, Status");
			return 1;
		}
		new string[255], channel;
		if (strcmp(x_nr, "join", true) == 0)
		{
			if (sscanf(params, "s[256]i", x_nr, channel)) 
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc join [channelnr] or /irc join [channelnr] [password]");
				return 1;
			}
			if (channel < 1 || channel > 10)
				return SendClientMessage(playerid, COLOR_GREY, "   So kenh khong the duoi 1 hoac tren 10 !");

			channel -= 1;
			if (IRCInfo[channel][iLock] == 0)
			{
				if (IRCInfo[channel][iNeedPass] == 0)
				{
					JoinChannelNr(playerid, channel);
				}
				else
				{
					new pass[50];
					if (sscanf(params, "s[256]is[50]", x_nr, channel, pass))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Ban can mat khau de gia nhap kenh nay.");
						SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc join [channelnr] [password]");
						return 1;
					}
					JoinChannel(playerid, channel, pass);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Kenh nay da bi khoa, vui long chon kenh khac !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "status", true) == 0)
		{
			for (new i = 0; i < sizeof(IRCInfo); i++)
			{
				format(string, sizeof(string), "Channel %d: %d Nguoi choi da ket noi.", i + 1, IRCInfo[i][iPlayers]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			return 1;
		}
		else if (strcmp(x_nr, "password", true) == 0)
		{
			new pass[255];
			if(sscanf(params, "s[256]is[256]", x_nr, channel, pass))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc password [channelnr] [password]");
				return 1;
			}
			if (channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   So kenh khong the duoi 1 hoac tren 10 !"); return 1; }
			channel -= 1;
			new wstring[128];

			format(string, sizeof(string), "%s", GN(playerid));
			strmid(wstring, string, 0, strlen(string), 255);
			if (strcmp(IRCInfo[channel][iAdmin], wstring, true) == 0)
			{
				strmid(IRCInfo[channel][iPassword], pass, 0, strlen(pass), 255);
				format(string, sizeof(string), "Ban da thay doi mat khau kenh IRC thanh: %s.", IRCInfo[channel][iPassword]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SaveIRC();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin cua kenh do !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "needpass", true) == 0)
		{
			if(sscanf(params, "s[256]i", x_nr, channel))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc needpass [channelnr]");
				return 1;
			}
			if (channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   So kenh khong the duoi 1 hoac tren 10 !"); return 1; }
			channel -= 1;
			new wstring[128];

			format(string, sizeof(string), "%s", GN(playerid));
			strmid(wstring, string, 0, strlen(string), 255);
			if (strcmp(IRCInfo[channel][iAdmin], wstring, true) == 0)
			{
				if (IRCInfo[channel][iNeedPass] != 0)
				{
					IRCInfo[channel][iNeedPass] = 0;
					SendClientMessage(playerid, COLOR_YELLOW, "Nguoi choi khong can phai dien mat khau de vao kenh ngay luc nay.");
				}
				else
				{
					IRCInfo[channel][iNeedPass] = 1;
					SendClientMessage(playerid, COLOR_YELLOW, "Nguoi choi can phai dien mat khau de vao kenh ngay luc nay.");
				}
				SaveIRC();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin cua kenh do !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "lock", true) == 0)
		{
			if (sscanf(params, "s[256]i", x_nr, channel))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc lock [channelnr]");
				return 1;
			}
			if (channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   So kenh khong the duoi 1 hoac tren 10 !"); return 1; }
			channel -= 1;
			new wstring[128];

			format(string, sizeof(string), "%s", GN(playerid));
			strmid(wstring, string, 0, strlen(string), 255);
			if (strcmp(IRCInfo[channel][iAdmin], wstring, true) == 0)
			{
				if (IRCInfo[channel][iLock] != 0)
				{
					IRCInfo[channel][iLock] = 0;
					SendClientMessage(playerid, COLOR_YELLOW, "Ban da mo khoa kenh IRC.");
				}
				else
				{
					IRCInfo[channel][iLock] = 1;
					SendClientMessage(playerid, COLOR_YELLOW, "Ban da khoa kenh IRC.");
				}
				SaveIRC();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin cua kenh do !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "motd", true) == 0)
		{
			new result[255];
			if (sscanf(params, "s[256]is[255]", x_nr, channel, result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc motd [channelnr] [motdtext]");
				return 1;
			}
			if (channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   So kenh khong the duoi 1 hoac tren 10 !"); return 1; }
			channel -= 1;
			new wstring[128];

			format(string, sizeof(string), "%s", GN(playerid));
			strmid(wstring, string, 0, strlen(string), 255);
			if (strcmp(IRCInfo[channel][iAdmin], wstring, true) == 0)
			{
				strmid(IRCInfo[channel][iMOTD], result, 0, strlen(result), 255);
				SendClientMessage(playerid, COLOR_YELLOW, "Ban da dieu chinh MOTD Text cho kenh IRC.");
				SaveIRC();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin cua kenh do !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "leave", true) == 0)
		{
			if (PlayersChannel[playerid] < 999)
			{
				format(string, sizeof(string), "* %s da roi khoi kenh.", GN(playerid));
				SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
				IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
				PlayersChannel[playerid] = 999;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong kenh IRC !");
				return 1;
			}
		}
		else if (strcmp(x_nr, "admins", true) == 0)
		{
			for (new i = 0; i < sizeof(IRCInfo); i++)
			{
				format(string, sizeof(string), "Channel %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			return 1;
		}
		else if (strcmp(x_nr, "kick", true) == 0)
		{
			if (PlayersChannel[playerid] == 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong kenh IRC !");
				return 1;
			}
			new wstring[128];

			format(string, sizeof(string), "%s", GN(playerid));
			strmid(wstring, string, 0, strlen(string), 255);
			if (strcmp(IRCInfo[PlayersChannel[playerid]][iAdmin], wstring, true) == 0)
			{
				new giveplayerid;
				if (sscanf(params, "s[256]u", x_nr, giveplayerid))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /irc kick [playerid/Ten]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (PlayersChannel[giveplayerid] == PlayersChannel[playerid])
						{

							format(string, sizeof(string), "* Ban da kick %s ra khoi kenh IRC cua ban.", GN(giveplayerid));
							SendClientMessage(playerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "* Ban da bi kick ra khoi kenh IRC nay boi Admin kenh: %s.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "* %s da roi khoi kenh (Kicked).", GN(playerid));
							SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
							IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
							PlayersChannel[giveplayerid] = 999;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o trong kenh IRC cua ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Admin kenh !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   So kenh IRC khong hop le ! ");
			return 1;
		}
		return 1;
	}
	return 1;
}
CMD:i(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayersChannel[playerid] == 999)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong kenh IRC !");
			return 1;
		}
		if (PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Ban khong the noi, ban da bi cam noi");
			return 1;
		}
		new result[255], string[255];
		if(sscanf(params, "s[255]", result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /i [irc chat]");
			return 1;
		}
		format(string, sizeof(string), "** IRC %s: %s. **", GN(playerid), result);
		SendIRCMessage(PlayersChannel[playerid], COLOR_YELLOW2, string);
	}
	return 1;
}
CMD:mission(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (!PlayerToPoint(3.0, playerid, 1381.0413, -1088.8511, 27.3906))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o Bill Board !");
			return 1;
		}
		if (MissionPlayable == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong co nhiem vu nao duoc kich hoat !");
			return 1;
		}
		if (PlayerInfo[playerid][pMissionNr] == MissionPlayable)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da hoan thanh Active Mission !");
			return 1;
		}
		new string[255];
		RingTone[playerid] = 20;
		PlayerOnMission[playerid] = PlayMission[kNumber];
		MissionCheckpoint[playerid] = 1;
		format(string, sizeof(string), "~w~Nhiem vu bat dau: ~n~~r~%s", PlayMission[kTitle]);
		GameTextForPlayer(playerid, string, 5000, 3);
		format(string, sizeof(string), "%s", PlayMission[kText1]);
		SendClientMessage(playerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "%s", PlayMission[kText2]);
		SendClientMessage(playerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "%s", PlayMission[kText3]);
		SendClientMessage(playerid, COLOR_YELLOW2, string);
		if (PlayMission[kToggle] == 1)
		{
			SetPlayerCheckpoint(playerid, PlayMission[kCP1][0], PlayMission[kCP1][1], PlayMission[kCP1][2], 8);
		}
	}
	return 1;
}
CMD:settax(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLeader] != 7)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la thi truong !");
			return 1;
		}
		new moneys, string[255];
		if(sscanf(params, "i", moneys)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /settax [So luong]");
			return 1;
		}
		if (moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   Thue khong the duoi 1 hoac tren 5000 !"); return 1; }
		Tax = moneys;
		SaveStuff();
		format(string, sizeof(string), "* Thue duoc danh $%d tren moi nguoi dan, bat dau tu bay gio.", Tax);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:givetax(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLeader] != 7)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la thi truong !");
			return 1;
		}
		if (Tax < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong con tien trong ngan kho chinh phu !");
			return 1;
		}
		new Cops = 0, string[255];
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsLogOn(i))
			{
				if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
				{
					Cops += 1;
				}
			}
		}
		if (Cops >= 1)
		{
			new value = Tax / 2;
			new price = value / Cops;
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsLogOn(i))
				{
					if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
					{
						format(string, sizeof(string), "* Ban nhan duoc $%d tu thue Vault tu thi truong.", price);
						SendClientMessage(i, COLOR_WHITE, string);
						SafeGivePlayerMoney(i, price);
						Tax -= price;
					}
				}
			}
			SaveStuff();
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong co canh sat lam viec vao luc nay !");
			return 1;
		}
	}
	return 1;
}
CMD:read(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_job[256], string[255];
		if(sscanf(params, "s[256]", x_job)) {
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /read [Ten]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Paper, TestPaper");
			return 1;
		}
		if (strcmp(x_job, "paper", true) == 0)
		{
			if (GotPaper[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________ Los Angeles: Newspaper _____________________|");
				format(string, sizeof(string), "| %s  |  By News Reporter: %s.", Paper[playerid][pTitle], Paper[playerid][pMaker]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine1]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine2]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine3]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine4]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine5]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine6]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", Paper[playerid][pLine7]);
				SendClientMessage(playerid, COLOR_GREY, string);
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bao moi cua ngay hom nay !");
				return 1;
			}
		}
		else if (strcmp(x_job, "testpaper", true) == 0)
		{
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
				new paper;
				if (sscanf(params, "s[256]i", x_job, paper)) {
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /read testpaper [papernr]");
					return 1;
				}
				if (paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   So trang bao khong the duoi 1 hoac tren 10 !"); return 1; }
				paper -= 1;
				if (PaperInfo[paper][PaperUsed] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Khong co tin tuc gi duoc dang tren trang bao do !");
					return 1;
				}
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________ Los Angeles: Newspaper _____________________|");
				format(string, sizeof(string), "| %s  |  By News Reporter: %s.", PaperInfo[paper][PaperTitle], PaperInfo[paper][PaperMaker]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
				SendClientMessage(playerid, COLOR_GREY, string);
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la phat thanh vien !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /read testpaper [papernr]");
			return 1;
		}
	}
	return 1;
}
CMD:deliver(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, string[255];
		if (gTeam[playerid] == TEAMGOV || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 10)
		{
			if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
			{
				if (!PlayerToPoint(8.0, playerid, 96.9123, 1920.5088, 18.1473))
				{
					SendClientMessage(playerid, COLOR_GREY, "  Ban khong o Area51 Delivery Gate !");
					return 1;
				}
				if (sscanf(params, "u", giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /deliver [playerid/PartOfName]");
					return 1;
				}
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Khong the tong giam ban than vao Fort DeMorgan !"); return 1; }
						if (WantedLevel[giveplayerid] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Chi co the tong giam nguoi co Wanted vao Fort DeMorgan !"); return 1; }
						if (gTeam[giveplayerid] == TEAMGOV) { return 1; }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							format(string, sizeof(string), "* Ban tong giam %s vao Fort DeMorgan.", GN(giveplayerid));
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s tong giam ban vao Fort DeMorgan.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
							WantedPoints[giveplayerid] = 0;
							WantedLevel[giveplayerid] = 0;
							PlayerInfo[giveplayerid][pJailed] = 2;
							PlayerInfo[giveplayerid][pJailTime] = 3600;
							SetPlayerPos(giveplayerid, 107.2300, 1920.6311, 18.5208);
							SetPlayerWorldBounds(giveplayerid, 337.5694, 101.5826, 1940.9759, 1798.7453); //285.3481,96.9720,1940.9755,1799.0811
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
		}
		else if (PlayerInfo[playerid][pJob] == 15)
		{
			if (BringingPaper[playerid] != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban chua nhan bao tai News Reporters Building trong ngay hom nay !");
				return 1;
			}
			if (sscanf(params, "u", giveplayerid))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /deliver [playerid/Ten]");
				return 1;
			}
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{

						format(string, sizeof(string), "* Ban de nghi mot trong nhung to bao cua minh den %s.", GN(giveplayerid));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Nguoi giao bao %s muon dua cho ban to bao cua ngay hom nay (go /accept paper, de chap nhan).", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						PaperOffer[giveplayerid] = playerid;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi giao bao !");
			return 1;
		}
	}
	return 1;
}
CMD:bring(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 15)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi giao bao !");
			return 1;
		}
		if (PlayerToPoint(3.0, playerid, 1793.02, -1296.56, 13.44))
		{
			new paper, string[255];
			if (sscanf(params, "i", paper))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /bring [papernr]");
				return 1;
			}
			if (paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   So bao khong the duoi 1 hoac tren 10 !"); return 1; }
			paper -= 1;
			if (PaperInfo[paper][PaperUsed] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong co bai bao nao duoc viet tren trang bao do !");
				return 1;
			}

			format(string, sizeof(string), "* Bay gio ban co the giao bao cho moi nguoi, Newspaper: %s, boi: %s.", PaperInfo[paper][PaperTitle], PaperInfo[paper][PaperMaker]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
			strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
			strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
			strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
			strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
			strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
			strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
			strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
			strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
			format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
			strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
			BringingPaper[playerid] = 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong o News Reporter Building !");
			return 1;
		}
	}
	return 1;
}
CMD:papers(playerid, params[])
{
	new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pJob] == 15)
		{
			if (PlayerToPoint(3.0, playerid, 1793.02, -1296.56, 13.44))
			{
				new number = 0;
				for (new i = 0; i < sizeof(PaperInfo); i++)
				{
					number++;
					if (PaperInfo[i][PaperUsed] == 1)
					{
						format(string, sizeof(string), "|%d| Newspaper: %s, boi: %s", number, PaperInfo[i][PaperTitle], PaperInfo[i][PaperMaker]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o News Reporter Building !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi giao bao / phat thanh vien !");
			return 1;
		}
	}
	return 1;
}
CMD:paper(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if (!PlayerToPoint(3.0, playerid, 1793.02, -1296.56, 13.44))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o News Reporter Building !");
				return 1;
			}
			new x_nr[256], string[256], paper;
			if (sscanf(params, "s[256]i", x_nr, paper))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /paper write [papernr] hoac /paper delete [papernr]");
	
			if (strcmp(x_nr, "write", true) == 0)
			{
				if (paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   So bao khong the duoi 1 hoac tren 10 !"); return 1; }
				paper -= 1;
				if (PaperInfo[paper][PaperUsed] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Da co bao tai so do !");
					return 1;
				}
				SendClientMessage(playerid, COLOR_WHITE, "* Ban dang san xuat bao.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "* Tat ca nhung gi ban viet tu bay gio se duoc in vao bao, Ban co 7 dong de viet.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "* Xin hay dat tieu de cho to bao cua ban.");
				WritingPaper[playerid] = 1;
				WritingPaperNumber[playerid] = paper;
				WritingLine[playerid] = 1;
			}
			else if (strcmp(x_nr, "delete", true) == 0)
			{
				if (PlayerInfo[playerid][pRank] >= 4)
				{
					if (paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   So bao khong the duoi 1 hoac tren 10 !"); return 1; }
					paper -= 1;
					ClearPaper(paper);
					new number = paper; number += 1;
					format(string, sizeof(string), "Ban da xoa bao %d.", number);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Ban can o rank 4 de co the xoa bao !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /paper write [papernr] hoac /paper delete [papernr]");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la phat thanh vien !");
			return 1;
		}
	}
	return 1;
}
CMD:spawnchange(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pPhousekey] != 255)
		{
			if (Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban dang theo doi, khong the thay doi ngay bay gio !");
				return 1;
			}
			if (SpawnChange[playerid])
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bay gio ban se duoc spawn o mot noi binh thuong !");
				SpawnChange[playerid] = 0;
				/*if(IsAnInstructor(playerid))
				{
				if(SchoolSpawn[playerid] == 0)
				{
				SchoolSpawn[playerid] = 1;
				SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
				}
				else if(SchoolSpawn[playerid] == 1)
				{
				SchoolSpawn[playerid] = 0;
				SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
				}
				}*/
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bay gio ban se duoc spawn o nha / nha thue !");
				SpawnChange[playerid] = 1;
			}
		}
		else
		{
			/*if(IsAnInstructor(playerid))
			{
			if(SchoolSpawn[playerid] == 0)
			{
			SchoolSpawn[playerid] = 1;
			SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
			}
			else if(SchoolSpawn[playerid] == 1)
			{
			SchoolSpawn[playerid] = 0;
			SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
			}
			}
			else
			{*/
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong so huu nha / khong thue nha !");
			return 1;
			//}
		}
	}
	return 1;
}
//CMD:muaquanao(playerid, params[]) { return cmd_clothes(playerid, params); }
//CMD:clothes(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (PlayerInfo[playerid][pMember] >= 1)
//		{
//			if (IsAtClothShop(playerid))
//			{
//				if (PlayerInfo[playerid][pMember] == 1) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
//				else if (PlayerInfo[playerid][pMember] == 2) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
//				else if (PlayerInfo[playerid][pMember] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
//				else if (PlayerInfo[playerid][pMember] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }
//				else if (PlayerInfo[playerid][pMember] == 5) { ChosenSkin[playerid] = 117; SetPlayerSkin(playerid, 117); }
//				//else if(PlayerInfo[playerid][pMember] == 6) { ChosenSkin[playerid] = 111; SetPlayerSkin(playerid, 111); }
//				else if (PlayerInfo[playerid][pMember] == 8) { ChosenSkin[playerid] = 249; SetPlayerSkin(playerid, 249); }
//				else if (PlayerInfo[playerid][pMember] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
//				else if (PlayerInfo[playerid][pMember] == 10) { ChosenSkin[playerid] = 255; SetPlayerSkin(playerid, 255); }
//				else if (PlayerInfo[playerid][pMember] == 11) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
//				/*else if(PlayerInfo[playerid][pMember] == 14) { ChosenSkin[playerid] = 169; SetPlayerSkin(playerid, 169); }
//				else if(PlayerInfo[playerid][pMember] == 15) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }*/
//				else if (PlayerInfo[playerid][pMember] == 16) { ChosenSkin[playerid] = 144; SetPlayerSkin(playerid, 144); }
//				else { return 1; }
//				GetPlayerPos(playerid, ChangePos[playerid][0], ChangePos[playerid][1], ChangePos[playerid][2]);
//				ChangePos2[playerid][0] = GetPlayerInterior(playerid);
//				ChangePos2[playerid][1] = 1;
//				SetPlayerInterior(playerid, 0);
//				new rand = random(sizeof(gInviteSpawns));
//				SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
//				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
//				SetPlayerCameraPos(playerid, gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//				SetPlayerCameraLookAt(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//				TogglePlayerControllable(playerid, 0);
//				SelectChar[playerid] = 255;
//				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
//				SelectCharPlace[playerid] = 1;
//				PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
//				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
//				SendClientMessage(playerid, COLOR_LIGHTRED, "* Go 'next' de chon nhan vat ma ban muon su dung.");
//				SendClientMessage(playerid, COLOR_LIGHTRED, "* Neu ban da tim duoc nhan vat ma ban muon su dung, go 'done'.");
//			}
//			else
//			{
//				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong o trong cua hang quan ao !");
//				return 1;
//			}
//		}
//		else
//		{
//			if (PlayerInfo[playerid][pLeader] != 0)
//			{
//				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong the thay doi skin khi ban dang la leader !");
//				return 1;
//			}
//			if (IsAtClothShop(playerid))
//			{
//				if (PlayerInfo[playerid][pSex] == 1) { ChosenSkin[playerid] = 2; SetPlayerSkin(playerid, 2); PlayerInfo[playerid][pChar] = 2; }
//				else if (PlayerInfo[playerid][pSex] == 2) { ChosenSkin[playerid] = 55; SetPlayerSkin(playerid, 55); PlayerInfo[playerid][pChar] = 55; }
//				else { return 1; }
//				GetPlayerPos(playerid, ChangePos[playerid][0], ChangePos[playerid][1], ChangePos[playerid][2]);
//				ChangePos2[playerid][0] = GetPlayerInterior(playerid);
//				ChangePos2[playerid][1] = 1;
//				SetPlayerInterior(playerid, 0);
//				new rand = random(sizeof(gInviteSpawns));
//				SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
//				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
//				SetPlayerCameraPos(playerid, gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//				SetPlayerCameraLookAt(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
//				TogglePlayerControllable(playerid, 0);
//				SelectChar[playerid] = 255;
//				if (PlayerInfo[playerid][pSex] == 1) { SelectCharID[playerid] = 20; }
//				else if (PlayerInfo[playerid][pSex] == 2) { SelectCharID[playerid] = 30; }
//				else { return 1; }
//				SelectCharPlace[playerid] = 1;
//				PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
//				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
//				SendClientMessage(playerid, COLOR_LIGHTRED, "* Go 'next' de chon nhan vat ma ban muon su dung.");
//				SendClientMessage(playerid, COLOR_LIGHTRED, "* Neu ban da tim duoc nhan vat ma ban muon su dung, go 'done'.");
//			}
//		}
//	}
//	return 1;
//}
CMD:lotto(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLottoNr] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da co ve so Lottery !");
			return 1;
		}
		if (GetPlayerMoney(playerid) < 50)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can $50 de mua ve so Lottery !");
			return 1;
		}
		new lottonr, string[256];
		if (sscanf(params, "i", lottonr))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /lotto [number]");
			
		if (lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   Lottery Number khong the duoi 1 hoac hon 80 !"); return 1; }
		format(string, sizeof(string), "* Ban da mua ve so Lottery voi so: %d.", lottonr);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SafeGivePlayerMoney(playerid, -50);
		PlayerInfo[playerid][pLottoNr] = lottonr;
	}
	return 1;
}
CMD:tichthu(playerid, params[]) { return cmd_take(playerid, params); }
CMD:take(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRank] < 2)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban can o rank 2 hoac cao hon de thuc hien hanh dong nay !");
				return 1;
			}
			new x_nr[256], giveplayerid, string[256];
			if (sscanf(params, "s[256]u", x_nr, giveplayerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Take Licenses __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /take [licensename] [playerid/Ten]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: LaiXe, Maybay, Thuyen, Sung, Vukhi, Thuoc, Vatlieu");
				SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
				return 1;
			}
			if (strcmp(x_nr, "laixe", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's bang lai xe.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di bang lai xe cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pCarLic] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "maybay", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's bang lai may bay.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di bang lai may bay cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pFlyLic] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "sung", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's giay phep su dung vu khi.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di giay phep su dung vu khi cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pGunLic] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "thuyen", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's giay phep lai thuyen.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di giay phep lai thuyen cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pBoatLic] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "vukhi", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's vu khi.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di vu khi cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							SafeResetPlayerWeapons(giveplayerid);
							PlayerInfo[giveplayerid][pGun][0] = 0; PlayerInfo[giveplayerid][pAmmo][0] = 0;
							PlayerInfo[giveplayerid][pGun][1] = 0; PlayerInfo[giveplayerid][pAmmo][1] = 0;
							PlayerInfo[giveplayerid][pGun][2] = 0; PlayerInfo[giveplayerid][pAmmo][2] = 0;
							PlayerInfo[giveplayerid][pGun][3] = 0; PlayerInfo[giveplayerid][pAmmo][3] = 0;
							PlayerInfo[giveplayerid][pInvWeapon] = 0; PlayerInfo[giveplayerid][pInvAmmo] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "thuoc", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's thuoc.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di thuoc cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pDrugs] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else if (strcmp(x_nr, "vatlieu", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new giveplayername[64];
							
							GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							format(string, sizeof(string), "* Ban da lay di %s's vat lieu.", giveplayername);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Si quan %s da lay di vat lieu cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pMats] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ten vat muon lay khong hop le !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat !");
			return 1;
		}
	}
	return 1;
}
CMD:uong(playerid, params[]) { return cmd_drink(playerid, params); }
CMD:drink(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsAtBar(playerid))
		{
			if (PlayerDrunk[playerid] < 10)
			{
				new Float:health;
				new x_nr[256], string[256];
				if (sscanf(params, "s[256]", x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|____________________ Bar Drinks ______________________|");
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /drink [drinkname]");
					SendClientMessage(playerid, COLOR_GREY, "Non-Alcoholic: Water ($1), Sprunk($2)");
					SendClientMessage(playerid, COLOR_GREY, "Cheap Booze: Pissh ($6), Bourbon($8), Champagne($12)");
					SendClientMessage(playerid, COLOR_GREY, "Expensive Drinks: Vodka ($16), Cristal($20)");
					SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Warning! Excessive Drinking Causes Liver Damage");
					SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________________|");
					return 1;
				}
				if (strcmp(x_nr, "pissh", true) == 0)
				{
					if (PlayerInfo[playerid][pAge] < 16)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Bartender: Xin loi, Ban can tu 16 de su dung nuoc uong nay.");
						return 1;
					}
					SafeGivePlayerMoney(playerid, -6);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Ban dang~n~~p~Say", 3500, 1); }
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 10; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 10.0); }
					}
				}
				else if (strcmp(x_nr, "bourbon", true) == 0)
				{
					if (PlayerInfo[playerid][pAge] < 18)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Bartender: Xin loi, Ban can tu 18 de su dung nuoc uong nay.");
						return 1;
					}
					SafeGivePlayerMoney(playerid, -8);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Ban dang~n~~p~Say", 3500, 1); }
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 15.0); }
					}
				}
				else if (strcmp(x_nr, "champagne", true) == 0)
				{
					if (PlayerInfo[playerid][pAge] < 18)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Bartender: Xin loi, Ban can tu 18 de su dung nuoc uong nay.");
						return 1;
					}
					SafeGivePlayerMoney(playerid, -12);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Ban dang~n~~p~Say", 3500, 1); }
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 20; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 20.0); }
					}
				}
				else if (strcmp(x_nr, "vodka", true) == 0)
				{
					if (PlayerInfo[playerid][pAge] < 18)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Bartender: Xin loi, Ban can tu 18 de su dung nuoc uong nay.");
						return 1;
					}
					SafeGivePlayerMoney(playerid, -16);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Ban dang~n~~p~Say", 3500, 1); }
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 27.0); }
					}
				}
				else if (strcmp(x_nr, "cristal", true) == 0)
				{
					if (PlayerInfo[playerid][pAge] < 18)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Bartender: Xin loi, Ban can tu 18 de su dung nuoc uong nay.");
						return 1;
					}
					SafeGivePlayerMoney(playerid, -20);
					PlayerDrunk[playerid] += 4;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Ban dang~n~~p~Say", 3500, 1); }
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 40; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 40.0); }
					}
				}
				else if (strcmp(x_nr, "water", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -1);
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 50.0); }
					}
					else if (health > 100)
					{
						SetPlayerHealth(playerid, 100);
					}
				}
				else if (strcmp(x_nr, "sprunk", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -2);
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
						else { SetPlayerHealth(playerid, health + 50.0); }
					}
					else if (health > 100)
					{
						SetPlayerHealth(playerid, 100);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bartender: Toi khong biet ten cua loai nuoc do.");
					return 1;
				}
				GetPlayerHealth(playerid, health);
				if (health > 100) SetPlayerHealth(playerid, 100);
				
				format(string, sizeof(string), "* %s uong mot it %s.", GN(playerid), x_nr);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong the uong nua, ban se pha tung len mat!");
				return 1;
			}
		}
		else if (PlayerToPoint(5, playerid, 1255.9084, -791.8105, 1085.3828))
		{
			if (PlayerDrunk[playerid] < 10)
			{
				new Float:health;
				new x_nr[256], string[256];
				if (sscanf(params, "s[256]", x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|____________________ Bar Drinks ______________________|");
					SendClientMessage(playerid, COLOR_WHITE, "Su dung: /drink [drinkname]");
					SendClientMessage(playerid, COLOR_GREY, "Caffe: Cappuccino ($4), Latte($5), Macchiato($5)");
					SendClientMessage(playerid, COLOR_GREY, "Mixes/liqueur: Limoncello($8), Amaretto($7), Martini($12)");
					SendClientMessage(playerid, COLOR_GREY, "Wine: Merlot ($15), Sangiovese($18), Frizzante($16)");
					SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Warning! Excessive Drinking Causes Liver Damage");
					SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________________|");
					return 1;
				}
				else if (strcmp(x_nr, "cappuccino", true) == 0)
				{
					GetPlayerHealth(playerid, health);
					if (health < 100)
					{
						SafeGivePlayerMoney(playerid, -4);
						SetPlayerHealth(playerid, health + 30);
						
						format(string, sizeof(string), "* %s takes a sip of Cappuccino from the porcelain cup.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
				}
				else if (strcmp(x_nr, "latte", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -5);
					SetPlayerHealth(playerid, health + 30);
					
					format(string, sizeof(string), "* %s drinks from a tall glass of Caffe Latte.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else if (strcmp(x_nr, "macchiato", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -5);
					SetPlayerHealth(playerid, health + 30);
					
					format(string, sizeof(string), "* %s drinks from a glass mug of Caffe Macchiato.", GN(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else if (strcmp(x_nr, "limoncello", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -8);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s drinks from a ceramic glass of Limoncello.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s drinks from a ceramic glass of Limoncello.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				else if (strcmp(x_nr, "amaretto", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -7);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s takes a sip of Amaretto from a rocks glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s takes a sip of Amaretto from a rocks glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				else if (strcmp(x_nr, "martini", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -12);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s takes a sip of Martini from the cocktail glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s takes a sip of Martini from the cocktail glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				else if (strcmp(x_nr, "merlot", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -15);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s takes a sip of red wine (Merlot) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s takes a sip of red wine (Merlot) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				else if (strcmp(x_nr, "sangiovese", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -18);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s takes a sip of red wine (Sangiovese) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s takes a sip of red wine (Sangiovese) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				else if (strcmp(x_nr, "frizzante", true) == 0)
				{
					SafeGivePlayerMoney(playerid, -16);
					PlayerDrunk[playerid] += 2;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
					{
						if (PlayerInfo[playerid][pAlcoholPerk] > 0)
						{
							PlayerDrunk[playerid] += 1;
							new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
							hp += 30;
							SetPlayerHealth(playerid, health + hp);
							format(string, sizeof(string), "* %s takes a sip of white wine (Frizzante) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SetPlayerHealth(playerid, health + 30.0);
							format(string, sizeof(string), "* %s takes a sip of white wine (Frizzante) from the wine glass.", GN(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
					}
				}
				GetPlayerHealth(playerid, health);
				if (health > 100) SetPlayerHealth(playerid, 100);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o Bar!");
			return 1;
		}
	}
	return 1;
}
CMD:setchamp(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new giveplayerid, string[256], giveplayer[128];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /setchamp [playerid/Ten]");
		
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new nstring[MAX_PLAYER_NAME];
					format(nstring, sizeof(nstring), "%s", giveplayer);
					strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
					Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
					SaveBoxer();
					format(string, sizeof(string), "* Ban vua phong %s tro thanh nha vo dich Boxing.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the su dung lenh nay!");
		}
	}
	return 1;
}
CMD:boxstats(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 12)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Boxer !");
			return 1;
		}
		new string[128];
		new ttext[20];//Title
		new clevel = PlayerInfo[playerid][pBoxSkill];
		if (clevel >= 0 && clevel <= 50) { ttext = "Beginner"; }
		else if (clevel >= 51 && clevel <= 200) { ttext = "Amateur"; }
		else if (clevel >= 201 && clevel <= 400) { ttext = "Professional"; }
		new ntext[20];//NickName
		new level = PlayerInfo[playerid][pWins];
		if (level > 0 && PlayerInfo[playerid][pLoses] == 0)
		{
			ntext = "Undefeated";
		}
		else
		{
			if (level >= 0 && level <= 10) { ntext = "Newcomer"; }
			else if (level >= 11 && level <= 20) { ntext = "Touchy Fist"; }
			else if (level >= 21 && level <= 30) { ntext = "Nut Cracker"; }
			else if (level >= 31 && level <= 40) { ntext = "Tommygun"; }
			else if (level >= 41 && level <= 50) { ntext = "Skull Breaker"; }
			else if (level >= 51 && level <= 60) { ntext = "Light Speed"; }
			else if (level >= 61 && level <= 70) { ntext = "Unbroken Warrior"; }
			else if (level >= 71) { ntext = "Itallion Stallion"; }
		}
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Boxing Records __________________|");
		format(string, sizeof(string), "| Current Champion: %s, with [%d] Winnings and [%d] Losses.", Titel[TitelName], Titel[TitelWins], Titel[TitelLoses]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "| Current Title: %s.", ttext);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "| Current NickName: %s.", ntext);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "| Total Wins: %d.", PlayerInfo[playerid][pWins]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "| Total Losses: %d.", PlayerInfo[playerid][pLoses]);
		SendClientMessage(playerid, COLOR_GREY, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
	}
	return 1;
}
CMD:fight(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 12)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Boxer !");
			return 1;
		}
		if (InRing > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Dang co mot cuoc loi dai dang dien ra, cho ket thuc !");
			return 1;
		}
		if (PlayerBoxing[playerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban dang trong mot cuoc dau loi dai !");
			return 1;
		}
		if (!PlayerToPoint(20.0, playerid, 765.9343, 0.2761, 1000.7173))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o Gantom Gym !");
			return 1;
		}
		new giveplayerid, string[256], giveplayer[128];
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /fight [Playerid/Ten]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) {
						SendClientMessage(playerid, COLOR_GREY, "Ban khong the dau voi chinh minh");
						return 1;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi mot cuoc dau loi dai voi %s.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Boxer %s muon mot cuoc dau loi dai voi ban (go /accept boxing) de chap nhan.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					BoxOffer[giveplayerid] = playerid;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
/*if(strcmp(cmd, "/music", true) == 0)
{
if(IsLogOn(playerid))
{
if(PlayerInfo[playerid][pCrashed])
{
new x_nr[256];
x_nr = strtok(cmdtext, idx);
if(!strlen(x_nr)) {
SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /music [name]");
SendClientMessage(playerid, COLOR_GREY, "Available names: On, Off, Next");
SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________|");
return 1;
}
if(strcmp(x_nr,"on",true) == 0)
{
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
new channel = Music[playerid];
PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
}
else if(strcmp(x_nr,"off",true) == 0)
{
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
PlayerFixRadio(playerid);
}
else if(strcmp(x_nr,"next",true) == 0)
{
if(Music[playerid] == 0) { Music[playerid] = 1; }
else if(Music[playerid] == 1) { Music[playerid] = 2; }
else if(Music[playerid] == 2) { Music[playerid] = 3; }
else if(Music[playerid] == 3) { Music[playerid] = 4; }
else if(Music[playerid] == 4) { Music[playerid] = 5; }
else if(Music[playerid] == 5) { Music[playerid] = 6; }
else if(Music[playerid] == 6) { Music[playerid] = 0; }
new channel = Music[playerid];
PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Unknown music command !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have a CD-Player !");
return 1;
}
}
return 1;
}*/
/*if(strcmp(cmd, "/service", true) == 0)
{
if(IsLogOn(playerid))
{
new x_nr[256];
x_nr = strtok(cmdtext, idx);
if(!strlen(x_nr)) {
SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /service [name]");
SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Pizza");
SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
return 1;
}
if(strcmp(x_nr,"taxi",true) == 0)
{
if(TaxiDrivers < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   There are no Taxi Drivers On Duty at the moment, try again later !");
return 1;
}
if(TransportDuty[playerid] > 0)
{
SendClientMessage(playerid, COLOR_GREY, "   You can't call for a Taxi now !");
return 1;
}

format(string, sizeof(string), "** %s is in need of a Taxi Driver. (use /accept taxi to accept the call)", GN(playerid));
SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Taxi Driver, wait for a reply.");
TaxiCall = playerid;
return 1;
}
else if(strcmp(x_nr,"Pizza",true) == 0)//added lookagain
{
if(PizzaBoys < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   There are no Pizza boys On Duty at the moment, try again later!");
return 1;
}

format(string, sizeof(string), "** %s is in need of a Pizza. (use /accept Pizza to accept the call)", GN(playerid));
SendJobMessage(17, COLOR_LIGHTBLUE, string);
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered a Pizza, wait for a reply.");
PizzaCall = playerid;
return 1;
}
else if(strcmp(x_nr,"bus",true) == 0)
{
new routezonecheck = IsInBusrouteZone(playerid);
new drivercount = 0;
if (routezonecheck == 0)
{
for (new i=0; i<=MAX_PLAYERS; i++)
{
if (IsLogOn(i) && BusrouteEast[i][0] != 0) drivercount++;
}
if (drivercount != 0)
{
format(string, sizeof(string), "There are currently %d bus drivers on the east route. The route is as follows:", drivercount);
SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
SendClientMessage(playerid, TEAM_AZTECAS_COLOR, " ");
SendBusRoute(playerid, 0);
}
else SendClientMessage(playerid, COLOR_GREY, "There are no bus drivers on the east route at this time.");
}
else if (routezonecheck == 1)
{
for (new i=0; i<=MAX_PLAYERS; i++)
{
if (IsLogOn(i) && BusrouteWest[i][0] != 0) drivercount++;
}
if (drivercount != 0)
{
format(string, sizeof(string), "There are currently %d bus drivers on the west route. The route is as follows:", drivercount);
SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
SendBusRoute(playerid, 1);
}
else SendClientMessage(playerid, COLOR_GREY, "There are no bus drivers on the west route at this time.");
}
else SendClientMessage(playerid, COLOR_GREY, "No bus services are running in this area at the current time.");
return 1;
}
else if(strcmp(x_nr,"medic",true) == 0)
{
if(Medics < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   There are no Medics On Duty at the moment, try again later !");
return 1;
}

format(string, sizeof(string), "** %s is in need of a Medic. (use /accept medic to accept the call)", GN(playerid));
SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Medic, wait for a reply.");
MedicCall = playerid;
return 1;
}
else if(strcmp(x_nr,"mechanic",true) == 0)
{
if(Mechanics < 1)
{
SendClientMessage(playerid, COLOR_GREY, "   There are no Car Mechanics On Duty at the moment, try again later !");
return 1;
}

format(string, sizeof(string), "** %s is in need of a Car Mechanic. (use /accept mechanic to accept the call)", GN(playerid));
SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Car Mechanic, wait for a reply.");
MechanicCall = playerid;
return 1;
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Unknown service name !");
return 1;
}
}
return 1;
}*/
CMD:service(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   Go /calllist de xem danh sach cac dich vu ' so !");
		return 1;
	}
	return 1;
}
CMD:calllist(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_GREEN, "____________Services number list____________");
		SendClientMessage(playerid, COLOR_WHITE, "111 - pizza stack co., 222 - bus services, 444 - taxi,");
		SendClientMessage(playerid, COLOR_WHITE, "555 - mechanic, 3900 - ABC studio, 911 - emergency");
		SendClientMessage(playerid, COLOR_GREEN, "____________________________________________");
		return 1;
	}
	return 1;
}
CMD:tie(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (Rope[playerid] != 0)
		{
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban can dat level 2 tro len de troi ! ");
				return 1;
			}
			new giveplayerid, giveplayer[50], string[128];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /tie [Playerid/Ten]");
			
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (PlayerTied[giveplayerid] > 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da bi troi!");
						return 1;
					}
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new car = GetPlayerVehicleID(playerid);
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu troi ban than!"); return 1; }
						if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* Ban da bi troi boi %s .", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Ban da troi %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da troi %s , vi vay khong the di dau.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerTied[giveplayerid] = 1;
							Rope[playerid]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o trong xe cua ban, hoac ban khong phai la nguoi cam lai !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co day thung !");
		}
	}
	return 1;
}
CMD:untie(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /untie [Playerid/Ten]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the coi troi cho chinh minh!"); return 1; }
					if (PlayerTied[giveplayerid])
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban da duoc coi troi boi %s.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Ban da coi troi cho %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
						TogglePlayerControllable(giveplayerid, 1);
						PlayerTied[giveplayerid] = 0;
						format(string, sizeof(string), "* %s da coi troi cho %s , va mang day thung ben minh.", GN(playerid), giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Rope[playerid]++;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong bi troi !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}//not connected
	return 1;
}
CMD:copmotroi(playerid, params[]) { return cmd_copuntie(playerid, params); }
CMD:copuntie(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (IsACop(playerid))
		{
			/*if(PlayerInfo[playerid][pRank] < 3)
			{
			SendClientMessage(playerid, COLOR_GREY, "   You need Rank 3 or higher to untie people !");
			return 1;
			}*/
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /copuntie [Playerid/PartOfName]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu coi troi cho chinh minh!"); return 1; }
						if (PlayerTied[giveplayerid])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* Ban da duoc coi troi boi %s.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Ban da coi troi cho %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s da coi troi cho %s.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong bi troi !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la canh sat !");
		}
	}//not connected
	return 1;
}
CMD:sell(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_nr[256], fishid, string[128];
		if (sscanf(params, "s[256]i", x_nr, fishid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sell [name] [fishid/cookid]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Fish, Cooked");
			SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________|");
			return 1;
		}
		if (strcmp(x_nr, "fish", true) == 0)
		{
			if (!PlayerToPoint(100, playerid, -30.875, -88.9609, 1004.53))//centerpoint 24-7
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong o 24-7 !");
				return 1;
			}
			new price;
			if (fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
			else if (fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bat duoc ca o so (1) !"); return 1; }
			else if (fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bat duoc ca o so (2) !"); return 1; }
			else if (fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bat duoc ca o so (3) !"); return 1; }
			else if (fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bat duoc ca o so (4) !"); return 1; }
			else if (fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co bat duoc ca o so (5) !"); return 1; }
			//ConsumingMoney[playerid] = 1;
			switch (fishid)
			{
			case 1:
			{
						if (Fishes[playerid][pWeight1] < 20)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Chung toi chi hung thu voi nhung con ca co can nang 20 LBS hoac hon.");
							return 1;
						}
						price = FishCost(playerid, Fishes[playerid][pFid1]) / 3;
						price = price * Fishes[playerid][pWeight1] / 3;
						if (PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = price / 800;
							new payout = (skill)*(1);
							price += payout;
						}
						GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
						format(string, sizeof(string), "* Ban da ban %s , no nang %d, cho $%d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1], price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 1);
			}
			case 2:
			{
						if (Fishes[playerid][pWeight2] < 20)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Chung toi chi hung thu voi nhung con ca co can nang 20 LBS hoac hon.");
							return 1;
						}
						price = FishCost(playerid, Fishes[playerid][pFid2]) / 3;
						price = price * Fishes[playerid][pWeight2] / 3;
						if (PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = price / 800;
							new payout = (skill)*(1);
							price += payout;
						}
						GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
						format(string, sizeof(string), "* Ban da ban %s , no nang %d, cho $%d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2], price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 2);
			}
			case 3:
			{
						if (Fishes[playerid][pWeight3] < 20)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Chung toi chi hung thu voi nhung con ca co can nang 20 LBS hoac hon.");
							return 1;
						}
						price = FishCost(playerid, Fishes[playerid][pFid3]) / 3;
						price = price * Fishes[playerid][pWeight3] / 3;
						if (PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = price / 800;
							new payout = (skill)*(1);
							price += payout;
						}
						GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
						format(string, sizeof(string), "* Ban da ban %s , no nang %d, cho $%d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3], price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 3);
			}
			case 4:
			{
						if (Fishes[playerid][pWeight4] < 20)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Chung toi chi hung thu voi nhung con ca co can nang 20 LBS hoac hon.");
							return 1;
						}
						price = FishCost(playerid, Fishes[playerid][pFid4]) / 3;
						price = price * Fishes[playerid][pWeight4] / 3;
						if (PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = price / 800;
							new payout = (skill)*(1);
							price += payout;
						}
						GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
						format(string, sizeof(string), "* Ban da ban %s , no nang %d, cho $%d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4], price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 4);
			}
			case 5:
			{
						if (Fishes[playerid][pWeight5] < 20)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Chung toi chi hung thu voi nhung con ca co can nang 20 LBS hoac hon.");
							return 1;
						}
						price = FishCost(playerid, Fishes[playerid][pFid5]) / 3;
						price = price * Fishes[playerid][pWeight5] / 3;
						if (PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = price / 800;
							new payout = (skill)*(1);
							price += payout;
						}
						GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
						format(string, sizeof(string), "* Ban da ban %s , no nang %d, cho $%d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5], price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 5);
			}
			}
			Fishes[playerid][pLastFish] = 0;
			Fishes[playerid][pFishID] = 0;
			return 1;
		}
		else if (strcmp(x_nr, "cooked", true) == 0)
		{
			new cookid = fishid;
			if (cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
			else if (cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co mon an nao o so (1) !"); return 1; }
			else if (cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co mon an nao o so (2) !"); return 1; }
			else if (cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co mon an nao o so (3) !"); return 1; }
			else if (cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co mon an nao o so (4) !"); return 1; }
			else if (cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co mon an nao o so (5) !"); return 1; }
			new giveplayerid, giveplayer[50];
			if (sscanf(params, "s[256]iu", x_nr, cookid, giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sell cooked [cooknumber] [playerid/PartOfName]");
	
			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					switch (cookid)
					{
					case 1:
					{
								if (Cooking[giveplayerid][pCWeight1] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
									strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
									Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight2] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
									strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
									Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight3] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
									strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
									Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight4] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
									strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
									Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight5] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
									strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
									Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Khong con cho trong !");
									return 1;
								}
					}
					case 2:
					{
								if (Cooking[giveplayerid][pCWeight1] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
									strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
									Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight2] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
									strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
									Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight3] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
									strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
									Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight4] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
									strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
									Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight5] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
									strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
									Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Khong co cho trong !");
									return 1;
								}
					}
					case 3:
					{
								if (Cooking[giveplayerid][pCWeight1] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
									strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
									Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight2] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
									strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
									Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight3] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
									strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
									Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight4] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
									strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
									Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight5] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
									strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
									Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Khong con cho trong !");
									return 1;
								}
					}
					case 4:
					{
								if (Cooking[giveplayerid][pCWeight1] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
									strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
									Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight2] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
									strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
									Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight3] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
									strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
									Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight4] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
									strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
									Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight5] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
									strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
									Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Goe /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Khong con cho trong !");
									return 1;
								}
					}
					case 5:
					{
								if (Cooking[giveplayerid][pCWeight1] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
									strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
									Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight2] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
									strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
									Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight3] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
									strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
									Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight4] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
									strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
									Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else if (Cooking[giveplayerid][pCWeight5] < 1)
								{
									format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
									strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
									Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
									Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
									format(string, sizeof(string), "* %s dua cho ban %s nang %d (Go /cooked de xem).", GN(playerid), Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* Ban dua %s nang %d cho %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "   Khong con cho trong !");
									return 1;
								}
					}
					}//switch
					ClearCookingID(playerid, cookid);
				}//invalid giveplayerid
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong hop le !");
			return 1;
		}
	}
	return 1;
}
CMD:gia(playerid, params[]) { return cmd_fare(playerid, params); }
CMD:fare(playerid, params[])
{
		 new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pJob] == 14)
		{
			if (TransportDuty[playerid] > 0)
			{
				if (TransportDuty[playerid] == 1)
				{
					TaxiDrivers -= 1;
				}
				else if (TransportDuty[playerid] == 2)
				{
					BusDrivers -= 1;
				}
				TransportDuty[playerid] = 0;
				format(string, sizeof(string), "* Ban dang Off Duty va kiem duoc $%d.", TransportMoney[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
				/*ConsumingMoney[playerid] = 1;*/ TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
				return 1;
			}
			new Veh = GetPlayerVehicleID(playerid);
			if (Veh == 61 || Veh == 62 || Veh == 63 || Veh == 64 || Veh == 65 || Veh == 66 || Veh == 67 || Veh == 68 || Veh == 69 || Veh == 70)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new moneys;
					if (sscanf(params, "i", moneys))
						return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /fare [gia]");

					if (moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien phai tu $1 den $999 !"); return 1; }
					TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					
					format(string, sizeof(string), "[Advert] Taxi Driver %s dang On Duty, /call 444 de goi taxi. Gia: $%d.", GN(playerid), TransportValue[playerid]);
					OOCNews(0xEDCA29AA, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Driver !");
					return 1;
				}
			}
			else if (Veh == 59 || Veh == 60)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new moneys;
					if (sscanf(params, "i", moneys))
						return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /fare [gia]");

					if (moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien phai tu $1 den $99999 !"); return 1; }
					BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = moneys;
					
					format(string, sizeof(string), "Bus Driver %s dang On Duty, gia: $%d.", GN(playerid), TransportValue[playerid]);
					OOCNews(TEAM_GROVE_COLOR, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Driver !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong Taxi / Bus !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Taxi / Bus Driver !");
			return 1;
		}
	}
	return 1;
}
/*if(strcmp(cmd,"/eat",true)==0)
{
if(IsLogOn(playerid))
{
if(PlayerBoxing[playerid] > 0)
{
SendClientMessage(playerid, COLOR_GREY, "   Cant eat a Fish while you are fighting !");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) {
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /eat [cook number]");
return 1;
}
new cookid = strval(tmp);
if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(1) !"); return 1; }
else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(2) !"); return 1; }
else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(3) !"); return 1; }
else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(4) !"); return 1; }
else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(5) !"); return 1; }

new Float:health;
if(GetPlayerHealth(playerid, health) < 40)
{
new hp = 0;
switch (cookid)
{
case 1:
{
if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
{//Dolphin or Turtle
WantedPoints[playerid] += 2;
SetPlayerCriminal(playerid,255, "Consuming endangered Species");
}
SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
hp = Cooking[playerid][pCWeight1];
format(string, sizeof(string), "* %s eats %s.", GN(playerid), Cooking[playerid][pCook1]);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook1], hp);
SendClientMessage(playerid, COLOR_WHITE, string);
}
case 2:
{
if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
{//Dolphin or Turtle
WantedPoints[playerid] += 2;
SetPlayerCriminal(playerid,255, "Consuming endangered Species");
}
SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
hp = Cooking[playerid][pCWeight2];
format(string, sizeof(string), "* %s eats %s.", GN(playerid), Cooking[playerid][pCook2]);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook2], hp);
SendClientMessage(playerid, COLOR_WHITE, string);
}
case 3:
{
if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
{//Dolphin or Turtle
WantedPoints[playerid] += 2;
SetPlayerCriminal(playerid,255, "Consuming endangered Species");
}
SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
hp = Cooking[playerid][pCWeight3];
format(string, sizeof(string), "* %s eats %s.", GN(playerid), Cooking[playerid][pCook3]);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook3], hp);
SendClientMessage(playerid, COLOR_WHITE, string);
}
case 4:
{
if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
{//Dolphin or Turtle
WantedPoints[playerid] += 2;
SetPlayerCriminal(playerid,255, "Consuming endangered Species");
}
SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
hp = Cooking[playerid][pCWeight4];
format(string, sizeof(string), "* %s eats %s.", GN(playerid), Cooking[playerid][pCook4]);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook4], hp);
SendClientMessage(playerid, COLOR_WHITE, string);
}
case 5:
{
if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
{//Dolphin or Turtle
WantedPoints[playerid] += 2;
SetPlayerCriminal(playerid,255, "Consuming endangered Species");
}
SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
hp = Cooking[playerid][pCWeight5];
format(string, sizeof(string), "* %s eats %s.", GN(playerid), Cooking[playerid][pCook5]);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook5], hp);
SendClientMessage(playerid, COLOR_WHITE, string);
}
}
ClearCookingID(playerid, cookid);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Your health is high enough, can only eat at 40 Health !");
return 1;
}
}
return 1;
}*/
CMD:eatpizza(playerid, params[])
{
	new string[256];
	if (bPizza[playerid] != 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Ban khong co pizza, /call 111");
		return 1;
	}
	SetPlayerHealth(playerid, 100);
	
	format(string, sizeof(string), "* Ban vua an mot cai pizza , cam thay tot hon truoc");
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* %s lay banh pizza ra va bat dau an", GN(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	bPizza[playerid] = 0;
	return 1;
}
CMD:sellpizza(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] == 17)
	{
		if (sPizza[playerid] == 1)
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung : /sellpizza [playerid/Ten]");

			if (IsLogOn(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban da giao mot cai pizza cho %s", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Pizza boy %s giao cho ban pizza /eatpizza", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s lay banh pizza ra va giao cho %s", GN(playerid), giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						bPizza[giveplayerid] = 1;
						sPizza[playerid] = 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban!");
						return 1;
					}
				}
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Hay di lay pizza tu trong bep!");
		}
	}
	return 1;
}
/*if(strcmp(cmd,"/cook",true)==0)
{
if(IsLogOn(playerid))
{
if(IsAtCookPlace(playerid))
{
new x_nr[256];
x_nr = strtok(cmdtext, idx);
if(!strlen(x_nr)) {
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cook [name]");
SendClientMessage(playerid, COLOR_WHITE, "Available names: Lastfish, Fish, Chicken, Hamburger, Pizza.");
return 1;
}
if(strcmp(x_nr,"lastfish",true) == 0)
{
if(Fishes[playerid][pLastFish] > 0)
{
new found = 0;
if(Cooking[playerid][pCWeight1] == 0)
{
format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
found = 1;
}
else if(Cooking[playerid][pCWeight2] == 0)
{
format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
found = 1;
}
else if(Cooking[playerid][pCWeight3] == 0)
{
format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
found = 1;
}
else if(Cooking[playerid][pCWeight4] == 0)
{
format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
found = 1;
}
else if(Cooking[playerid][pCWeight5] == 0)
{
format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
found = 1;
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
return 1;
}
if(found)
{
ClearFishID(playerid, Fishes[playerid][pLastFish]);
Fishes[playerid][pLastFish] = 0;
Fishes[playerid][pFishID] = 0;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
return 1;
}
}
else if(strcmp(x_nr,"fish",true) == 0)
{
new found = 0;
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cook fish [fishnumber]");
return 1;
}
new fishid = strval(tmp);
if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
if(Cooking[playerid][pCWeight1] == 0)
{
if(fishid == 1)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 2)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 3)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 4)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 5)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
found = 1;
}
else if(Cooking[playerid][pCWeight2] == 0)
{
if(fishid == 1)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 2)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 3)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 4)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 5)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
found = 1;
}
else if(Cooking[playerid][pCWeight3] == 0)
{
if(fishid == 1)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 2)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 3)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 4)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 5)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
found = 1;
}
else if(Cooking[playerid][pCWeight4] == 0)
{
if(fishid == 1)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 2)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 3)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 4)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 5)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
found = 1;
}
else if(Cooking[playerid][pCWeight5] == 0)
{
if(fishid == 1)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 2)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 3)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 4)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(fishid == 5)
{
format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
found = 1;
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
return 1;
}
if(found)
{
ClearFishID(playerid, fishid);
Fishes[playerid][pLastFish] = 0;
Fishes[playerid][pFishID] = 0;
}
}
else if(strcmp(x_nr,"chicken",true) == 0)
{
if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
{//Cluckin Bell
if(Groceries[playerid][pChicken] != 0)
{
if(Cooking[playerid][pCWeight1] == 0)
{
format(string, sizeof(string), "A Cooked Chicken");
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
Cooking[playerid][pCookID1] = 30;
Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight2] == 0)
{
format(string, sizeof(string), "A Cooked Chicken");
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
Cooking[playerid][pCookID2] = 30;
Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight3] == 0)
{
format(string, sizeof(string), "A Cooked Chicken");
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
Cooking[playerid][pCookID3] = 30;
Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight4] == 0)
{
format(string, sizeof(string), "A Cooked Chicken");
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
Cooking[playerid][pCookID4] = 30;
Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight5] == 0)
{
format(string, sizeof(string), "A Cooked Chicken");
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
Cooking[playerid][pCookID5] = 30;
Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any Chickens with you !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You need to be at Cluckin Bell to Cook this !");
return 1;
}
}
else if(strcmp(x_nr,"hamburger",true) == 0)
{
if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
{//Burgershot
if(Groceries[playerid][pHamburger] != 0)
{
if(Cooking[playerid][pCWeight1] == 0)
{
format(string, sizeof(string), "A Baken Hamburger");
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID1] = 30;
Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight2] == 0)
{
format(string, sizeof(string), "A Baken Hamburger");
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID2] = 30;
Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight3] == 0)
{
format(string, sizeof(string), "A Baken Hamburger");
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID3] = 30;
Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight4] == 0)
{
format(string, sizeof(string), "A Baken Hamburger");
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID4] = 30;
Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight5] == 0)
{
format(string, sizeof(string), "A Baken Hamburger");
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID5] = 30;
Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any Hamburgers with you !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You need to be at Burger Shot to Cook this !");
return 1;
}
}
else if(strcmp(x_nr,"pizza",true) == 0)
{
if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
{//Well Stacked Pizza
if(Groceries[playerid][pPizza] != 0)
{
if(Cooking[playerid][pCWeight1] == 0)
{
format(string, sizeof(string), "A Baken Pizza");
strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID1] = 30;
Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight2] == 0)
{
format(string, sizeof(string), "A Baken Pizza");
strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID2] = 30;
Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight3] == 0)
{
format(string, sizeof(string), "A Baken Pizza");
strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID3] = 30;
Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight4] == 0)
{
format(string, sizeof(string), "A Baken Pizza");
strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID4] = 30;
Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else if(Cooking[playerid][pCWeight5] == 0)
{
format(string, sizeof(string), "A Baken Pizza");
strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
Cooking[playerid][pCookID5] = 30;
Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
SendClientMessage(playerid,COLOR_WHITE, string);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any Pizzas with you !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You need to be at Well Stacked Pizza to Cook this !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Invalid Cooking Name !");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You are not at one of the Cooking Places (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
return 1;
}
}
return 1;
}*/
/*if(strcmp(cmd,"/cooked",true)==0)
{
if(IsLogOn(playerid))
{
SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cooking __________________|");
format(string, sizeof(string), "** (1) Made: %s.   Weight: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
SendClientMessage(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (2) Made: %s.   Weight: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
SendClientMessage(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (3) Made: %s.   Weight: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
SendClientMessage(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (4) Made: %s.   Weight: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
SendClientMessage(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (5) Made: %s.   Weight: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
SendClientMessage(playerid, COLOR_GREY, string);
SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
}
return 1;
}*/
CMD:fish(playerid, params[])
{
		 new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pFishTool] != 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong co hop dung cu de cau ca !");
			return 1;
		}
		if (PlayerInfo[playerid][pFishes] > 5)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Bat duoc qua nhieu qua, hay doi mot khoang thoi gian!");
			return 1;
		}
		if (Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da cau duoc 5 con ca, ban / an / tha chung dau tien !");
			return 1;
		}
		new Veh = GetPlayerVehicleID(playerid);
		if ((IsAtFishPlace(playerid)) || IsABoat(Veh))
		{
			new Caught;
			new rand;
			new fstring[MAX_PLAYER_NAME];
			new Level = PlayerInfo[playerid][pFishSkill];
			if (Level >= 0 && Level <= 50) { Caught = random(20) - 7; }
			else if (Level >= 51 && Level <= 100) { Caught = random(50) - 20; }
			else if (Level >= 101 && Level <= 200) { Caught = random(100) - 50; }
			else if (Level >= 201 && Level <= 400) { Caught = random(160) - 60; }
			else if (Level >= 401) { Caught = random(180) - 70; }
			rand = random(FishNamesNumber);
			if (Caught <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   day cau bi dut !");
				return 1;
			}
			else if (rand == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban cau duoc mot cai ao khoac cu va vut no di !");
				return 1;
			}
			else if (rand == 4)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban cau duoc mot cai quan cu va vut no di !");
				return 1;
			}
			else if (rand == 7)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban cau duoc mot cai lon rong va vut no di !");
				return 1;
			}
			else if (rand == 10)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban cau duoc mot cai quan cu va vut no di !");
				return 1;
			}
			else if (rand == 13)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban cau duoc rac va vut no di !");
				return 1;
			}
			else if (rand == 20)
			{
				new mrand = random(500);
				format(string, sizeof(string), "* Ban cau duoc mot tui tien, ben trong co $%d.", mrand);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, mrand);
				return 1;
			}
			if (PlayerInfo[playerid][pFishLic] < 1)
			{
				WantedPoints[playerid] += 1;
				SetPlayerCriminal(playerid, 255, "Illegal Fishing");
			}
			if (Fishes[playerid][pWeight1] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight1] = Caught;
				format(string, sizeof(string), "* Ban da bat duoc %s, no nang %d Lbs.", Fishes[playerid][pFish1], Caught);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 1;
				Fishes[playerid][pFid1] = rand;
				Fishes[playerid][pFishID] = rand;
				if (Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "* Ki luc cu cua ban ve %d Lbs da bi pha vo, con ca lon nhat ma ban bat duoc nang: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
				}
			}
			else if (Fishes[playerid][pWeight2] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight2] = Caught;
				format(string, sizeof(string), "* Ban da bat duoc %s, no nang %d Lbs.", Fishes[playerid][pFish2], Caught);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 2;
				Fishes[playerid][pFid2] = rand;
				Fishes[playerid][pFishID] = rand;
				if (Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "* Ki luc cu cua ban ve %d Lbs da bi pha vo, con ca lon nhat ma ban bat duoc nang: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
				}
			}
			else if (Fishes[playerid][pWeight3] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight3] = Caught;
				format(string, sizeof(string), "* Ban da bat duoc %s, no nang %d Lbs.", Fishes[playerid][pFish3], Caught);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 3;
				Fishes[playerid][pFid3] = rand;
				Fishes[playerid][pFishID] = rand;
				if (Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "* Ki luc cu cua ban ve %d Lbs da bi pha vo, con ca lon nhat ma ban bat duoc nang: %d Lbs..", PlayerInfo[playerid][pBiggestFish], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
				}
			}
			else if (Fishes[playerid][pWeight4] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight4] = Caught;
				format(string, sizeof(string), "* Ban da bat duoc %s, no nang %d Lbs.", Fishes[playerid][pFish4], Caught);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 4;
				Fishes[playerid][pFid4] = rand;
				Fishes[playerid][pFishID] = rand;
				if (Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "* Ki luc cu cua ban ve %d Lbs da bi pha vo, con ca lon nhat ma ban bat duoc nang: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
				}
			}
			else if (Fishes[playerid][pWeight5] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight5] = Caught;
				format(string, sizeof(string), "* Ban da bat duoc %s, no nang %d Lbs.", Fishes[playerid][pFish5], Caught);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 5;
				Fishes[playerid][pFid5] = rand;
				Fishes[playerid][pFishID] = rand;
				if (Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "* Ki luc cu cua ban ve %d Lbs da bi pha vo, con ca lon nhat ma ban bat duoc nang: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Het cho trong !");
				return 1;
			}
			if (PlayerInfo[playerid][pFishSkill] == 50)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang cau ca dat Level 2, ban co the bat duoc nhung con ca hang hon.");
			}
			else if (PlayerInfo[playerid][pFishSkill] == 250)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang cau ca dat Level 3, ban co the bat duoc nhung con ca hang hon.");
			}
			else if (PlayerInfo[playerid][pFishSkill] == 500)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang cau ca dat Level 4, ban co the bat duoc nhung con ca hang hon");
			}
			else if (PlayerInfo[playerid][pFishSkill] == 1000)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang cau ca dat Level 5, ban co the bat duoc nhung con ca hang hon");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o vi tri cau ca (Big Wheel Rods) hoac tren thuyen danh ca !");
			return 1;
		}
	}
	return 1;
}
CMD:fishes(playerid, params[])
{
	new string[256];
	if (IsLogOn(playerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Fishes __________________|");
		format(string, sizeof(string), "** (1) Fish: %s.   Nang: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** (2) Fish: %s.   Nang: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** (3) Fish: %s.   Nang: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** (4) Fish: %s.   Nang: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** (5) Fish: %s.   Nang: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
		SendClientMessage(playerid, COLOR_GREY, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
	}
	return 1;
}
CMD:releasefish(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new fishid;
		if (sscanf(params, "i", fishid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /releasefish [fish]");

		if (fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   So ca khong the duoi 1 hoac hon 5 !"); return 1; }
		else if (fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co ca o so (1) !"); return 1; }
		else if (fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co ca o so (2) !"); return 1; }
		else if (fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co ca o so (3) !"); return 1; }
		else if (fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co ca o so (4) !"); return 1; }
		else if (fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co ca o so (5) !"); return 1; }
		ClearFishID(playerid, fishid);
		Fishes[playerid][pLastFish] = 0;
		Fishes[playerid][pFishID] = 0;
	}
	return 1;
}
CMD:throwback(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (Fishes[playerid][pLastFish] > 0)
		{
			ClearFishID(playerid, Fishes[playerid][pLastFish]);
			Fishes[playerid][pLastFish] = 0;
			Fishes[playerid][pFishID] = 0;
			SendClientMessage(playerid, COLOR_GREY, "   Ban da phong thich con ca!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua cau duoc con ca nao !");
			return 1;
		}
	}
	return 1;
}
CMD:throwbackall(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
		{
			ClearFishes(playerid);
			Fishes[playerid][pLastFish] = 0;
			Fishes[playerid][pFishID] = 0;
			SendClientMessage(playerid, COLOR_GREY, "   Ban phong thich tat ca con ca da bat duoc!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban chua cau duoc con ca nao !");
			return 1;
		}
	}
	return 1;
}
CMD:xemgiayphep(playerid, params[]) { return cmd_licenses(playerid, params); }
CMD:licenses(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new string[256];
		new text1[20];
		new text2[20];
		new text3[20];
		new text4[20];
		new text5[20];
		if (PlayerInfo[playerid][pCarLic]) { text1 = "Passed"; }
		else { text1 = "Not Passed"; }
		if (PlayerInfo[playerid][pFlyLic]) { text4 = "Passed"; }
		else { text4 = "Not Passed"; }
		if (PlayerInfo[playerid][pBoatLic]) { text2 = "Passed"; }
		else { text2 = "Not Passed"; }
		if (PlayerInfo[playerid][pFishLic]) { text3 = "Passed"; }
		else { text3 = "Not Passed"; }
		if (PlayerInfo[playerid][pGunLic]) { text5 = "Passed"; }
		else { text5 = "Not Passed"; }
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licenses __________________|");
		format(string, sizeof(string), "** Bang lai xe: %s.", text1);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** Bang lai may bay: %s.", text4);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** Bang lai thuyen: %s.", text2);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** Giay phep cau ca: %s.", text3);
		SendClientMessage(playerid, COLOR_GREY, string);
		format(string, sizeof(string), "** Giay phep su dung vu khi: %s.", text5);
		SendClientMessage(playerid, COLOR_GREY, string);
		SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________|");
	}
	return 1;
}
/*if(strcmp(cmd,"/members",true)==0)
{
if(IsLogOn(playerid))
{
new teamnumber;
if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
else
{
SendClientMessage(playerid, COLOR_GRAD1, "You are not a member of a team!");
return 1;
}
SendClientMessage(playerid, 0x808000AA, "**Members Online**");
for(new i = 0; i < MAX_PLAYERS; i++)
{
if (IsLogOn(i))
{
GetPlayerName(i, GN(playerid), sizeof(GN(playerid)));
format(string, sizeof(string), "");
if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (LEADER)",GN(playerid));
else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rank: %d.",GN(playerid), PlayerInfo[i][pRank]);
if (strlen(string) > 1) SendClientMessage(playerid, 0xF5DEB3AA, string);
}
}
}
return 1;
}*/
CMD:duagiayphep(playerid, params[]) { return cmd_showlicenses(playerid, params); }
CMD:showlicenses(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /showlicenses [playerid/Ten]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the lam viec nay, go /licenses!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					new text1[20];
					new text2[20];
					new text3[20];
					new text4[20];
					new text5[20];
					if (PlayerInfo[playerid][pCarLic]) { text1 = "Passed"; }
					else { text1 = "Not Passed"; }
					if (PlayerInfo[playerid][pFlyLic]) { text4 = "Passed"; }
					else { text4 = "Not Passed"; }

					if (PlayerInfo[playerid][pBoatLic]) { text2 = "Passed"; }
					else { text2 = "Not Passed"; }
					if (PlayerInfo[playerid][pFishLic]) { text3 = "Passed"; }
					else { text3 = "Not Passed"; }
					if (PlayerInfo[playerid][pGunLic]) { text5 = "Passed"; }
					else { text5 = "Not Passed"; }
					format(string, sizeof(string), "|__________ Licenses of %s __________|", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "** Bang lai xe: %s.", text1);
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					format(string, sizeof(string), "** Bang lai may bay: %s.", text4);
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					format(string, sizeof(string), "** Bang lai thuyen: %s.", text2);
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					format(string, sizeof(string), "** Giay phep cau ca: %s.", text3);
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					format(string, sizeof(string), "** Giay phep su dung vu khi: %s.", text5);
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					format(string, sizeof(string), "* %s da cho ban xem bang cap.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Ban da cho %s xem bang cap cua minh.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:dumpdrugs(playerid, params[])
{
		 new string[256];
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLevel] > 0)
		{
			{
				if (PlayerInfo[playerid][pDrugs] >= 0)
				{
					PlayerInfo[playerid][pDrugs] = 0;
					
					format(string, sizeof(string), "* %s vut thuoc di.", GN(playerid));
					ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else if (PlayerInfo[playerid][pDrugs] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, " Ban khong co thuoc trong nguoi!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong du dieu kien de vut bo thuoc!");
		}
	}//not connected
	return 1;
}
CMD:lucsoat(playerid, params[]) { return cmd_frisk(playerid, params); }
CMD:frisk(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /frisk [playerid/Ten]");

		if (GetPlayerSpecialAction(giveplayerid) != 10 && PlayerCuffed[giveplayerid] != 1) return SCM(playerid, COLOR_GREY, "Nguoi choi kia phai bi cong tay hoac dau hang. (/handsup)");
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tim kiem voi chinh minh!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20];
					if (PlayerInfo[giveplayerid][pDrugs] > 0) format(text1, sizeof(text1), "| %d Thuoc.", PlayerInfo[giveplayerid][pDrugs]);
					if (PlayerInfo[giveplayerid][pMats] > 0) format(text2, sizeof(text2), "| %d Vat Lieu.", PlayerInfo[giveplayerid][pMats]);
					if (Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text3 = "| Mot Vai Con Ca."; }
					if (PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "| Danh Ba."; }
					if (PlayerInfo[giveplayerid][pWatch] > 0) { text5 = "| Dong Ho."; }
					new sweapon, sammo;
					text6 = "| Vu Khi: ";
					for (new i = 0; i<9; i++)
					{
						GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
						if (sweapon != 0 && sammo != 0)
						{
							new wname[26];
							GetWeaponName(sweapon, wname, sizeof(wname));
							format(text6, sizeof(text6), "%s - %s", text6, wname);
						}
					}
					format(string, sizeof(string), "|__________ Do vat tren nguoi %s __________|", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					if (!isnull(text1))
					{
						format(string, sizeof(string), "%s", text1);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					if (!isnull(text2))
					{
						format(string, sizeof(string), "%s", text2);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					if (!isnull(text3))
					{
						format(string, sizeof(string), "%s", text3);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					if (!isnull(text4))
					{
						format(string, sizeof(string), "%s", text4);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					if (!isnull(text5))
					{
						format(string, sizeof(string), "%s", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					format(string, sizeof(string), "%s", text6);
					SendClientMessage(playerid, COLOR_GREY, string);
					if (PlayerInfo[giveplayerid][pSex] == 1) { format(string, sizeof(string), "* %s cham nhe %s khap co the anh ay va tim kiem gi do.", GN(playerid), giveplayer); }
					else { format(string, sizeof(string), "* %s cham nhe %s khap co the co ay va tim kiem gi do.", GN(playerid), giveplayer); }
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:lucsoatinv(playerid, params[]) { return cmd_friskinv(playerid, params); }
CMD:friskinv(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: (/friskinv)entory [playerid/Ten]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tim kiem voi chinh minh!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "|__________ %s Kho __________|", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					if (PlayerInfo[giveplayerid][pInvWeapon] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon], gunname, sizeof(gunname));
						format(string, sizeof(string), "| Weapon: %s, Ammo: %d", gunname, PlayerInfo[giveplayerid][pInvAmmo]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "| Kho trong.");
					}
					format(string, sizeof(string), "  %s dang tim kiem kho cua ban.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_GREY, string);
					return 1;
				}
			}
		}
	}
	return 1;
}
/*if(strcmp(cmd,"/sellcar",true)==0)
{
if(IsLogOn(playerid))
{
if(PlayerInfo[playerid][pJob] != 10)
{
SendClientMessage(playerid,COLOR_GREY,"   You are not a Car Dealer !");
return 1;
}
if(!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,COLOR_GREY,"   You are not in a Car !");
return 1;
}
if(IsAnOwnableCar(idcar))
{
SendClientMessage(playerid,COLOR_GREY,"   Use /v sellto to sell you car to other person !");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sellcar [playerid/PartOfName] [price]");
return 1;
}
//giveplayerid = strval(tmp);
giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sellcar [playerid/PartOfName] [price]");
return 1;
}
new money = strval(tmp);
if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not below $1 or above $99999 !"); return 1; }
if (IsLogOn(giveplayerid))
{
if(giveplayerid != INVALID_PLAYER_ID)
{
if (ProxDetectorS(8.0, playerid, giveplayerid))
{
if(giveplayerid == playerid)
{
SendClientMessage(playerid, COLOR_GREY, "   Cant sell to yourself!");
return 1;
}
if(CarCalls[giveplayerid] > 0)
{
SendClientMessage(playerid, COLOR_GREY, "   That player has already bought a car, has to use /callcar first !");
return 1;
}
GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

format(string, sizeof(string), "* You offerd %s to buy your Car for $%d .", giveplayer, money);
SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
format(string, sizeof(string), "* Car Dealer %s wants to sell you his Car for $%d, (type /accept car) to buy.", GN(playerid), money);
SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
CarOffer[giveplayerid] = playerid;
CarPrice[giveplayerid] = money;
CarID[giveplayerid] = GetPlayerVehicleID(playerid);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
}
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name !");
return 1;
}
}
return 1;
}*/
CMD:portable(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		{
			if (ConnectedToPC[playerid] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da tat laptop, va ngat ket noi voi he thong to chuc.");
				ConnectedToPC[playerid] = 0;
				return 1;
			}
			
			SendClientMessage(playerid, COLOR_GREY, "* Ban da khoi dong laptop, va ket noi voi he thong to chuc.");
			SendClientMessage(playerid, COLOR_WHITE, "|___ Hitman Agency ___|");
			SendClientMessage(playerid, COLOR_YELLOW2, "|");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
			SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
			SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
			ConnectedToPC[playerid] = 255;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong thuoc to chuc Hitman Agency !");
			return 1;
		}
	}
	return 1;
}
CMD:steal(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 14)
		{
			if (PlayerInfo[playerid][pRank] < 4)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban can phai tu rank 4 tro len de su dung lenh nay!");
				return 1;
			}
			new x_nr[256], giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "s[256]u", x_nr, giveplayerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ An cap vat pham cua nan nhan _______________|");
				SendClientMessage(playerid, COLOR_WHITE, "Su dung: /steal [itemname] [playerid/Ten]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Phone, Weapons");
				SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
				return 1;
			}
			if (strcmp(x_nr, "phone", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(3.0, playerid, giveplayerid))
						{
							if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "    Khong the an cap cua ban than!"); return 1; }
							format(string, sizeof(string), "* Ban da lay di dien thoai cua %s's .", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da danh cap dien thoai cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pPnumber] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline!");
					return 1;
				}
			}
			else if (strcmp(x_nr, "weapons", true) == 0)
			{
				if (IsLogOn(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(3.0, playerid, giveplayerid))
						{
							if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "    Khong the an cap cua ban than!"); return 1; }
							format(string, sizeof(string), "* Ban da lay di vu khi cua %s's .", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da danh cap vu khi cua ban.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							SafeResetPlayerWeapons(giveplayerid);
							PlayerInfo[giveplayerid][pGun][0] = 0; PlayerInfo[giveplayerid][pAmmo][0] = 0;
							PlayerInfo[giveplayerid][pGun][1] = 0; PlayerInfo[giveplayerid][pAmmo][1] = 0;
							PlayerInfo[giveplayerid][pGun][2] = 0; PlayerInfo[giveplayerid][pAmmo][2] = 0;
							PlayerInfo[giveplayerid][pGun][3] = 0; PlayerInfo[giveplayerid][pAmmo][3] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong online!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Vat pham khong ton tai!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o trong to chuc");
			return 1;
		}
	}
	return 1;
}
/*if(strcmp(cmd,"/materials",true)==0)
{
if(IsLogOn(playerid))
{
if (PlayerInfo[playerid][pJob] != 22)
{
SendClientMessage(playerid,COLOR_GREY,"   You are not a Materials supplier !");
return 1;
}
new x_nr[256];
x_nr = strtok(cmdtext, idx);
if(!strlen(x_nr)) {
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /materials [name]");
SendClientMessage(playerid, COLOR_WHITE, "Available names: Get, Deliver.");
return 1;
}
if(strcmp(x_nr,"get",true) == 0)
{
if(PlayerToPoint(3.0,playerid,597.1277,-1248.6479,18.2734))
{
if(MatsHolding[playerid] >= 10)
{
SendClientMessage(playerid, COLOR_GREY, "   You can't hold any more Materials Packages !");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) {
SendClientMessage(playerid, COLOR_WHITE, "Su dung: /materials get [ammount]");
return 1;
}
moneys = strval(tmp);
if(moneys < 1 || moneys > 10) { SendClientMessage(playerid, COLOR_GREY, "   Package Number can't be below 1 or higher then 10 !"); return 1; }
new price = moneys * 100;
if(GetPlayerMoney(playerid) > price)
{
format(string, sizeof(string), "* You bought %d Materials Packages for $%d.", moneys, price);
SendClientMessage(playerid, COLOR_WHITE, string);
SafeGivePlayerMoney(playerid, - price);
MatsHolding[playerid] = moneys;
}
else
{
format(string, sizeof(string), "   You can't afford the $%d !", price);
SendClientMessage(playerid, COLOR_GREY, string);
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You are not at the Materials Package Building in Los Angeles !");
return 1;
}
}
else if(strcmp(x_nr,"deliver",true) == 0)
{
if(PlayerToPoint(3.0,playerid,2146.3523,-2267.7498,14.2344))
{
if(MatsHolding[playerid] > 0)
{
new payout = (50)*(MatsHolding[playerid]);
format(string, sizeof(string), "* The Factory Gave You %d Materials from your %d Packages.", payout, MatsHolding[playerid]);
SendClientMessage(playerid, COLOR_WHITE, string);
PlayerInfo[playerid][pMats] += payout;
MatsHolding[playerid] = 0;
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You don't have any Materials Packages!");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You are not at the Willowfield Gun Factory.");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   Invalid Materials Name !");
return 1;
}
}
return 1;
}*/
CMD:banvatlieu(playerid, params[]) { return cmd_sellmats(playerid, params); }
CMD:sellmats(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		/*if (PlayerInfo[playerid][pJob] != 22)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Ban khong phai la nguoi buon vat lieu ! ");
			return 1;
		}*/
		new giveplayerid, ammount, string[256], giveplayer[50];
		if (sscanf(params, "ui", giveplayerid, ammount))
			return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /sellmats [playerid/Ten] [So luong]");

		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
					if (ammount < 1) { SendClientMessage(playerid, COLOR_GREY, "  Sai so luong ! "); return 1; }
					if (ammount > PlayerInfo[playerid][pMats]) { SendClientMessage(playerid, COLOR_GREY, "  Ban khong co du vat lieu de ban !"); return 1; }
					PlayerInfo[playerid][pMats] -= ammount;
					PlayerInfo[giveplayerid][pMats] += ammount;
					
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* %s dua mot goi vat lieu cho %s", GN(playerid), giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban ! ");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:banvukhi(playerid, params[]) { return cmd_sellgun(playerid, params); }
CMD:bansung(playerid, params[]) { return cmd_sellgun(playerid, params); }
CMD:sellgun(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 9)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho vu khi !");
			return 1;
		}
		new x_weapon[256], weapon[MAX_PLAYERS], ammo[MAX_PLAYERS], price[MAX_PLAYERS];
		new giveplayerid, string[256], gia;
		if (sscanf(params, "us[256]i", giveplayerid, x_weapon, gia))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /sellgun [playerid/Ten] [ten vu khi] [gia]");
			SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(100) bat(100) flowers(25) sdpistol(100) eagle(150)");
			SendClientMessage(playerid, COLOR_GREY, "Weapons: mp5(200) shotgun(200) ak47(600) m4(600) rifle (600)");
			return 1;
		}
		if (gia < 0 || gia > 1000000) return SCM(playerid, COLOR_GREY, "Gia tien khong the nho hon 0 hoac hon 1.000.000$");
		if (IsLogOn(giveplayerid))
		{
			if (giveplayerid == INVALID_PLAYER_ID) return 1;
			if (strcmp(x_weapon, "knife", true) == 0) { if (PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "bat", true) == 0) { if (PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 5; price[playerid] = 100; ammo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "sdpistol", true) == 0) { if (PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "flowers", true) == 0) { if (PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "eagle", true) == 0) { if (PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 150; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "mp5", true) == 0) { if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213)) { SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the ban sung nay o khu vuc Cho Den (Black Market) !"); return 1; } if (PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "shotgun", true) == 0) { if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213)) { SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the ban sung nay o khu vuc Cho Den (Black Market) !"); return 1; } if (PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
			else if (strcmp(x_weapon, "ak47", true) == 0) { if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213)) { SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the ban sung nay o khu vuc Cho Den (Black Market) !"); return 1; } if (PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "m4", true) == 0) { if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213)) { SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the ban sung nay o khu vuc Cho Den (Black Market) !"); return 1; } if (PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else if (strcmp(x_weapon, "rifle", true) == 0) { if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213)) { SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the ban sung nay o khu vuc Cho Den (Black Market) !"); return 1; } if (PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 0x7FFFFFFF; } else { SendClientMessage(playerid, COLOR_GREY, "   Khong du vat lieu cho vu khi nay!"); return 1; } }
			else { SendClientMessage(playerid, COLOR_GREY, "   Ten sung khong hop le!"); return 1; }
			if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Ban khong the tu ban sung cho chinh minh!");
					return 1;
				}
				if (PlayerInfo[playerid][pMiserPerk] > 0)
				{
					new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					new mats = price[playerid] / 100;
					price[playerid] -= (mats)*(skill);
				}
				//ConsumingMoney[playerid] = 1;
				//GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				
				//SetPVarInt(playerid, "OfferTo", giveplayerid);

				SetPVarInt(giveplayerid, "OfferBy", playerid);
				SetPVarInt(giveplayerid, "OfferG", weapon[playerid]);
				SetPVarInt(giveplayerid, "OfferA", ammo[playerid]);
				SetPVarInt(giveplayerid, "OfferM", price[playerid]);
				SetPVarInt(giveplayerid, "OfferP", gia);
				SetPVarInt(giveplayerid, "OfferType", OFFERWEAPON);

				format(string, sizeof(string), "%s de nghi ban cho ban vu khi %s, gia tien %d$. (/accept vukhi)", GN(playerid), x_weapon, gia);
				SCM(giveplayerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "Ban de nghi ban cho %s vu khi %s, gia tien %d$", GN(giveplayerid), x_weapon, gia);
				SCM(giveplayerid, COLOR_GRAD1, string);
				/*format(string, sizeof(string), "   Ban da dua cho %s, mot %s voi %d dan, cho %d Materials.", giveplayer, x_weapon, ammo[playerid], price[playerid]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "   Ban da nhan duoc mot %s voi %d dan tu %s.", x_weapon, ammo[playerid], GN(playerid));
				SendClientMessage(giveplayerid, COLOR_GRAD1, string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				new gunname[100];
				GetWeaponName(weapon[playerid], gunname, sizeof(gunname));
				format(string, sizeof(string), "* %s hands a %s to %s.", GN(playerid), gunname, giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SafeGivePlayerWeapon(giveplayerid, weapon[playerid], ammo[playerid]);
				PlayerInfo[playerid][pMats] -= price[playerid];*/
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ban o cach xa.");
				return 1;
			}
		}
		else
		{
			format(string, sizeof(string), "   %d , la nguoi choi khong hop le.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:get(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		new x_job[256], string[256];
		if (sscanf(params, "s[256]", x_job))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Get __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /get [name]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Fuel");
			SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
			return 1;
		}

		/*if(strcmp(x_job,"drugs",true) == 0)
		{
		if(PlayerInfo[playerid][pDrugs] > 15)
		{
		format(string, sizeof(string), "  You still have %d grams with you, sell them first !", PlayerInfo[playerid][pDrugs]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
		}
		new tel;
		new price;
		new ammount;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /get drugs [ammount]");
		return 1;
		}
		new level = PlayerInfo[playerid][pDrugsSkill];
		ammount = strval(tmp);
		if(level >= 0 && level <= 50)
		{ tel = 200; if(ammount < 1 || ammount > 6) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 6 at your Skill Level!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 150; if(ammount < 1 || ammount > 12) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 12 at your Skill Level!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 100; if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 20 at your Skill Level!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 50; if(ammount < 1 || ammount > 30) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 30 at your Skill Level!"); return 1; } }
		else if(level >= 401)
		{ tel = 10; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 99 at your Skill Level!"); return 1; } }
		if (PlayerInfo[playerid][pJob] == 4 && PlayerToPoint(2.0, playerid, 1488.6949,-1721.7136,8.2067))
		{
		price = ammount * tel;
		if(GetPlayerMoney(playerid) > price)
		{
		format(string, sizeof(string), "* You bought %d grams for $%d.", ammount, price);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		SafeGivePlayerMoney(playerid, -price);
		PlayerInfo[playerid][pDrugs] = ammount;
		}
		else
		{
		SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Drugs !");
		return 1;
		}
		}
		else
		{
		SendClientMessage(playerid, COLOR_GREY, "   You are not a Drugs Dealer, or not at the Black market !");
		return 1;
		}
		}*/
		if (strcmp(x_job, "fuel", true) == 0)
		{
			if (IsAtGasStation(playerid))
			{
				new price = 20 * SBizzInfo[3][sbEntranceCost];
				format(string, sizeof(string), "* Ban do xang vao can 20% xang voi $%d", price);
				SendClientMessage(playerid, COLOR_WHITE, string);
				PlayerInfo[playerid][pFuel] = 20;
				SafeGivePlayerMoney(playerid, -price);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o tram xang!");
				return 1;
			}
		}
		else { return 1; }
	}//not connected
	return 1;
}
CMD:xinviec(playerid, params[]) { return cmd_takejob(playerid, params); }
CMD:takejob(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pJob] == 0)
		{
			if (gTeam[playerid] == TEAMVILLAIN)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban la mot toi pham, chung toi khong nhan toi pham lam viec!");
				return 1;
			}
			/*if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,359.5408,206.7693,1008.3828))
			{
			SendClientMessage(playerid, COLOR_WHITE, "* You are about to become a Detective, and get a 5 hour Contract.");
			SendClientMessage(playerid, COLOR_WHITE, "* You have to forfill this Contract first, if you want to Quit the job later.");
			SendClientMessage(playerid, COLOR_WHITE, "* If you are sure to become a Detective, type /accept job.");
			GettingJob[playerid] = 1;
			}*/
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 347.7374, 193.7241, 1014.1875))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot luat su, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 2;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 1215.1304, -11.8431, 1000.9219))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot tu ba, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, if you want to Quit the job later.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 3;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2072.5486, -1582.8029, 13.4741))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot ke buon thuoc phien, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 4;
			}
			/*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1109.3318,-1796.3042,16.5938))
			{
			SendClientMessage(playerid, COLOR_WHITE, "* You are about to become a Car Jacker, and get a 5 hour Contract.");
			SendClientMessage(playerid, COLOR_WHITE, "* You have to forfill this Contract first, if you want to Quit the job later.");
			SendClientMessage(playerid, COLOR_WHITE, "* If you are sure to become a Car Jacker, type /accept job.");
			GettingJob[playerid] = 5;
			}*/
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2077.52, -2013.56, 13.54))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot tho sua xe, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 7;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2226.1716, -1718.1792, 13.5165))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot ve si, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 8;
			}
			//else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 213.8549, -230.5761, 1.7786))
			//{/*
			//	SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot ke buon vat lieu, dam nhan 5 gio hop dong.");
			//	SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
			//	SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
			//	GettingJob[playerid] = 22;
			//}
			/*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,594.2437,-1249.4027,18.2232))
			{
			SendClientMessage(playerid, COLOR_WHITE, "* You are about to become a Car Dealer, and get a 5 hour Contract.");
			SendClientMessage(playerid, COLOR_WHITE, "* You have to forfill this Contract first, if you want to Quit the job later.");
			SendClientMessage(playerid, COLOR_WHITE, "* If you are sure to become a Car Dealer, type /accept job.");
			GettingJob[playerid] = 10;
			}*/
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 766.0804, 14.5133, 1000.7004))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot boxer, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 12;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 1154.2208, -1770.8203, 16.5992))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot nguoi lai xe bus, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 14;
			}
			/*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1784.58,-1297.52,13.37))
			{
			SendClientMessage(playerid, COLOR_WHITE, "* You are about to become a Paper Boy, and get a 5 hour Contract.");
			SendClientMessage(playerid, COLOR_WHITE, "* You have to forfill this Contract first, if you want to Quit the job later.");
			SendClientMessage(playerid, COLOR_WHITE, "* If you are sure to become a Paper Boy, type /accept job.");
			GettingJob[playerid] = 15;
			}*/
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2439.7710, -2120.9285, 13.5469))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot trucker, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 16;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2101.7620, -1812.5922, 13.5547))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot pizza boy, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 17;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, -382.6660, -1426.5121, 26.2410))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot nong dan, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 18;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 2022.1492, -1108.7837, 26.2031))
			{
				if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
				{
					/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot ke buon lau thuoc, dam nhan 5 gio hop dong.");
					SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
					SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
					GettingJob[playerid] = 20;
				}
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, 1611.5129, -1893.6997, 13.5469))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot cong nhan don dep duong pho, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 21;
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid, -1109.5745, -1637.6207, 76.3672))
			{
				/*SendClientMessage(playerid, COLOR_WHITE, "* Ban muon tro thanh mot cong nhan don dep duong pho, dam nhan 5 gio hop dong.");
				SendClientMessage(playerid, COLOR_WHITE, "* Ban phai thuc hien hop dong nay dau tien, neu ban muon nghi viec sau.");*/
				SendClientMessage(playerid, COLOR_WHITE, "* Neu ban chac chan muon lam viec nay, go /accept job.");
				GettingJob[playerid] = 19;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o gan noi xin viec lam !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban da co cong viec, go /quitjob de nghi viec !");
		}
	}//not connected
	return 1;
}
CMD:doxang(playerid, params[]) { return cmd_fill(playerid, params); }
CMD:fill(playerid, params[])
{
	new idcar;
	idcar = GetPlayerVehicleID(playerid);
	if (IsLogOn(playerid))
	{
		if (IsAtGasStation(playerid))
		{
			if (Gas[idcar] <= 99)
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Dang do xang, vui long doi giay lat", 2000, 3);
				SetTimer("Fillup", RefuelWait, 0);
				Refueling[playerid] = 1;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Can xang da duoc do day", 2000, 3);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o tram xang!");
		}
	}
	return 1;
}
CMD:doxangxe(playerid, params[]) { return cmd_fillcar(playerid, params); }
CMD:fillcar(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pFuel] > 0)
		{
			if (Gas[gLastCar[playerid]] < 81)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Ban da do 20 phan tram xang tu Can xang cua ban.");
				Gas[gLastCar[playerid]] += 20;
				PlayerInfo[playerid][pFuel] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Xe cua ban van con du nhien lieu de di tiep !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Can xang cua ban trong rong !");
		}
	}
	return 1;
}
//CMD:tazer(playerid, params[])
//{
//	if (IsLogOn(playerid))
//	{
//		if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
//		{
//			if (IsPlayerInAnyVehicle(playerid))
//			{
//				SendClientMessage(playerid, COLOR_GREY, "   Khong the dung khi dang o trong xe!");
//				return 1;
//			}
//			new suspect = GetClosestPlayer(playerid);
//			new giveplayer[50], string[256];
//			if (IsLogOn(suspect))
//			{
//				if (PlayerCuffed[suspect] > 0)
//				{
//					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da bi cong!");
//					return 1;
//				}
//				if (GetDistanceBetweenPlayers(playerid, suspect) < 5)
//				{
//					if (gTeam[suspect] == 2)
//					{
//						SendClientMessage(playerid, COLOR_GREY, "   Khong the Tazer Canh sat / FBI!");
//						return 1;
//					}
//					if (IsPlayerInAnyVehicle(suspect))
//					{
//						SendClientMessage(playerid, COLOR_GREY, "   Viec nghi ngo thuc hien tren xe, loi han ra truoc!");
//						return 1;
//					}
//					GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
//					
//					new randt = random(4) + 1;
//					if (randt == 1)
//					{
//						format(string, sizeof(string), "* %s ban voi sung tazer cua anh ay %s, truot.", GN(playerid), giveplayer);
//						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
//					}
//					else
//					{
//						format(string, sizeof(string), "* Ban da bi tazed boi %s trong 20 giay.", GN(playerid));
//						SendClientMessage(suspect, COLOR_WHITE, string);
//						format(string, sizeof(string), "* Ban da Tazed %s trong 20 giay.", giveplayer);
//						SendClientMessage(playerid, COLOR_WHITE, string);
//						format(string, sizeof(string), "* %s ban voi sung tazer cua anh ay %s va tazed han.", GN(playerid), giveplayer);
//						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
//						GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
//						TogglePlayerControllable(suspect, 0);
//						LoopingAnim(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
//						PlayerCuffed[suspect] = 1;
//						PlayerCuffedTime[suspect] = 20;
//					}
//				}
//				else
//				{
//					SendClientMessage(playerid, COLOR_GREY, "   Khong ai o gan ban!");
//					return 1;
//				}
//			}
//		}
//		else
//		{
//			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Canh sat / FBI!");
//		}
//	}//not connected
//	return 1;
//}
CMD:agent(playerid, params[])
{
	if (IsLogOn(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			new x_nr[256];
			if (sscanf(params, "s[256]", x_nr))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /agent list then /agent [skin id]");
		
			if (PlayerToPoint(20, playerid, 246.5625, 120.3976, 1003.2629))
			{
				if (strcmp(x_nr, "list", true) == 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "______________Skin_List______________");
					SendClientMessage(playerid, COLOR_GRAD1, "1: Agent A1         2: Agent A2");
					SendClientMessage(playerid, COLOR_GRAD2, "3: Agent B1         4: Agent B2");
					SendClientMessage(playerid, COLOR_GRAD3, "5: Public Agent     6: Agency Intern A");
					SendClientMessage(playerid, COLOR_GRAD4, "7: Agency Intern B  8: Agency Intern C");
					SendClientMessage(playerid, COLOR_GRAD5, "9: Lab Agent        10: Analyst");
					SendClientMessage(playerid, COLOR_GRAD6, "11: Fem. Agent A    12: Fem. Agent B");
					return 1;
				}
				else if (strcmp(x_nr, "1", true) == 0)
				{
					SetPlayerSkin(playerid, 163);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agent A1 .");
					return 1;
				}
				else if (strcmp(x_nr, "2", true) == 0)
				{
					SetPlayerSkin(playerid, 164);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agent A2.");
					return 1;
				}
				else if (strcmp(x_nr, "3", true) == 0)
				{
					SetPlayerSkin(playerid, 165);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agent B1.");
					return 1;
				}
				else if (strcmp(x_nr, "4", true) == 0)
				{
					SetPlayerSkin(playerid, 166);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc B2.");
					return 1;
				}
				else if (strcmp(x_nr, "5", true) == 0)
				{
					SetPlayerSkin(playerid, 166);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Public Agent FBI.");
					return 1;
				}
				else if (strcmp(x_nr, "6", true) == 0)
				{
					SetPlayerSkin(playerid, 187);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agency Intern A.");
					return 1;
				}
				else if (strcmp(x_nr, "7", true) == 0)
				{
					SetPlayerSkin(playerid, 17);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agency Intern B.");
					return 1;
				}
				else if (strcmp(x_nr, "8", true) == 0)
				{
					SetPlayerSkin(playerid, 186);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Agency Intern C.");
					return 1;
				}
				else if (strcmp(x_nr, "9", true) == 0)
				{
					SetPlayerSkin(playerid, 70);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc cua phong thi nghiem.");
					return 1;
				}
				else if (strcmp(x_nr, "10", true) == 0)
				{
					SetPlayerSkin(playerid, 57);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc analyst.");
					return 1;
				}
				else if (strcmp(x_nr, "11", true) == 0)
				{
					SetPlayerSkin(playerid, 150);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Female Agent A.");
				}
				else if (strcmp(x_nr, "12", true) == 0)				{
					SetPlayerSkin(playerid, 141);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Female Agent B.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ban khong o HQ!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ban khong phai la dac nhiem FBI!");
			return 1;
		}
	}
	return 1;
}
CMD:nguytrang(playerid, params[]) { return cmd_undercover(playerid, params); }
CMD:undercover(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRank] < 3)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban can o rank 3 tro len de thuc hien hanh dong nay!");
				return 1;
			}
			new x_nr[256], string[256];
			if (sscanf(params, "s[256]", x_nr))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /undercover list then /undercover [skin id]");
			
			if (PlayerToPoint(3, playerid, 255.3, 77.4, 1003.6) || PlayerToPoint(3, playerid, -1616.1294, 681.1594, 7.1875) || PlayerInfo[playerid][pLocal] != 255)
			{
				if (strcmp(x_nr, "list", true) == 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "_________Skin_List_________");
					SendClientMessage(playerid, COLOR_GRAD1, "1: Agent 2: Staff");
					SendClientMessage(playerid, COLOR_GRAD2, "3: Gay man 4: Hustler");
					SendClientMessage(playerid, COLOR_GRAD3, "5: Random Male 6: Swampy Hippy");
					SendClientMessage(playerid, COLOR_GRAD4, "7: Hotel Waiter (Girl) 8: Random Female");
					SendClientMessage(playerid, COLOR_GRAD5, "9: Michelle Cannes 10: Katie Zhan");
					SendClientMessage(playerid, COLOR_GRAD6, "11: Biker uniform 0: Go back to your normal uniform");
					return 1;
				}
				else if (strcmp(x_nr, "1", true) == 0)
				{
					SetPlayerSkin(playerid, 165);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Agent.");
					return 1;
				}
				else if (strcmp(x_nr, "2", true) == 0)
				{
					SetPlayerSkin(playerid, 217);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Staff member.");
					return 1;
				}
				else if (strcmp(x_nr, "3", true) == 0)
				{
					SetPlayerSkin(playerid, 170);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Gay man.");
					return 1;
				}
				else if (strcmp(x_nr, "4", true) == 0)
				{
					SetPlayerSkin(playerid, 21);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Hustler.");
					return 1;
				}
				else if (strcmp(x_nr, "5", true) == 0)
				{
					SetPlayerSkin(playerid, 60);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Random guy.");
					return 1;
				}
				else if (strcmp(x_nr, "6", true) == 0)
				{
					SetPlayerSkin(playerid, 72);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Swampy Hippy.");
					return 1;
				}
				else if (strcmp(x_nr, "7", true) == 0)
				{
					SetPlayerSkin(playerid, 152);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Hotel Waiter.");
					return 1;
				}
				else if (strcmp(x_nr, "8", true) == 0)
				{
					SetPlayerSkin(playerid, 233);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Random girl.");
					return 1;
				}
				else if (strcmp(x_nr, "9", true) == 0)
				{
					SetPlayerSkin(playerid, 192);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Michelle Cannes.");
					return 1;
				}
				else if (strcmp(x_nr, "10", true) == 0)
				{
					SetPlayerSkin(playerid, 193);
					SendClientMessage(playerid, COLOR_GRAD2, "Bay gio ban gia dang la Katie Zahn.");
					return 1;
				}
				else if (strcmp(x_nr, "11", true) == 0)
				{
					SetPlayerSkin(playerid, 284);
					SendClientMessage(playerid, COLOR_GRAD2, "Ban da mac dong phuc Biker.");
					return 1;
				}
				else if (strcmp(x_nr, "0", true) == 0)
				{
					if (PlayerInfo[playerid][pRank] == 3)
					{
						
						format(string, sizeof(string), "* %s cat Undercover uniform tro lai tu khoa.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						SafeGivePlayerWeapon(playerid, 3, 1);
						SafeGivePlayerWeapon(playerid, 24);
						SetPlayerSkin(playerid, 280);
					}
					else if (PlayerInfo[playerid][pRank] > 3)
					{
						
						format(string, sizeof(string), "* %s cat Undercover uniform tro lai tu khoa.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						SafeGivePlayerWeapon(playerid, 3, 1);
						SafeGivePlayerWeapon(playerid, 24);
						SetPlayerSkin(playerid, 281);
					}
					else if (PlayerInfo[playerid][pRank] == 6)
					{
						
						format(string, sizeof(string), "* %s cat Undercover uniform tro lai tu khoa.", GN(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						SafeGivePlayerWeapon(playerid, 3, 1);
						SafeGivePlayerWeapon(playerid, 24);
						SetPlayerSkin(playerid, 283);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ban khong o trong locker room!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ban khong phai la canh sat!");
			return 1;
		}
	}
	return 1;
}
CMD:apgiai(playerid, params[])
{
		if (gTeam[playerid] != TEAMGOV && !IsACop(playerid) &&
			PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4) 
			return SCM(playerid, COLOR_GREY, "Khong phai nhan vien canh sat hoac nhan vien cuu thuong.");

		new nap;
		if (sscanf(params, "u", nap)) return SCM(playerid, COLOR_GRAD2, "Su dung: /apgiai [Ten/ID Nguoi Choi]");
		if (!IsPlayerNearPlayer(playerid, nap, 4)) return SCM(playerid, COLOR_GREY, "Khong dung gan nguoi choi kia.");
		if (IsPlayerInAnyVehicle(nap)) return SCM(playerid, COLOR_GREY, "Khong the ap giai nguoi tren xe.");
		if (PlayerCuffed[nap] == 0 && Dying[nap] == 0) return SCM(playerid, COLOR_GREY, "Nguoi choi nay chua bi cong tay.");
		if (Escorting[playerid] == 1) return SCM(playerid, COLOR_GREY, "Ban dang ap giai mot nguoi choi khac.");
		if (Escorted[nap] == 1) return SCM(playerid, COLOR_GREY, "Nguoi choi nay dang bi ap giai.");
		Escorted[nap] = 1;
		EscortedPlayer[playerid] = nap;
		Escorting[playerid] = 1;
		new string[128];
		format(string, sizeof(string), "# Ban dang ap giap %s.", GN(nap));
		SCM(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "# Ban dang bi ap giap boi %s.", GN(playerid));
		SCM(nap, COLOR_LIGHTBLUE, string);
		return 1;
}
CMD:dungapgiai(playerid, params[])
{
		 if (gTeam[playerid] != TEAMGOV && !IsACop(playerid)
			 && PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4) 
			 return SCM(playerid, COLOR_GREY, "Khong phai nhan vien canh sat.");

		new nap = EscortedPlayer[playerid];
		if (Escorted[playerid] == 1) return SCM(playerid, COLOR_GREY, "Ban dang bi ap giai.");
		if (nap == -1 && Escorting[playerid] == 0) return SCM(playerid, COLOR_GREY, "Ban khong ai giai ai.");
		Escorted[nap] = 0;
		Escorting[playerid] = 0;
		EscortedPlayer[playerid] = -1;
		new str[128];
		format(str, sizeof(str), "# Ban dung viec ap giai %s.", GN(nap));
		SCM(playerid, COLOR_LIGHTBLUE, str);
		format(str, sizeof(str), "# %s da dung viec ap giai ban.", GN(playerid));
		SCM(nap, COLOR_LIGHTBLUE, str);
		return 1;
}
CMD:congtay(playerid, params[]) { return cmd_cuff(playerid, params); }
CMD:cuff(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (IsACop(playerid))
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cuff [Playerid/Ten]");

			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (gTeam[giveplayerid] == TEAMGOV || IsACop(giveplayerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   Ban khong the cong tay canh sat !");
						return 1;
					}
					if (PlayerCuffed[giveplayerid] > 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi da bi cong tay !");
						return 1;
					}
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new car = GetPlayerVehicleID(playerid);
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the cong tay ban than minh!"); return 1; }
						if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* Ban da bi cong tay boi %s.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Ban da cong tay %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da cong tay %s, vi vay han khong the di dau.", GN(playerid), giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~Cong tay", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerCuffed[giveplayerid] = 1;
							PlayerCuffedTime[giveplayerid] = 99999999999999;
						}
						else
						{
							if (GetPlayerSpecialAction(giveplayerid) == 10 || Tazered[giveplayerid] > 0)
							{
								SetPlayerSpecialAction(giveplayerid, 24);
								TogglePlayerControllable(giveplayerid, 0);
								Tazered[giveplayerid] = 0;
								format(string, sizeof(string), "* Ban da bi cong tay boi %s.", GN(playerid));
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* Ban da cong tay %s.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s da cong tay %s, vi vay han khong the di dau.", GN(playerid), giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Cong tay", 2500, 3);
								PlayerCuffed[giveplayerid] = 1;
								PlayerCuffedTime[giveplayerid] = 99999999999999;
							}
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Canh sat / FBI / National Guard !");
		}
	}
	return 1;
}
CMD:thaocong(playerid, params[]) { return cmd_uncuff(playerid, params); }
CMD:uncuff(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (IsACop(playerid))
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_WHITE, "Su dung: /uncuff [Playerid/Ten]");

			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the thao cong voi chinh minh!"); return 1; }
						if (PlayerCuffed[giveplayerid])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Ban da duoc thao cong tay boi %s.", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Ban da thao cong tay cho %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~g~Thao cong", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerCuffed[giveplayerid] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong bi cong tay !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Canh sat / FBI / National Guard !");
		}
	}//not connected
	return 1;
}
CMD:find(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la thanh tra !");
			return 1;
		}
		if (PlayerOnMission[playerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Dang lam nhiem vu, khong the dung lenh nay !");
			return 1;
		}
		if (UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban dang tim kiem ai do, xin thu lai sau 2 phut !");
			return 1;
		}
		new giveplayerid, giveplayer[50];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /find [playerid/Ten]");

		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Khong the thuc hien!"); return 1; }
				new points;
				new level = PlayerInfo[playerid][pDetSkill];
				if (level >= 0 && level <= 50)
				{
					points = 4;
				}
				else if (level >= 51 && level <= 100)
				{
					points = 6;
				}
				else if (level >= 101 && level <= 200)
				{
					points = 8;
				}
				else if (level >= 201 && level <= 400)
				{
					points = 10;
				}
				else if (level >= 401)
				{
					points = 12;
				}
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				new Float:x, Float:y, Float:z;
				GetPlayerPos(giveplayerid, x, y, z);
				SetPlayerCheckpoint(playerid, x, y, z, 6);
				FindTime[playerid] = 1;
				FindTimePoints[playerid] = points;
				PlayerInfo[playerid][pDetSkill] ++;
				UsedFind[playerid] = 1;
				if (PlayerInfo[playerid][pDetSkill] == 50)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang dieu tra cua ban da dat level 2, Ban se som tim duoc nhung nguoi trong to chuc.");
				}
				else if (PlayerInfo[playerid][pDetSkill] == 100)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang dieu tra cua ban da dat level 3, Ban se som tim duoc nhung nguoi trong to chuc.");
				}
				else if (PlayerInfo[playerid][pDetSkill] == 200)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang dieu tra cua ban da dat level 4, Ban da tim duoc nhung nguoi trong to chuc.");
				}
				else if (PlayerInfo[playerid][pDetSkill] == 400)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang dieu tra cua ban da dat level 5, Ban da tim duoc nhung nguoi trong to chuc.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   ID/Ten khong hop le !");
		}
	}
	return 1;
}
CMD:removegps(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			DisableCheckpoint(playerid);
		}
		else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			DisableCheckpoint(playerid);
		}
	}
	return 1;
}
CMD:guard(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 8)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la ve si!");
			return 1;
		}
		new giveplayerid, giveplayer[50], string[256], money;
		if (sscanf(params, "ui", giveplayerid, money))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /guard [playerid/Ten] [Gia]");

		if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, hoac tren 99999!"); return 1; }
		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if (giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Khong the thuc hien !");
						return 1;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi bao ve cho %s voi $%d.", giveplayer, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Ve si %s muon bao ve ban voi $%d, (go /accept bodyguard) de chap nhan.", GN(playerid), money);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					GuardOffer[giveplayerid] = playerid;
					GuardPrice[giveplayerid] = money;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang offline!");
		}
	}
	return 1;
}
CMD:free(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la luat su!");
			return 1;
		}
		if (PlayerInfo[playerid][pLawSkill] >= 401)
		{
			ApprovedLawyer[playerid] = 1;
		}
		new giveplayerid, giveplayer[50], string[256];
		if (sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /free [playerid/Ten]");

		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Khong the thuc hien!"); return 1; }
				if (PlayerInfo[giveplayerid][pJailed] == 1 && ApprovedLawyer[playerid] == 1)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban da tha tu do cho %s.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Ban da duoc tha tu do, boi luat su %s.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					ApprovedLawyer[playerid] = 0;
					WantLawyer[giveplayerid] = 0;
					CallLawyer[giveplayerid] = 0;
					JailPrice[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pJailTime] = 1;
					PlayerInfo[playerid][pLawSkill] ++;
					if (PlayerInfo[playerid][pLawSkill] == 50)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang bao chua da dat level 2, Ban co the kiem nhieu tien hon voi thoi gian it hon.");
					}
					else if (PlayerInfo[playerid][pLawSkill] == 100)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang bao chua da dat level 3, Ban co the kiem nhieu tien hon voi thoi gian it hon.");
					}
					else if (PlayerInfo[playerid][pLawSkill] == 200)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang bao chua da dat level 4, Ban co the kiem nhieu tien hon voi thoi gian it hon.");
					}
					else if (PlayerInfo[playerid][pLawSkill] == 400)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang bao chua da dat level 5, Ban co the kiem nhieu tien hon voi thoi gian it hon.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Nguoi choi khong can luat su / Nguoi choi khong bi giam !");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "  Nguoi choi dang offline!");
		}
	}//not connected
	return 1;
}
CMD:huybo(playerid, params[]) { return cmd_cancel(playerid, params); }
CMD:cancel(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new x_job[256], string[256];
		if(sscanf(params, "s[256]", x_job))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /cancel [name]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Sex, Drugs, License, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce, OwnableCar");
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
			return 1;
		}
		if (strcmp(x_job, "sex", true) == 0) { SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
		else if (strcmp(x_job, "drugs", true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
		else if (strcmp(x_job, "license", true) == 0) { LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; }
		else if (strcmp(x_job, "repair", true) == 0) { RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
		else if (strcmp(x_job, "lawyer", true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
		else if (strcmp(x_job, "bodyguard", true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
		else if (strcmp(x_job, "live", true) == 0) { LiveOffer[playerid] = 999; }
		else if (strcmp(x_job, "refill", true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
		else if (strcmp(x_job, "car", true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
		else if (strcmp(x_job, "boxing", true) == 0) { BoxOffer[playerid] = 999; }
		else if (strcmp(x_job, "paper", true) == 0) { PaperOffer[playerid] = 999; }
		else if (strcmp(x_job, "witness", true) == 0) { MarryWitnessOffer[playerid] = 999; }
		else if (strcmp(x_job, "marriage", true) == 0) { ProposeOffer[playerid] = 999; }
		else if (strcmp(x_job, "divorce", true) == 0) { DivorceOffer[playerid] = 999; }
		else if (strcmp(x_job, "ownablecar", true) == 0) { OwnableCarOffer[playerid] = 999; OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0; }
		else if (strcmp(x_job, "ticket", true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
		else if (strcmp(x_job, "medic", true) == 0) { if (IsPlayerConnected(MedicCall)) { if (MedicCall == playerid) { MedicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "	Ban khong phai la nguoi goi hien tai !"); return 1; } } }
		else if (strcmp(x_job, "mechanic", true) == 0) { if (IsPlayerConnected(MechanicCall)) { if (MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi goi hien tai !"); return 1; } } }
		else if (strcmp(x_job, "Pizza", true) == 0) { if (IsPlayerConnected(PizzaCall)) { if (PizzaCall == playerid) { PizzaCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nguoi goi hien tai !"); return 1; } } }
		else if (strcmp(x_job, "taxi", true) == 0)
		{
			if (TaxiCall < 999)
			{
				if (TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
				{
					TaxiAccepted[playerid] = 999;
					GameTextForPlayer(playerid, "~w~Ban vua~n~~r~Tu choi cuoc goi", 5000, 1);
					TaxiCallTime[playerid] = 0;
					DisableCheckpoint(playerid);
					TaxiCall = 999;
				}
				else
				{
					if (IsPlayerConnected(TaxiCall)) { if (TaxiCall == playerid) { TaxiCall = 999; } }
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i))
						{
							if (TaxiAccepted[i] < 999)
							{
								if (TaxiAccepted[i] == playerid)
								{
									TaxiAccepted[i] = 999;
									GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Tu choi cuoc goi", 5000, 1);
									TaxiCallTime[i] = 0;
									DisableCheckpoint(i);
								}
							}
						}
					}
				}
			}
		}
		else if (strcmp(x_job, "bus", true) == 0)
		{
			if (BusCall < 999)
			{
				if (TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
				{
					BusAccepted[playerid] = 999;
					GameTextForPlayer(playerid, "~w~Ban vua~n~~r~Tu choi cuoc goi", 5000, 1);
					BusCallTime[playerid] = 0;
					DisableCheckpoint(playerid);
					BusCall = 999;
				}
				else
				{
					if (IsPlayerConnected(BusCall)) { if (BusCall == playerid) { BusCall = 999; } }
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i))
						{
							if (BusAccepted[i] < 999)
							{
								if (BusAccepted[i] == playerid)
								{
									BusAccepted[i] = 999;
									GameTextForPlayer(i, "~w~Bus Caller~n~~r~Tu choi cuoc goi", 5000, 1);
									BusCallTime[i] = 0;
									DisableCheckpoint(i);
								}
							}
						}
					}
				}
			}
		}
		else { return 1; }
		format(string, sizeof(string), "* Ban da tu choi: %s.", x_job);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}//not connected
	return 1;
}
CMD:chapnhan(playerid, params[]) { return cmd_accept(playerid, params); }
CMD:accept(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new x_job[256], string[256], giveplayer[50];
		if(sscanf(params, "s[256]", x_job))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: accept [name]");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Chet, Sex, Drugs, Repair, Lawyer, Bodyguard, Job, Live, Refill, OwnableCar");
			SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Boxing, Medic, Mechanic, Paper, Ticket, Pizza, Vukhi");
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
			return 1;
		}
		if (strcmp(x_job, "family", true) == 0)
		{
			new pinvite = GetPVarInt(playerid, "FInviteOffer"), str[128];
			if (pinvite == -1) return SCM(playerid, COLOR_GREY, "Khong ai moi ban vao Family.");
			PlayerInfo[playerid][pFMember] = PlayerInfo[pinvite][pFMember];
			format(str, sizeof(str), "%s da chap nhan loi moi vao Family cua ban.", GN(playerid));
			SCM(pinvite, COLOR_WHITE, str);
			format(str, sizeof(str), "Ban da chap nhan loi moi cua %s vao Family.", GN(pinvite));
			SCM(playerid, COLOR_WHITE, str);
			format(str, sizeof(str), "[Family] %s da gia nhap gia dinh, hay cung chao don thanh vien moi.", GN(playerid));
			SendNewFamilyMessage(PlayerInfo[pinvite][pFMember], COLOR_WHITE, str);
			PlayerInfo[playerid][pRank] = 0;
			FamilyInfo[PlayerInfo[pinvite][pFMember]][fMembers]++;
			SetPlayerToTeamColor(playerid);
			SavePlayer(playerid);
			SaveFamilies();
		}
		if (strcmp(x_job, "chet", true) == 0)
		{
			if (Dying[playerid] == 0) return SCM(playerid, COLOR_GREY, "Ban khong bi thuong.");
			if (DyingTimeOut[playerid] != 0)
			{
				new str[128];
				format(str, sizeof(str), "Ban can cho %d giay de co the thuc hien.", DyingTimeOut[playerid]);
				SCM(playerid, COLOR_WHITE, str);
				return 1;
			}
			SetPlayerHealth(playerid, 0);
		}
		if (strcmp(x_job, "vukhi", true) == 0 && GetPVarInt(playerid, "OfferType") == OFFERWEAPON)
		{
			new offerplayer = GetPVarInt(playerid, "OfferBy");
			new price = GetPVarInt(playerid, "OfferP");
			new ammo = GetPVarInt(playerid, "OfferA");
			new gun = GetPVarInt(playerid, "OfferG");
			new mats = GetPVarInt(playerid, "OfferM");
			new gunname[24];

			ClearOffer(playerid);
			ClearOffer(offerplayer);

			if (GetPlayerMoney(playerid) < price)
			{
				SCM(playerid, COLOR_GREY, "Ban khong du tien.");
				SCM(offerplayer, COLOR_GREY, "Nguoi choi kia khong du tien.");
				return 1;
			}
			GetWeaponName(gun, gunname, sizeof(gunname));
			format(string, sizeof(string), "   Ban da dua cho %s, mot %s, mat %d vat lieu, nhan duoc %d$.", GN(playerid), gunname, mats, price);
			PlayerPlaySound(offerplayer, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(offerplayer, COLOR_GRAD1, string);
			format(string, sizeof(string), "   Ban dua cho %s %d$, nhan duoc %s.", GN(offerplayer), price, gunname);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

			format(string, sizeof(string), "* %s dua %s cho %s.", GN(offerplayer), gunname, GN(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			SafeGivePlayerWeapon(playerid, gun, ammo);
			PlayerInfo[offerplayer][pMats] -= mats;
			SafeGivePlayerMoney(playerid, -price);
			SafeGivePlayerMoney(offerplayer, price);
		}
		/*if(strcmp(x_job,"car",true) == 0)
		{
		if(CarOffer[playerid] < 999)
		{
		if(IsPlayerConnected(CarOffer[playerid]))
		{
		if(GetPlayerMoney(playerid) > CarPrice[playerid])
		{
		if(IsPlayerInVehicle(CarOffer[playerid], CarID[playerid]))
		{
		GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
		
		new points;
		PlayerInfo[CarOffer[playerid]][pCarSkill] ++;
		if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 50)
		{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 2, Players that buy Cars from you can call it more often."); }
		else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 100)
		{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 3, Players that buy Cars from you can call it more often."); }
		else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 200)
		{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 4, Players that buy Cars from you can call it more often."); }
		else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 400)
		{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 5, Players that buy Cars from you can call it more often."); }
		new level = PlayerInfo[CarOffer[playerid]][pCarSkill];
		if(level >= 0 && level <= 50) { points = 1; }
		else if(level >= 51 && level <= 100) { points = 2; }
		else if(level >= 101 && level <= 200) { points = 3; }
		else if(level >= 201 && level <= 400) { points = 4; }
		else if(level >= 401) { points = 4; }
		format(string, sizeof(string), "* You bought a Car for $%d, from Car Dealer %s. (You can use /callcar %d times)",CarPrice[playerid],giveplayer,points);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "* You sold your Car to %s for $%d, the player can use /callcar %d times.",GN(playerid),CarPrice[playerid],points);
		SendClientMessage(CarOffer[playerid], COLOR_WHITE, string);
		PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid] * 5;
		SafeGivePlayerMoney(playerid, -CarPrice[playerid]);
		RemovePlayerFromVehicle(CarOffer[playerid]);
		CarCalls[playerid] = points;
		CarOffer[playerid] = 999;
		CarPrice[playerid] = 0;
		return 1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_GREY, "   The Car Dealer is not in the offerd Car !");
		return 1;
		}
		}
		else
		{
		SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Car !");
		return 1;
		}
		}
		return 1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_GREY, "   No-one offered to buy a Car !");
		return 1;
		}
		}*/
		else if (strcmp(x_job, "divorce", true) == 0)
		{
			if (DivorceOffer[playerid] < 999)
			{
				if (IsPlayerConnected(DivorceOffer[playerid]))
				{
					if (ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
					{
						GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban da chap nhan %s's yeu cau tro thanh nguoi chung giam cho dam cuoi .", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s da chap nhan yeu cau cua ban va tro thanh nguoi chung giam cho dam cuoi.", GN(playerid));
						SendClientMessage(DivorceOffer[playerid], COLOR_WHITE, string);
						ClearMarriage(playerid);
						ClearMarriage(DivorceOffer[playerid]);
						PlayerInfo[playerid][pPhousekey] = 255;
						PlayerInfo[playerid][pPbiskey] = 255;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi ma da gui cho ban don ly hon hien dang khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai gui cho ban don ly hon !");
				return 1;
			}
		}
		else if (strcmp(x_job, "witness", true) == 0)
		{
			if (MarryWitnessOffer[playerid] < 999)
			{
				if (IsPlayerConnected(MarryWitnessOffer[playerid]))
				{
					if (ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
					{
						GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban da chap nhan %s's yeu cau tro thanh nguoi chung giam cho dam cuoi .", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s da chap nhan yeu cau cua ban va tro thanh nguoi chung giam cho dam cuoi .", GN(playerid));
						SendClientMessage(MarryWitnessOffer[playerid], COLOR_WHITE, string);
						MarryWitness[MarryWitnessOffer[playerid]] = playerid;
						MarryWitnessOffer[playerid] = 999;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi ma da yeu cau ban tro thanh nguoi chung giam cho dan cuoi cua ho hien dang khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau ban tro thanh nguoi chung giam dam cuoi !");
				return 1;
			}
		}
		else if (strcmp(x_job, "marriage", true) == 0)
		{
			if (ProposeOffer[playerid] < 999)
			{
				if (!PlayerToPoint(10.0, playerid, 2232.3047, -1333.1543, 23.9815))
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong o nha tho tai Jefferson !");
					return 1;
				}
				if (IsPlayerConnected(ProposeOffer[playerid]))
				{
					if (ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
					{
						if (MarryWitness[ProposeOffer[playerid]] == 999)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi de nghi khong co nguoi chung giam hon nhan !");
							return 1;
						}
						if (IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						{
							if (ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
							{
								GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
								
								format(string, sizeof(string), "* Ban da chap nhan %s's tro thanh chong cua ban.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s da chap nhan tro thanh vo cua ban.", GN(playerid));
								SendClientMessage(ProposeOffer[playerid], COLOR_WHITE, string);
								format(string, sizeof(string), "Priest: %s co dong y lay %s nhu la mot nguoi chong ? (go 'yes' de chap nhan, nhung lenh khac se huy bo dam cuoi)", GN(playerid), giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								MarriageCeremoney[playerid] = 1;
								ProposedTo[ProposeOffer[playerid]] = playerid;
								GotProposedBy[playerid] = ProposeOffer[playerid];
								MarryWitness[ProposeOffer[playerid]] = 999;
								ProposeOffer[playerid] = 999;
								return 1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Nguoi chung giam hon nhan khong o gan !");
								return 1;
							}
						}
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi ma ho cau hon ban khong o gan !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai cau hon ban !");
				return 1;
			}
		}
		else if (strcmp(x_job, "Pizza", true) == 0)
		{
			if (PlayerInfo[playerid][pJob] != 17)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Pizza Boy!");
				return 1;
			}
			if (PizzaCallTime[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban da chap nhan don hang pizza!");
				return 1;
			}
			if (PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Dang lam viec, khong the dung lenh nay !");
				return 1;
			}
			if (PizzaCall < 999)
			{
				if (IsPlayerConnected(PizzaCall))
				{
					
					GetPlayerName(PizzaCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Ban da chap nhan don hang pizza cua %s, Ban co 90 giay de den do.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(playerid, COLOR_WHITE, "* Sau 90 giay Red Marker se bien mat.");
					format(string, sizeof(string), "* Pizza boy %s da chap nhan don hang cua ban xin ban vui long cho o vi tri hien tai.", GN(playerid));
					SendClientMessage(PizzaCall, COLOR_WHITE, string);
					new Float:x, Float:y, Float:z;
					GetPlayerPos(PizzaCall, x, y, z);
					SetPlayerCheckpoint(playerid, x, y, z, 5);
					GameTextForPlayer(playerid, "~w~Pizza Caller~n~~r~Goto redmarker", 5000, 1);
					PizzaCallTime[playerid] = 1;
					PizzaCall = 999;
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong co ai dat pizza !");
				return 1;
			}
		}
		else if (strcmp(x_job, "ticket", true) == 0)
		{
			if (TicketOffer[playerid] < 999)
			{
				if (IsPlayerConnected(TicketOffer[playerid]))
				{
					if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
					{
						GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban da nop phat $%d cho si quan %s.", TicketMoney[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), " * %s da nop phat cho ban $%d.", GN(playerid), TicketMoney[playerid]);
						SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, -TicketMoney[playerid]);
						SafeGivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   The Officer is not near you !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one offered you a Ticket !");
				return 1;
			}
		}
		else if (strcmp(x_job, "paper", true) == 0)
		{
			if (PaperOffer[playerid] < 999)
			{
				if (IsPlayerConnected(PaperOffer[playerid]))
				{
					if (BringingPaper[PaperOffer[playerid]] > 0)
					{
						if (ProxDetectorS(5.0, playerid, PaperOffer[playerid]))
						{
							GetPlayerName(PaperOffer[playerid], giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* Ban da nhan bao tu nguoi dua bao %s (go /read paper, de doc bao).", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da nhan lay bao cua ban.", GN(playerid));
							SendClientMessage(PaperOffer[playerid], COLOR_WHITE, string);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pTitle]);
							strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pMaker]);
							strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine1]);
							strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine2]);
							strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine3]);
							strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine4]);
							strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine5]);
							strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine6]);
							strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine7]);
							strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
							GotPaper[playerid] = 1;
							PaperOffer[playerid] = 999;
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Nguoi giao bao khong o gan ban !");
							return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai giao bao cho ban !");
				return 1;
			}
		}
		else if (strcmp(x_job, "boxing", true) == 0)
		{
			if (BoxOffer[playerid] < 999)
			{
				if (IsPlayerConnected(BoxOffer[playerid]))
				{
					new points;
					new mypoints;
					GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
					
					new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
					if (level >= 0 && level <= 50) { points = 40; }
					else if (level >= 51 && level <= 100) { points = 50; }
					else if (level >= 101 && level <= 200) { points = 60; }
					else if (level >= 201 && level <= 400) { points = 70; }
					else if (level >= 401) { points = 80; }
					if (PlayerInfo[playerid][pJob] == 12)
					{
						new clevel = PlayerInfo[playerid][pBoxSkill];
						if (clevel >= 0 && clevel <= 50) { mypoints = 40; }
						else if (clevel >= 51 && clevel <= 100) { mypoints = 50; }
						else if (clevel >= 101 && clevel <= 200) { mypoints = 60; }
						else if (clevel >= 201 && clevel <= 400) { mypoints = 70; }
						else if (clevel >= 401) { mypoints = 80; }
					}
					else
					{
						mypoints = 30;
					}
					format(string, sizeof(string), "* Ban da chap nhan cuoc dau loi dai tu  %s, va se dau voi %d mau.", giveplayer, mypoints);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s da chap nhan cuoc doi loi dau tu ban, ban se dau voi %d mau.", GN(playerid), points);
					SendClientMessage(BoxOffer[playerid], COLOR_WHITE, string);
					SetPlayerHealth(playerid, mypoints);
					SetPlayerHealth(BoxOffer[playerid], points);
					SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
					SetPlayerPos(playerid, 762.9852, 2.4439, 1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
					SetPlayerPos(BoxOffer[playerid], 758.7064, -1.8038, 1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
					TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
					GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
					new name[MAX_PLAYER_NAME];
					new dstring[MAX_PLAYER_NAME];
					new wstring[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					format(dstring, sizeof(dstring), "%s", name);
					strmid(wstring, dstring, 0, strlen(dstring), 255);
					if (strcmp(Titel[TitelName], wstring, true) == 0)
					{
						format(string, sizeof(string), "Boxing News: Boxing Champion %s will fight VS %s, in 60 seconds (Gantom Gym).", GN(playerid), giveplayer);
						OOCOff(COLOR_WHITE, string);
						TBoxer = playerid;
						BoxDelay = 60;
					}
					GetPlayerName(BoxOffer[playerid], name, sizeof(name));
					format(dstring, sizeof(dstring), "%s", name);
					strmid(wstring, dstring, 0, strlen(dstring), 255);
					if (strcmp(Titel[TitelName], wstring, true) == 0)
					{
						format(string, sizeof(string), "Boxing News: Boxing Champion %s VS %s, trong 60 giay (Gantom Gym).", giveplayer, GN(playerid));
						OOCOff(COLOR_WHITE, string);
						TBoxer = BoxOffer[playerid];
						BoxDelay = 60;
					}
					BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
					if (BoxDelay < 1) { BoxDelay = 20; }
					InRing = 1;
					Boxer1 = BoxOffer[playerid];
					Boxer2 = playerid;
					PlayerBoxing[playerid] = 1;
					PlayerBoxing[BoxOffer[playerid]] = 1;
					BoxOffer[playerid] = 999;
					return 1;
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khoong ai yeu cau cuoc dau loi dai !");
				return 1;
			}
		}
		else if (strcmp(x_job, "taxi", true) == 0)
		{
			if (TransportDuty[playerid] != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Taxi Driver !");
				return 1;
			}
			if (TaxiCallTime[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban da chap nhan mot cuoc goi taxi !");
				return 1;
			}
			if (PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Dang lam nhiem vu, khong the su dung lenh nay !");
				return 1;
			}
			if (TaxiCall < 999)
			{
				if (IsPlayerConnected(TaxiCall))
				{
					
					GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Ban da chap nhan yeu cau Taxi tu %s, ban se thay khach hang khi den do.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Taxi Driver %s da chap nhan yeu cau cua ban, xin vui long cho o vi tri hien tai.", GN(playerid));
					SendClientMessage(TaxiCall, COLOR_WHITE, string);
					GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
					TaxiCallTime[playerid] = 1;
					TaxiAccepted[playerid] = TaxiCall;
					TaxiCall = 999;
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau taxi !");
				return 1;
			}
		}
		else if (strcmp(x_job, "bus", true) == 0)
		{
			if (TransportDuty[playerid] != 2)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la Bus Driver !");
				return 1;
			}
			if (BusCallTime[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban da chap nhan mot yeu cau xe Bus !");
				return 1;
			}
			if (PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Dang lam nhiem vu, khong the su dung lenh nay !");
				return 1;
			}
			if (BusCall < 999)
			{
				if (IsPlayerConnected(BusCall))
				{
					
					GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Ban da yeu cau xe Bus tu %s, ban se nhin thay khach hang khi den do.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Bus Driver %s da chap nhan yeu cau bus cua ban, xin vui long cho o vi tri hien tai.", GN(playerid));
					SendClientMessage(BusCall, COLOR_WHITE, string);
					new Float:x, Float:y, Float:z;
					GetPlayerPos(BusCall, x, y, z);
					SetPlayerCheckpoint(playerid, x, y, z, 5);
					GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
					BusCallTime[playerid] = 1;
					BusAccepted[playerid] = BusCall;
					BusCall = 999;
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau bus !");
				return 1;
			}
		}
		else if (strcmp(x_job, "medic", true) == 0)
		{
			if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				if (MedicCallTime[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban da chap nhan mot yeu cau cap cuu !");
					return 1;
				}
				if (PlayerOnMission[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Dang lam nhiem vu, khong the su dung lenh nay !");
					return 1;
				}
				if (MedicCall < 999)
				{
					if (IsPlayerConnected(MedicCall))
					{
						
						GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Ban da chap nhan yeu cau cap cuu tu %s, ban co 30 giay de den do.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendClientMessage(playerid, COLOR_WHITE, "* Sau 30 giay Red Marker se bien mat.");
						format(string, sizeof(string), "* Medic %s da chap nhan yeu cau cap cuu cua ban, xin vui long cho o vi tri hien tai.", GN(playerid));
						SendClientMessage(MedicCall, COLOR_WHITE, string);
						new Float:x, Float:y, Float:z;
						GetPlayerPos(MedicCall, x, y, z);
						SetPlayerCheckpoint(playerid, x, y, z, 5);
						GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
						MedicCallTime[playerid] = 1;
						MedicCall = 999;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau cap cuu !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la nhan vien cap cuu !");
				return 1;
			}
		}
		else if (strcmp(x_job, "mechanic", true) == 0)
		{
			if (PlayerInfo[playerid][pJob] != 7)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho sua xe !");
				return 1;
			}
			if (MechanicCallTime[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban da chap nhan mot yeu cau sua xe !");
				return 1;
			}
			if (PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Dang lam nhiem vu, khong the su dung lenh nay !");
				return 1;
			}
			if (MechanicCall < 999)
			{
				if (IsPlayerConnected(MechanicCall))
				{
					
					GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Ban da chap nhan yeu cau sua xe tu %s, ban co 90 giay de den do.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(playerid, COLOR_WHITE, "* Sau 90 giay Red Marker se bien mat.");
					format(string, sizeof(string), "* Car Mechanic %s da chap nhan yeu cau sua xe cua ban, xin vui long cho o vi tri hien tai.", GN(playerid));
					SendClientMessage(MechanicCall, COLOR_WHITE, string);
					new Float:x, Float:y, Float:z;
					GetPlayerPos(MechanicCall, x, y, z);
					SetPlayerCheckpoint(playerid, x, y, z, 5);
					GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
					MechanicCallTime[playerid] = 1;
					MechanicCall = 999;
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau sua xe !");
				return 1;
			}
		}
		else if (strcmp(x_job, "job", true) == 0)
		{
			if (GettingJob[playerid] > 0)
			{
				/*if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 || PlayerInfo[playerid][pMember] > 5 && PlayerInfo[playerid][pMember] < 15 || PlayerInfo[playerid][pFMember] < 255)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Khong the nhan viec, ban dang trong Family !");
					return 1;
				}*/
				//SendClientMessage(playerid, COLOR_WHITE, "* Bay gio ban da chap nhan cong viec ban muon lam, ban co 5 gio lam viec trong hop dong cong viec.");
				SendClientMessage(playerid, COLOR_WHITE, "* Chuc mung ban da co cong viec moi, go /help de xem huong dan cong viec.");
				PlayerInfo[playerid][pJob] = GettingJob[playerid];
				GettingJob[playerid] = 0;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o vi tri nhan viec !");
				return 1;
			}
		}
		else if (strcmp(x_job, "refill", true) == 0)
		{
			if (RefillOffer[playerid] < 999)
			{
				if (IsPlayerConnected(RefillOffer[playerid]))
				{
					if (GetPlayerMoney(playerid) > RefillPrice[playerid])
					{
						GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
						
						new car = gLastCar[playerid];
						new fuel;
						PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
						if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
						{
							SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 2, you can add more Fuel to any Players Cars.");
						}
						else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
						{
							SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 3, you can add more Fuel to any Players Cars.");
						}
						else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
						{
							SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 4, you can add more Fuel to any Players Cars.");
						}
						else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
						{
							SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 5, you can add more Fuel to any Players Cars.");
						}
						new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
						if (level >= 0 && level <= 50)
						{
							fuel = 15;
						}
						else if (level >= 51 && level <= 100)
						{
							fuel = 40;
						}
						else if (level >= 101 && level <= 200)
						{
							fuel = 60;
						}
						else if (level >= 201 && level <= 400)
						{
							fuel = 80;
						}
						else if (level >= 401)
						{
							fuel = 100;
						}
						format(string, sizeof(string), "* You refilled your car with %d%, for $%d by Car Mechanic %s.", fuel, RefillPrice[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* You refilled %s's car with %d%, the $%d has been added to your PayCheck.", GN(playerid), fuel, RefillPrice[playerid]);
						SendClientMessage(RefillOffer[playerid], COLOR_WHITE, string);
						PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid] * 5;
						SafeGivePlayerMoney(playerid, -RefillPrice[playerid]);
						if (Gas[car] < 110) { Gas[car] += fuel; }
						RefillOffer[playerid] = 999;
						RefillPrice[playerid] = 0;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Refill !");
						return 1;
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one offered to Refill your Car !");
				return 1;
			}
		}
		else if (strcmp(x_job, "live", true) == 0)
		{
			if (LiveOffer[playerid] < 999)
			{
				if (IsPlayerConnected(LiveOffer[playerid]))
				{
					if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
						SendClientMessage(playerid, COLOR_WHITE, "* You are frozen till the Live Conversation ends.");
						SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "* You are frozen till the Live Conversation ends (use /live again).");
						TogglePlayerControllable(playerid, 0);
						TogglePlayerControllable(LiveOffer[playerid], 0);
						TalkingLive[playerid] = LiveOffer[playerid];
						TalkingLive[LiveOffer[playerid]] = playerid;
						LiveOffer[playerid] = 999;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   You are to far away from the News Reporter !");
						return 1;
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one gave you a Live Conversation offer !");
				return 1;
			}
		}
		else if (strcmp(x_job, "lawyer", true) == 0)
		{
			new giveplayerid;
			if (sscanf(params, "s[256]u", x_job, giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD2, "Su dung : /accept lawyer [playerid/PartOfName]");

			if (gTeam[playerid] == TEAMGOV)
			{
				if (IsPlayerConnected(giveplayerid))
				{
					if (giveplayerid != INVALID_PLAYER_ID)
					{
						if (PlayerInfo[giveplayerid][pJob] == 2)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* You allowed %s to free a Jailed Person.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Officer %s approved (allowed) you to free a Jailed Person. (use /free)", GN(playerid));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							ApprovedLawyer[giveplayerid] = 1;
							return 1;
						}
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Invalid action! (You are no cop / Player aint a Lawyer / Bad ID)");
				return 1;
			}
		}
		else if (strcmp(x_job, "bodyguard", true) == 0)
		{
			if (GuardOffer[playerid] < 999)
			{
				if (GetPlayerMoney(playerid) > GuardPrice[playerid])
				{
					if (IsPlayerConnected(GuardOffer[playerid]))
					{
						GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* You accepted the Protection for $%d from Bodyguard %s.", GuardPrice[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s accepted your Protection, and the $%d was added to your PayCheck.", GN(playerid), GuardPrice[playerid]);
						SendClientMessage(GuardOffer[playerid], COLOR_WHITE, string);
						PlayerInfo[GuardOffer[playerid]][pPayCheck] += GuardPrice[playerid] * 5;
						SafeGivePlayerMoney(playerid, -GuardPrice[playerid]);
						GuardOffer[playerid] = 999;
						GuardPrice[playerid] = 0;
						return 1;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Protection !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you any Protection !");
				return 1;
			}
		}
		else if (strcmp(x_job, "drugs", true) == 0)
		{
			if (DrugOffer[playerid] < 999)
			{
				if (GetPlayerMoney(playerid) > DrugPrice[playerid])
				{
					if (PlayerInfo[playerid][pDrugs] < 7)
					{
						if (IsPlayerConnected(DrugOffer[playerid]))
						{
							GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* You bought %d gram for $%d from Drug Dealer %s.", DrugGram[playerid], DrugPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s has bought your %d gram, the $%d was added to your PayCheck.", GN(playerid), DrugGram[playerid], DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], COLOR_WHITE, string);
							PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid] * 5;
							PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
							SafeGivePlayerMoney(playerid, -DrugPrice[playerid]);
							PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
							if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
							{
								SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper.");
							}
							else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
							{
								SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper.");
							}
							else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
							{
								SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper.");
							}
							else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
							{
								SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper.");
							}
							DrugOffer[playerid] = 999;
							DrugPrice[playerid] = 0;
							DrugGram[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford those Drugs !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you any Drugs !");
				return 1;
			}
		}
		else if (strcmp(x_job, "ownablecar", true) == 0)
		{
			if (OwnableCarOffer[playerid] < 999)
			{
				if (OwnableCarID[playerid] == 0) { return 1; }
				if (OwnableCarPrice[playerid] == 0 || OwnableCarPrice[playerid] > 1500001) { return 1; }

				if (OwnableCarID[playerid] == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0])) {}
				else if (OwnableCarID[playerid] == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1])) {}
				else if (OwnableCarID[playerid] == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2])) {}
				else { SendClientMessage(playerid, COLOR_GREY, "  Khong co ai de nghi chuyen nay"); return 1; }

				if (GetPlayerMoney(playerid) >= OwnableCarPrice[playerid])
				{
					if (IsPlayerConnected(OwnableCarOffer[playerid]))
					{
						GetPlayerName(OwnableCarOffer[playerid], giveplayer, sizeof(giveplayer));
						
						if (PlayerInfo[playerid][pPcarkey][0] == -1)
						{
							if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0]))
							{
								PlayerInfo[playerid][pPcarkey][0] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1]))
							{
								PlayerInfo[playerid][pPcarkey][0] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2]))
							{
								PlayerInfo[playerid][pPcarkey][0] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2] = -1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Nguoi ban xe can phai ngoi trong xe !");
								return 1;
							}
							format(string, sizeof(string), "* Ban mua chiec xe voi gia $%d tu %s.", OwnableCarPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da mua chiec xe cua ban voi gia $%d.", GN(playerid), OwnableCarPrice[playerid]);
							SendClientMessage(OwnableCarOffer[playerid], COLOR_WHITE, string);
							RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
							SafeGivePlayerMoney(playerid, -OwnableCarPrice[playerid]);
							SafeGivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
							strmid(CarInfo[OwnableCarID[playerid]][cOwner], GLN(playerid), 0, strlen(GLN(playerid)), 999);
						}
						else if (PlayerInfo[playerid][pPcarkey][1] == -1)
						{
							if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0]))
							{
								PlayerInfo[playerid][pPcarkey][1] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1]))
							{
								PlayerInfo[playerid][pPcarkey][1] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2]))
							{
								PlayerInfo[playerid][pPcarkey][1] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2] = -1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Nguoi ban xe can phai ngoi trong xe !");
								return 1;
							}
							format(string, sizeof(string), "* Ban mua chiec xe voi gia $%d tu %s.", OwnableCarPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da mua chiec xe cua ban voi gia $%d.", GN(playerid), OwnableCarPrice[playerid]);
							SendClientMessage(OwnableCarOffer[playerid], COLOR_WHITE, string);
							RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
							SafeGivePlayerMoney(playerid, -OwnableCarPrice[playerid]);
							SafeGivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
							strmid(CarInfo[OwnableCarID[playerid]][cOwner], GLN(playerid), 0, strlen(GLN(playerid)), 999);
						}
						else if (PlayerInfo[playerid][pPcarkey][2] == -1)
						{
							if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0]))
							{
								PlayerInfo[playerid][pPcarkey][2] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][0] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1]))
							{
								PlayerInfo[playerid][pPcarkey][2] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][1] = -1;
							}
							else if (GetPlayerVehicleID(OwnableCarOffer[playerid]) == GetVehicleIDFromKey(PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2]))
							{
								PlayerInfo[playerid][pPcarkey][2] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2];
								PlayerInfo[OwnableCarOffer[playerid]][pPcarkey][2] = -1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "  Nguoi ban xe can phai ngoi trong xe !");
								return 1;
							}
							format(string, sizeof(string), "* Ban mua chiec xe voi gia $%d tu %s.", OwnableCarPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s da mua chiec xe cua ban voi gia $%d.", GN(playerid), OwnableCarPrice[playerid]);
							SendClientMessage(OwnableCarOffer[playerid], COLOR_WHITE, string);
							RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
							SafeGivePlayerMoney(playerid, -OwnableCarPrice[playerid]);
							SafeGivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
							strmid(CarInfo[OwnableCarID[playerid]][cOwner], GLN(playerid), 0, strlen(GLN(playerid)), 999);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "  Ban da full 3 slot xe ! ");
							return 1;
						}
						DateProp(playerid);
						DateProp(OwnableCarOffer[playerid]);
						OnPropUpdate();
						SavePlayer(playerid);
						SavePlayer(OwnableCarOffer[playerid]);
						OwnableCarOffer[playerid] = 999;
						OwnableCarID[playerid] = 0;
						OwnableCarPrice[playerid] = 0;
						GameTextForPlayer(playerid, "~w~Chuc mung~n~Dung quen dau xe cua minh (/v park)!", 5000, 3);
						SendClientMessage(playerid, COLOR_GRAD2, "Chuc mung ban da mua xe thanh cong!");
						SendClientMessage(playerid, COLOR_GRAD2, "Go /vehiclemanual de xem thong tin xe!");
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi ban xe khong ton tai !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai ban xe cho ban !");
				return 1;
			}
		}
		else if (strcmp(x_job, "license", true) == 0)
		{
			if (LicenseOffer[playerid] < 999)
			{
				if (GetPlayerMoney(playerid) > LicensePrice[playerid])
				{
					/*if(PlayerInfo[playerid][pDrugs] < 7)
					{
					if(IsPlayerConnected(DrugOffer[playerid]))
					{
					GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* You bought %d gram for $%d from Drug Dealer %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s has bought your %d gram, the $%d was added to your PayCheck.",GN(playerid),DrugGram[playerid],DrugPrice[playerid]);
					SendClientMessage(DrugOffer[playerid], COLOR_WHITE, string);
					PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid] * 5;
					PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
					SafeGivePlayerMoney(playerid, -DrugPrice[playerid]);
					PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
					PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
					if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
					{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper."); }
					else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
					{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper."); }
					else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
					{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper."); }
					else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
					{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper."); }
					DrugOffer[playerid] = 999;
					DrugPrice[playerid] = 0;
					DrugGram[playerid] = 0;
					return 1;
					}
					return 1;
					}
					else
					{
					SendClientMessage(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first !");
					return 1;
					}*/
					if (LicenseType[playerid] == 0 || LicenseType[playerid] > 5)
					{
						return 1;
					}
					if (IsPlayerConnected(LicenseOffer[playerid]))
					{
						GetPlayerName(LicenseOffer[playerid], giveplayer, sizeof(giveplayer));
						
						if (LicenseType[playerid] == 1)
						{
							if (PlayerInfo[playerid][pCarLic] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   You have drivers license already.");
							}
							else
							{
								format(string, sizeof(string), "* You bought Drivers License for $%d from Instructor %s.", LicensePrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your Drivers License for $%d and it was added to your PayCheck.", GN(playerid), LicensePrice[playerid]);
								SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[playerid][pCarLic] = 1;
								SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
								PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
							}
						}
						if (LicenseType[playerid] == 2)
						{
							if (PlayerInfo[playerid][pFlyLic] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   You have flying license already.");
							}
							else
							{
								format(string, sizeof(string), "* You bought Flying License for $%d from Instructor %s.", LicensePrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your Flying License for $%d and it was added to your PayCheck.", GN(playerid), LicensePrice[playerid]);
								SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[playerid][pFlyLic] = 1;
								SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
								PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
							}
						}
						if (LicenseType[playerid] == 3)
						{
							if (PlayerInfo[playerid][pBoatLic] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   You have Sailing license already.");
							}
							else
							{
								format(string, sizeof(string), "* You bought Sailing License for $%d from Instructor %s.", LicensePrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your Sailing License for $%d and it was added to your PayCheck.", GN(playerid), LicensePrice[playerid]);
								SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[playerid][pBoatLic] = 1;
								SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
								PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
							}
						}
						if (LicenseType[playerid] == 4)
						{
							if (PlayerInfo[playerid][pFishLic] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   You have Fishing license already.");
							}
							else
							{
								format(string, sizeof(string), "* You bought Fishing License for $%d from Instructor %s.", LicensePrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your Fishing License for $%d and it was added to your PayCheck.", GN(playerid), LicensePrice[playerid]);
								SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[playerid][pFishLic] = 1;
								SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
								PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
							}
						}
						if (LicenseType[playerid] == 5)
						{
							if (PlayerInfo[playerid][pGunLic] == 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "   You have Weapon license already.");
							}
							else
							{
								format(string, sizeof(string), "* You bought Weapon License for $%d from Instructor %s.", LicensePrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your Weapon License for $%d and it was added to your PayCheck.", GN(playerid), LicensePrice[playerid]);
								SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[playerid][pGunLic] = 1;
								SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
								PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
							}
						}
						LicenseOffer[playerid] = 999;
						LicensePrice[playerid] = 0;
						LicenseType[playerid] = 0;
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   You can't afford that License !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you any License !");
				return 1;
			}
		}
		else if (strcmp(x_job, "sex", true) == 0)
		{
			if (SexOffer[playerid] < 999)
			{
				if (GetPlayerMoney(playerid) > SexPrice[playerid])
				{
					if (IsPlayerConnected(SexOffer[playerid]))
					{
						new Car = GetPlayerVehicleID(playerid);
						if (IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						{
							GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* You had sex with Whore %s, for $%d.", giveplayer, SexPrice[playerid]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s had sex with you, the $%d was added to your PayCheck.", GN(playerid), SexPrice[playerid]);
							SendClientMessage(SexOffer[playerid], COLOR_WHITE, string);
							PlayerInfo[SexOffer[playerid]][pPayCheck] += SexPrice[playerid] * 5;
							SafeGivePlayerMoney(playerid, -SexPrice[playerid]);
							PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
							if (PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
							{
								SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 2, you offer better Sex (health) and less chance on STD.");
							}
							else if (PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
							{
								SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 3, you offer better Sex (health) and less chance on STD.");
							}
							else if (PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
							{
								SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 4, you offer better Sex (health) and less chance on STD.");
							}
							else if (PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
							{
								SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 5, you offer better Sex (health) and less chance on STD.");
							}
							if (STDPlayer[playerid] == 0)
							{
								if (Condom[playerid] < 1)
								{
									new Float:health;
									new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									if (level >= 0 && level <= 50)
									{
										if (GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 30.0);
										}
										new rand = random(sizeof(STD1));
										STDPlayer[playerid] = STD1[rand];
										STDPlayer[SexOffer[playerid]] = STD1[rand];
										if (STD1[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
										else if (STD1[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Chlamydia because of the Sex."); }
										else if (STD1[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Gonorrhea because of the Sex."); }
										else if (STD1[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Syphilis because of the Sex."); }
									}
									else if (level >= 51 && level <= 100)
									{
										if (GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 60.0);
										}
										new rand = random(sizeof(STD2));
										STDPlayer[playerid] = STD2[rand];
										STDPlayer[SexOffer[playerid]] = STD2[rand];
										if (STD2[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
										else if (STD2[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Chlamydia because of the Sex."); }
										else if (STD2[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Gonorrhea because of the Sex."); }
										else if (STD2[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Syphilis because of the Sex."); }
									}
									else if (level >= 101 && level <= 200)
									{
										if (GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 90.0);
										}
										new rand = random(sizeof(STD3));
										STDPlayer[playerid] = STD3[rand];
										STDPlayer[SexOffer[playerid]] = STD3[rand];
										if (STD3[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
										else if (STD3[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Chlamydia because of the Sex."); }
										else if (STD3[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Gonorrhea because of the Sex."); }
										else if (STD3[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Syphilis because of the Sex."); }
									}
									else if (level >= 201 && level <= 400)
									{
										if (GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 120.0);
										}
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if (STD4[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
										else if (STD4[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Chlamydia because of the Sex."); }
										else if (STD4[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Gonorrhea because of the Sex."); }
										else if (STD4[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a Syphilis because of the Sex."); }
									}
									else if (level >= 401)
									{
										if (GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 150.0);
										}
										SendClientMessage(playerid, COLOR_WHITE, "* Your Sex Skill Level is so high you gave high health and No STD.");
										SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* The Whore's Sex Skill Level is so high you got high health and No STD.");
									}
								}
								else
								{
									SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* Nguoi choi su dung bao cao su.");
									SendClientMessage(playerid, COLOR_WHITE, "* Ban da su dung bao cao su.");
									Condom[playerid] --;
								}
							}
							else
							{
								SendClientMessage(SexOffer[playerid], COLOR_GREY, "* Nguoi choi nay da bi nhiem STD, khong the them nhay nua.");
								return 1;
							}
							SexOffer[playerid] = 999;
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Ban va gai mai dam / trai bao phai cung o tren xe de sex !");
							return 1;
						}
					}//Connected or not
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong co kha nang sex !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong de nghi nao tu gai mai dam / trai bao !");
				return 1;
			}
		}
		else if (strcmp(x_job, "suaxe", true) == 0)
		{
			if (RepairOffer[playerid] < 999)
			{
				if (GetPlayerMoney(playerid) > RepairPrice[playerid])
				{
					if (IsPlayerInAnyVehicle(playerid))
					{
						if (IsPlayerConnected(RepairOffer[playerid]))
						{
							GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
							
							RepairCar[playerid] = GetPlayerVehicleID(playerid);
							SetVehicleHealthEx(RepairCar[playerid], 1000.0);
													

							format(string, sizeof(string), "* Ban sua xe cua ban voi $%d boi tho sua xe %s.", RepairPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Ban sua chua xe cua %s's, $%d da duoc them vao PayCheck cua ban.", GN(playerid), RepairPrice[playerid]);
							SendClientMessage(RepairOffer[playerid], COLOR_WHITE, string);
							PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
							if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
							{
								SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Ki nang sua xe cua ban da dat level 2, Ban co the do them xang cho moi nguoi.");
							}
							else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
							{
								SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Ki nang sua xe cua ban da dat level 3, Ban co the do them xang cho moi nguoi.");
							}
							else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
							{
								SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Ki nang sua xe cua ban da dat level 4, Ban co the do them xang cho moi nguoi.");
							}
							else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
							{
								SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Ki nang sua xe cua ban da dat level 5, Ban co the do them xang cho moi nguoi.");
							}
							PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid] * 5;
							SafeGivePlayerMoney(playerid, -RepairPrice[playerid]);
							RepairOffer[playerid] = 999;
							RepairPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Ban khong co kha nang sua xe !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Khong ai yeu cau ban sua xe !");
				return 1;
			}
		}
		else { return 1; }
	}//not connected
	return 1;
}
CMD:refill(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 7)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho sua xe!");
			return 1;
		}
		new playa;
		new money;
		new string[256], giveplayer[50];
		if(sscanf(params, "ui", playa, money))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /refill [playerid/Ten] [Gia]");

		if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, hoac tren 99999!"); return 1; }
		if (IsPlayerConnected(playa))
		{
			if (playa != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa))
				{
					if (playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't do that!"); return 1; }
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi %s duoc do xang cho anh ay voi gia $%d .", giveplayer, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Tho sua xe %s de nghi duoc do xang cho ban voi gia $%d, (go /accept refill) de chap nhan.", GN(playerid), money);
					SendClientMessage(playa, COLOR_WHITE, string);
					RefillOffer[playa] = playerid;
					RefillPrice[playa] = money;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban / khong o trong xe.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline.");
		}
	}
	return 1;
}
CMD:suaxe(playerid, params[]) { return cmd_repair(playerid, params); }
CMD:repair(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 7)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la tho sua xe!");
			return 1;
		}
		new playa;
		new money;
		new string[256], giveplayer[50];
		if (sscanf(params, "ui", playa, money))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /repair [playerid/Ten] [Gia]");

		if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, hoac tren 99999!"); return 1; }
		if (IsPlayerConnected(playa))
		{
			if (playa != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa))
				{
					if (playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Khong the thuc hien!"); return 1; }
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi %s duoc sua xe cua anh ay voi gia $%d .", giveplayer, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Tho sua xe %s de nghi duoc sua xe cho ban voi gia $%d, (go /accept suaxe) de chap nhan.", GN(playerid), money);
					SendClientMessage(playa, COLOR_WHITE, string);
					RepairOffer[playa] = playerid;
					RepairPrice[playa] = money;
				}
				else SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban / khong o trong xe.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang offline.");
		}
	}
	return 1;
}
CMD:callcar(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new string[256];
		if (CarCalls[playerid] > 0)
		{
			new Float:plocx, Float:plocy, Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehiclePos(CarID[playerid], plocx, plocy + 4, plocz);
			SendClientMessage(playerid, COLOR_WHITE, "* Xe da mua da den.");
			CarCalls[playerid] -= 1;
			format(string, sizeof(string), "* Ban co the goi Xe ban da mua trong %d lan nua.", CarCalls[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Hanh dong khong hop le !");
		}
	}
	return 1;
}
CMD:f(playerid, params[]) { return cmd_family(playerid, params); }
CMD:family(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Ban khong the noi, ban da bi cam noi");
			return 1;
		}
		new string[256], result[128];
		if (sscanf(params, "s[128]", result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: (/f)action [faction chat]");

		if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pFMember] < 255)
		{
			new leader = PlayerInfo[playerid][pLeader];
			new member = PlayerInfo[playerid][pMember];
			if (member == 1)
			{
				if (PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Chief %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Deputy Chief %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Captain %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Lieutenant %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sergeant %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Corporal %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Police Officer %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Cadet %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Cadet %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			if (member == 2)
			{
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Assistant Director in Charge %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Special Agent in Charge %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Special Agent %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Special Agent Trainee %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Professional Staff %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Professional Staff %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			if (member == 3)
			{
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( General %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Lieutenant %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Captain %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Major %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Sergeant %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Private %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Private %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			if (member == 4)
			{
				format(string, sizeof(string), "** (( Paramedic %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			else if (member == 7)
			{
				if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Bodyguard %s: %s )) **", GN(playerid), result); }
				if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Driver %s: %s )) **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Not-assigned %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			else if (member == 8)
			{
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vice-Director %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Special Agent %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Agent %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Marksman %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Freelancer %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Freelancer %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			else if (member == 9)
			{
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Network Producer %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Network Editor %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Network Anchor %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Local Editor %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Local Reporter %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Intern %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Intern %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			else if (member == 10)
			{
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Taxi Company Owner %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Shift Supervisor %s: %s )) **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Dispatcher %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Cabbie %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Taxi Rookie %s: %s ))  **", GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Trainee %s: %s ))  **", GN(playerid), result); }
				else { format(string, sizeof(string), "** (( Trainee %s: %s )) **", GN(playerid), result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			}
			else if (leader == 1)
			{
				format(string, sizeof(string), "** (( Chief %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 2)
			{
				format(string, sizeof(string), "** (( Director %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 3)
			{
				format(string, sizeof(string), "** (( General %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 4)
			{
				format(string, sizeof(string), "** (( Paramedic %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 7)
			{
				format(string, sizeof(string), "** (( Mayor %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 8)
			{
				format(string, sizeof(string), "** (( Director %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 9)
			{
				format(string, sizeof(string), "** (( Network Producer %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (leader == 10)
			{
				format(string, sizeof(string), "** (( Taxi Company Owner %s: %s )) **", GN(playerid), result);
				SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
			}
			else if (PlayerInfo[playerid][pFMember] < 255)
			{
				new fid = PlayerInfo[playerid][pFMember];
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( %s %s: %s )) **", FamilyTitle[fid][6], GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( %s %s: %s )) **", FamilyTitle[fid][5], GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( %s %s: %s ))  **", FamilyTitle[fid][4], GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( %s %s: %s ))  **", FamilyTitle[fid][3], GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( %s %s: %s ))  **", FamilyTitle[fid][2], GN(playerid), result); }
				else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( %s %s: %s ))  **", FamilyTitle[fid][1], GN(playerid), result); }
				else { format(string, sizeof(string), "** (( %s %s: %s )) **", FamilyTitle[fid][0], GN(playerid), result); }
				SendNewFamilyMessage(PlayerInfo[playerid][pFMember], 0x7BDDA5AA, string);
			}
			printf("%s", string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   Ban khong trong to chuc/family nao!");
			return 1;
		}
	}//not connected
	return 1;
}
CMD:families(playerid, params[])
{
	//if (PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREY, "Ban khong co quyen su dung.");
	new str[128];
	SCM(playerid, 0x7BDDA5AA, "------Danh Sach Family------");
	for (new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if (FamilyInfo[i][fID] != -1)
		{
			format(str, sizeof(str), "ID: %d | Family Name: %s | Leader: %s | Level: %d | Rank 6: %s",
				i, FamilyInfo[i][fName], FamilyInfo[i][fLeader], -1, FamilyTitle[i][6]);
			SCM(playerid, COLOR_WHITE, str);
		}
	}
	return 1;
}
CMD:news(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if (PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Ban khong the noi, ban da bi cam noi");
				return 1;
			}
			new counter = 0;
			for (new i = 71; i <= 73; i++)
			{
				new dist = CheckPlayerDistanceToVehicle(7, playerid, i);
				if (dist)
				{
					counter++;
				}
			}
			if (counter == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong o gan/o trong news van/chopper !");
				return 1;
			}
			else
			{
				new result[128], string[256];
				if (sscanf(params, "s[128]", result))
					return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /news [newstext]");

				new rtext[64];
				if (PlayerInfo[playerid][pRank] == 1) { rtext = "Intern Worker"; }
				else if (PlayerInfo[playerid][pRank] == 2) { rtext = "Journalist"; }
				else if (PlayerInfo[playerid][pRank] == 3) { rtext = "Head Journalist"; }
				else if (PlayerInfo[playerid][pRank] == 4) { rtext = "Company Secretary"; }
				else if (PlayerInfo[playerid][pRank] == 5) { rtext = "ABC Manager"; }
				else if (PlayerInfo[playerid][pRank] == 6) { rtext = "Network Producer"; }
				else { rtext = "Intern Worker"; }
				format(string, sizeof(string), "[ABC News] %s %s: %s", rtext, GN(playerid), result);
				OOCNews(COLOR_NEWS, string);
				PlayerInfo[playerid][pNewsSkill] ++;
				if (PlayerInfo[playerid][pNewsSkill] == 50)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang nha bao cua ban da dat level 2, ban se co the lai may bay va live som thoi.");
				}
				else if (PlayerInfo[playerid][pNewsSkill] == 100)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang nha bao cua ban da dat level 3, ban se co the lai may bay va live som thoi.");
				}
				else if (PlayerInfo[playerid][pNewsSkill] == 200)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang nha bao cua ban da dat level 4, ban da co the su dung may bay cua to chuc.");
				}
				else if (PlayerInfo[playerid][pNewsSkill] == 400)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "* Ki nang nha bao cua ban da dat level 5, ban da co the phong van truc tiep nhung nguoi ma ban muon.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la phat thanh vien !");
		}
	}//not connected
	return 1;
}
CMD:live(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if (TalkingLive[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* Truc tiep cham dut.");
				SendClientMessage(TalkingLive[playerid], COLOR_WHITE, "* Truc tiep cham dut.");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(TalkingLive[playerid], 1);
				TalkingLive[TalkingLive[playerid]] = 255;
				TalkingLive[playerid] = 255;
				return 1;
			}
			if (PlayerInfo[playerid][pNewsSkill] < 50)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ki nang cua ban con thap de co the noi chuyen truc tiep voi moi nguoi !");
				return 1;
			}
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /live [playerid/Ten]");
				
			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu live voi chinh minh!"); return 1; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "* Ban de nghi %s co mot cuoc hoi thoai truc tiep.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s de nghi ban co mot cuoc hoi thoai truc tiep, go (/accept live) de chap nhan.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LiveOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Ban dang o xa nguoi choi do !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ID/Ten khong hop le !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la phat thanh vien !");
		}
	}//not connected
	return 1;
}
CMD:selldrugs(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] != 4)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la ke buon thuoc phien!");
			return 1;
		}
		new playa, giveplayer[50], string[256], money, needed;
		if (sscanf(params, "uii", playa, needed, money))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /selldrugs [playerid/Ten] [So luong] [Gia]");

		if (needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Grams khong the duoi 1, hoac tren 99!"); return 1; }
		if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, hoac tren 99999!"); return 1; }
		if (needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   Khong du thuoc tren nguoi !"); return 1; }
		if (IsPlayerConnected(playa))
		{
			if (playa != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, playa))
				{
					if (playa == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Khong the ban cho chinh minh!");
						return 1;
					}
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi %s mua %d gram thuoc cho $%d .", giveplayer, needed, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Ke buon thuoc %s muon ban cho ban %d gram cho $%d, (go /accept drugs) de mua.", GN(playerid), needed, money);
					SendClientMessage(playa, COLOR_WHITE, string);
					DrugOffer[playa] = playerid;
					DrugPrice[playa] = money;
					DrugGram[playa] = needed;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang offline.");
		}
	}
	return 1;
}
CMD:banthuoc(playerid, params[]) { return cmd_selldrugsto(playerid, params); }
CMD:selldrugsto(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		//if (PlayerInfo[playerid][pJob] != 20)
		//{
		//	SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la de buon lau thuoc!");
		//	return 1;
		//}
		//if (!PlayerToPoint(15.0, playerid, 1484.3933, -1731.2124, 6.7213))
		//{
		//	SendClientMessage(playerid, COLOR_GREY, "   Ban khong o cho den!");
		//	return 1;
		//}
		new playa, giveplayer[50], string[256], money, needed;
		if (sscanf(params, "uii", playa, needed, money))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /selldrugsto [playerid/Ten] [So luong] [Gia]");

		if (needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Grams khong the duoi 1, hoac tren 99!"); return 1; }
		if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, hoac tren 99999!"); return 1; }
		if (needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   Ban khong co du thuoc trong nguoi !"); return 1; }
		if (IsPlayerConnected(playa))
		{
			if (playa != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, playa))
				{
					if (playa == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Khong the ban thuoc cho chinh minh!");
						return 1;
					}
					if (PlayerInfo[playa][pJob] != 4)
					{
						SendClientMessage(playerid, COLOR_GREY, "Ban chi co the ban thuoc cho nhung ke buon thuoc!");
						return 1;
					}
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* Ban de nghi %s mua %d gram thuoc cho $%d .", giveplayer, needed, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Ke buon lau thuoc %s muon ban cho ban %d gram cho $%d, (go /accept drugs) de mua.", GN(playerid), needed, money);
					SendClientMessage(playa, COLOR_WHITE, string);
					DrugOffer[playa] = playerid;
					DrugPrice[playa] = money;
					DrugGram[playa] = needed;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang offline.");
		}
	}
	return 1;
}
/*if(strcmp(cmdtext, "/usedrugs", true) == 0)
{
if(IsPlayerConnected(playerid))
{
if(PlayerBoxing[playerid] > 0)
{
SendClientMessage(playerid, COLOR_GREY, "   Cant use Drugs while you are fighting !");
return 1;
}
if(UsingDrugs[playerid] == 1)
{
SendClientMessage(playerid, COLOR_GREY, "   You are high already !");
return 1;
}
if(PlayerInfo[playerid][pDrugs] > 1)
{
PlayerStoned[playerid] += 1;
if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
new Float:PlayersArmour;
GetPlayerArmour(playerid, PlayersArmour);
if(PlayerInfo[playerid][pDrugPerk] > 0)
{
SetPlayerArmour(playerid, PlayersArmour + 10.0);
}
SendClientMessage(playerid, COLOR_GREY, "   2 Drug Grams used !");
PlayerInfo[playerid][pDrugs] -= 2;
SetPlayerArmour(playerid, PlayersArmour + 6.0);
SetPlayerWeather(playerid, -68);
UsingDrugs[playerid] = 1;
//SetTimer("DrugEffectGone", 25000, 0);
SetTimerEx("DrugEffectGone", 25000, false, "i", playerid);
if(STDPlayer[playerid]==1)
{
STDPlayer[playerid] = 0;
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are no longer infected with a STD anymore because of the Drugs !");
}
else if(STDPlayer[playerid]==2)
{
STDPlayer[playerid] = 1;
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Chlamydia because of the Drugs !");
}
else if(STDPlayer[playerid]==3)
{
STDPlayer[playerid] = 2;
SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Gonorrhea because of the Drugs !");
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You dont have any Drug Grams left !");
}
}//not connected
return 1;
}*/
CMD:sudungthuoc(playerid, params[]) { return cmd_usedrugs(playerid, params); }
CMD:usedrugs(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerBoxing[playerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Khong the su dung thuoc khi dang danh nhau !");
			return 1;
		}
		if (UsingDrugs[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "   Ban dang be !");
			return 1;
		}
		new x_nr[256], string[256];
		if (sscanf(params, "s[256]", x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /usedrugs [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: weed, heroin");
			return 1;
		}
		if (strcmp(x_nr, "weed", true) == 0)
		{
			if (PlayerInfo[playerid][pDrugs] > 1)
			{
				PlayerStoned[playerid] += 1;
				if (PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
				new Float:PlayersArmour;
				GetPlayerArmour(playerid, PlayersArmour);
				if (PlayerInfo[playerid][pDrugPerk] > 0)
				{
					SetPlayerArmour(playerid, PlayersArmour + 10.0);
				}
				PlayerInfo[playerid][pDrugs] -= 2;
				SetPlayerArmour(playerid, PlayersArmour + 10.0);
				SetPlayerWeather(playerid, -68);
				UsingDrugs[playerid] = 1;
				SetTimerEx("DrugEffectGone", 25000, false, "i", playerid);
				
				format(string, sizeof(string), "* %s takes some weed from his jacket and starts smoking.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
				if (STDPlayer[playerid] == 1)
				{
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da khong con bi nhiem STD nua boi vi thuoc !");
				}
				else if (STDPlayer[playerid] == 2)
				{
					STDPlayer[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da bi giam tu STD den Chlamydia boi vi thuoc !");
				}
				else if (STDPlayer[playerid] == 3)
				{
					STDPlayer[playerid] = 2;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da bi giam tu STD den benh lau boi vi thuoc !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong con thuoc trong nguoi !");
			}
		}
		else if (strcmp(x_nr, "heroin", true) == 0)
		{
			if (PlayerInfo[playerid][pDrugs] > 2)
			{
				PlayerStoned[playerid] += 1;
				if (PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
				new Float:PlayersArmour;
				GetPlayerArmour(playerid, PlayersArmour);
				if (PlayerInfo[playerid][pDrugPerk] > 0)
				{
					SetPlayerArmour(playerid, PlayersArmour + 15.0);
				}
				PlayerInfo[playerid][pDrugs] -= 3;
				SetPlayerArmour(playerid, PlayersArmour + 15.0);
				SetPlayerWeather(playerid, -30);
				UsingDrugs[playerid] = 1;
				SetTimerEx("DrugEffectGone", 25000, false, "i", playerid);
				
				format(string, sizeof(string), "* %s uses some heroin.", GN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				if (STDPlayer[playerid] == 1)
				{
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da khong con bi nhiem STD nua boi vi thuoc !");
				}
				else if (STDPlayer[playerid] == 2)
				{
					STDPlayer[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da bi giam tu STD den Chlamydia boi vi thuoc !");
				}
				else if (STDPlayer[playerid] == 3)
				{
					STDPlayer[playerid] = 2;
					SendClientMessage(playerid, COLOR_WHITE, "* Ban da bi giam tu STD den benh lau boi vi thuoc !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong con thuoc trong nguoi !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Su dung: /usedrugs [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Availible names: weed, heroin");
		}
	}
	return 1;
}
CMD:healme(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerToPoint(3, playerid, 349.5560, 161.6693, 1019.9912) || PlayerToPoint(3, playerid, 2029.5945, -1404.6426, 17.2512))
		{
			if (STDPlayer[playerid] > 0)
			{
				STDPlayer[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "* Ban da khong con mac benh STD nua boi vi su giup do cua benh vien !");
				SafeGivePlayerMoney(playerid, -200);
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Doctor: Don dieu tri cua ban bao gom $200,-. Chuc mot ngay tot dep!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban khong co STD de dieu tri !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong o benh vien !");
		}
	}
	return 1;
}
CMD:moiraxe(playerid, params[]) { return cmd_eject(playerid, params); }
CMD:eject(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new pstate;
		if (IsPlayerInAnyVehicle(playerid))
		{
			pstate = GetPlayerState(playerid);
			if (pstate != PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the da dit nguoi khac ra khoi xe khi ban cam lai !");
				return 1;
			}
			new playa, giveplayer[50], string[256], test;
			if (sscanf(params, "u", playa))
				return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /eject [playerid/Ten]");

			test = GetPlayerVehicleID(playerid);
			if (IsPlayerConnected(playa))
			{
				if (playa != INVALID_PLAYER_ID)
				{
					if (playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu da dit ban than!"); return 1; }
					if (IsPlayerInVehicle(playa, test))
					{
						new PName[MAX_PLAYER_NAME];
						GetPlayerName(playerid, PName, sizeof(PName));
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Ban da da dit %s ra khoi!", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Ban da bi da dit ra khoi xe boi %s !", PName);
						SendClientMessage(playa, COLOR_WHITE, string);
						RemovePlayerFromVehicle(playa);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o tren xe cua ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " ID/Ten khong hop le !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban can phai tren xe de dung lenh nay !");
		}
	}
	return 1;
}
CMD:sex(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] == 3)
		{
			if (!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Ban chi co the sex tren xe !");
				return 1;
			}
			new Car = GetPlayerVehicleID(playerid);
			new giveplayerid, giveplayer[50], string[256], money;
			if (sscanf(params, "u", giveplayerid, money))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /sex [playerid/Ten] [Gia]");

			if (money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Gia tien khong the duoi 1, va tren 99999!"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ban khong the sex voi chinh minh!"); return 1; }
						if (IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							format(string, sizeof(string), "* Ban de nghi %s Sex voi you, cho $%d.", giveplayer, money);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Gai mai dam / trai bao %s da de nghi ban sex voi co/anh ay, cho $%d (go /accept sex) de chap nhan.", GN(playerid), money);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							SexOffer[giveplayerid] = playerid;
							SexPrice[giveplayerid] = money;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Ban va doi tac phai cung o tren xe !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi khong o gan ban !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang offline !");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Ban khong phai la gai mai dam / trai bao !");
		}
	}//not connected
	return 1;
}
CMD:wanted(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new string[256], giveplayer[50];
		if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
		{
			new x;
			SendClientMessage(playerid, COLOR_GREEN, "Toi Pham Hien Tai:");
			for (new i = 0; i < MAX_PLAYERS; i++) {
				if (IsPlayerConnected(i))
				{
					if (WantedLevel[i] > 1)
					{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s%s: %d", string, giveplayer, WantedLevel[i]);
						x++;
						if (x > 3) {
							SendClientMessage(playerid, COLOR_YELLOW, string);
							x = 0;
							format(string, sizeof(string), "");
						}
						else {
							format(string, sizeof(string), "%s, ", string);
						}
					}
				}
			}
			if (x <= 3 && x > 0) {
				string[strlen(string) - 2] = '.';
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   You're not a Cop / FBI / National Guard !");
		}
	}//not connected
	return 1;
}
/*if(strcmp(cmd, "/dropcar", true) == 0)
{
if(IsPlayerConnected(playerid))
{
if(PlayerInfo[playerid][pJob] == 5)
{
if(PlayerOnMission[playerid] > 0)
{
SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
return 1;
}
if(PlayerInfo[playerid][pCarTime] == 0)
{
GameTextForPlayer(playerid, "~w~Car Selling ~n~~r~Drop the car at the Crane", 5000, 1);
CP[playerid] = 1;
SetPlayerCheckpoint(playerid, -1548.3618,123.6438,3.2966,8.0);
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You already Dropped a car, wait till your reload time is over !");
}
}
else
{
SendClientMessage(playerid, COLOR_GREY, "   You are not a Car Jacker !");
}
}//not connected
return 1;
}*/
CMD:quitjob(playerid, params[])
{
	//new string[256];
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJob] > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Ban da bo viec thanh cong!");
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pChar] = 0;
			/*if (PlayerInfo[playerid][pDonateRank] > 0)
			{
				if (PlayerInfo[playerid][pContractTime] >= 2)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You already forfilled your 1 hour Contract, and quited your Job.");
					PlayerInfo[playerid][pJob] = 0;
					PlayerInfo[playerid][pChar] = 0;
					PlayerInfo[playerid][pContractTime] = 0;
				}
				else
				{
					new chours = 2 - PlayerInfo[playerid][pContractTime];
					format(string, sizeof(string), "* You still have %d hours left to forfill and end your Contract.", chours / 2);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pContractTime] >= 10)
				{
					SendClientMessage(playerid, COLOR_WHITE, "* You already forfilled your 5 hour Contract, and quited your Job.");
					PlayerInfo[playerid][pJob] = 0;
					PlayerInfo[playerid][pChar] = 0;
					PlayerInfo[playerid][pContractTime] = 0;
				}
				else
				{
					new chours = 10 - PlayerInfo[playerid][pContractTime];
					format(string, sizeof(string), "* You still have %d hours left to forfill and end your Contract.", chours / 2);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}*/
		}
		else SendClientMessage(playerid, COLOR_GREY, "   You don't even have a Job !");
		
	}//not connected
	return 1;
}
CMD:bail(playerid, params[])
{
		 new string[256];
	if (IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pJailed] == 1)
		{
			if (JailPrice[playerid] > 0)
			{
				if (GetPlayerMoney(playerid) > JailPrice[playerid])
				{
					format(string, sizeof(string), "You bailed yourself out for: $%d", JailPrice[playerid]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SafeGivePlayerMoney(playerid, -JailPrice[playerid]);
					JailPrice[playerid] = 0;
					WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
					PlayerInfo[playerid][pJailTime] = 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   You can't afford the Bail Price !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You don't have a Bail Price !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   You are not in Jail !");
		}
	}//not connected
	return 1;
}
CMD:clear(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new member = PlayerInfo[playerid][pMember];
		new leader = PlayerInfo[playerid][pLeader];
		new rank = PlayerInfo[playerid][pRank];
		if (gTeam[playerid] == TEAMGOV)
		{
			if (!PlayerToPoint(3.0, playerid, 253.9280, 69.6094, 1003.6406))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are to not inside the Police Station!");
				return 1;
			}
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /clear [playerid/PartOfName]");

			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Clear yourself!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s.", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Officer %s has cleared your Records and Wanted Points.", GN(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					ClearCrime(giveplayerid);
					if (gTeam[giveplayerid] == TEAMVILLAIN)
					{
						gTeam[giveplayerid] = TEAMCIVILLAIN;
						SetPlayerToTeamColor(giveplayerid);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name!");
			}
		}
		else if (member == 6 || leader == 6)
		{
			new giveplayerid, giveplayer[50], string[256];
			if (sscanf(params, "u", giveplayerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /clear [playerid/PartOfName]");

			if (IsPlayerConnected(giveplayerid))
			{
				if (giveplayerid != INVALID_PLAYER_ID)
				{
					if (giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Clear yourself!"); return 1; }
					if (rank < 4) { SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 to clear someone's Wanted Points + Records !"); return 1; }
					if (GetPlayerMoney(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "   You need $5000 to Clear your Family Member !"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					
					if (member > 0)
					{
						if (PlayerInfo[giveplayerid][pMember] != member)
						{
							SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
							return 1;
						}
						format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s for $5000.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Family Member %s with Rank %d, has cleared your Records and Wanted Points.", GN(playerid), rank);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
					}
					else if (leader > 0)
					{
						if (PlayerInfo[giveplayerid][pMember] != leader)
						{
							SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
							return 1;
						}
						format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s for $5000.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Family Leader %s, has cleared your Records and Wanted Points.", GN(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
					}
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					ClearCrime(giveplayerid);
					SafeGivePlayerMoney(playerid, -5000);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not an Cop / FBI / National Guard / Family Member !");
		}
	}//not connected
	return 1;
}
CMD:vephat(playerid, params[]) { return cmd_ticket(playerid, params); }
CMD:ticket(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (gTeam[playerid] != TEAMGOV)
		{
			SendClientMessage(playerid, COLOR_GREY, "       Ban khong phai la canh sat!");
			return 1;
		}
		if (OnDuty[playerid] != 1 && PlayerInfo[playerid][pMember] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not on Duty!");
			return 1;
		}
		new giveplayerid, giveplayer[50], string[256], moneys, result[128];
		if (sscanf(params, "uis[128]", giveplayerid, moneys, result))
			return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /ticket [playerid/PartOfName] [price] [reason]");

		if (moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Ticket Money can't be below 1 or higher then 99999 !"); return 1; }
		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You gave %s a Ticket costing $%d, reason: %s", giveplayer, moneys, (result));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Si quan %s da dua cho ban ve phat $%s, ly do: %s", GN(playerid), moneys, (result));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					SendClientMessage(giveplayerid, COLOR_WHITE, "Go /chapnhan ticket, de chap nhan no.");
					TicketOffer[giveplayerid] = playerid;
					TicketMoney[giveplayerid] = moneys;
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nguoi choi dang Offline !");
			return 1;
		}
	}
	return 1;
}
CMD:batgiam(playerid, params[]) { return cmd_arrest(playerid, params); }
CMD:arrest(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		if (gTeam[playerid] == TEAMGOV || IsACop(playerid))
		{
			if (OnDuty[playerid] != 1 && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 ||
				PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17))
				return SendClientMessage(playerid, COLOR_GREY, "   Ban chua onduty!");
				
			/*if(!PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391) || !PlayerToPoint(15.0, playerid,1537.2515,-1674.9572,13.3828))
			{// Jail spot
			SendClientMessage(playerid, COLOR_GREY, "   You are not near the Jail, can't Arrest!");
			return 1;
			}*/

			new string[256], moneys, time, bail, bailprice, giveplayer[50];
			if (sscanf(params, "iiii", moneys, time, bail, bailprice))
				return SendClientMessage(playerid, COLOR_GRAD2, "Su dung: /arrest [price] [time (minutes)] [Bail (0=khong 1=co)] [bailprice]");

			if (moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Tien phat khong the nho hon $1 hoac lon hon $99999!"); return 1; }
			if (time < 1 || time > 60) { SendClientMessage(playerid, COLOR_GREY, "   Thoi gian jail khong the nho hon 1 hoac lon hon 60 (Hay giam tu nhan o Prison)!"); return 1; }
			if (bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Bail 1 de cho phep chuoc, 0 de khong cho phep chuoc"); return 1; }
			if (bailprice < 0 || bailprice > 3000000) { SendClientMessage(playerid, COLOR_GREY, "   Tien chuoc khong duoc nho hon $0 hoac lon hon $3000000!"); return 1; }
			new suspect = GetClosestPlayer(playerid);
			if (IsPlayerConnected(suspect))
			{
				if (GetDistanceBetweenPlayers(playerid, suspect) < 5)
				{
					GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
					new id = GetClosestCell(playerid);
					new jailtype = 0;
					if (PlayerToPoint(6.0, playerid, 268.3327, 77.8972, 1001.0391) || PlayerToPoint(6.0, playerid, 1528.9080, -1678.0759, 5.8906))
					{
						if (time > 20) return SCM(playerid, COLOR_GREY, "Nguc PD chi co the giam tu 1-20 phut");
						if (WantedLevel[suspect] < 1 || WantedLevel[suspect] > 2)
						{
							//SendClientMessage(playerid, COLOR_GREY, "Nguoi choi kia khong pham toi!");
							SendClientMessage(playerid, COLOR_GREY, "Nguc PD chi co the bat giam toi pham 1-2 sao!");
							return 1;
						}
						jailtype = 1;
					}
					else if (id != -1)
					{
						if (time < 20 || time >60) return SCM(playerid, COLOR_GREY, "Nguc DoC chi co the giam tu 20-60 phut");
						if (PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17)
							return SCM(playerid, COLOR_GREY, "Chi co DoC moi co the bat giam o day.");
						if (WantedLevel[suspect] < 3 || WantedLevel[suspect] > 4)
						{
							//SendClientMessage(playerid, COLOR_GREY, "Nguoi choi kia khong pham toi!");
							SendClientMessage(playerid, COLOR_GREY, "Nguc DoC chi co the bat giam toi pham 3-4 sao!");
							return 1;
						}
						jailtype = 2;
					}
					else
					{
						SCM(playerid, COLOR_GREY, "Ban khong dung o noi bat giam.");
						return 1;
					}

					format(string, sizeof(string), "* Ban da bat giam %s!", giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SafeGivePlayerMoney(suspect, -moneys);
					format(string, sizeof(string), "Bi bat giam boi %s ~n~    Tien phat $%d", GN(playerid), moneys);
					GameTextForPlayer(suspect, string, 5000, 5);
					SafeResetPlayerWeapons(suspect);
					if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						new currank[64];
						if (PlayerInfo[playerid][pRank] == 1) { currank = "Cadet"; }
						else if (PlayerInfo[playerid][pRank] == 2) { currank = "Police Officer"; }
						else if (PlayerInfo[playerid][pRank] == 3) { currank = "Corporal"; }
						else if (PlayerInfo[playerid][pRank] == 4) { currank = "Sergeant"; }
						else if (PlayerInfo[playerid][pRank] == 5) { currank = "Lieutenant"; }
						else if (PlayerInfo[playerid][pRank] == 6) { currank = "Captain"; }
						else if (PlayerInfo[playerid][pRank] == 7) { currank = "Deputy Chief"; }
						else if (PlayerInfo[playerid][pRank] == 8) { currank = "Chief"; }
						else { currank = "Cadet"; }
						format(string, sizeof(string), "[Police] %s %s da bat giam %s", currank, GN(playerid), giveplayer);
						OOCNews(COLOR_BLUE, string);
					}
					else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
						format(string, sizeof(string), "[Police] Dac Vu FBI %s da bat giam %s", GN(playerid), giveplayer);
						OOCNews(COLOR_BLUE, string);
					}
					else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					{
						format(string, sizeof(string), "[Police] Nhan Vien DoC %s da bat giam %s", GN(playerid), giveplayer);
						OOCNews(COLOR_BLUE, string);
					}

					if (jailtype == 1)
					{
						SetPlayerInterior(suspect, 6);
						SetPlayerPos(suspect, 264.6288, 77.5742, 1001.0391);
						PlayerInfo[suspect][pJailTime] = time * 60;
					}
					else if (jailtype == 2)
					{
						SetPlayerSkin(suspect, 50);
						SetPlayerInterior(suspect, 6);
						PlayerInfo[suspect][pInt] = 6;
						PlayerInfo[suspect][pJailTime] = time * 60;
						SetPlayerPos(suspect, DocArrestIn[id][0], DocArrestIn[id][1], DocArrestIn[id][2]);
					}
					if (bail == 1)
					{
						JailPrice[suspect] = bailprice;
						format(string, sizeof(string), "Ban da bi bo tu trong %d giay. Tien chuoc: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
						SendClientMessage(suspect, COLOR_WHITE, string);
					}
					else
					{
						JailPrice[suspect] = 0;
						format(string, sizeof(string), "Ban da bi bo tu trong %d giay. Tien chuoc: Khong cho phep", PlayerInfo[suspect][pJailTime]);
						SendClientMessage(suspect, COLOR_WHITE, string);
					}
					PlayerInfo[suspect][pJailed] = (jailtype == 1) ? 1 : 3;
					if (PlayerInfo[suspect][pJailed] == 3)
						PlayerInfo[suspect][pJailRoom] = id;
					PlayerInfo[suspect][pArrested] += 1;
					TogglePlayerControllable(suspect, 1);
					PlayerCuffed[suspect] = 0;
					SetPlayerFree(suspect, playerid, "Ban da bi bat");
					WantedPoints[suspect] = 0;
					WantedLevel[suspect] = 0;
					WantLawyer[suspect] = 1;
				}//distance
			}//not connected
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Doi tuong bat giam khong o gan.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI!");
			return 1;
		}
	}//not connected
	return 1;
}
CMD:doipg(playerid, params[]) { return cmd_doiphonggiam(playerid, params); }
CMD:doiphonggiam(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17) return SCM(playerid, COLOR_GREY, "Ban khong phai nhan vien DoC.");
	new suspect = GetClosestPlayer(playerid);
	if (suspect == INVALID_PLAYER_ID || PlayerInfo[suspect][pJailed] == 0) return SCM(playerid, COLOR_GREY, "Khong co tu nhan nao dung gan ban.");
	new idroom = GetClosestCell(playerid);
	if (idroom == -1) return SCM(playerid, COLOR_GREY, "Ban khong dung gan phong giam nao.");
	SetPlayerSkin(suspect, 50);
	SetPlayerInterior(suspect, 6);
	SetPlayerPos(suspect, DocArrestIn[idroom][0], DocArrestIn[idroom][1], DocArrestIn[idroom][2]);
	PlayerInfo[suspect][pJailRoom] = idroom;
	PlayerInfo[suspect][pInt] = 6;
	SCM(playerid, COLOR_LIGHTBLUE, "# Ban da chuyen tu nhan sang phong nay thanh cong.");
	SCM(suspect, COLOR_LIGHTBLUE, "# Ban da bi chuyen sang phong tu nay.");
	return 1;
}
CMD:mophonggiam(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17)
		return SCM(playerid, COLOR_GREY, "Ban khong phai nhan vien DoC.");
	if (!IsPlayerInRangeOfPoint(playerid, 4, 2584.6189, -1494.7810, -45.2369))
		return SCM(playerid, COLOR_GREY, "Ban phai dung o phong dieu khien.");
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gType] == DOCCELL)
			MoveGate(i, 1);
	}
	SendTeamMessage(17, COLOR_LIGHTBLUE, "[Phong Dieu Khien] Tat ca cua phong giam da duoc mo.");
	return 1;
}
CMD:dongphonggiam(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17)
		return SCM(playerid, COLOR_GREY, "Ban khong phai nhan vien DoC.");
	if (!IsPlayerInRangeOfPoint(playerid, 4, 2584.6189, -1494.7810, -45.2369))
		return SCM(playerid, COLOR_GREY, "Ban phai dung o phong dieu khien.");
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gType] == DOCCELL)
			MoveGate(i, 2);
	}
	SendTeamMessage(17, COLOR_LIGHTBLUE, "[Phong Dieu Khien] Tat ca cua phong giam da duoc dong.");
	return 1;
}
CMD:hopdong(playerid, params[]) { return cmd_contract(playerid, params); }
CMD:contract(playerid, params[])
{
	if (IsPlayerConnected(playerid))
	{
		new giveplayerid, moneys, string[256];
		if (sscanf(params, "ui", giveplayerid, moneys)) return SendClientMessage(playerid, COLOR_GRAD1, "Su dung: /contract [playerid/PartOfName] [amount]");

		if (moneys < 1000 || moneys > 100000) return SendClientMessage(playerid, COLOR_GREY, "   Contract money must be atleast $1000, and not more then $100000!");
		if (PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "You must be level 3 to place a Contract.");
		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (PlayerInfo[giveplayerid][pMember] == 8 && PlayerInfo[playerid][pMember] == 8)
					return SendClientMessage(playerid, COLOR_GREY, "   Cannot place Contracts on your own Agency!");

				else if (PlayerInfo[giveplayerid][pLeader] == 8 && PlayerInfo[playerid][pMember] == 8)
					return SendClientMessage(playerid, COLOR_GREY, "   Cannot place Contracts on your own Agency!");

				else if (PlayerInfo[giveplayerid][pMember] == 8 || PlayerInfo[giveplayerid][pLeader] == 8)
					return SendClientMessage(playerid, COLOR_GREY, "   Khong the thuc hien hop dong !");

				if (gTeam[giveplayerid] == TEAMGOV && moneys != 100000)
					return SendClientMessage(playerid, COLOR_GREY, "   Only $100000 can be placed as a Contract on Cops !");

				if (giveplayerid == playerid) 
					return SendClientMessage(playerid, COLOR_GREY, "Ban khong the hop dong ban than!");

				new playermoney;
				playermoney = GetPlayerMoney(playerid);
				if (moneys > 0 && playermoney >= moneys)
				{
					SafeGivePlayerMoney(playerid, (0 - moneys));
					PlayerInfo[giveplayerid][pHeadValue] += moneys;
					format(string, sizeof(string), "%s da dat mot hop dong voi %s, muc gia $%d.", GN(playerid), GN(giveplayerid), moneys);
					SendFamilyMessage(8, COLOR_YELLOW, string);
					format(string, sizeof(string), "Ban da dat mot hop dong voi %s, chi phi: $%d.", GN(giveplayerid), moneys);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				else SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
			}
		}
		else
		{
			format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
	}
	return 1;
}
CMD:exit(playerid, params[])
{
		if (!IsPlayerConnected(playerid)) return 1;
		for (new i = 0; i < MAX_HOUSES; i++)
		{
			if (PlayerToPoint(3, playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				//new house = PlayerInfo[playerid][pPhousekey];
				/*
				if(PlayerInfo[playerid][pLocal] == house)
				{
				SetPlayerInterior(playerid,0);
				SetVirtualWorld(playerid,0);
				SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				HouseEntered[playerid] = 255;
				}
				*/
				if (PlayerInfo2[HouseEntered][playerid] == i)
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
					SetCameraBehindPlayer(playerid);
					SetVirtualWorld(playerid, 0);
					PlayerInfo2[HouseEntered][playerid] = 255;
					/*if (HouseInfo[i][hHel] == 1)
					{
						new Float:temphealz;
						GetPlayerHealth(playerid, temphealz);
						if (temphealz < 100)
							SetPlayerHealth(playerid, 100);
					}*/
					return 1;
				}
			}
		}
		for (new i = 0; i < sizeof(BizzInfo); i++)
		{
			//printf("Bizz :%d",i);
			if (PlayerToPoint(3, playerid, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
			{
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPos(playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
				PlayerInfo[playerid][pLocal] = 255;
				return 1;
			}
		}
		new carid;
		carid = GetPlayerVehicleID(playerid);
		if (IsABus(carid))
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
				BusrouteEnd(playerid, carid);
		}
		else if (IsASweeper(carid))
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}
		else if (IsAHarvest(carid))
		{
			if (carid != 0)
				SetVehicleToRespawn2(carid);
			if (FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				FarmerPickup[playerid][0]--;

			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			FarmerVar[playerid] = 0;
			DisableCheckpoint(playerid);
		}
		else if (IsADrugHarvest(carid))
		{
			if (carid != 0)
				SetVehicleToRespawn2(carid);

			if (DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
				DrugFarmerPickup[playerid][0]--;

			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			DrugFarmerVar[playerid] = 0;
			DisableCheckpoint(playerid);
		}
		else if (IsASmuggleCar(carid))
		{
			if (carid != 0)
				SetVehicleToRespawn2(carid);

			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			SmugglerWork[playerid] = 0;
			DisableCheckpoint(playerid);
		}
		else if (IsAnOwnableCar(carid) && CarInfo[carid][cOwned] == 0)
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}
		else if (IsPlayerInAnyVehicle(playerid) && !engineOn[GetPlayerVehicleID(playerid)] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}
		else if (GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130 || GetPlayerVehicleID(playerid) >= 135 && GetPlayerVehicleID(playerid) <= 154)
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}
		else if (PlayerToPoint(3.0, playerid, 387.7978, 173.8582, 1008.3828))
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1481.0206, -1771.1138, 18.7958);
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
		}
		else if (PlayerToPoint(6.0, playerid, -1404.5299, -259.0602, 1043.6563))
		{
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2695.6235, -1704.6960, 11.8438);
		}
		else if (PlayerToPoint(8.0, playerid, -1443.0554, -581.1879, 1055.0472))
		{
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -2111.5686, -443.9720, 38.7344);
		}
		else if (PlayerToPoint(8.0, playerid, -1464.7732, 1557.5533, 1052.5313))
		{
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -2080.3079, -406.0309, 38.7344);
		}
		else if (NoFuel[playerid] == 1)
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			NoFuel[playerid] = 0;
		}
		return 1;
}
//../pawno/include/ProjectInc/ontimer.inc TM
timer CheckHitGate[350](playerid)
{
	new Float:x, Float:y, Float:z, Float:distance;
	GetPlayerPos(playerid, x, y, z);
	GetXYInFrontOfPlayer(playerid, x, y, 0.5);
	//SetPlayerCheckpoint(playerid, x, y, z, 0.5);
	//SetPVarInt(playerid, "FORTESTING", 1);
	for (new i = 0; i < MAX_GATES; i++)
	{
		if (GateInfo[i][gObject] == INVALID_PLAYER_ID) continue;
		if (GateInfo[i][gMoved] == 0)
			distance = GetDistanceBetweenPointsXY(x, y, GateInfo[i][StartX], GateInfo[i][StartY]);
		else distance = GetDistanceBetweenPointsXY(x, y, GateInfo[i][EndX], GateInfo[i][EndY]);
		//printf("distance: %f", distance);
		if (distance < 1.5 && IsHitObjectWeaponID(GetPlayerWeapon(playerid)))
		{
			OnPlayerHitGate(playerid, GetPlayerWeapon(playerid), i);
			break;
		}
	}
	defer ClearHitGate(playerid);
	return 1;
}
timer ClearHitGate[380](playerid)
{
	SetPVarInt(playerid, "DelayHitAnim", 0);
	return 1;
}
task AntiCheat[100]()
{
	foreach(new vehid : Vehicle)
	{
		new Float:newhealth;
		GetVehicleHealth(vehid, newhealth);
		if (newhealth > CarHealthCheat[vehid])
		{
			SetVehicleHealth(vehid, CarHealthCheat[vehid]);
			new driverid = GetVehicleDriverID(vehid);
			if (driverid != -1)
				CarCheatAttemping[driverid]++;
		}
		else if (newhealth < CarHealthCheat[vehid])
		{
			GetVehicleHealth(vehid, CarHealthCheat[vehid]);
			GetVehicleDamageStatus(vehid, CarRepairCheat[vehid][0], CarRepairCheat[vehid][1], CarRepairCheat[vehid][2], CarRepairCheat[vehid][3]);
		}

		if (CarRepairCheat[vehid][0] != 0)
			CheckHackRepairCar(vehid);

		if (engineOn[vehid] == 1)
			CheckVehicleInNails(vehid);
	}
	foreach(new i: Player)
	{
		new delaytime = GetPVarInt(i, "DelayHackMoney");
		if (delaytime > 0)
		{
			delaytime--;
			SetPVarInt(i, "DelayHackMoney", delaytime);
		}
		if (IsLogOn(i) && PlayerInfo[i][pAdmin] < 1)
		{
			//Check Hack Money
			new pmoney = GetPlayerMoney(i);
			if (pmoney > ScriptMoney[i] && pmoney > 0)
			{
				/*printf("--===--");
				printf("[%d] Now Money: %s$", i, AddCommas(pmoney));
				printf("[%d] Script Money: %s$", i, AddCommas(ScriptMoney[i]));*/
				new fuckmoney = pmoney - ScriptMoney[i];
				new finemoney = (ScriptMoney[i] / 2);
				new finebmoney = (PlayerInfo[i][pAccount] / 2);
				if (ScriptMoney[i] <= 1)
				{
					finemoney = 0;
					ResetPlayerMoney(i);
					if (ScriptMoney[i] == 1) ScriptMoney[i] = 0;
					GivePlayerMoney(i, ScriptMoney[i]);
				}
				else
				{
					GivePlayerMoney(i, -fuckmoney);
					SafeGivePlayerMoney(i, -finemoney, false);
				}

				if (PlayerInfo[i][pAccount] <= 1)
					PlayerInfo[i][pAccount] = 0;
				else SafeGivePlayerMoney(i, -finebmoney, false, 2);

				if (GetPVarInt(i, "DelayHackMoney") == 0)
				{
					new strz[128];
					format(strz, sizeof(strz), "AdmCMD: %s hack tien va bi phat mat nua tai san boi SERVER!", GN(i));
					BroadCast(COLOR_LIGHTRED, strz);
					SetPVarInt(i, "DelayHackMoney", 30);
				}
				/*printf("[%d] Fine Money: %s$", i, AddCommas(finemoney));
				printf("[%d] After Script Money: %s$", i, AddCommas(ScriptMoney[i]));*/
			}

			//Check Hack Weapon
			new weaponid, ammo;
			for (new wid = 0; wid < 13; wid++)
			{
				GetPlayerWeaponData(i, wid, weaponid, ammo);
				if (weaponid != ScriptWeapons[i][wid])
				{
					SetPlayerArmedWeapon(i, 0);
					SafeReGivePlayerWeapon(i);
					break;
				}
			}
		}
	}
	return 1;
}

task SoundZone[1000]()
{
	if (DOCAlarm > 0 && --DOCAlarm == 0)
	{
		foreach(new playerid : Player)
		{
			PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "AlarmPlayed", 0);
		}
	}
}
task ServerBeat[1000]()
{
	foreach(new vehid : Vehicle)
	{
		if (IsAdminVehicle(vehid) == -1 && IsVehicleDamaged(vehid))
		{
			SetVehicleHealthEx(vehid, 390);
			if (engineOn[vehid] != 0)
			{
				VehicleEngine(vehid, false);
				engineOn[vehid] = 0;
			}
		}
	}
	for (new gateid = 0; gateid < MAX_GATES; gateid++)
	{
		if (GateWaitTime[gateid] > 0 && --GateWaitTime[gateid] == 0)
		{
			if(GateInfo[gateid][gMoved] == 1) MoveGate(gateid);
		}
	}
	foreach(new playerid : Player)
	{
		//if (!IsLogOn(playerid)) continue;
		if (GetPVarInt(playerid, "TimeReleaseCuffed") > 0)
		{
			new rtime = GetPVarInt(playerid, "TimeReleaseCuffed");
			rtime--;
			new str[128];
			format(str, sizeof(str), "~r~%d giay~n~~y~de pha cong tay!", rtime);
			GameTextForPlayer(playerid, str, 1000, 4);
			if (rtime == 0)
			{
				new prid = GetPVarInt(playerid, "RCPID");
				format(str, sizeof(str), "* Ban da duoc be tay boi %s.", GN(playerid));
				SendClientMessage(prid, COLOR_WHITE, str);
				format(str, sizeof(str), "* Ban da be cong tay cho %s.", GN(prid));
				SendClientMessage(playerid, COLOR_WHITE, str);
				GameTextForPlayer(prid, "~g~Be cong", 2500, 3);
				TogglePlayerControllable(prid, 1);
				PlayerCuffed[prid] = 0;
				ClearAnimations(playerid);
				ClearAnimations(prid);
				rtime = -1;
				SetPVarInt(playerid, "RCPID", -1);
			}
			SetPVarInt(playerid, "TimeReleaseCuffed", rtime);
		}
		if (GetPVarInt(playerid, "LastHitTime") > 0)
		{
			new hittime = GetPVarInt(playerid, "LastHitTime");
			hittime--;
			if (hittime == 0)
				LastHitGate[playerid] = 0;
			SetPVarInt(playerid, "LastHitTime", hittime);
		}
		if (SearchNails[playerid] == 1)
		{
			new vid = GetPlayerVehicleID(playerid);
			if (!IsPlayerInAnyVehicle(playerid) || !IsASweeper(vid))
			{
				SearchNails[playerid] = 0;
				GameTextForPlayer(playerid, "~r~Che do ra dinh ket thuc", 5000, 4);
				continue;
			}
			new Float:distance, nailid;
			GetNearestNails(playerid, distance, nailid);
			if (distance <= 2)
			{
				if (TimeNails[playerid] == -1)
					TimeNails[playerid] = 6;

				TimeNails[playerid]--;
				new str[128];
				format(str, sizeof(str), "~g~Hut Dinh~n~~y~Thoi Gian: ~b~%d Giay", TimeNails[playerid]);
				GameTextForPlayer(playerid, str, 1000, 4);
				if (TimeNails[playerid] == 0)
				{
					GiveJobReward(playerid, MECHANICREWARD);
					DeleteNail(nailid);
					TimeNails[playerid] = -1;
					format(str, sizeof(str), "~y~Hut Dinh Thanh Cong", TimeNails[playerid]);
					GameTextForPlayer(playerid, str, 1000, 4);
				}
			}
			else if (distance <= (50 + (GetLevelJob(playerid, MECHANICREWARD)*5)))
			{
				new str[128];
				format(str, sizeof(str), "~g~Phat Hien Dinh~n~~y~Khoang Cach: ~b~%0.0fm", distance);
				GameTextForPlayer(playerid, str, 1000, 4);
				TimeNails[playerid] = -1;
			}
		}
		if (DriverLicenseCar[playerid] != INVALID_VEHICLE_ID && DriverLicenseTime[playerid] != 0)
		{
			new Float:health;
			GetVehicleHealth(DriverLicenseCar[playerid], health);
			if (health < 995 || DriverLicenseTime[playerid] > 30 || (GetVehicleSpeed(DriverLicenseCar[playerid], 0) < 5 && DriverLicenseTime[playerid] > 2))
				FailDrivingTest(playerid);
		}
		if (CarCheatAttemping[playerid] > 0 && --CarCheatAttemping[playerid])
		{
			if (CarCheatAttemping[playerid] >= 3)
			{
				new str[128];
				format(str, sizeof(str), "[Hack/Cheat]: %s co tinh su dung hack fix xe va da bi kick.", GN(playerid));
				SendAdminMessage(COLOR_RED, str);
				SCM(playerid, COLOR_LIGHTRED, "Ban da bi kicked vi co tinh su dung hack fix car.");
				KickEx(playerid);
			}
		}
		if (DOCAlarm > 0)
		{
			if (GetPVarInt(playerid, "AlarmPlayed") == 0 && IsPlayerInRangeOfPoint(playerid, 100, 732.5316, -1359.1908, 18.8203))
			{
				PlayerPlaySound(playerid, 3401, 0, 0, 0);
				SetPVarInt(playerid, "AlarmPlayed", 1);
			}
			else if (GetPVarInt(playerid, "AlarmPlayed") == 1 && !IsPlayerInRangeOfPoint(playerid, 100, 732.5316, -1359.1908, 18.8203))
			{
				PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "AlarmPlayed", 0);
			}
		}
		if (WantedLevel[playerid] > 0 && GetPlayerWantedLevel(playerid) != WantedLevel[playerid] && FirstSpawn[playerid] == 0)
		{
			UpdateWantedLevel(playerid);
			SetPlayerWantedLevel(playerid, WantedLevel[playerid]);
		}
		else if (WantedLevel[playerid] == 0 && GetPlayerWantedLevel(playerid) != 0 && FirstSpawn[playerid] == 0)
		{
			UpdateWantedLevel(playerid);
			SetPlayerWantedLevel(playerid, 0);
		}

		if (DOCDelay[playerid] > 0)
			DOCDelay[playerid]--;

		if (DOCCheck[playerid] == 1 && IsPlayerInDynamicArea(playerid, DOCArea))
		{
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			if (pos[2] < DOCAIR)
			{
				new str[128];
				format(str, sizeof(str), "[DoC Camera] Doi tuong %s vua dot nhap vao DoC, cac nhan vien hay mau bat giu doi tuong.", GN(playerid));
				SendRadioMessage(17, COLOR_LIGHTRED, str);
				if (WantedPoints[playerid] == 0) { WantedPoints[playerid] = 3; }
				else { WantedPoints[playerid] += 2; }
				SetPlayerCriminalEx(playerid, 255, "Dot Nhap DoC.");
				DOCAlarm = 1;
				DOCCheck[playerid] = 0;
			}
		}
		if (gPlayerLogged[playerid] == 1)
		{
			format(tdbank, sizeof(tdbank), "Bank$ %s", AddCommas(PlayerInfo[playerid][pAccount]));
			TextDrawSetString(TDPBank[playerid], tdbank);
			TextDrawShowForPlayer(playerid, TDPBank[playerid]);
		}
		if (GetPVarInt(playerid, "DelayWalkingTeleportTime") > 0)
		{
			new time = GetPVarInt(playerid, "DelayWalkingTeleportTime");
			SetPVarInt(playerid, "DelayWalkingTeleportTime", --time);
		}
		if (Trucking[GetPlayerVehicleID(playerid)] == 1 && TruckPos[playerid][0] != 0)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 5, TruckPos[playerid][0], TruckPos[playerid][1], TruckPos[playerid][2]))
				TruckTime[playerid] = 6;
			else
			{
				if (TruckTime[playerid] > 0)
				{
					TruckTime[playerid]--;
					new str[128];
					format(str, sizeof(str), "~y~Giao hang trong ~g~%d~g~ ~y~giay~y~", TruckTime[playerid]);
					GameTextForPlayer(playerid, str, 1000, 4);
					if (TruckTime[playerid] == 0)
					{
						Trucking[GetPlayerVehicleID(playerid)] = 2;
						SetCheckpoint(playerid, 2458.2568, -2077.1592, 13.5469, 5);
						GameTextForPlayer(playerid, "Quay ve de nhan tien!", 4000, 4);
					}
				}
			}
		}
		if (PFind[playerid] != -1)
		{
			if (IsPlayerInDynamicArea(PFind[playerid], LSArea))
				SetPlayerMarkerForPlayer(playerid, PFind[playerid], 0xFF0000FF);
			else
				SetPlayerMarkerForPlayer(playerid, PFind[playerid], 0xFFFFFF00);
		}
		if (AntiCheckpoint[playerid] == 1) 
			AntiCPTime[playerid]++;

		if (CallMedic[playerid] > 0)
			CallMedic[playerid]--;

		if (DyingTimeOut[playerid] > 0)
			DyingTimeOut[playerid]--;

		if (Dying[playerid] == 1 && !IsOnSavePosAmbulance(playerid))
		{
			new AnimLib[32], AnimName[32];
			//if (!IsPlayerInRangeOfPoint(playerid, 3, BTPos[playerid][0], BTPos[playerid][1], BTPos[playerid][2])) NamVien(playerid);
			GetAnimationName(GetPlayerAnimationIndex(playerid), AnimLib, 32, AnimName, 32);
			if (strcmp(AnimName, "KILL_Knife_Ped_Die", true) != 0) ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
			if (DyingTimeOut[playerid] != 0) GameTextForPlayer(playerid, "~r~Ban da bi thuong ~n~~y~Go /dichvu capcuu de goi cuu thuong", 1000, 4);
			else GameTextForPlayer(playerid, "~r~Ban da bi thuong ~n~~y~Go /dichvu capcuu de goi cuu thuong~n~~r~/chapnhan chet ~y~de tu sat", 1000, 4);
		}
		if (Dying[playerid] == 1 && Saving[playerid] > 0)
		{
			new vid = SaveVehicle[playerid];
			if (!IsPlayerInVehicle(Saver[playerid], vid) ||
				!IsPlayerInVehicle(playerid, vid))
			{
				SCM(playerid, COLOR_GREY, "Dieu tri that bai.");
				SCM(Saver[playerid], COLOR_GREY, "Dieu tri that bai.");
				ClearSaving(playerid);
			}
			Saving[playerid]--;
			new str[128];
			format(str, sizeof(str), "~g~Thoi gian dieu tri con~n~~y~%d ~y~giay~y~!", Saving[playerid]);
			GameTextForPlayer(playerid, str, 1000, 4);
			GameTextForPlayer(Saver[playerid], str, 1000, 4);
			if (Saving[playerid] == 0)
			{
				format(str, sizeof(str), "Ban da dieu tri cho %s thanh cong.", GN(playerid));
				SCM(Saver[playerid], COLOR_LIGHTGREEN, str);
				SCM(playerid, COLOR_LIGHTGREEN, "Vet thuong cua ban da duoc dieu tri tam thoi, hay den benh vien de binh phuc hoan toan.");
				SCM(playerid, COLOR_LIGHTRED, "Ban se bi mat mau moi 10 giay.");
				SCM(playerid, COLOR_WHITE, "MEO: Hay den benh vien va /trithuong.");
				Dying[playerid] = 0;
				ClearSaving(playerid);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				PlayerInfo[playerid][pBleeding] = 1;
				PlayerInfo[playerid][pHospital] = 0;
			}
		}
		if (OnDuty[playerid] == 1 && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 ||  
			PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) && WearTazer[playerid] != 1)
		{
			Tazering[playerid] = 0;
			SetPlayerAttachedObject(playerid, 5, 18642, 1, -0.197000, -0.071000, -0.109999, 2.399994, 80.400001, 18.399993, 1.000000, 1.000000, 1.000000, 0, 0);
			WearTazer[playerid] = 1;
		}
		else if (OnDuty[playerid] == 0 || (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1 &&
			PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17) && WearTazer[playerid] == 1)
		{
			Tazering[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 5);
			WearTazer[playerid] = 0;
		}
		if (Tazering[playerid] == 1) SetPlayerArmedWeapon(playerid, 0);

		if (Tazered[playerid] > 0 && --Tazered[playerid] == 0)
		{
			TogglePlayerControllable(playerid, 1);
			ClearAnimations(playerid);
		}

		if (HitTimes[playerid] > 0)
			HitTimes[playerid]--;

		if (HitTimes[playerid] >= 3)
		{
			new Float:Pos[3], Float:speed = GetVehicleSpeed(GetPlayerVehicleID(playerid), 0);
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2] + 0.1);
			if (speed <= 10) ApplyAnimation(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 0, 1500, 1);
			else ApplyAnimation(playerid, "PED", "BIKE_fallR", 4.1, 0, 1, 1, 0, 1500, 1);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)))
				{
					GetPlayerPos(i, Pos[0], Pos[1], Pos[2]);
					SetPlayerPos(i, Pos[0], Pos[1], Pos[2] + 0.1);
					if (speed <= 10) ApplyAnimation(i, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 0, 1500, 1);
					else ApplyAnimation(i, "PED", "BIKE_fallR", 4.1, 0, 1, 1, 0, 1500, 1);
				}
			}
			HitTimes[playerid] = 0;
		}
		if (Escorting[playerid] == 1)
		{
			new Float:Pos[3];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			if (!IsPlayerInRangeOfPoint(EscortedPlayer[playerid], 4, Pos[0], Pos[1], Pos[2]))
				SetPlayerPos(EscortedPlayer[playerid], Pos[0] + 0.5, Pos[1] + 0.5, Pos[2]);

			new vir = GetPlayerVirtualWorld(playerid);
			new intid = GetPlayerInterior(playerid);
			PlayerInfo[EscortedPlayer[playerid]][pInt] = PlayerInfo[playerid][pInt];
			PlayerInfo[EscortedPlayer[playerid]][pLocal] = PlayerInfo[playerid][pLocal];

			SetPlayerInterior(EscortedPlayer[playerid], intid);
			SetVirtualWorld(EscortedPlayer[playerid], vir);
		}
		if (DDTime[playerid] > 0 && DrugDealing[playerid] == 2)
		{
			new str[128];
			format(str, sizeof(str), "~y~%d giay ~n~~g~de bat dau buon lau.", DDTime[playerid]);
			GameTextForPlayer(playerid, str, 1000, 4);
			DDTime[playerid]--;
		}
		if (DDTime[playerid] == 10 && DrugDealing[playerid] == 2 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new zone[MAX_ZONE_NAME];
			GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
			new str[256];

			new vid = GetPlayerVehicleID(playerid);
			format(str, sizeof(str), "** [Duong day buon lau]: %s cung cac doi tuong ", GN(playerid));
			if (CheckDrugDealerInVehicle(vid, 2) > 1)
			{
				foreach(new ddid : Player)
				{
					if (IsPlayerDrugDealingCooperate(ddid, playerid, 2))
					{
						format(str, sizeof(str), "%s %s, ", str, GN(ddid));
					}
				}
				format(str, sizeof(str), "%s dang tien hanh buon lau o khu vuc %s tren chiec xe %s. **", str, zone, GetVehicleName(vid));
			}
			else format(str, sizeof(str), "** [Duong day buon lau]: %s dang tien hanh buon lau o khu vuc %s tren chiec xe %s. **", GN(playerid), zone, GetVehicleName(GetPlayerVehicleID(playerid)));
			SendRadioMessage(1, TEAM_RADIO_COLOR, str);
		}
		if (DDTime[playerid] == 0 && DrugDealing[playerid] == 2 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			TogglePlayerControllable(playerid, 1);
			if (WantedPoints[playerid] == 0) { WantedPoints[playerid] = 3; }
			else { WantedPoints[playerid] += 2; }
			SetPlayerCriminalEx(playerid, 255, "Buon Lau");
			new str[128];
			format(str, sizeof(str), "Nhan hang da xong, bay gio hay toi diem do tren ban do de giao hang buon lau, hay can than voi canh sat.");
			SCM(playerid, COLOR_YELLOW, str);
			format(str, sizeof(str), "Ban co the yeu cau thay doi dia diem giao hang. (/doibuonlau)");
			SCM(playerid, COLOR_YELLOW, str);

			new rand = random(sizeof(BuonLauGiveCP));

			new vid = GetPlayerVehicleID(playerid);
			if (CheckDrugDealerInVehicle(vid, 2) > 1)
			{
				foreach(new ddid : Player)
				{
					if (IsPlayerDrugDealingCooperate(ddid, playerid, 2))
					{
						if (WantedPoints[ddid] == 0) { WantedPoints[ddid] = 3; }
						else { WantedPoints[ddid] += 2; }
						SetPlayerCriminalEx(ddid, 255, "Buon lau");
						DrugDealing[ddid] = 3;
						ChangeDD[ddid] = 1;
						OldDD[ddid] = rand;
						new viddd = GetPlayerVehicleID(ddid);
						CarDD[ddid] = viddd;
						SetPlayerCheckpoint(ddid, BuonLauGiveCP[rand][0], BuonLauGiveCP[rand][1], BuonLauGiveCP[rand][2], 5);
						CoopDD[ddid] = playerid;
						format(str, sizeof(str), "Nhan hang da xong, %s se la truong nhom buon lau cua ban.", GN(playerid));
						SCM(ddid, COLOR_YELLOW, str);
						SCM(ddid, COLOR_YELLOW, "Hay dam bao rang chiec xe nay se toi duoc noi giao hang.");
						SCM(ddid, COLOR_GREEN, "Meo: Ban chi can mot nguoi giao xe toi dia diem buon lau la phi vu se thanh cong!");
					}
				}
			}
			DrugDealing[playerid] = 3;
			ChangeDD[playerid] = 0;
			OldDD[playerid] = rand;
			CarDD[playerid] = vid;

			SetCheckpoint(playerid, BuonLauGiveCP[rand][0], BuonLauGiveCP[rand][1], BuonLauGiveCP[rand][2], 5);
		}
	}
}

task VehicleLastShot[10000]()
{
	foreach(new i : Vehicle)
	{
		if (LastShot[i] != -1)
			LastShot[i] = -1;
	}
}

task DyingTime[5000]()
{
	foreach(new playerid : Player)
	{
		if (Dying[playerid] == 1 && !IsOnSavePosAmbulance(playerid))
		{
			new Float:zxc;
			GetPlayerHealth(playerid, zxc);
			SetPlayerHealth(playerid, zxc - 1);
		}
	}
}

task Bleeding[10000]()
{
	foreach(new playerid : Player)
	{
		if (PlayerInfo[playerid][pBleeding] == 1)
		{
			new Float:health;
			GetPlayerHealth(playerid, health);
			SetPlayerHealth(playerid, health - 1);
		}
	}
}
//../pawno/include/ProjectInc/prize.inc TM
#define SKINPRICE 5000
#define DMVFEE 30000
//../pawno/include/ProjectInc/reward.inc TM
stock GiveJobReward(playerid, rtype, extramoney = 0)
{
	new money = 0;
	new leveljob = GetLevelJob(playerid, rtype);
	switch (rtype)
	{
		case TRUCKREWARD:
		{
			money = 3000;
			SafeGivePlayerMoney(playerid, money*leveljob+extramoney+10000);
			new str[128];
			new weapon = 0, ammo = 1, weaponname[25];
			switch (leveljob)
			{
				case 1: { weapon = 8; ammo = 1; }
				case 2: { weapon = 22; ammo = 99999; }
				case 3: { weapon = 25; ammo = 99999; }
				case 4: { weapon = 29; ammo = 99999; }
				case 5: { weapon = 30; ammo = 99999; }
			}
			GetWeaponName(weapon, weaponname, sizeof(weaponname));
			format(str, sizeof(str), "Tra tien coc: 10,000$ | Tien luong: %s$ | Tien ban hang: %s$ | Thuong vu khi: %s", AddCommas(money), AddCommas(extramoney), weaponname);
			SafeGivePlayerWeapon(playerid, weapon, ammo);
			SCM(playerid, COLOR_YELLOW, str);
		}
		case MECHANICREWARD:
		{
			money = 12500 + GetLevelJob(playerid, MECHANICREWARD)*2500;
			SafeGivePlayerMoney(playerid, money, true, 2);
			new str[128];
			format(str, sizeof(str), "Tien luong: %s$", AddCommas(money));
			SCM(playerid, COLOR_YELLOW, str);
			SCM(playerid, COLOR_GREEN, "Tien luong se duoc chuyen vao tai khoan ngan hang.");
		}
	}
	return 1;
}

stock GetLevelJob(playerid, rtype)
{
	switch (rtype)
	{
		case TRUCKREWARD:
		{
			if (PlayerInfo[playerid][pTruckSkill] <= 50) return 1;
			else if (PlayerInfo[playerid][pTruckSkill] <= 100) return 2;
			else if (PlayerInfo[playerid][pTruckSkill] <= 300) return 3;
			else if (PlayerInfo[playerid][pTruckSkill] <= 500) return 4;
			else if (PlayerInfo[playerid][pTruckSkill] <= 1000) return 5;
		}
		case MECHANICREWARD:
		{
			if (PlayerInfo[playerid][pMechSkill] <= 50) return 1;
			else if (PlayerInfo[playerid][pMechSkill] <= 100) return 2;
			else if (PlayerInfo[playerid][pMechSkill] <= 300) return 3;
			else if (PlayerInfo[playerid][pMechSkill] <= 500) return 4;
			else if (PlayerInfo[playerid][pMechSkill] <= 1000) return 5;
		}
	}
	return -1;
}
